<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="EsSwing" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>

<script runat="template">

public  string DefinirFuncionesListItemsArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			
			strVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"ListSelectItem() \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\tList<SelectItem> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList=new ArrayList<SelectItem>();\r\n\r\n";
			strVariablesArray+="\t\tSelectItem item;\r\n\r\n";
		
			strVariablesArray+="\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+")\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\titem=new SelectItem();\r\n";
			strVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column))+");\r\n";
			strVariablesArray+="\t\t\titem.setValue("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
				
			strVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList.add(item);\r\n";
			strVariablesArray+="\t\t}\r\n\r\n";
		
			strVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList;\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			
		}	
	}
	return strVariablesArray;
}

public  string FuncionesForeignKeys()
{
	String strVariablesArray="";
	
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\tpublic void CargarCombos"+GetNombreClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"()throws Exception\r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\ttry\r\n\t\t{\r\n";
			strVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
			strVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
			strVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.GetTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"s(\"\");\r\n\r\n";
			strVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();\r\n\r\n";
			strVariablesArray+="\t\t}\r\n";
			strVariablesArray+="\t\tcatch(Exception ex)\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\tthrow ex;\r\n";
			strVariablesArray+="\t\t}\r\n";
			strVariablesArray+="\t}\r\n";
		}	
	}
	return strVariablesArray;
}


public  string ConstructorVariablesArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			if(EsSwing)
			{
				strVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sForeignKey==null||this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
			}
			
			strVariablesArray+="\t\t\t\t\tthis.CargarCombos"+GetNombreClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"();\r\n";
			
			if(EsSwing)
			{
				strVariablesArray+="\t\t\t\t}\r\n";
			}
		}	
	}
	return strVariablesArray;
}

public  string DefinirVariablesArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\tprivate ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";
			
			strVariablesArray+="\tpublic ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"() \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			strVariablesArray+="\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"(ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n";
		}	
	}
	return strVariablesArray;
}
/*
public void CargarCombosFramePerfilsForeignKey()throws Exception
	{
		try
		{
			
			JComboBoxBinding jComboBoxBindingPerfil;

			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.perfilsForeignKey, this.jComboBoxIdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();
			
			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.perfilsForeignKey, this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();

		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
*/

public String GetIndicesVariablesTablasClases(ColumnSchema columnForeignKey) 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
		
			String strPanelesBusquedas=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						
						
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						if(columnForeignKey.Name!=memberColumnSchema.Name)
						{
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							
							strControlesPanelesBusquedas+="\r\n\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this."+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema ).ToLower()+"sForeignKey, this."+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+",\""+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+"\");\r\n\r\n";
							
							
			
							strControlesPanelesBusquedas+="\t\t\t\tthis."+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"DefaultListCellRenderer());\r\n\r\n";
			
							strControlesPanelesBusquedas+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+".bind();\r\n\r\n";
			
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								//strInitFuncion+=";\r\n";	
							}
						}
						else
						{
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//strInitFuncion+=",";
								strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
																																						
				}
			}
			
			strInitFuncion=strControlesPanelesBusquedas;	
			
			return strInitFuncion; 
		}
		
public  string GetCargarCombosFrameColumnsVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	strVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{							
			strVariablesArray+="\t\t\tthis.CargarCombosFrame"+ GetNombreClaseRelacionadaFromColumn(column)+"sForeignKey();\r\n";
		}	
	}
	return strVariablesArray;
}

public  string CargarCombosFrameColumnsVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	strVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{	
						
			strVariablesArray+="\t\tpublic void CargarCombosFrame"+ GetNombreClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception\r\n";
			strVariablesArray+="\t\t{\r\n";
				strVariablesArray+="\t\t\ttry\r\n";
				strVariablesArray+="\t\t\t{\r\n\r\n";
					
					strVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
		
					strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this."+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey, this.jComboBox"+strIdGetSet+ GetNombreClaseRelacionadaFromColumn(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
					
					strVariablesArray+="\t\t\t\tthis.jComboBox"+strIdGetSet+ GetNombreClaseRelacionadaFromColumn(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer());\r\n\r\n";
					
					strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
					
					strVariablesArray+=GetIndicesVariablesTablasClases(column);
		
				strVariablesArray+="\t\t\t}\r\n";
				strVariablesArray+="\t\t\tcatch(Exception ex)\r\n";
				strVariablesArray+="\t\t{\r\n";
					strVariablesArray+="\t\t\t\tthrow ex;\r\n";
				strVariablesArray+="\t\t\t}\r\n";
			strVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return strVariablesArray;
}

public  string DefinirClassDefaultListCellRendererColumnsVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	strVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{	
			strVariablesArray+="\t\tpublic class "+ GetNombreClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer  extends DefaultListCellRenderer\r\n";
			strVariablesArray+="\t\t{\r\n";
						
			strVariablesArray+="\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus)\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
					
			strVariablesArray+="\t\t\t\tif(value instanceof "+ GetNombreClaseRelacionadaFromColumn(column)+")\r\n";
			strVariablesArray+="\t\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\t\t"+ GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"=("+ GetNombreClaseRelacionadaFromColumn(column)+")value;\r\n";
			strVariablesArray+="\t\t\t\t\tthis.setText("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.getRelationship_"+ GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"));\r\n";
			strVariablesArray+="\t\t\t\t}\r\n\r\n";
					
			strVariablesArray+="\t\t\t\treturn this;\r\n";
			strVariablesArray+="\t\t\t}\r\n";
			strVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return strVariablesArray;
}

public  string ReDefinirColumnsTableVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	//strVariablesArray+="\r\n\t\tTableColumn tableColumn;\r\n\r\n";
	strVariablesArray+="\r\n\r\n";
			
	String strTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
			
			strVariablesArray+="\t\ttableColumn= this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumn(\""+strTitulo+"\");\r\n";
			strVariablesArray+="\t\ttableColumn.setCellRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n";
			strVariablesArray+="\t\ttableColumn.setCellEditor(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n\r\n";

		}	
	}
	return strVariablesArray;
}


	
public  string ReDefinirTableCellColumnsTableVariablesForeignKeys()
{
	String strVariablesArray="";
			
	String strTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\t\tpublic class "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell extends AbstractCellEditor implements TableCellRenderer,TableCellEditor\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\tJLabel jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
			strVariablesArray+="\t\t\tJComboBox jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
			strVariablesArray+="\t\t\tObject valor;\r\n\r\n";
			
			strVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
	
			strVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
			strVariablesArray+="\t\t\t\tclasses.add("+ GetNombreClaseRelacionadaFromColumn(column)+".class);\r\n\r\n";
				
			strVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";       
			strVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" = "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().get(table.convertRowIndexToModel(intSelectedRow));\r\n\r\n";
				
			strVariablesArray+="\t\t\t\ttry\r\n";
			strVariablesArray+="\t\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setConnexion(Connexion.getNewConnexion());\r\n";
			strVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
			strVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getConnexion().getConnection().commit();\r\n";
			strVariablesArray+="\t\t\t\t}\r\n";
			strVariablesArray+="\t\t\t\tcatch(Exception ex)\r\n";
			strVariablesArray+="\t\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\t\t;\r\n";
			strVariablesArray+="\t\t\t\t}\r\n\r\n";
				
			strVariablesArray+="\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JLabel();\r\n\r\n";
				//valor=value;
			strVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.getRelationship_"+ GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".getRelationship_"+ GetNombreClaseRelacionadaFromColumn(column)+"()));\r\n";
			strVariablesArray+="\t\t\t\treturn jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
					
				
			strVariablesArray+="\t\t\t}\r\n\r\n";
			
			strVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JComboBox();\r\n\r\n";
				
			strVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";

			strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey, jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+");\r\n\r\n";

			strVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer());\r\n\r\n";

			strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();	\r\n\r\n";
				
			strVariablesArray+="\t\t\t\tvalor=value;\r\n";
			strVariablesArray+="\t\t\t\treturn jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
			strVariablesArray+="\t\t\t}\r\n\r\n";
			
			strVariablesArray+="\t\t\tpublic Object getCellEditorValue()\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseRelacionadaFromColumn(column)+")jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".getSelectedItem()).get"+strIdGetSet+"();\r\n";
			strVariablesArray+="\t\t\t}\r\n";
			strVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return strVariablesArray;
}

public String GetBusquedaFromForeigKeysSession() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
										
					strTablaClaseRelacionada+="\r\n\t\t\telse if(session.getAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\")!=null)";
					strTablaClaseRelacionada+="\r\n\t\t\t{";
							
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(session.getAttribute(\""+columnSchema.Name+"Actual\")!=null)";
					strTablaClaseRelacionada+="\r\n\t\t\t\t{";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\tstrAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\";";						
					strTablaClaseRelacionada+="\r\n\t\t\t\t}";
								
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tstrUltimaBusqueda=\"accionBusqueda=\"+strAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",strUltimaBusqueda,MensajeGrupo.NONE);";
									
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
					
					strTablaClaseRelacionada+="\r\n\t\t\t}";
						
					
			
				}
			}
			
				
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			String strFuncionBusqueda2="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			
			String strFuncionLogic="";
			
			
			//strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"s();";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";	
			strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\tif(strGenerarReporte!=\"\"&&strGenerarReporte!=null)\r\n\t\t\t\t{";
			
			
			strXmlFuncion+="\r\n\t\t\t\t\tif(blnMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			strXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s();";						
			strXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			strXmlFuncion+="\r\n\t\t\t\t\t}";			
			
			strXmlFuncion+="\r\n\t\t\t\t\tGenerarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s());";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif(blnMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			strXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.set"+GetNombreClaseC(TablaBase.ToString())+"s("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			strXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t}";	
			
			//strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			//strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
			
			String strXmlFuncionObjeto=string.Empty;
			
			strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
			//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
			
						
			//strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			//strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			//strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
				
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					strFuncionBusqueda2="\r\n\t\t\t\t"+GetNombreClase(TablaBase.ToString())+"LogicAdditional.getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique)
					{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{								
									//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									//strDefinicionVariables+="\r\n\r\n\t\t\t\tif(request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									//strDefinicionVariables+="\r\n\t\t\t\t{";
									//strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";										
									//strDefinicionVariables+="\r\n\t\t\t\t}";
										
									
									if(indexSchema.Name.Contains(strFK+"_"))
									{
										if(!EsSwing)
										{
										
											strDefinicionVariables+="\r\n\r\n\t\t\t\tif(session.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\")!=null)";
											strDefinicionVariables+="\r\n\t\t\t\t{";
											strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=("+GetTipoColumnaClaseC(memberColumnSchema.Column)+")session.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
											strDefinicionVariables+="\r\n\t\t\t\t\tsession.removeAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
											
											strDefinicionVariables+="\r\n\t\t\t\t}";
										}
									}
									
									strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 
									
									if(!indexSchema.MemberColumns.Count.Equals(count))
									{
										strUsoVariables+=",";	
									}
								}
								else
								{
									if(!indexSchema.Name.Contains("BusquedaRango"))
									{
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									}
									else
									{
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name; 									
										
										strUsoVariables+=",";	
										
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name; 									
									}
									
								
								}
								count++;
							}
							
							strFuncionBusqueda2+=strUsoVariables+");\r\n";
							strFuncionBusqueda+=strUsoVariables+");";
							
					if(indexSchema.IsUnique)
					{
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					}
					else
					{
							
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",strFuncionBusqueda.Replace("finalQueryPaginacion","\"\"").Replace("\r\n\r\n","\r\n\t\t"))+"\r\n\r\n\t\t\t}";																																		
					}
				}
			}								
			return  strInitFuncion;
		}
		
		
		public String GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			String strParametroPadre="";
			
			if(!EsSwing)
			{
				strParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong(request.getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";
			}
			else
			{
				strParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=1L;";
			}
											
											
			String strFuncionTodos=string.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strFuncionTodos="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					strFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+strParametroPadre+"\r\n\t\t\t\t";					
					strFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					//strFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					strFuncionTodos+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					strFuncionTodos+="\r\n\t\t\t\t{";
					//strFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					strFuncionTodos+="\r\n\t\t\t\t}";
					
					//strFuncionTodos+="\r\n\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					//strFuncionTodos+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strFuncionTodos+="\r\n\t\t\t}";
					
					
					
					//strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
					
					//strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					//strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
					
					String strXmlFuncionObjeto=string.Empty;
					
					strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					
					//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
					
					
					
					//strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					//strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							strIfFuncion+=strParametroPadre;
							
							int count=1;
							strDefinicionVariables="";
							strUsoVariables="";							
							//strFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{	
											if(!EsSwing)
											{
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
											}
											else
											{
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
											}
											
											
											strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												strUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												
												if(!EsSwing)
												{
													strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												
												}
												else
												{
													strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												if(!EsSwing)
												{
													strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												
												}
												else
												{
													strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												strUsoVariables+=",";	
												
												
												
												if(!EsSwing)
												{
													strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												
												}
												else
												{
													strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
												
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									strFuncionBusqueda+=strUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
					}
					
					strInitFuncion=strFuncionTodos+strInitFuncion;
				}
			}
			
			return  strInitFuncion;
		}
		
public String GetVariablesTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;\r\n\r\n";
					
					strTablaClaseRelacionada+="\tpublic "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic()\r\n"; 
					strTablaClaseRelacionada+="\t{\r\n";		
					strTablaClaseRelacionada+="\t\treturn "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
					strTablaClaseRelacionada+="\t}\r\n\r\n";
				
					strTablaClaseRelacionada+="\tpublic void set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic)\r\n"; 
					strTablaClaseRelacionada+="\t{\r\n";
					strTablaClaseRelacionada+="\t\tthis."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic = "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
					strTablaClaseRelacionada+="\t}\r\n";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetVariablesTablasInicializarClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n\r\n";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="\t\tclasses.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String strFuncion=string.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			strFuncion+="\r\n\r\n\tpublic String toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()throws Exception";
			strFuncion+="\r\n\t{";
			strFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			strFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			strFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			strFuncion+="\r\n\t\ttry"; 
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			strFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\\r\n\");";
			strFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\\r\n\");";	    
				
			strFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			strFuncion+="\r\n\t\t\t\t{";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.DeepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				strFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			strFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\\r\n\");";			
			strFuncion+="\r\n\t\t\t\t}\r\n";
					
			strFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\\r\n\");";
					
			strFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			strFuncion+="\r\n\t\t}"; 
			strFuncion+="\r\n\t\tcatch(Exception ex)"; 
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();";
			strFuncion+="\r\n\t\t\tthrow ex;";
			strFuncion+="\r\n\t\t}";
			strFuncion+="\r\n\t\tfinally";
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			strFuncion+="\r\n\t\t}";
				
			strFuncion+="\r\n\t\t\treturn Funciones.ValidarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getStrTableName());";
				
			strFuncion+="\r\n\t}";
		}
	}
	
	return strFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				strInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">();" ;																
																																																		
				}													
			}
								
			return strInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strInitFuncion+="\r\n\t"+"ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
																																								
					strInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+="\r\n\t{";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					strInitFuncion+="\r\n\t{";	
					strInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return strInitFuncion; 
		}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strParametroCompuesto="";
			String strParametroCompuesto2="";
			String strParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
							//strParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							//strParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							//strParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							//strParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							//strParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";

							strInitFuncion+="\r\n\tpublic  String  Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String strFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws SQLException,Exception"; 
							strInitFuncion+="\r\n\t{\r\n\t\tString strMensaje=\"\";\r\n\t\t";
							strInitFuncion+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							strInitFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(strFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+");";
						
							//strInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							//strInitFuncion+=strParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//strInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n\t\t\t";
							//strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.GetEntities" +strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							strInitFuncion+="\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException ex)\r\n\t\t{\r\n\t\t\t";//connexion.getConnection().commit();//connexion.getConnection().rollback();
							
							strInitFuncion+="\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t";	//connexion.getConnection().rollback();	//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();
							strInitFuncion+="\r\n\r\n\t\treturn strMensaje;\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						
						

						
						if(!indexSchema.IsPrimaryKey)
						{
							
						
							strParametersFuncion="";
							strParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
								strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String strFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";									
									strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(strFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
									strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);";	
									
									//strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
											
								}
								else
								{
									//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									
									//strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									strBodyFuncion+="\r\n\r\n\t\t\t"+strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
								}
								
								//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
							
							}	
							int count=1;	
							strParametersFuncion="";
							strParametersNameFuncion="";	
							strParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
											
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							strInitFuncion+=strParametersFuncion+")throws Exception\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
						}
					}
				}													
			}
								
			return strInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionadaNombre="";
			String strTablaClaseRelacionada3="";
			
			String strFuncionInit="\r\n\tpublic String Save"+GetNombreClase(TablaBase.ToString())+"Relaciones(Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC,"+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString());
			String strFuncionMiddle=")throws SQLException,Exception\r\n\t{\r\n\t\tString strMensaje=\"\";\r\n";//Mensaje.getMensajeGeneralDeepSave(\"\")
			strFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\t";//this.getNewConnexionToDeep();
			
			strFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Save"+GetNombreClase(TablaBase.ToString())+"Relaciones(idUsuario,blnUsuarioPC,strNamePC,strIPPC,"+" "+GetNombreClaseObjetoC(TablaBase.ToString());
			
			String strFuncionEnd="\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException ex)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\r\n\treturn strMensaje;\r\n\r\n\t}";
			
			//connexion.getConnection().commit();
			//connexion.getConnection().rollback();
			//connexion.getConnection().rollback();
			//finally\r\n\t\t{\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=",ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			//strTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()"+")";
			//strTablaClaseRelacionada2+="\r\n\t\t\t{";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,strUsuarioPC,strNamePC,strIPPC"+strTablaClaseRelacionada3+");";
			//strTablaClaseRelacionada2+="\r\n\t\t\t}";
			//strTablaClaseRelacionada2+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted())";
			//strTablaClaseRelacionada2+="\r\n\t\t\t{";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,strUsuarioPC,strNamePC,strIPPC"+strTablaClaseRelacionada3+");";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
			//strTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada3+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionadaNombre="";
			String strFuncionInit="\r\n\tpublic void Save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC";
			String strFuncionMiddle=")throws Exception\r\n\t{\r\n";
			strFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";
			
			strFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(idUsuario,blnUsuarioPC,strNamePC,strIPPC";
			
			String strFuncionEnd="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					strTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=",ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
					strTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			//strTablaClaseRelacionada2+="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();";
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null)\r\n\t\t\t{";										
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.Save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s())\r\n\t\t\t{";					
					//strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".setField_"+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.Save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
				}
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionadaNombre+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ strTablaClaseRelacionadaSave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;						
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ strTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strTablaClaseRelacionadaLogic=string.Empty;
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();	
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="classes.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String strInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.Save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
            strTablaClaseRelacionada2="\r\nelse\r\n{"+strInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			strFuncionInclude="";
			strFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
			
			
			}
			
				strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			// parte del no if deep
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion=strInit+"\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0=strInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{";
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada0+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			
			strIfFuncion=strInitIfFuncion+strTablaClaseRelacionada0+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
            strTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;		
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
				
			}
			
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			
			//Parte del no if del deep
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			strFuncion=string.Empty;
			
			strTablaClaseRelacionada=string.Empty;
			strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			strFuncion=strInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			strFuncionInclude="";
			strFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			strFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String strParaBusquedaString=""; 
			String strParaBusquedaCompuesto=""; 
			
			if(esCompuesto)
			{
				strParaBusquedaCompuesto="Constantes.getStrSchema()+\".\"+"+GetNombreClase(column.Table.ToString())+".getStrTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				if(!esUnico)	
				{
				strParaBusquedaString="+\"%\"";
				}
			}
			
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+strParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String strIndexName) 
		{
			String strParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				strParaBusquedaString="+\"%\"";
			}
			
			String strParameterSelection=String.Empty;
			
			if(!strIndexName.Contains("BusquedaRango"))
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(strIndexName.Contains("BusquedaMayorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMayor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				strParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				strParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return strParameterSelection;
		}

		public String GetIndicesTablasFacesClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						
						
						strBodyFuncion+="\r\n\r\n\t\t\tstrAccionBusqueda=\""+indexSchema.Name+"\";";
						strBodyFuncion+="\r\n\r\n\t\t\tthis.ProcesarBusqueda(strAccionBusqueda";
						
						//strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\r\n\t\t\tstrAccionBusqueda=\""+indexSchema.Name+"\";";
							strBodyFuncion+="\r\n\r\n\t\t\tthis.ProcesarBusqueda(strAccionBusqueda";
						
							//strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(strFinalQuery,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							
							strBodyFuncion+="\r\n\r\n\t\t\tstrAccionBusqueda=\""+indexSchema.Name+"\";";
							strBodyFuncion+="\r\n\r\n\t\t\tthis.ProcesarBusqueda(strAccionBusqueda";
						
							//strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);";			
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					/*
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					*/
					strInitFuncion+=strParametersFuncion+")throws Exception\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
							
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();					
							strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(strFinalQuery,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);";			
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public  string GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	

	strSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	strSetEntity+="\t\t\t\tauditoria.setField_strCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	
	strSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegistrarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),"+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ","+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );";
	strSetEntity+="\r\n\t\t\t}";
	
	return strSetEntity;
}

public static string GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String strSetEntity=string.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return strSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return strSetEntity;
		}
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroUsoFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetParametroUsoFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=strId;			
		}
		return strParamtro;
}

public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}

public String GetClassesSetAddTablasRelacionadas() 
{
			String strTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\t\t\tclasses.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class);";									
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetDelete() 
{
			String strTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						strTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public String GetIndicesVariablesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							strInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							strInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							strInitFuncion+="\t{\r\n";
							strInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							strInitFuncion+="\t}\r\n\r\n";
						
							strInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							strInitFuncion+="\t{\r\n";
							strInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							strInitFuncion+="\t}\r\n\r\n";
	
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+=";\r\n";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								strInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								strInitFuncion+="\t{\r\n";
								strInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								strInitFuncion+="\t{\r\n";
								strInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							}
							else
							{
								strInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								strInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								strInitFuncion+="\t{\r\n";
								strInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								strInitFuncion+="\t{\r\n";
								strInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
								
								//strInitFuncion+=",";
								strInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								strInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								strInitFuncion+="\t{\r\n";
								strInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								strInitFuncion+="\t{\r\n";
								strInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
								break;
							}
						}
						count++;
					}
					//strInitFuncion+=")throws Exception;";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public string GetSetVariablesTablaToBean(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strVersionRowGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".setField_"+strPrefijo+ strColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+strPrefijo+ strColumna+"());";
}		

public string GetSetVariableToVariableLocal(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strIdGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strVersionRowGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.setField_"+strPrefijo+ strColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+strPrefijo+ strColumna+"());";
}	

public string GetSetVariablesBeanToTable(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strIdGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strVersionRowGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().setField_"+strPrefijo+ strColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+strPrefijo+ strColumna+"());";
}	

public string SetVariablesTablaToCancelar(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String strValor="";
	
	switch(column.Name)
	{
		case strIsActive:
		strValor="";
		break;
		
		case strIsExpired:
		strValor="";
		break;
		
		case strVersionRow:
		strValor="";
		break;
		
		default:
		strValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+strValor+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "";//"this.set"+strVersionRowGetSet+"(\"\");";
	}
	return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".setField_"+strPrefijo+ strColumna +"("+strValor+");";
}
/*
	private Long id;
	private Boolean isActive;
	private Boolean isExpired;
	private Timestamp versionRow;
	private boolean isNew;
	private boolean isChanged;
	private boolean isDeleted;
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% } %>
	
	public Long getId() 
	{
		return id;
	}

	public void setId(Long id) 
	{
		this.id = id;
	}

	public Boolean getIsActive() 
	{
		return isActive;
	}

	public void setIsActive(Boolean isActive) 
	{
		this.isActive = isActive;
	}

	public Boolean getIsExpired() 
	{
		return isExpired;
	}

	public void setIsExpired(Boolean isExpired) 
	{
		this.isExpired = isExpired;
	}

	public Timestamp getVersionRow() 
	{
		return versionRow;
	}

	public void setVersionRow(Timestamp versionRow) 
	{
		this.versionRow = versionRow;
	}

	public boolean getIsNew() 
	{
		return isNew;
	}

	public void setIsNew(boolean isNew) 
	{
		this.isNew = isNew;
	}

	public boolean getIsChanged() 
	{
		return isChanged;
	}

	public void setIsChanged(boolean isChanged) 
	{
		this.isChanged = isChanged;
	}

	public boolean getIsDeleted() 
	{
		return isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) 
	{
		this.isDeleted = isDeleted;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseSetMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	
	
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
			<% } %>
*/

public string GetParameterBindingClase(ColumnSchema column)
{
	String strBindingColumnTable="";
	
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
		
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC().ToLower();
	string strPrefijoTipo =GetPrefijoTipoC(column);

	strPrefijo=strPrefijoTabla+strPrefijoTipo;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
	
	String strTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
		
	string param =  GetTipoColumnaClaseC(column);
	
	//return param+" "+strPrefijo+";";
	
	if(column.Name!=strId)
	{
		strBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strPrefijo+"}\"));\r\n";
		
		//strBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strPrefijo+"}\"));\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strTitulo+"\");\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	else
	{
		strBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strId+"}\"));\r\n";
		
		//strBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strId+"}\"));\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strIdGetSet+"\");\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	
	return strBindingColumnTable;
}

public String GetIndicesActionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String strActionsButtons=string.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							//strPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButton();\r\n";
 							
							strActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener\r\n";
							strActionsButtons+="\t\t(\r\n";
							strActionsButtons+="\t\t\tnew java.awt.event.ActionListener() \r\n";
							strActionsButtons+="\t\t\t{\r\n";
							strActionsButtons+="\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) \r\n";
							strActionsButtons+="\t\t\t\t{\r\n";
							strActionsButtons+="\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							strActionsButtons+="\t\t\t\t}\r\n";
							strActionsButtons+="\t\t\t}\r\n";
							strActionsButtons+="\t\t);\r\n";
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return strActionsButtons; 
		}		
	
		public String GetIndicesFunctionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String strActionsButtons=string.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							
							
						
							strActionsButtons+="\r\n\tpublic void jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt) \r\n";
							strActionsButtons+="\t{\r\n";
							strActionsButtons+="\t\ttry\r\n";
							strActionsButtons+="\t\t{\r\n";
							strActionsButtons+="\t\t\tintInicioPaginacion=0;\r\n";
							strActionsButtons+="\t\t\tintFinPaginacion=10;\r\n";
							strActionsButtons+="\t\t\tthis.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"();\r\n";
							strActionsButtons+="\t\t\tthis.InicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"();\r\n";
							
							strActionsButtons+="\t\t}\r\n";
							strActionsButtons+="\t\tcatch(Exception ex)\r\n";
							strActionsButtons+="\t\t{\r\n";
							strActionsButtons+="\t\t\t;\r\n";
							strActionsButtons+="\t\t}\r\n";
							strActionsButtons+="\t}\r\n";
							
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return strActionsButtons; 
		}		
		
public String GetIndicesInicializacionBindingsVariablesTablasClasesC(TableSchema TablaBase) 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
		
			String strPanelesBusquedas=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			
			String strFinalFuncion="";
			
			strFinalFuncion="\r\n\t\tthis.bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
			strFinalFuncion+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
			String strControlBinding=string.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						


						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							//strControlesPanelesBusquedas+="\t"+GetInicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
							strControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
							strControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
							strControlesPanelesBusquedas+="\t\t{\r\n";
							strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
							strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
							strControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
								
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								;
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
								strControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								strControlesPanelesBusquedas+="\t\t{\r\n";
								strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								strControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
						
								
							}
							else
							{
								strControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
								strControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								strControlesPanelesBusquedas+="\t\t{\r\n";
								strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								strControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n";
						
								
								//strInitFuncion+=",";
								strControlesPanelesBusquedas+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n\r\n";				
								strControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								strControlesPanelesBusquedas+="\t\t{\r\n";
								strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								strControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n";
						
								
								break;
							}
						}
						count++;
						
						strControlBinding=strControlesPanelesBusquedas+strFinalFuncion;
						strInitFuncion+=strControlBinding;
					}
																																						
				}
			}
			
			
			return strInitFuncion; 
		}

public String GetNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String strClasesNoRelacionadas=string.Empty;
			String[] strClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				strClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				strClases=strClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String strClase in strClases)
				{						
					if(strClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					strTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(strTablaClaseRelacionada);
									
			return strTablaClaseRelacionada; 
		}
		
public String GetNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String strColumna="";
	
	strColumna+="\r\n\r\n\t\ttableColumn= new TableColumn();\r\n";
	strColumna+="\t\ttableColumn.setHeaderValue(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	strColumna+="\t\ttableColumn.setCellRenderer(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n";
	strColumna+="\t\ttableColumn.setCellEditor(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n\r\n";

	strColumna+="\t\tthis.jTableDatos"+GetNombreClase(TablaBase.ToString())+".addColumn(tableColumn);\r\n";
	
	return strColumna;
}


public String GetNavegacionColumnsTableCellTablasClasesRelacionadas(TableSchema table) 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String strClasesNoRelacionadas=string.Empty;
			String[] strClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				strClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				strClases=strClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String strClase in strClases)
				{						
					if(strClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					strTablaClaseRelacionada+=GetNavegacionColumnTableCellTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(strTablaClaseRelacionada);
									
			return strTablaClaseRelacionada; 
		}
		
public String GetNavegacionColumnTableCellTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String strColumna="";
	
		
	strColumna+="\r\n\r\n\t\tpublic class "+GetNombreClase(tablaRelacionada.ToString())+"TableCell extends AbstractCellEditor implements TableCellRenderer,TableCellEditor\r\n";
	strColumna+="\t\t{\r\n";
		strColumna+="\t\t\tJButton jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		strColumna+="\t\t\tObject valor;\r\n\r\n\r\n";

		
		strColumna+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+" =new JButton(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			strColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		strColumna+="\t\t\t}\r\n\r\n";

		strColumna+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"=new JButton(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";

			strColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".addActionListener\r\n";
	        strColumna+="\t\t\t\t(\r\n";
		          strColumna+="\t\t\t\t\tnew java.awt.event.ActionListener()\r\n";
		          strColumna+="\t\t\t\t\t{\r\n";
		              strColumna+="\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt)\r\n";
		              strColumna+="\t\t\t\t\t\t{\r\n";
		            	  strColumna+="\t\t\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(evt);\r\n";
		              strColumna+="\t\t\t\t\t\t}\r\n";
		          strColumna+="\t\t\t\t\t}\r\n";
	        strColumna+="\t\t\t\t);\r\n\r\n";

			strColumna+="\t\t\t\tvalor=value;\r\n";
			strColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		strColumna+="\t\t}\r\n\r\n";

		strColumna+="\t\tpublic Object getCellEditorValue()\r\n";
		strColumna+="\t\t{\r\n";
			strColumna+="\t\t\treturn valor;\r\n";
		strColumna+="\t\t}\r\n";
	strColumna+="\t\t}\r\n\r\n";
	
	strColumna+="\t\tprivate void jButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt)\r\n";
	strColumna+="\t\t{\r\n";   
		strColumna+="\t\t\ttry\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\t"+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false);\r\n\r\n";
			
			strColumna+="\t\t\t\tint intSelectedRow = this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
			strColumna+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().get(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow));\r\n\r\n";
				
			strColumna+="\t\t\t\tArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new ArrayList<"+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n\r\n";
				
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseC(TablaBase.ToString())+"sForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
			
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.CargarCombos"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.CargarCombosFrame"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setBig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.ProcesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.InicializarActualizarBindingTabla"+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";

			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
	        
			strColumna+="\t\t\t\tthis.jDesktopPane.add("+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n\r\n";
	        
	        strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setSelected(true);\r\n";
		strColumna+="\t\t\t}\r\n";
		strColumna+="\t\t\tcatch(Exception ex)\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\t;\r\n";
		strColumna+="\t\t\t}\r\n";
	strColumna+="\t\t}\r\n";
	
	return strColumna;
}


</script>
<%=GetByDanLicence()%>
<%if(!EsSwing){%>
package <%=Empresa%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageBeans%>.<%=strPackageFaces%>;
<%}else{%>
package <%=Empresa%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%>;
<%}%>

import Tame.Seguridad.Business.Entities.Usuario;
import <%=Empresa%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageReporte%>.<%=strPackageSource%>.<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>;
import bydan.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
import bydan.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.MaintenanceType;
import <%=Empresa%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.*;
import bydan.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.*;
import bydan.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.*;
import <%=Empresa%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.*;
import bydan.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.ConexionBeanFace;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Mensajes;

import java.util.List;
import java.util.ArrayList;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.sql.*;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;

<%if(!EsSwing){%>

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletContext;

<%}else{%>


import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import <%=Empresa%>.Framework.<%= Package%>.<%=strPackageBusiness%>.Entities.Reporte;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;

<%}%>

<%if(ContieneImagenesC(TablaBase)){%>
	<%=GetFuncionesImagenesC(TablaBase)%>
	<%}%>


<%if(!EsSwing){%>
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>
<%}else{%>
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame extends <%=GetNombreClase(TablaBase.ToString())%>JInternalFrame
<%}%>
{	
	<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	
	<%if(!EsSwing){%>
	ListDataModel <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel;
	<%}%>
	
	<%=DefinirVariablesArrayForeignKeys()%>
	
	
	<%if(!EsSwing){%>
	HttpServletRequest request=null;
	HttpServletResponse response=null;
	HttpSession session=null;
	ServletContext context =null;
	<%}%>
	
	private Integer intNumeroRegistros;
	Boolean blnGuardarCambiosEnLote;
	private Boolean blnGenerarReporte;
	private Boolean blnGenerarTodos;
	
	<%if(!EsSwing){%>
	List<SelectItem> tiposReportes;
	<%}else{%>
	List<Reporte> tiposReportes;
	<%}%>
	private String strTipoReporte;
	
	private Integer intInicioPaginacion;
	private Integer intFinPaginacion;
	private String strGenerarReporte="";
	private Boolean blnMostrarTodosResultadosReporte=false;
	private String strDetalleReporte="";
	private Boolean blnEsReporteRelaciones=false;
	<%=GetVariablesTablasClasesRelacionadas()%> 
	JasperPrint jasperPrint = null;
	
	Long intIdUsuarioSesion=0L;	
	Usuario usuarioActual=null;	
	
	private Boolean blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	private Boolean blnEsMantenimientoRelacionesRelacionadoUnico=false;
	private Boolean blnEsMantenimientoRelaciones=false;
	private Boolean blnEsMantenimientoRelacionado=false;
	private Boolean blnEsBusquedasForeignKey=false;
	private Boolean blnContieneImagenes=false;
	
	<%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	private ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
	Conexion<%=strPrefijoJSFFaces%> conexion<%=strPrefijoJSFFaces%>;
	
	private String strAccionMantenimiento="";
	private String strAccionBusqueda="";
	private String strAccionAdicional="";
	private String strUltimaBusqueda="";
	
	private Mensaje mensaje;
	
	<%if(!EsSwing){%>
	private FacesMessage facesMessage;
	<%}%>
					
	private String strVisibilidadTablaElementos="";	
	private String strVisibilidadTablaAcciones="";
	
	<%if(!EsSwing){%>
	private String strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	private String strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	private String strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	private String strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	private String strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;	
	<%}else{%>
	private Boolean blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	private Boolean blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	private Boolean blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	private Boolean blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	private Boolean blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;	
	<%}%>
	
	
	public <%=GetNombreClaseC(TablaBase.ToString())%> get<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	}

	public void set<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>) 
	{
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	}
	
	<%=GetIndicesVariablesTablasClases()%>
	
	public <%=GetNombreClaseC(TablaBase.ToString())%>Logic get<%=GetNombreClaseC(TablaBase.ToString())%>Logic() 
	{		
		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}

	public void set<%=GetNombreClaseC(TablaBase.ToString())%>Logic(<%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic) 
	{
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}

	public Conexion<%=strPrefijoJSFFaces%> getConexion<%=strPrefijoJSFFaces%>() 
	{
		return conexion<%=strPrefijoJSFFaces%>;
	}

	public void setConexion<%=strPrefijoJSFFaces%>(Conexion<%=strPrefijoJSFFaces%> conexion<%=strPrefijoJSFFaces%>) 
	{
		this.conexion<%=strPrefijoJSFFaces%> = conexion<%=strPrefijoJSFFaces%>;
	}
	
	public Boolean getBlnGuardarCambiosEnLote() 
	{
		return blnGuardarCambiosEnLote;
	}

	public void setBlnGuardarCambiosEnLote(Boolean blnGuardarCambiosEnLote) 
	{
		this.blnGuardarCambiosEnLote = blnGuardarCambiosEnLote;
	}
	
	public Boolean getBlnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setBlnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getBlnEsMantenimientoRelacionesRelacionadoUnico() 
	{
		return blnEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setBlnEsMantenimientoRelacionesRelacionadoUnico(Boolean blnEsMantenimientoRelacionesRelacionadoUnico) 
	{
		this.blnEsMantenimientoRelacionesRelacionadoUnico = blnEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getBlnEsMantenimientoRelaciones() 
	{
		return blnEsMantenimientoRelaciones;
	}

	public void setBlnEsMantenimientoRelaciones(Boolean blnEsMantenimientoRelaciones) 
	{
		this.blnEsMantenimientoRelaciones = blnEsMantenimientoRelaciones;
	}

	public Boolean getBlnEsMantenimientoRelacionado() 
	{
		return blnEsMantenimientoRelacionado;
	}

	public void setBlnEsMantenimientoRelacionado(Boolean blnEsMantenimientoRelacionado) 
	{
		this.blnEsMantenimientoRelacionado = blnEsMantenimientoRelacionado;
	}

	public Boolean getBlnEsBusquedasForeignKey() 
	{
		return blnEsBusquedasForeignKey;
	}

	public void setBlnEsBusquedasForeignKey(Boolean blnEsBusquedasForeignKey) 
	{
		this.blnEsBusquedasForeignKey = blnEsBusquedasForeignKey;
	}

	public Boolean getBlnContieneImagenes() 
	{
		return blnContieneImagenes;
	}

	public void setBlnContieneImagenes(Boolean blnContieneImagenes) 
	{
		this.blnContieneImagenes = blnContieneImagenes;
	}
	
	<%=FuncionesForeignKeys()%>
	
	<%if(!EsSwing){%>
	<%=DefinirFuncionesListItemsArrayForeignKeys()%>
	<%}else{%>
	<%=CargarCombosFrameColumnsVariablesForeignKeys()%>
	<%=DefinirClassDefaultListCellRendererColumnsVariablesForeignKeys()%>
	<%}%>
	
	<%if(!EsSwing){%>
	public DataModel get<%=GetNombreClaseC(TablaBase.ToString())%>sModel()throws Exception 
	{		

		try 
		{			
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.setWrappedData(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
			
		} 
		catch (Exception ex) 
		{
			throw ex;
		}

		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel;
	}
	<%}%>
	
	<%if(!EsSwing){%>
	public void set<%=GetNombreClaseC(TablaBase.ToString())%>sModel(ListDataModel <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel) 
	{
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel;
	}
	<%}%>
	
	public Integer getIntInicioPaginacion() 
	{
		return intInicioPaginacion;
	}

	public void setIntInicioPaginacion(Integer intInicioPaginacion) 
	{
		this.intInicioPaginacion = intInicioPaginacion;
	}

	public Integer getIntFinPaginacion() 
	{
		return intFinPaginacion;
	}

	public void setIntFinPaginacion(Integer intFinPaginacion) 
	{
		this.intFinPaginacion = intFinPaginacion;
	}
	
	public Integer getIntNumeroRegistros() 
	{
		return intNumeroRegistros;
	}

	public void setIntNumeroRegistros(Integer intNumeroRegistros) 
	{
		this.intNumeroRegistros = intNumeroRegistros;
	}
	
	public Boolean getBlnGenerarReporte() 
	{
		return blnGenerarReporte;
	}

	public void setBlnGenerarReporte(Boolean blnGenerarReporte) 
	{
		this.blnGenerarReporte = blnGenerarReporte;
	}

	public Boolean getBlnGenerarTodos() 
	{
		return blnGenerarTodos;
	}

	public void setBlnGenerarTodos(Boolean blnGenerarTodos) 
	{
		this.blnGenerarTodos = blnGenerarTodos;
	}
	
	<%if(!EsSwing){%>
	public List<SelectItem> getTiposReportes() 
	<%}else{%>
	public List<Reporte> getTiposReportes() 
	<%}%>
	{
		return this.tiposReportes;
	}
	
	<%if(!EsSwing){%>
	public void setTiposReportes(List<SelectItem> tiposReportes) 
	<%}else{%>
	public void setTiposReportes(List<Reporte> tiposReportes) 
	<%}%>
	{
		this.tiposReportes = tiposReportes;
	}
	
	public String getStrTipoReporte()
	{
		return strTipoReporte;
	}

	public void setStrTipoReporte(String strTipoReporte)
	{
		this.strTipoReporte = strTipoReporte;
	}
	
	public Long getIntIdUsuarioSesion() 
	{
		return intIdUsuarioSesion;
	}

	public void setIntIdUsuarioSesion(Long intIdUsuarioSesion) 
	{
		this.intIdUsuarioSesion = intIdUsuarioSesion;
	}

	public Usuario getUsuarioActual() 
	{
		return usuarioActual;
	}

	public void setUsuarioActual(Usuario usuarioActual) 
	{
		this.usuarioActual = usuarioActual;
	}
	
	public String getStrAccionMantenimiento() 
	{
		return strAccionMantenimiento;
	}

	public void setStrAccionMantenimiento(String strAccionMantenimiento) 
	{
		this.strAccionMantenimiento = strAccionMantenimiento;
	}

	public String getStrAccionBusqueda() 
	{
		return strAccionBusqueda;
	}

	public void setStrAccionBusqueda(String strAccionBusqueda) 
	{
		this.strAccionBusqueda = strAccionBusqueda;
	}

	public String getStrAccionAdicional() 
	{
		return strAccionAdicional;
	}

	public void setStrAccionAdicional(String strAccionAdicional) 
	{
		this.strAccionAdicional = strAccionAdicional;
	}

	public String getStrUltimaBusqueda() 
	{
		return strUltimaBusqueda;
	}

	public void setStrUltimaBusqueda(String strUltimaBusqueda) 
	{
		this.strUltimaBusqueda = strUltimaBusqueda;
	}
	
	public String getStrGenerarReporte() 
	{
		return strGenerarReporte;
	}

	public void setStrGenerarReporte(String strGenerarReporte) 
	{
		this.strGenerarReporte = strGenerarReporte;
	}

	public Boolean getBlnMostrarTodosResultadosReporte() 
	{
		return blnMostrarTodosResultadosReporte;
	}

	public void setBlnMostrarTodosResultadosReporte(Boolean blnMostrarTodosResultadosReporte)
	{
		this.blnMostrarTodosResultadosReporte = blnMostrarTodosResultadosReporte;
	}

	public String getStrDetalleReporte() 
	{
		return strDetalleReporte;
	}

	public void setStrDetalleReporte(String strDetalleReporte) 
	{
		this.strDetalleReporte = strDetalleReporte;
	}

	public Boolean getBlnEsReporteRelaciones() 
	{
		return blnEsReporteRelaciones;
	}

	public void setBlnEsReporteRelaciones(Boolean blnEsReporteRelaciones) 
	{
		this.blnEsReporteRelaciones = blnEsReporteRelaciones;
	}
	
	public Mensaje getMensaje() 
	{
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) 
	{
		this.mensaje = mensaje;
	}
	
	public String getStrVisibilidadTablaElementos() 
	{
		return strVisibilidadTablaElementos;
	}

	public void setStrVisibilidadTablaElementos(String strVisibilidadTablaElementos) 
	{
		this.strVisibilidadTablaElementos = strVisibilidadTablaElementos;
	}

	public String getStrVisibilidadTablaAcciones() 
	{
		return strVisibilidadTablaAcciones;
	}

	public void setStrVisibilidadTablaAcciones(String strVisibilidadTablaAcciones) 
	{
		this.strVisibilidadTablaAcciones = strVisibilidadTablaAcciones;
	}
	<%if(!EsSwing){%>
	public String getStrVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>()
	{
		return strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setStrVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(String strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getStrVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setStrVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(String strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getStrVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>()
	{
		return strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setStrVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>(String strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>)
	{
		this.strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getStrVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setStrVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>(String strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%> = strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getStrVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setStrVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>(String strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> = strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	<%}else{%>
	public Boolean getBlnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>()
	{
		return blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setBlnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getBlnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setBlnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getBlnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>()
	{
		return blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setBlnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>)
	{
		this.blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getBlnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setBlnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%> = blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getBlnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		return blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setBlnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>) 
	{
		this.blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> = blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	<%}%>

	<%if(!EsSwing){%>
	public <%=GetNombreClaseC(TablaBase.ToString())%> Get<%=GetNombreClaseC(TablaBase.ToString())%>ActualFromListDataModel() throws Exception
	{
		try
		{
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>= (<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.getRowData();
			
			return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	<%}%>
	
	public void EjecutarMantenimiento(MaintenanceType maintenanceType)throws Exception
	{
		
		try
		{
			if(maintenanceType==MaintenanceType.NUEVO)
			{
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClaseC(TablaBase.ToString())%>(new  <%=GetNombreClaseC(TablaBase.ToString())%>());
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>().setIsNew(true);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>().setIsChanged(true);
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesBeanToTable(TablaBase.Columns[i]) %>	
				<% } %>
		
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>());
				
				if(!blnGuardarCambiosEnLote)
				{
					<%if(!EsSwing){%>
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,true, request.getRemoteHost(),request.getRemoteAddr());
					<%}else{%>
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,"U" , "H","1.0");
					<%}%>
					
				}
				
			}
			else if(maintenanceType==MaintenanceType.ACTUALIZAR)
			{
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>().setIsNew(false);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>().setIsDeleted(false);
			
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesBeanToTable(TablaBase.Columns[i]) %>	
				<% } %>
				
				ActualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				
				if(!blnGuardarCambiosEnLote)
				{
					<%if(!EsSwing){%>
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion, true , request.getRemoteHost(),request.getRemoteAddr());
					<%}else{%>
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,true, "H","1.0");
					<%}%>
					
				}
				
			}
			else if(maintenanceType==MaintenanceType.ELIMINAR)
			{
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesBeanToTable(TablaBase.Columns[i]) %>	
				<% } %>
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>().setIsDeleted(true);
				
				ActualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				
				if(!blnGuardarCambiosEnLote)
				{
					<%if(!EsSwing){%>
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,true , request.getRemoteHost(),request.getRemoteAddr());
					<%}else{%>
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,true, , "H","1.0");
					<%}%>
					
				}
				
			}
			else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS)
			{								
				<%if(!EsSwing){%>
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,true, request.getRemoteHost(),request.getRemoteAddr());
				<%}else{%>
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(intIdUsuarioSesion,true , "H","1.0");
				<%}%>
			}
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void ActualizarLista(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) throws Exception
	{
		try
		{
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s)
			{
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local.getOid().equals(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getOid()))
				{
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local.setIsChanged(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getIsChanged());
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local.setIsNew(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getIsNew());
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local.setIsDeleted(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getIsDeleted());
					
					<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
					<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
					<%= GetSetVariableToVariableLocal(TablaBase.Columns[i]) %>	
					<% } %>			
				}
			}
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void NuevoPreparar() 
	{
		<%if(!EsSwing){%>
		FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>", true);
		
		this.strVisibilidadTablaElementos="table-row";
		this.strVisibilidadTablaAcciones="table-row";
		<%}%>
		
		
		this.ActualizarEstadoCeldasBotonesEmpresa("a", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			
	}
	
	public void Nuevo() throws Exception
	{
		try
		{
			this.EjecutarMantenimiento(MaintenanceType.NUEVO);
			
			this.ActualizarEstadoCeldasBotonesEmpresa("n", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			
			<%if(!EsSwing){%>
			facesMessage=new FacesMessage(Constantes.getStrMensajeDatosIngresados(),"OK");				
			FacesContext.getCurrentInstance().addMessage(null,facesMessage);
			<%}%>
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void Actualizar() throws Exception
	{
		try
		{
			if(!this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>)
			{
				this.EjecutarMantenimiento(MaintenanceType.ACTUALIZAR);
				
				this.ActualizarEstadoCeldasBotonesEmpresa("n", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
				
				<%if(!EsSwing){%>
				facesMessage=new FacesMessage(Constantes.getStrMensajeDatosActualizados(),"OK");				
				FacesContext.getCurrentInstance().addMessage(null,facesMessage);
				<%}%>
			}
			else
			{
				this.Nuevo();
			}
			
			this.Cancelar();
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void Eliminar() throws Exception
	{
		try
		{
			this.EjecutarMantenimiento(MaintenanceType.ELIMINAR);
			
			this.ActualizarEstadoCeldasBotonesEmpresa("n", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			
			<%if(!EsSwing){%>
			facesMessage=new FacesMessage(Constantes.getStrMensajeDatosEliminados(),"OK");				
			FacesContext.getCurrentInstance().addMessage(null,facesMessage);
			<%}%>
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void GuardarCambios() throws Exception
	{
		try
		{
			this.EjecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
			<%if(!EsSwing){%>
			facesMessage=new FacesMessage(Constantes.getStrMensajeDatosGuardados(),"OK");				
			FacesContext.getCurrentInstance().addMessage(null,facesMessage);
			<%}%>
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void Seleccionar() throws Exception
	{
		try
		{
			<%if(!EsSwing){%>
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>= (<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.getRowData();
			<%}%>
			
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%= GetSetVariablesTablaToBean(TablaBase.Columns[i]) %>	
		<% } %>
		
			<%if(!EsSwing){%>
			FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>VersionRowActual", <%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getUtc());
			
			this.strVisibilidadTablaElementos="table-row";
			this.strVisibilidadTablaAcciones="table-row";
			<%}%>
			
			this.ActualizarEstadoCeldasBotonesEmpresa("ae", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void Cancelar() throws Exception
	{
		try
		{
			<%if(!EsSwing){%>
			if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>")!=null)
			{	
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");
			}
			<%}%>
			
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%= SetVariablesTablaToCancelar(TablaBase.Columns[i]) %>	
		<% } %>
		
			
			<%if(!EsSwing){%>
			this.strVisibilidadTablaElementos="none";
			this.strVisibilidadTablaAcciones="none";
			<%}%>
			
			this.ActualizarEstadoCeldasBotonesEmpresa("n", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			
		}
		catch(Exception ex)
		{
			throw ex;
		}
	}
	
	public void Anteriores()throws Exception
	{

		try
		{
			this.ProcesarBusqueda(strAccionBusqueda);
		}
		catch(Exception ex)
		{
			throw ex;
		}

	}
	
	public void Siguientes()throws Exception
	{

		try
		{
			this.ProcesarBusqueda(strAccionBusqueda);
		}
		catch(Exception ex)
		{
			throw ex;
		}

	}
	
	public void GenerarReporte<%=GetNombreClase(TablaBase.ToString())%>s(String strAccionBusqueda,ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes) throws SQLException,Exception
	{
		String strPathReportes="";
		
		File reportFile;
		File imageFile;
		
		<%if(!EsSwing){%>
		imageFile= new File(context.getRealPath("Imagenes/Logos/LogoReporte.jpg"));
		<%}else{%>
		imageFile= new File("Imagenes/Logos/LogoReporte.jpg");
		<%}%>
		
		if(!blnEsReporteRelaciones)
		{
			<%if(!EsSwing){%>
			reportFile = new File(context.getRealPath("Reportes/<%=GetNombreClase(TablaBase.ToString())%>Design.jasper"));
			<%}else{%>
			reportFile = new File("Reportes/<%=GetNombreClase(TablaBase.ToString())%>Design.jasper");
			<%}%>
		}
		else
		{
			<%if(!EsSwing){%>
			reportFile = new File(context.getRealPath("Reportes/<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper"));
			strPathReportes=reportFile.getPath().replace("<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper", "");
			<%}else{%>
			reportFile = new File("Reportes/<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper");
			strPathReportes=reportFile.getPath().replace("<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper", "");
			<%}%>
		}
		
		if (!reportFile.exists())
		throw new JRRuntimeException("File WebappReport.jasper not found. The report design must be compiled first.");
		
		Map<String, String> parameters = new HashMap<String, String>();
		parameters.put("titulo", Constantes.getStrAreaDepartamento());
		parameters.put("subtitulo", "<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>");
		parameters.put("busquedapor", <%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional.getNombreIndice(strAccionBusqueda)+strDetalleReporte);
		parameters.put("PATH_IMAGEN", imageFile.getPath());
		
		if(blnEsReporteRelaciones)
		{
			parameters.put("SUBREPORT_DIR", strPathReportes);
		}
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile.getPath());
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		
		
		if(blnEsReporteRelaciones)
		{
			<%=GetClassClasesForeigKeysC(TablaBase)%>
			<%=GetClassClasesRelacionadasC(TablaBase)%>
		}
		else
		{
			<%=GetClassClasesForeigKeysC(TablaBase)%>
			
		}
		
		try
		{
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getNewConnexionToDeep();
			
			for (<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjeto(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes)
			{
				<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.DeepLoad(<%=GetNombreClaseObjeto(TablaBase.ToString())%>, false, DeepLoadType.INCLUDE, classes);
			}
				
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getConnexion().getConnection().commit();
				
		}
		catch(Exception ex)
		{
			throw ex;
		}
		finally
		{
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.closeNewConnexionToDeep();
		}
		
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters, new JRBeanArrayDataSource(<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>.Traer<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes).toArray()));
		
		
		<%if(!EsSwing){%>
		FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put(BaseHttpServlet.DEFAULT_JASPER_PRINT_SESSION_ATTRIBUTE, jasperPrint);
		
		if(strGenerarReporte.equals("HtmlGenerar"))
		{
			
			PrintWriter out = response.getWriter();
			JRHtmlExporter exporter = new JRHtmlExporter();
				
			exporter.setParameter(JRExporterParameter.JASPER_PRINT, request.getSession().getAttribute(BaseHttpServlet.DEFAULT_JASPER_PRINT_SESSION_ATTRIBUTE));
			exporter.setParameter(JRExporterParameter.OUTPUT_WRITER, out);
			
			exporter.exportReport();
			
		}
		<%}else{%>
		
		if(this.strGenerarReporte=="HTML"||this.strGenerarReporte=="PDF"||this.strGenerarReporte=="XML")
			{	
				JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(<%=GetNombreClaseC(TablaBase.ToString())%>Bean.Traer<%=GetNombreClaseC(TablaBase.ToString())%>Beans(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes).toArray()));
			
				String strFileName=reportFile.getAbsolutePath().replace("jasper", "jrprint");
				
				if(this.strGenerarReporte=="HTML")
				{
					JasperExportManager.exportReportToHtmlFile(strFileName);
				}
				else if(this.strGenerarReporte=="PDF")
				{
					JasperExportManager.exportReportToPdfFile(strFileName);
				}
				else 
				{
					JasperExportManager.exportReportToXmlFile(strFileName, false);
				}	
			}
			else if(this.strGenerarReporte=="WORD"||this.strGenerarReporte=="EXCEL")
			{
				String strDestFileName=reportFile.getAbsolutePath().replace("jasper", "rtf");
				
				if(this.strGenerarReporte=="WORD")
				{
					JRRtfExporter exporter = new JRRtfExporter();
		
					exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
					exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, strDestFileName);
		
					exporter.exportReport();
				}
				else
				{
					strDestFileName=reportFile.getAbsolutePath().replace("jasper", "xls");
							
					JRXlsExporter exporterXls = new JRXlsExporter();
		
					exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
					exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, strDestFileName);
					exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
					exporterXls.exportReport();
				}
			}
		<%}%>
	}
	
	public void ProcesarBusqueda(String strAccionBusqueda) throws SQLException,Exception
	{		
		String  finalQueryPaginacion="";
		
		<%if(!EsSwing){%>
		//HttpSession session = request.getSession();
		<%}%>
		
		
		try
		{
				
			
			if(intInicioPaginacion!=null&&intFinPaginacion!=null)
			{						
				finalQueryPaginacion=" LIMIT "+intInicioPaginacion+","+intFinPaginacion.toString();
			}
			
			if(strAccionBusqueda.equals("Todos"))
			{						
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.GetTodos<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryPaginacion);
				
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()==null|| <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size()==0)
				{
				
				}
				
				if(strGenerarReporte!=""&&strGenerarReporte!=null)
				{
					if(blnMostrarTodosResultadosReporte)
					{
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s();						
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.GetTodos<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>"");						
					}
					
					GenerarReporte<%=GetNombreClase(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClaseC(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
				}
			
			}
			else if(strAccionBusqueda.equals("Por<%=strIdGetSet%>"))
			{
				Long <%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=0L;
				
				
				<%if(!EsSwing){%>
				if(request.getParameter("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>")!=null)
				{
				<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=Long.parseLong(request.getParameter("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>"));	
				}
				
				if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey")!=null)
				{
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=(Long)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey");	
				
					FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey");
				}
				else if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras")!=null)
				{
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=(Long)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras");	
				
					FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras");
				}
				<%}%>
				
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.GetEntity(<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>);
				<%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional.getDetalleIndicePor<%=strIdGetSet%>(<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>);

				
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>()==null)
				{
				}
			
			}
		<%=GetXmlBusquedasIndicesTablas()%> 
		<%=GetXmlBusquedasIndicesTablasCompuestos()%> 
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch (JRException ex)
		{
			throw ex;
		}
		catch(Exception ex) 
		{
			throw ex;
      	}
	}	
	
	public void RecargarInformacion()throws Exception
	{
		try
		{
			strAccionBusqueda="Todos";
			this.ProcesarBusqueda(strAccionBusqueda);
		}
		catch(Exception ex)
		{
			throw ex;
		}
		
	}
	
	<%= GetIndicesTablasFacesClases() %>
	
	<%= GetIndicesTablasClases() %>
	
	<%= GetIndicesTablasClasesCompuestos() %>
		
	<%=GetDefinicionVariableClasesCompuestos() %>
	
	
	<%if(!EsSwing){%>
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>() throws SQLException,Exception
	<%}else{%>
	
	public void CargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception
	{
		try
		{
			<%=ConstructorVariablesArrayForeignKeys()%>
		}
		catch(Exception ex)
		{
			throw ex;
		}
		
	}
	
	public void CargarCombosFrame<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception
	{
		try
		{
			<%=GetCargarCombosFrameColumnsVariablesForeignKeys()%>
		}
		catch(Exception ex)
		{
			throw ex;
		}
		
	}
	
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame(Boolean blnCargarCombosForeignKey,Boolean blnCargarInformacionInicial) throws SQLException,Exception
	<%}%>
    {
		try
		{
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=GetNombreClaseC(TablaBase.ToString())%>();
			
			<%if(!EsSwing){%>
			context=(ServletContext)FacesContext.getCurrentInstance().getExternalContext().getContext();
			request=(HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();
			response=(HttpServletResponse)FacesContext.getCurrentInstance().getExternalContext().getResponse();
			session=request.getSession();
			<%}%>
			
			
			
			intIdUsuarioSesion=0L;	
			strGenerarReporte="";
			blnMostrarTodosResultadosReporte=false;
			strDetalleReporte="";
			blnEsReporteRelaciones=false;
			
			blnGenerarReporte=false;
			blnGenerarTodos=false;
			strTipoReporte="";

			<%if(!EsSwing){%>
			tiposReportes=Funciones.getTiposReportes();
			<%}else{%>
			tiposReportes=Funciones.getListTiposReportes();
			<%}%>
			
			this.blnGuardarCambiosEnLote=false;
			
			<%=GetVariablesTablasInicializarClasesRelacionadas()%> 
			jasperPrint = null;
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
			
			
			<%if(!EsSwing){%>
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel=new ListDataModel();
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.setWrappedData(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
			<%}%>
			
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>s= new ArrayList<<%=GetNombreClase(TablaBase.ToString())%>>();
			Conexion<%=strPrefijoJSFFaces%> conexion<%=strPrefijoJSFFaces%>=new Conexion<%=strPrefijoJSFFaces%>();
			this.session.setAttribute("Conexion<%=strPrefijoJSFFaces%>", conexion<%=strPrefijoJSFFaces%>);
			
			
			blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnEsMantenimientoRelacionesRelacionadoUnico=false;
			blnEsMantenimientoRelaciones=false;
			blnEsMantenimientoRelacionado=false;
			blnEsBusquedasForeignKey=false;
			blnContieneImagenes=false;
			
			this.strVisibilidadTablaElementos="none";
			this.strVisibilidadTablaAcciones="none";
			
			<%if(!EsSwing){%>
			this.strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			<%}else{%>
			this.blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			<%}%>
			
			this.ActualizarEstadoCeldasBotonesEmpresa("n", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			
			<%if(!EsSwing){%>
			if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("usuarioActual")!=null)
			{
				usuarioActual=(Usuario)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("usuarioActual");
				intIdUsuarioSesion=usuarioActual.getOid();	
			}
			else
			{
				//throw new Exception("Reinicie la sesion");
			}
			<%}%>
			
			<%if(!EsSwing){%>
			<%=ConstructorVariablesArrayForeignKeys()%>
			<%}%>
			
			<%if(EsSwing){%>
			if(blnCargarCombosForeignKey)
			{
				this.CargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
				
				this.CargarCombosFrame<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			<%}%>
			
			<%if(!EsSwing){%>
			if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>")!=null)
			{
				if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKey")!=null)
				{
					strAccionBusqueda="Por<%=strIdGetSet%>";
					FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("<%=strId%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras",(Long)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKey"));
				}
				
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras",true);
				
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>");
			}
			else if(request.getParameter("esCargarPagina")==null&&FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras")!=null)
			{
				if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=strId%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras")!=null)
				{
					strAccionBusqueda="Por<%=strIdGetSet%>";					
				}				
				
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras");
			}
			
			<%=GetBusquedaFromForeigKeysSession()%>
			
			
			else
			{
				if(request.getParameter("esCargarPagina")!=null&&FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("ultimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>")!=null)
				{
					strUltimaBusqueda=(String)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("ultimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>");
					strUltimaBusqueda=strUltimaBusqueda.replace("&", "()");
					
					if(!strUltimaBusqueda.contains("esCargarPagina"))
					{
						strUltimaBusqueda+="()esCargarPagina=true";	
					}
					
					FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("ultimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>");
					
					mensaje=new Mensaje("Auxiliar","Ultima Busqueda",strUltimaBusqueda,MensajeGrupo.NONE);
					
					
					return;
				}
			}
			
			if(request.getParameter("ultimaBusqueda")!=null)
			{
				strUltimaBusqueda=request.getParameter("ultimaBusqueda");
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("ultimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>", strUltimaBusqueda);
			}
						
			
			if(request.getParameter("generarReporte")!=null)
			{
				if(request.getParameter("esReporteRelaciones")!=null)
				{
					blnEsReporteRelaciones=true;
				}
				
				if(request.getParameter("blnMostrarTodosResultadosReporte")!=null)
				{
					blnMostrarTodosResultadosReporte=Boolean.parseBoolean(request.getParameter("blnMostrarTodosResultadosReporte"));
				}
				
				strGenerarReporte=request.getParameter("generarReporte");
				
				if(strGenerarReporte.equals("HtmlGenerar"))
				{
					this.GenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s(strAccionBusqueda,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				}
				else if(strGenerarReporte.equals("Html"))
				{
					FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("servletGenerarHtmlReporte", "<%=GetNombreClaseC(TablaBase.ToString())%>Servlet");
				}
			}
			
			if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>VersionRowActual")!=null)
			{
				Timestamp versionRowActual = (Timestamp)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>VersionRowActual");
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setUtc(versionRowActual);
				/*
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesTablaToBean(TablaBase.Columns[i]) %>	
				<% } %>
				*/
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>VersionRowActual");
			}
			
			if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>")!=null)
			{
				blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=(Boolean)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");
				
				FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");
			}
			
			<%}%>
			
			//this.RecargarInformacion();
			
			<%if(EsSwing){%>
			
			if(blnCargarInformacionInicial)
			{
				this.RecargarInformacion();
			}
			
			this.intInicioPaginacion=0;
			this.intFinPaginacion=10;
			this.intNumeroRegistros=10;
			
			this.ActualizarEstadoCeldasBotonesEmpresa("n", blnGuardarCambiosEnLote, blnEsMantenimientoRelacionado);
			this.InicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(); 
			this.blnGenerarReporte=false;
			this.blnGenerarTodos=false;
			this.strTipoReporte="";
			this.InicializarActualizarBindingParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>();
			this.initActions();
			<%}%>
		}
		catch(Exception ex) 
		{
			throw ex;
		}	 
    }
	
	<%if(!EsSwing){%>
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>(Conexion<%=strPrefijoJSFFaces%> conexion<%=strPrefijoJSFFaces%>) throws Exception
	<%}else{%>
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame(Conexion<%=strPrefijoJSFFaces%> conexion<%=strPrefijoJSFFaces%>) throws Exception
	<%}%>
    {
		try
		{
			this.conexion<%=strPrefijoJSFFaces%>=conexion<%=strPrefijoJSFFaces%>;
		}
	 	catch(Exception ex) 
		{
			throw ex;
	  	}	 
    }
	
					
	public void DeepLoad(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases)throws SQLException,Exception
    {
		try
		{
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeepLoad(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases);
		}
		catch(Exception ex) 
		{
			throw ex;
  		}
	}
	
	public String DeepLoads(Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String strTituloMensaje)throws SQLException,Exception
    {
		
		String strMensaje="";
		
		try
		{
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeepLoads(deep,deepLoadType,clases,strTituloMensaje);
		}
		catch(SQLException ex) 
		{
			throw ex;
  		}
		catch(Exception ex) 
		{
			throw ex;
  		}
		
		
	return strMensaje;
	
	}
	
	
	public String DeepLoad(Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String strTituloMensaje)throws SQLException,Exception
    {
		
		String strMensaje="";
		
		try
		{
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeepLoad(deep,deepLoadType,clases,strTituloMensaje);	
		}
		catch(SQLException ex) 
		{
			throw ex;
  		}
		catch(Exception ex) 
		{
			throw ex;
  		}
				
	return strMensaje;
		
	}
	
	
	public void DeepSave(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases)throws SQLException,Exception
    {
			
		try
		{
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeepSave(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases);
		}
		catch(Exception ex) 
		{
			throw ex;
  		}	
	}
	
	public String DeepSaves(Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String strTituloMensaje)throws SQLException,Exception
    {
		
		String strMensaje="";
		
		try
		{				
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeepSaves(deep,deepLoadType,clases,strTituloMensaje);	
		}
		catch(SQLException ex) 
		{
			throw ex;
  		}
		catch(Exception ex) 
		{
			throw ex;
  		}
		
		return strMensaje;
	
	}
		
	public String DeepSave(Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String strTituloMensaje)throws SQLException,Exception
    {
		
		String strMensaje="";
	
		try
		{	
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeepSave(deep,deepLoadType,clases,strTituloMensaje);	
		}
		catch(SQLException ex) 
		{
			throw ex;
  		}
		catch(Exception ex) 
		{
			throw ex;
  		}
		
		
		return strMensaje;
	
	}
		
	public  String  GetTodos<%=GetNombreClase(TablaBase.ToString())%>s(String strFinalQuery)throws SQLException,Exception 
	{
		
		String strMensaje="";
		
		try 
		{
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.GetTodos<%=GetNombreClase(TablaBase.ToString())%>s(strFinalQuery);
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
	return strMensaje;
		
	}
	
	public  String GetEntities(QueryWhereSelectParameters queryWhereSelectParameters)throws SQLException,Exception
    {	
		String strMensaje="";
		  		  
        try 
		{
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.GetEntities(queryWhereSelectParameters);
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
      	return strMensaje;
		
    }
	
	public  String GetEntities(String strQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws SQLException,Exception
    {	
		String strMensaje="";
		  		  
        try 
		{
			strMensaje=<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.GetEntities(strQuerySelect,queryWhereSelectParameters);
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
      	return strMensaje;
		
    }
	
	public  String GetEntitiesSimpleQueryBuild(String strQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws SQLException,Exception
    {	
		String strMensaje="";
		  		  
        try 
		{
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.GetEntitiesSimpleQueryBuild(strQuerySelect,queryWhereSelectParameters);
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
      	return strMensaje;
		
    }
	
	public  String GetEntity(Long id) throws SQLException,Exception
    {
		String strMensaje="";
		  		  
        try 
		{
			strMensaje=<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.GetEntity(id);
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
	return strMensaje;
        
    }
	
	public String Save<%=GetNombreClase(TablaBase.ToString())%>WithConnection(Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC)throws SQLException,Exception
	{	
		String strMensaje="";
		
	    try 
		{	
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(idUsuario,blnUsuarioPC,strNamePC,strIPPC);
									
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	} 	
	    
		
	return strMensaje;
	
	}
		
	public String Save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC)throws SQLException,Exception
	{	
		
		String strMensaje="";
		
	    try 
		{	
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(idUsuario,blnUsuarioPC,strNamePC,strIPPC);
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
	return strMensaje;
		
	}
	
	public String New(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionNuevoClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionNuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %>	<% } %>Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC)throws SQLException,Exception
	{  	
		
		String strMensaje="";
		
		
	    try 
		{		
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.New(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroUsoFuncionNuevoClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroUsoFuncionNuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %>	<% } %>idUsuario,blnUsuarioPC,strNamePC,strIPPC);
			
	   	}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		
	return strMensaje;
		
	}
	
	public String Update(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionActualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionActualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC) throws SQLException,Exception
	{	
		
		String strMensaje="";
		
	    try 
		{			
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Update(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroUsoFuncionActualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroUsoFuncionActualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,idUsuario,blnUsuarioPC,strNamePC,strIPPC) ;			
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}
		
		return strMensaje;
	
	}
	
	public String Delete(Long id,Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC) throws SQLException,Exception
	{	
		String strMensaje="";
				
	    try 
		{
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.Delete(id,idUsuario,blnUsuarioPC,strNamePC,strIPPC) ;
			
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}		
		
		
		return strMensaje;
		
	}
	
	public String DeleteCascade(Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC) throws SQLException,Exception
	{	
		String strMensaje="";
		
	    try 
		{	    	
			strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeleteCascade(idUsuario,blnUsuarioPC,strNamePC,strIPPC)  ;
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}		
				
		return strMensaje;
		
	}
	
	public String DeletesCascade(Long idUsuario,Boolean blnUsuarioPC,String strNamePC,String strIPPC) throws SQLException,Exception
	{	
		String strMensaje="";
			
	    try 
		{
			 strMensaje=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.DeletesCascade(idUsuario,blnUsuarioPC,strNamePC,strIPPC) ;
		}
		catch(SQLException ex) 
		{
			throw ex;
      	}
		catch(Exception ex) 
		{
			throw ex;
      	}		
				
		return strMensaje;
		
	}
	
	<%=GetMaintenanceTablasClasesRelacionadas() %>
	
	<%=GetMaintenanceTablasClasesRelacionadasDetalles() %>
	
	
	<%if(EsSwing){%>
	
	private void jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{   
		try
		{
			NuevoPreparar(); 
			this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=GetNombreClaseC(TablaBase.ToString())%>();
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsChanged(true);
			this.InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>() ;
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{   
		try
		{
			if(!this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>)
			{
				int intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	       
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> = this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().get(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow));
			}
			
			this.Actualizar();
			
			if(!this.blnGuardarCambiosEnLote)
			{
				this.ProcesarBusqueda(strAccionBusqueda);
			}
			
			
			
			this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.InicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>();
			this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			this.InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>();
			
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{   
		try
		{
			int intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	       
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> = this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().get(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow));

	   		this.Eliminar();
			
			if(!this.blnGuardarCambiosEnLote)
			{
				this.ProcesarBusqueda(strAccionBusqueda);
			}
			
			this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.InicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>();
			this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			this.InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>();
			
		}
		catch(Exception ex)
		{
			;
		}
		
	}
	
	private void jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{                                         	   	       
	  	try
		{
			jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.removeRowSelectionInterval(0, jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount()-1);			
			this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.Cancelar();
			this.InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>() ;
			
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{    		
		try
		{
	    	this.GuardarCambios();
			
			this.ProcesarBusqueda(strAccionBusqueda);
			
			this.InicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>();
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{    		
		try
		{
			intInicioPaginacion=0;
			intFinPaginacion=10;
	    	this.RecargarInformacion();
			this.InicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>();
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{    		
		try
		{
			this.intInicioPaginacion-=this.intNumeroRegistros;
			
			if(this.intInicioPaginacion<0)
			{
				this.intInicioPaginacion=0;
			}
			
			this.intFinPaginacion=10;
			
			this.Anteriores();
	    	this.InicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>();
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(java.awt.event.ActionEvent evt) 
	{    		
		try
		{
			this.intInicioPaginacion+=this.intNumeroRegistros;
			this.intFinPaginacion=10;
			
			this.Siguientes();
	    	this.InicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>();
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	
	private void InicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{		
		this.InicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.InicializarActualizarBindingBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.InicializarActualizarBindingTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>() ;
		
		this.InicializarActualizarBindingParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>() ;
	}
	
	private void InicializarActualizarBindingParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		try
		{
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("GenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
			{
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this,org.jdesktop.beansbinding.ELProperty.create("${blnGenerarReporte}"), this.jCheckBoxGenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("selected"),"GenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>");
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("TodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
			{
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this,org.jdesktop.beansbinding.ELProperty.create("${blnMostrarTodosResultadosReporte}"), this.jCheckBoxTodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("selected"),"TodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>");
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("TiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
			{
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this,org.jdesktop.beansbinding.ELProperty.create("${strGenerarReporte}"), this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("selectedItem.strCodigo"),"TiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>");
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		
		
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.bind();
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void InicializarActualizarBindingTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		try
		{
			JComboBoxBinding cb = SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, Funciones.getListTiposReportes(), this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer
			(new DefaultListCellRenderer()
										{
											public Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus)
											{
												super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
												
												if(value instanceof Reporte)
												{
													Reporte reporte=(Reporte)value;
													this.setText(reporte.getStrDescripcion());
												}
												
												return this;
											}
										}
			);
			
			cb.bind();
		}
		catch(Exception ex)
		{
			;
		}
	}
	
	private void InicializarActualizarBindingBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{		
		
		<%=GetIndicesInicializacionBindingsVariablesTablasClasesC(TablaBase)%>
		
		this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Busquedas.bind();
	}
	
	public void InicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		
		if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size()==0)
		{
			if(this.intInicioPaginacion-this.intNumeroRegistros>0)
			{
				this.intInicioPaginacion-=this.intNumeroRegistros;
			}
		}
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =(org.jdesktop.beansbinding.Binding)this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>");
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		
			this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(), jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>,"TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>");
		
			<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%= GetParameterBindingClase(TablaBase.Columns[i]) %>
			<% } %>
			
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.addBinding(jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.bind();
			
			TableColumn tableColumn;
			
		<%=ReDefinirColumnsTableVariablesForeignKeys()%>
		
		<%=GetNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase) %>
	}
	
	<%=ReDefinirTableCellColumnsTableVariablesForeignKeys()%>
	
	<%=GetNavegacionColumnsTableCellTablasClasesRelacionadas(TablaBase)%>
	
	private void RefrescarBindingTabla(Boolean blnSoloTabla) 
	{
		this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
	}
	
	private void InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("enabled"),"ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");
		this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("enabled"),"ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>");
		bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("enabled"),"ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>");
		this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("enabled"),"ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");
		bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>, org.jdesktop.beansbinding.BeanProperty.create("enabled"),"ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>");
		this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		
		
		this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.bind();
				
	}
	
	private void RefrescarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>() 
	{
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
		
			
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
		
		
		
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null)
		{
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
		
			
			
	}
	
	private void jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>ListSelectionListener(javax.swing.event.ListSelectionEvent evt) 
	{    
		if(!this.blnEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>)
		{
			this.ActualizarEstadoCeldasBotonesEmpresa("ae", this.blnGuardarCambiosEnLote, this.blnEsMantenimientoRelacionado);
			this.InicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>() ;
		}
	}
	
	<%=GetIndicesFunctionsInicializacionButtonsTablasClasesC(TablaBase)%>
	
	private void initActions() 
	{
		jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionModel().addListSelectionListener
		 (
	                new ListSelectionListener() 
	                {
	                    public void valueChanged(ListSelectionEvent e) 
	                    {
	                    	jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>ListSelectionListener(e);
	                    }
	                }
	     );
		
		jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		this.jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		this.jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		this.jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener
        (
	          new java.awt.event.ActionListener() 
	          {
	              public void actionPerformed(java.awt.event.ActionEvent evt) 
	              {
	            	  jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
	              }
	          }
        );
		
		<%=GetIndicesActionsInicializacionButtonsTablasClasesC(TablaBase)%>
	}
	
	<%}%>

	<%if(!EsSwing){%>
	public void ActualizarEstadoCeldasBotonesEmpresa(String strAccion,Boolean blnGuardarCambiosEnLote,Boolean blnEsMantenimientoRelacionado) 
	{
		if(strAccion=="n")
		{
			strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				}
				else
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
		else if(strAccion=="a")
		{
			strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				}
				else
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
		else if(strAccion=="ae")
		{
			strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				}
				else
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(strAccion=="ae2")
		{
			strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
				else
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
		else if(strAccion=="c")
		{
			strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				}
				else
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
		else if(strAccion=="t")
		{
			strVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			strVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
				else
				{
					strVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
	}	
	<%}else{%>
	
	public void ActualizarEstadoCeldasBotonesEmpresa(String strAccion,Boolean blnGuardarCambiosEnLote,Boolean blnEsMantenimientoRelacionado) 
	{
		if(strAccion=="n")
		{
			blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				}
				else
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		else if(strAccion=="a")
		{
			blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				}
				else
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		else if(strAccion=="ae")
		{
			blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				}
				else
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(strAccion=="ae2")
		{
			blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
				else
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		else if(strAccion=="c")
		{
			blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				}
				else
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		else if(strAccion=="t")
		{
			blnVisibilidadCeltaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			blnVisibilidadCeltaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(blnEsMantenimientoRelacionado==false)
			{
				if(blnGuardarCambiosEnLote==true)
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
				else
				{
					blnVisibilidadCeltaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
	}
	
	<%}%>
}
