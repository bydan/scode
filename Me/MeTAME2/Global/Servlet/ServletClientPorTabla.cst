<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII" %>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>

<script runat="template">


		
public String GetBusquedaFromForeigKeysSession() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
										
					strTablaClaseRelacionada+="\r\n\t\t\telse if(session.getAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\")!=null)";
					strTablaClaseRelacionada+="\r\n\t\t\t{";
							
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(session.getAttribute(\""+columnSchema.Name+"Actual\")!=null)";
					strTablaClaseRelacionada+="\r\n\t\t\t\t{";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\tstrAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\";";						
					strTablaClaseRelacionada+="\r\n\t\t\t\t}";
								
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tstrUltimaBusqueda=\"accionBusqueda=\"+strAccionBusqueda+\"()"+GetNameControlHtml(columnSchema)+strFK+"_"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(columnSchema)+"=\"+session.getAttribute(\""+columnSchema.Name+"Actual\")+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsession.removeAttribute(\""+columnSchema.Name+"Actual\");";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",strUltimaBusqueda,MensajeGrupo.NONE);";
					strTablaClaseRelacionada+="\r\n\t\t\t\txml = mensaje.toNewXmlMensaje();";

					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					strTablaClaseRelacionada+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
					
					strTablaClaseRelacionada+="\r\n\t\t\t}";
						
					
			
				}
			}
			
				
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesAccionesNavegacionTablasClasesRelacionadasC() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					if(tableSchema.Equals(tablaRelacionadaObjetivo))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					
					strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
					
					strTablaClaseRelacionada+="\r\n\t\t\telse if(strAccionMantenimiento.equals(\"RegistrarSesion"+GetNombreClaseC(TablaBase.ToString())+"Para"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPlural+"\"))";
					strTablaClaseRelacionada+="\r\n\t\t\t{";
					strTablaClaseRelacionada+="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual=Long.parseLong(request.getParameter(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\"));";
					strTablaClaseRelacionada+="\r\n\t\t\t\tsession.setAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+"\",true);";
					strTablaClaseRelacionada+="\r\n\t\t\t\tsession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
					strTablaClaseRelacionada+="\r\n\t\t\t\tsession.setAttribute(\"BusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"\",true);";
					strTablaClaseRelacionada+="\r\n\t\t\t\tsession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tString strPagina=\"NONE\";";
					strTablaClaseRelacionada+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaLogicAdditional.TienePermisosEnPaginaWeb(usuarioActual, Constantes.getLngOidSistemaActual(), \"Mantenimiento"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".jsp\"))";
					strTablaClaseRelacionada+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"{";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\tstrPagina=Constantes.getStrCarpetaPaginas()+\"/\"+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaObjetivo)+"Mantenimiento"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".jsp\";";
					strTablaClaseRelacionada+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"}";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Registro de sesion\",strPagina,MensajeGrupo.NONE);";
					strTablaClaseRelacionada+="\r\n\t\t\t\txml = mensaje.toNewXmlMensaje();";
						
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					strTablaClaseRelacionada+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strTablaClaseRelacionada+="\r\n\t\t\t}";
				}
				
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GenerarAccionesImagenServlet() 
{
			String strFuncionesAccionesImagen="";	
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{				
				if((columnSchema.NativeType=="image"&&columnSchema.DataType==DbType.Binary&&columnSchema.Name!=strVersionRow)||(columnSchema.DataType==DbType.Binary&&columnSchema.Name!=strVersionRow))
				{
					strFuncionesAccionesImagen+="\r\n\t\t\telse if(strAccionMantenimiento.equals(\"cargarImagen"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(columnSchema)+"\"))";
					strFuncionesAccionesImagen+="\r\n\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tString str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual=\"\";";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\tif(session.getAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"Actual\")!=null)";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tstr"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual=(String)session.getAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"Actual\");";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\tif(str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual.equals(\"0\"))";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\tthrow new Exception(\"Seleccione nuevamente un "+GetNombreClaseObjeto(TablaBase.ToString())+"\");";						  										 
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t}";http://www.forosdelweb.com/clear.gif
					strFuncionesAccionesImagen+="\r\n\t\t\t\telse";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tthrow new Exception(\"No existe algun "+GetNombreClaseObjeto(TablaBase.ToString())+" seleccionado\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.GetEntity(Long.parseLong(str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual));";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\ttry";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tFileItemFactory factory = new DiskFileItemFactory();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tServletFileUpload upload = new ServletFileUpload(factory);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tList fileItems = upload.parseRequest(request);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tString nombreFicheroFoto=\"\";";
						
						
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tIterator i = fileItems.iterator();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tFileItem actual = null;";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tbyte bytFoto[]=new byte[1];";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tLong lngTamanioFichero=0L;";
					
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\tString fileName = \"\";";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\twhile (i.hasNext())";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\tactual = (FileItem)i.next();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\tfileName = actual.getName();";
						
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t\tif(fileName != null)";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\tFile fichero = new File(fileName);";
						
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t\t\tif(!fichero.getName().contains(\"jpg\"))";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t\t;";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\telse";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t\tlngTamanioFichero=actual.getSize();";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t\t\t\tif(lngTamanioFichero>100000)";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t\t\tthrow new Exception(\"El archivo no debe superar los 100 kb\");";						             	
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t\t}";
								
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t\t\tbytFoto =actual.get();";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t\t\tbreak;";
					
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t}";
						
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"().set"+GetPrefijoTablaC()+GetPrefijoTipoC(columnSchema)+GetNombreColumnaClaseC(columnSchema)+"(bytFoto);";
					
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\tif(fileName.contains(\"\\\\\"))";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\tfileName=fileName.replace(\"\\\\\",\"@\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t\tfileName=fileName.split(\"@\")[fileName.split(\"@\").length-1];";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t}";
					
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"().setField_strNombre(fileName);";					
					
						
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.Save"+GetNombreClase(TablaBase.ToString())+"WithConnection(intIdUsuarioSesion);";
						
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\trequest.setAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"Actual\", str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tsession.removeAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"Actual\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tsession.removeAttribute(\"accionMantenimiento\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tcatch(Exception ex)";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tString strMensaje=ex.getMessage();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t\tthrow new Exception(\"FOTO:\"+ex.getMessage());";						             	
					strFuncionesAccionesImagen+="\r\n\t\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t/*mensaje=new Mensaje(\"Auxiliar\",\"Registro de sesion de imagen\",\"Mantenimiento"+GetNombreClase(TablaBase.ToString())+".jsp\",MensajeGrupo.NONE);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\txml = mensaje.toNewXmlMensaje();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tresponse.getWriter().write(xml);*/";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\tresponse.sendRedirect(Constantes.getStrCarpetaPaginas()+\"/"+GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)+"Mantenimiento"+GetNombreClase(TablaBase.ToString())+".jsp\");";
					strFuncionesAccionesImagen+="\r\n\r\n\t\t\t\t//disp=request.getRequestDispatcher(Constantes.getStrCarpetaPaginas()+\"/"+GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)+"Mantenimiento"+GetNombreClase(TablaBase.ToString())+".jsp\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t//disp.forward(request, response);";
					strFuncionesAccionesImagen+="\r\n\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\telse if(strAccionMantenimiento.equals(\""+GetNombreClaseObjeto(TablaBase.ToString())+"ActualCargarImagen"+GetNombreColumnaClaseC(columnSchema)+"\"))";
					strFuncionesAccionesImagen+="\r\n\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tString str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual=\"0\";";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tstr"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual=request.getParameter(\"hdnIdActual\");";		
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\"ultimaBusqueda"+GetNombreClase(TablaBase.ToString())+"\", \"accionBusqueda=Por"+strIdGetSet+"&"+strId+GetNombreClase(TablaBase.ToString())+"=\"+str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\"ultimaBusqueda"+GetNombreClase(TablaBase.ToString())+"Anterior\", request.getParameter(\"ultimaBusquedaAnterior\"));";
				
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"Actual\", str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"ActualMostrarImagen\", str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.GetEntity(Long.parseLong(str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual));";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\"Descripcion"+GetNombreClase(TablaBase.ToString())+"ActualMostrarImagen\", "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"()"+GetDescripcionComboColumnFromProperties(TablaBase)+");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\"accionMantenimiento\", \"cargarImagen"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(columnSchema)+"\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Registro de sesion de imagen\",Constantes.getStrCarpetaPaginas()+\"/"+GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)+"Mantenimiento"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(columnSchema)+"Imagen.jsp\",MensajeGrupo.NONE);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\txml = mensaje.toNewXmlMensaje();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strFuncionesAccionesImagen+="\r\n\t\t\t}";
					strFuncionesAccionesImagen+="\r\n\t\t\telse if(strAccionMantenimiento.equals(\""+GetNombreClaseObjeto(TablaBase.ToString())+"ActualMostrarImagen"+GetNombreColumnaClaseC(columnSchema)+"\"))";
					strFuncionesAccionesImagen+="\r\n\t\t\t{";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tString str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual=\"0\";";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tstr"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual=request.getParameter(\"hdnIdActual\").trim();";					  
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\""+strId+GetNombreClase(TablaBase.ToString())+"ActualMostrarImagen\", str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual);";
					
					strFuncionesAccionesImagen+="\r\n\t\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.GetEntity(Long.parseLong(str"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"Actual));";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tsession.setAttribute(\"Descripcion"+GetNombreClase(TablaBase.ToString())+"ActualMostrarImagen\", "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"()"+GetDescripcionComboColumnFromProperties(TablaBase)+");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Registro de sesion de imagen\",Constantes.getStrCarpetaPaginas()+\"/"+GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(columnSchema)+"ImagenMostrar.jsp\",MensajeGrupo.NONE);";
					strFuncionesAccionesImagen+="\r\n\t\t\t\txml = mensaje.toNewXmlMensaje();";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					strFuncionesAccionesImagen+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strFuncionesAccionesImagen+="\r\n\t\t\t}";
				}
			}
			
	return strFuncionesAccionesImagen;
}


		
public String GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			String strParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong(request.getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";

			String strFuncionTodos=string.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strFuncionTodos="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					strFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+strParametroPadre+"\r\n\t\t\t\t";					
					strFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					strFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					strFuncionTodos+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					strFuncionTodos+="\r\n\t\t\t\t{";
					strFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					strFuncionTodos+="\r\n\t\t\t\t}";
					
					strFuncionTodos+="\r\n\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					strFuncionTodos+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strFuncionTodos+="\r\n\t\t\t}";
					
					
			
					strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					
					strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
					
					String strXmlFuncionObjeto=string.Empty;
					
					strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					
					//strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
					//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
				
					strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							strIfFuncion+=strParametroPadre;
							
							int count=1;
							strDefinicionVariables="";
							strUsoVariables="";							
							//strFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{								
											strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
											strDefinicionVariables+="\r\n\r\n\t\t\t\tif(request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
											strDefinicionVariables+="\r\n\t\t\t\t{";
											strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												
											strDefinicionVariables+="\r\n\t\t\t\t}";
									
																						
											strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												strUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												strUsoVariables+=",";	
												
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									strFuncionBusqueda+=strUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
						
					}
					
					strInitFuncion=strFuncionTodos+strInitFuncion;
					
				}
			}
			
			return  strInitFuncion;
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " TR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\tArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetMaintenanceTablasClasesRelacionadasRelaciones() 
		{
			String strTablaClaseRelacionada="";
			String strFuncionInit="Save"+GetNombreClase(TablaBase.ToString())+"Relaciones(intIdUsuarioSesion,true,request.getRemoteHost(),request.getRemoteAddr(),"+GetNombreClaseObjetoC(TablaBase.ToString());
			String strFuncionEnd=");";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			String strFuncionBusqueda2="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			String strFuncionLogic="";
			
			
			strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"s();";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
			strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\tif(strGenerarReporte!=\"\"&&strGenerarReporte!=null)\r\n\t\t\t\t{";
			
			strXmlFuncion+="\r\n\t\t\t\t\tif(blnMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			strXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s();";						
			strXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			strXmlFuncion+="\r\n\t\t\t\t\t}";	
			
			
			strXmlFuncion+="\r\n\t\t\t\t\tGenerarReporte"+GetNombreClase(TablaBase.ToString())+"s(request,response,\"xyzTipoBusqueda\","+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s());";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif(blnMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			strXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.set"+GetNombreClaseC(TablaBase.ToString())+"s("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			strXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t}";	
			
			strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
			
			String strXmlFuncionObjeto=string.Empty;
			
			strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			
			//strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
				
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				
				if(!indexSchema.IsPrimaryKey)
				{
					
					strFuncionBusqueda2="\r\n\t\t\t\tstrDetalleReporte="+GetNombreClase(TablaBase.ToString())+"LogicAdditional.getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique)
					{
						
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
																				
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{								
									strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									strDefinicionVariables+="\r\n\r\n\t\t\t\tif(request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									strDefinicionVariables+="\r\n\t\t\t\t{";
									strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										
									strDefinicionVariables+="\r\n\t\t\t\t}";
									
									if(indexSchema.Name.Contains(strFK+"_"))
									{
										strDefinicionVariables+="\r\n\r\n\t\t\t\tif(session.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\")!=null)";
										strDefinicionVariables+="\r\n\t\t\t\t{";
										strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=("+GetTipoColumnaClaseC(memberColumnSchema.Column)+")session.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
										strDefinicionVariables+="\r\n\t\t\t\t\tsession.removeAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
										
										strDefinicionVariables+="\r\n\t\t\t\t}";
									}
									
									strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									
									if(!indexSchema.MemberColumns.Count.Equals(count))
									{
										strUsoVariables+=",";	
									}
								}
								else
								{
									if(!indexSchema.Name.Contains("BusquedaRango"))
									{
										strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
									}
									else
									{
										strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
										
										strUsoVariables+=",";	
										
										strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
									}								
								}
								count++;
							}
							strFuncionBusqueda2+=strUsoVariables+");\r\n";
							strFuncionBusqueda+=strUsoVariables+");";
							
					if(indexSchema.IsUnique)
					{
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					}
					else
					{
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",strFuncionBusqueda.Replace("finalQueryPaginacion","\"\"").Replace("\r\n\r\n","\r\n\t\t"))+"\r\n\r\n\t\t\t}";																																		
					}
				}
			}								
			return  strInitFuncion;
		}
		
public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}
public string GetParametroFuncionActualizarClass(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(/*column.Name.Equals(strId)||*/column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}
public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=strId;			
		}
		return strParamtro;
}
public string GetSetVariablesFormularioNuevo(ColumnSchema column,String table)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);
	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\")== null|| request.getParameter(\""+GetNameControlHtml(column) +"\")==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)||column.Name.Equals(strId)||column.Name.Equals(strVersionRow))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strIfElse+ strPrefijo+strColumna+"="+GetTipoColumnaParse(column,"request.getParameter(\""+GetNameControlHtml(column) +"\"")+");\r\n}";
}
public string GetSetVariablesFormulario(ColumnSchema column,String table)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\")== null||request.getParameter(\""+GetNameControlHtml(column) + "\")==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strIfElse+strPrefijo+strColumna+"="+GetTipoColumnaParse(column,"request.getParameter(\""+GetNameControlHtml(column) +"\"")+");\r\n}";
}

public string GetSetVariablesFormularioContador(ColumnSchema column,String table)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\n\t\t\t\t\tif(request.getParameter(\""+column.Name +GetNombreClaseC(TablaBase.ToString())+"\"+i)== null||request.getParameter(\""+column.Name+GetNombreClaseC(TablaBase.ToString()) + "\"+i)==\"\"){";
	strIfElse+=strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+"=null;}\r\n\t\t\t\t\telse{";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	String strReplace="";
	
	if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
	{
		strReplace=".replace(\"/\", \"-\")";
	}
	
	return strIfElse+strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+"="+GetTipoColumnaParse(column,"request.getParameter(\""+column.Name+GetNombreClaseC(TablaBase.ToString()) +"\"+i)"+strReplace)+";}";
}

public string GetSetVariablesFormularioContadorParaBorrar(ColumnSchema column,String table)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\n\t\t\t\t\tif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.toString()+\"ParaBorrar\")== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString()+\"ParaBorrar\")==\"\"){";
	strIfElse+=strPrefijo+strColumna+"=null;}\r\n\t\t\t\t\telse{";	
	
	if(!column.Name.Equals(strId))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strIfElse+strPrefijo+strColumna+"="+GetTipoColumnaParse(column,"request.getParameter(\""+GetNameControlHtml(column) +"\"+i.toString()+\"ParaBorrar\"")+");}";
}

public string GetSetRequestVariables(ColumnSchema column,String table)
{
	String strInit="request.setAttribute(\"";	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strInit+strColumna+"\","+GetNombreCompletoColumnaClaseSinPrefijoTablaC(column)+GetTipoColumnaToString(column)+");";
}
public string GetSetVariables(ColumnSchema column,String table)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strPrefijo+strColumna+"="+GetNombreClaseObjetoC(table)+"Logic.get"+GetNombreClaseC(table)+"().get"+GetNombreCompletoColumnaClaseC(column)+"();";
}
public string GetNombreVariables(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strTipo+strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+";";
}



public string GetNombreClaseObjeto(string strTablaBase)
{		
		return GetNombreClaseObjetoC(strTablaBase);
}
public string GetNombreClase(string strTablaBase)
{		
		return GetNombreClaseC(strTablaBase);
}

public string GetSetVariablesToObjetoLogicNuevo(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId))
	{
			return string.Empty;
	}
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return  GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"().setField_"+strPrefijo+ strColumna +"("+strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+");";
}

public string GetSetVariablesToObjetoLogicActualizar(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"().set"+strIdGetSet+"("+strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"().set"+strVersionRowGetSet+"("+strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+");";
	}
	return  GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"().setField_"+strPrefijo+ strColumna +"("+strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString())+");";
}

public String GetVariablesTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;";
					//strTablaClaseRelacionada+="\r\n\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable+";");
					strTablaClaseRelacionada+="\r\n\tArrayList<"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s;";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String GetVariablesNewTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable+"")+"=new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"();";
					strTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s=new ArrayList<"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+">();";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String GetProcesarTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strFuncionInit="";
			String strFuncionEnd="(request,response);\r\n\t\t\t\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			TableSchema tablaRelacionada;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionada=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionada=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}
				
					strFuncionInit="\r\n\r\n\t\t\t\tif(request.getParameter(\"numeroDe"+GetNombreClaseC(tablaRelacionada.ToString())+"\")!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tProcesar";
					strTablaClaseRelacionada+=strFuncionInit+GetNombreClaseC(tablaRelacionada.ToString())+"Relaciones"+strFuncionEnd;
				
			}
			
			return strTablaClaseRelacionada; 
		}

public String GetFuncionesMaintenanceTablasClasesRelacionadas() 
		{
			String strLastCode="";
			String strFuncionBody="";
			String strFuncionBody2="";
			TableSchema tablaRelacionada;
			
			String strVariables="";
			String strVariablesDocumento="";
			String strTablaClaseRelacionada="";
			String strFuncionInit="\r\n\r\n\tpublic void Procesar"+GetNombreClase(TablaBase.ToString())+"Relaciones(HttpServletRequest request, HttpServletResponse response)\r\n\t{";
			String strFuncionEnd="\r\n\t\t}\r\n\t}\r\n\tcatch(Exception ex)\r\n\t{\r\n\tthrow ex;\r\n\t}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionada=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionada=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					continue;
				}
				
				//System.Windows.Forms.MessageBox.Show(tablaRelacionada.Name);
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strFuncionInit="\r\n\r\npublic void Procesar"+GetNombreClase(tablaRelacionada.ToString())+"Relaciones(HttpServletRequest request, HttpServletResponse response)throws Exception\r\n{\r\n\ttry\r\n\t{";
					strFuncionBody="\r\n\r\n\t\tInteger intNumeroDe"+ GetNombreClase(tablaRelacionada.ToString())+"=0;";
					strFuncionBody+="\r\n\t\tBoolean isNew"+ GetNombreClase(tablaRelacionada.ToString())+"=false;";
					strFuncionBody+="\r\n\t\tBoolean isChanged"+ GetNombreClase(tablaRelacionada.ToString())+"=false;";
					strFuncionBody+="\r\n\t\tBoolean isDeleted"+ GetNombreClase(tablaRelacionada.ToString())+"=false;";
					
					//strFuncionBody+="\r\n\t\t"+ GetNombreClase(tablaRelacionada.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"=null;";
					strFuncionBody+="\r\n\t\t"+ GetNombreClaseObjetoC(tablaRelacionada.ToString())+"Logic= new "+GetNombreClase(tablaRelacionada.ToString())+"Logic();";
					strFuncionBody+="\r\n\t\t"+ GetNombreClaseObjetoC(tablaRelacionada.ToString())+"s= new ArrayList<"+GetNombreClase(tablaRelacionada.ToString())+">();";
					strFuncionBody+="\r\n\r\n\t\tif(request.getParameter(\"numeroDe"+ GetNombreClase(tablaRelacionada.ToString())+"\")!=null)\r\n\t\t{\r\n\t\t";
					strFuncionBody+="\tintNumeroDe"+GetNombreClase(tablaRelacionada.ToString())+"=Integer.parseInt(request.getParameter(\"numeroDe"+GetNombreClase(tablaRelacionada.ToString())+ "\"));\r\n\t\t}";
					
					strVariables=GetNombreVariables(tablaRelacionada);	
					
					
					strFuncionBody2="\r\n\r\n\t\tfor (int i = 0; i < intNumeroDe"+GetNombreClase(tablaRelacionada.ToString())+"; i++)\r\n\t\t{";
					strFuncionBody2+="\r\n\t\t\tisNew"+GetNombreClase(tablaRelacionada.ToString())+"=false;";
					strFuncionBody2+="\r\n\t\t\tisChanged"+GetNombreClase(tablaRelacionada.ToString())+"=false;";
					strFuncionBody2+="\r\n\t\t\tisDeleted"+GetNombreClase(tablaRelacionada.ToString())+"=false;";
	
					strFuncionBody2+="\r\n\r\n\t\t\tisNew"+GetNombreClase(tablaRelacionada.ToString())+"=Boolean.parseBoolean(request.getParameter(\"isNew"+GetNombreClase(tablaRelacionada.ToString())+"\"+i));";
					strFuncionBody2+="\r\n\t\t\tisChanged"+GetNombreClase(tablaRelacionada.ToString())+"=Boolean.parseBoolean(request.getParameter(\"isChanged"+GetNombreClase(tablaRelacionada.ToString())+"\"+i));";
					strFuncionBody2+="\r\n\t\t\tisDeleted"+GetNombreClase(tablaRelacionada.ToString())+"=Boolean.parseBoolean(request.getParameter(\"isDeleted"+GetNombreClase(tablaRelacionada.ToString())+"\"+i));";
					
					strFuncionBody2+="\r\n\r\n\t\t\tif(isNew"+GetNombreClase(tablaRelacionada.ToString())+"==false&&isChanged"+GetNombreClase(tablaRelacionada.ToString())+"==false&&isDeleted"+GetNombreClase(tablaRelacionada.ToString())+"==false)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}";
					strFuncionBody2+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(tablaRelacionada.ToString())+"Logic.set"+GetNombreClase(tablaRelacionada.ToString())+"(null);";
					
					strVariablesDocumento=GetSetVariablesFormularioContador(tablaRelacionada,TablaBase.ToString());
					
					strLastCode="\r\n\r\n\r\n\t\t\tif(isNew"+GetNombreClase(tablaRelacionada.ToString())+")\r\n\t\t\t{\r\n\t\t\t\t"+GetNombreClaseObjeto(tablaRelacionada.ToString())+"Logic.set"+GetNombreClase(tablaRelacionada.ToString())+"(new "+GetNombreClase(tablaRelacionada.ToString())+"());";
					strLastCode+=GetSetVariablesToObjetoLogicNuevo(tablaRelacionada);
					strLastCode+="\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t"+GetNombreClaseObjeto(tablaRelacionada.ToString())+"Logic.GetEntity("+GetNombreIdVariable(tablaRelacionada)+");\r\n\r\n\t\t\t\tif(isChanged"+GetNombreClase(tablaRelacionada.ToString())+")\r\n\t\t\t\t{";
					strLastCode+=GetSetVariablesToObjetoLogicActualizar(tablaRelacionada); 
					strLastCode+="\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t"+GetNombreClaseObjeto(tablaRelacionada.ToString())+"Logic.get"+GetNombreClase(tablaRelacionada.ToString())+"().setIsDeleted(true);\r\n\t\t\t\t}\r\n\t\t\t}";
						
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
					{
						strLastCode+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(tablaRelacionada.ToString())+"="+GetNombreClaseObjeto(tablaRelacionada.ToString())+"Logic.get"+GetNombreClase(tablaRelacionada.ToString())+"();";
					}
					else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
					{
						strLastCode+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(tablaRelacionada.ToString())+"s.add("+GetNombreClaseObjeto(tablaRelacionada.ToString())+"Logic.get"+GetNombreClase(tablaRelacionada.ToString())+"());";
					}	
					
						
					strTablaClaseRelacionada+=strFuncionInit+strFuncionBody+strVariables+strFuncionBody2+strVariablesDocumento+strLastCode+strFuncionEnd;				
				}
				
												
					

			}
			
			
			return strTablaClaseRelacionada; 
		}

public string GetNombreIdVariable(TableSchema table)
{
	String strNombreIdVariable="NONE";	
	String strPrefijo="";	
	String strColumna="";
	
	foreach(ColumnSchema column in table.Columns)
	{
		if(column.IsPrimaryKeyMember)
		{
			strPrefijo=" "+GetPrefijoTipoC(column);	
			strColumna=GetNombreColumnaClaseC(column);
			strNombreIdVariable=strPrefijo+strColumna+GetNombreClaseC(table.ToString());
		}
	}
			
	return strNombreIdVariable;
}

public string GetNombreIdVariable()
{
	String strNombreIdVariable="NONE";	
	String strPrefijo="";	
	String strColumna="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsPrimaryKeyMember)
		{
			strPrefijo=" "+GetPrefijoTipoC(column);	
			strColumna=GetNombreColumnaClaseC(column);
			strNombreIdVariable=strPrefijo+strColumna+GetNombreClaseC(TablaBase.ToString());
		}
	}
			
	return strNombreIdVariable;
}

public string GetSetVariablesToObjetoLogicActualizar(TableSchema tableSchema)
{
	String strVariablesActualizar="\r\n";
	String strTipo="";	
	String strPrefijo="";	
	String strColumna="";		
	String strIfElse="";	
	
	
	foreach(ColumnSchema column in tableSchema.Columns)
	{
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
				continue;
		}
		
		strTipo=GetTipoColumnaClaseC(column);	
		strPrefijo=GetPrefijoTipoC(column);	
		strColumna=GetNombreColumnaClaseC(column);	
		strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
		strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
		
		if(column.Name.Equals(strId))
		{
			strVariablesActualizar+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(tableSchema.ToString())+"Logic.get"+GetNombreClase(tableSchema.ToString())+"().set"+strIdGetSet+"("+strPrefijo+strColumna+GetNombreClaseC(tableSchema.ToString())+");";
			continue;
		}
		if(column.Name.Equals(strVersionRow))
		{
			strVariablesActualizar+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(tableSchema.ToString())+"Logic.get"+GetNombreClase(tableSchema.ToString())+"().set"+strVersionRowGetSet+"("+strPrefijo+strColumna+GetNombreClaseC(tableSchema.ToString())+");";
			continue;
		}
		
		strVariablesActualizar+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(tableSchema.ToString())+"Logic.get"+GetNombreClase(tableSchema.ToString())+"().setField_"+strPrefijo+ strColumna +"("+strPrefijo+strColumna+GetNombreClaseC(tableSchema.ToString())+");";
	}
	
	return  strVariablesActualizar;
}

public string GetSetVariablesToObjetoLogicNuevo(TableSchema tableSchema)
{
	String strVariablesNuevo="\r\n";
	String strTipo="";	
	String strPrefijo="";	
	String strColumna="";		
	String strIfElse="";	
	
	
	foreach(ColumnSchema column in tableSchema.Columns)
	{
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow))
		{
			continue;
		}
		
		strTipo=GetTipoColumnaClaseC(column);	
		strPrefijo=GetPrefijoTipoC(column);	
		strColumna=GetNombreColumnaClaseC(column);	
		strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
		strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	

		strVariablesNuevo+="\r\n\t\t\t\t"+GetNombreClaseObjeto(tableSchema.ToString())+"Logic.get"+GetNombreClase(tableSchema.ToString())+"().setField_"+strPrefijo+ strColumna +"("+strPrefijo+strColumna+GetNombreClaseC(tableSchema.ToString())+");";
	}
	
		
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return  strVariablesNuevo;
}

public String GetNombreVariables(TableSchema table)
{
	
	String strVariables="\r\n";
	String strTipo="";
	String strPrefijo="";
	String strColumna="";
	
	foreach(ColumnSchema column in table.Columns)
	{
		strTipo=GetTipoColumnaClaseC(column);	
		strPrefijo=" "+GetPrefijoTipoC(column);	
		strColumna=GetNombreColumnaClaseC(column);	
		
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
				continue;
		}
		strVariables+="\r\n\t\t"+strTipo+strPrefijo+strColumna+GetNombreClaseC(table.ToString())+";";
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	}
	
	return strVariables;
}

public string GetSetVariablesFormularioContador(TableSchema tableSchema,String table)
{
	String strVariables="";
	
	String strTipo="";	
	String strPrefijo="";	
	String strColumna="";
	String strIfElse="";
	strIfElse="";
	

	foreach(ColumnSchema column in tableSchema.Columns)
	{
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
				continue;
		}
		
		strTipo=GetTipoColumnaClaseC(column);	
		strPrefijo=" "+GetPrefijoTipoC(column);	
		strColumna=GetNombreColumnaClaseC(column);	
		strIfElse="\r\n\r\n\t\t\tif(request.getParameter(\""+column.Name +GetNombreClaseC(tableSchema.ToString())+"\"+i)== null||request.getParameter(\""+column.Name+GetNombreClaseC(tableSchema.ToString()) + "\"+i)==\"\"){";
		strIfElse+=strPrefijo+strColumna+GetNombreClaseC(tableSchema.ToString())+"=null;}\r\n\t\t\telse{";	
		
		strVariables+=strIfElse+strPrefijo+strColumna+GetNombreClaseC(tableSchema.ToString())+"="+GetTipoColumnaParse(column,"request.getParameter(\""+column.Name+GetNombreClaseC(tableSchema.ToString()) +"\"+i)")+";}";
	}	
	/*if(column.Name.Equals(strId))
	{
		strPrefijo=" ";
		strColumna=strId;
	}*/
	
	return strVariables;
}
</script>
<%=GetByDanLicence()%>

/*Empresa: <%=Empresa%>
 *Programador: <%=NombreProgramador%>
 *Descripcion: Clase que contiene todos los Accesos a BDD de tabla <%=TablaBase.ToString().Split('.')[1]%>
 * Fecha Creacion: <%= DateTime.Now.ToLongDateString() %>
 **CAMBIOS***** 
 * Motivo Cambio:
 * Nombre Programador:
 * Fecha Cambio:
 **************
 */

package <%=Empresa%>.<%= Package%>.ClientLayer.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageServlet%>;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ByDan.<%=strPackageFramework%>.<%= Package%>.ClientLayer.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageServlet%>.RemoteCallURLServlet;
import ByDan.Framework.<%= Package%>.<%= strPackageUtils%>.Mensaje;
import ByDan.Framework.<%= Package%>.<%= strPackageUtils%>.MensajeGrupo;
import ByDan.Framework.<%= Package%>.<%= strPackageUtils%>.Funciones;
import ByDan.Framework.<%= Package%>.<%= strPackageUtils%>.ConstantesInternos;
import ByDan.Framework.<%= Package%>.ClientLayer.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageServlet%>.FuncionesGeneralesForServlet;

public class <%=GetNombreClase(TablaBase.ToString())%>Servlet extends javax.servlet.http.HttpServlet
{
	private static final long serialVersionUID = 1L;
	
	protected void doGet(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws ServletException, IOException 
	{
		
	}  		
	
	protected void doPost(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws ServletException, IOException 
	{
		try
		{
			String strParameters="";
			String strResponse="";
			
			strParameters=RemoteCallURLServlet.GetQueryStringFromPostMethod(httpServletRequest);
			
			strResponse=RemoteCallURLServlet.CallRemoteServletWithOutputStreamWriter("<%=GetNombreClaseC(TablaBase.ToString())%>Servlet", strParameters,null,httpServletRequest.getSession());
			
			if(Funciones.ExisteParametroValorEnQueryString(strParameters,ConstantesInternos.getStrGenerarReporte(),ConstantesInternos.getStrTrue(),false))
			{
				FuncionesGeneralesForServlet.ActualizarReporteDesdeSesionRemota(httpServletRequest, httpServletResponse);			
			}
			
			httpServletResponse.setContentType("text/xml");
			httpServletResponse.getWriter().write(strResponse);
		}
		catch(Exception ex)
		{
			Mensaje mensaje=new Mensaje("Excepcion de Aplicacion","Error de aplicacion",ex.getMessage(),MensajeGrupo.EXCEPTION);
			
			String strXml = mensaje.toNewXmlMensaje();
			
			httpServletResponse.setContentType("text/xml");
			httpServletResponse.getWriter().write(strXml);				
		}	    		
	}
	
	
	public void init() throws ServletException 
	{		
		try 
		{
			
		} 		
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
}
