<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII"%>    	
<%@ CodeTemplate Src="..\..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="ConSessionBeansHome" Type="System.Boolean" Default="false" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="ConWebServices" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>

<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="TablasBaseForReporte" Type="SchemaExplorer.TableSchemaCollection" Category="Context" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="TiposGeneracion" Type="System.String" Default=" " Category="Options" Description="Nombre de la Entidad" %>

<script runat="template">
public String GetListasParametroTablesRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
	
	String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strNombreAdicional="";
	
	/*
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	*/
	/*
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
	sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClase(tableSchema.ToString())+"> "+ GetNombreClaseObjetoC(tableSchema.ToString())+"s";		
	}
	*/
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {								
		strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		strTipoLista="";
		
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			strTipoLista=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" ";	
			
		
			sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";		
		
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
			strTipoLista=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> ";	
			
			
			sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";		
		}
	}
	
	return sTablaClaseRelacionada;
}

public String GetFuncionesTablasClasesReportes() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
				strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
				strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
				strEndFuncion+="";
			strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{
				strFuncion+="\r\n\r\n\t"+GetWebMethodAnnotationFromConWebServices()+"	"+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> "+"getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithQuerySelect(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;";
				strFuncion+="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+"	"+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> "+"getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithQuerySelectNative(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;";

				//strFuncion+="\r\n\r\n\tvoid getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";
				//strFuncion+="\r\n\tvoid getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";			 			
			}
								
			return strFuncion; 
	}
	
public string GetWebMethodAnnotationFromConWebServices()
{	
	String strWebMethodAnnotationFromConWebServices=GetWebMethodAnnotationFromConWebServicesC(ConWebServices);
	/*
	if(ConWebServices) {
		strWebMethodAnnotationFromConWebServices="@WebMethod";
	
	}*/
	return strWebMethodAnnotationFromConWebServices;
}

public string GetPackageFromConWebServices()
{	
	String strPackageFromConWebServices="";
	
	if(!ConWebServices) {
		strPackageFromConWebServices=Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface;
	
	} else {
		strPackageFromConWebServices=Empresa+"."+Package+"."+Module+strPackageService+"."+strPackageWebServicePrefix+"."+strPackageWebServiceInterface;
	}
	
	return strPackageFromConWebServices;
}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionada3="";
			
			String strFuncionInit="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+" void"+" save"+GetNombreClase(TablaBase.ToString())+"Relaciones("+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString())+",DatosCliente datosCliente";
			String strFuncionMiddle=")throws Exception;";
			/*strFuncionMiddle+="\r\n\t\ttry {\r\n\t\t\tthis.getNewConnexionToDeep();\r\n\t";
			String strFuncionEnd="\r\n\r\n\t\t\tconnexion.getConnection().commit();\r\n\r\n\t\t} catch(SQLException e) {\r\n\t\t\tconnexion.getConnection().rollback();\r\n\t\t\tFunciones.logShowExceptionMessages(e);\r\n\t\t\tthrow e;\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tconnexion.getConnection().rollback();\r\n\t\t\tFunciones.logShowExceptionMessages(e);\r\n\t\t\tthrow e;\r\n\r\n\t\t} finally {\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}\r\n\t}";
			*/
			String strFuncionEnd="";
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
			
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);					
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
				}
			}
			
			arrayListRelaciones=new ArrayList();
			strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);				
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			/*strTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsdeleted()"+")";
			strTablaClaseRelacionada2+=" {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+strTablaClaseRelacionada3+");";
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\t}";
			strTablaClaseRelacionada2+=" else if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsdeleted())";
			strTablaClaseRelacionada2+=" {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+strTablaClaseRelacionada3+");";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			strTablaClaseRelacionada2+="\r\n\t\t\t}";
			*/
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String strTablaClaseRelacionada="";
			String strFuncionInit="void save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC";
			String strFuncionMiddle=")throws Exception;\r\n";
			//strFuncionMiddle+="\t\ttry {\r\n\t";
			//String strFuncionEnd="\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.logShowExceptionMessages(e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}";
			String strFuncionEnd="";
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			
			bool blnExisteDetalles=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					blnExisteDetalles=true;
					/*
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null) {";										
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
					*/
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					blnExisteDetalles=true;
					/*
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s()) {";					
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".setField_"+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
					*/
				}
			}
			
			if(blnExisteDetalles)
			{
				//strTablaClaseRelacionada2="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();"+strTablaClaseRelacionada2;
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String GetSessionBeanSufijoLocal() 
		{
			String strFuncion=string.Empty;	
			
			
				
			if(ConSessionBeansHome)
			{
				strFuncion+="Home";
			}
					
			
			
			return strFuncion;
		}

public String GetSessionBeanAnnotation() 
{
	String strFuncion=string.Empty;	
	
	if(!ConWebServices) {
		if(ConSessionBeansHome)
		{
			strFuncion+="@Local";
		}						
		else
		{
			strFuncion+="@Remote";
		}
	} else {
		strFuncion+="@WebService";
	}
	
	return strFuncion;
}

public String GetSessionBeanImplementation() 
		{
			String strFuncion=string.Empty;			
			
			
			if(!ConSessionBeansHome)
			{
				//strFuncion+="extends EJBObject";
			}
			else
			{
				//strFuncion+="extends EJBHome";
			}
				
			strFuncion+=/*","+*/GetNombreClase(TablaBase.ToString())+"Additionable";
			
			
			return strFuncion;
		}
		
public String GetImportSessionBeanPackages() 
		{
			String strFuncion=string.Empty;			
			strFuncion="import java.rmi.RemoteException;";
			
			if(!ConWebServices)
			{
				if(!ConSessionBeansHome)
				{
					strFuncion+="\r\nimport javax.ejb.Remote;";
				}
				else
				{
					strFuncion+="\r\nimport javax.ejb.Local;";
					strFuncion+="\r\nimport javax.ejb.CreateException;";
				}
			} else {
				strFuncion+="\r\nimport javax.jws.WebService;";
				strFuncion+="\r\nimport javax.jws.WebMethod;";
				strFuncion+="\r\nimport java.rmi.Remote;";
				strFuncion+="\r\nimport java.rmi.RemoteException;";
				strFuncion+="\r\nimport javax.jws.soap.SOAPBinding;";
				strFuncion+="\r\nimport javax.jws.soap.SOAPBinding.Style;";
			}
			
			
			return strFuncion;
		}
		
public String GetIndicesTablasClasesCompuesto() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					strInitFuncion+="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+" String getXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s("+strTypeCollection+"<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)throws Exception;";
					strInitFuncion+="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws Exception;";
						
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								//System.Windows.Forms.MessageBox.Show(indexSchema.Name);
								continue;
								/*
								strInitFuncion+="\r\n\tvoid "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
								strInitFuncion+="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
								strInitFuncion+="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
							}	
							int count=1;	
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{
									strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
									if(!indexSchema.MemberColumns.Count.Equals(count))
									{
										strInitFuncion+=",";	
									}
								}
								else
								{
									if(!indexSchema.Name.Contains("BusquedaRango"))
									{
										strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									}
									else
									{
										strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
										strInitFuncion+=",";
										strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
										break;
									}
								}
								count++;
							}
							strInitFuncion+=")throws Exception;";																																			
						}
					}
				}													
			}
								
			return strInitFuncion; 
		}
		
		

		
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n"+GetWebMethodAnnotationFromConWebServices()+" "+GetNombreClaseC(TablaBase.ToString())+" "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(DatosCliente datosCliente,";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						strInitFuncion+="\r\n"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente,";
						}
						else
						{
						strInitFuncion+="\r\n"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(DatosCliente datosCliente,";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
							//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								strInitFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
							}
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+=",";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
							}
							else
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
								strInitFuncion+=",";
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
								break;
							}
						}
						count++;
					}
					strInitFuncion+=")throws Exception;";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
		public String GetIndicesTablasClasesNative() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n"+GetWebMethodAnnotationFromConWebServices()+" "+GetNombreClaseC(TablaBase.ToString())+" "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+strNative+"WithConnection(DatosCliente datosCliente,";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						strInitFuncion+="\r\n"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente,";
						}
						else
						{
						strInitFuncion+="\r\n"+GetWebMethodAnnotationFromConWebServices()+" "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(DatosCliente datosCliente,";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
							
							//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								strInitFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
							}
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+=",";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
							}
							else
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
								strInitFuncion+=",";
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
								break;
							}
						}
						count++;
					}
					strInitFuncion+=")throws Exception;";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion=" TraerTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strInitFuncion=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					strInitFuncion=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
								
			return strFuncion; 
		}
		
public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}
public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		return strParamtro;
}
public string GetNombreClase(string strTablaBase)
{			
		return GetNombreClaseC(strTablaBase);
}
	
</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%=GetByDanLicence()%>
package <%=GetPackageFromConWebServices()%>;

<%if(blnTieneTimestamp){%>
import java.sql.Timestamp;
<%}%>
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import java.util.Date;


<%=GetImportSessionBeanPackages()%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.QueryWhereSelectParameters;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.DatosCliente;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.*;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.Pagination;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;<%=GetEsImportPaqueteReporteC(TablaBase,"import "+Empresa+"."+ Package+"."+strPackageBusiness+"."+strPackageEntities)%>
<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageEntities+GetEsPaqueteReporteC(TablaBase)+".*;")%>

import <%=GetPackageFromConWebServices()%>.<%=GetNombreClase(TablaBase.ToString())%>Additionable;

<%=GetSessionBeanAnnotation()%>
public interface <%=GetNombreClase(TablaBase.ToString())%>Implementable<%=GetSessionBeanSufijoLocal()%>// extends <%=GetNombreClase(TablaBase.ToString())%>Additionable 
{	 
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntity(Long <%=strId%>)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntity(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntity(String sFinalQuery,DatosCliente datosCliente)throws Exception;
<%if(blnNoStandardTableFromProperties){%>
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntityWithConnection(<%=strPorTablaColumnsPKParametrosSinComaPrimero%>) throws Exception;
<%}%>
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntities(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntities(String sFinalQuery,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesWithQuerySelect(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente)throws Exception;


<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntityNative(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception ;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntityNative(String sFinalQuery,DatosCliente datosCliente)throws Exception ;
<%if(blnNoStandardTableFromProperties){%>
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getEntityNativeWithConnection(<%=strPorTablaColumnsPKParametrosSinComaPrimero%>) throws Exception ;
<%}%>
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesNative(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesNative(String sFinalQuery,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesWithQuerySelectNative(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getTodos<%=GetNombreClase(TablaBase.ToString())%>sNativeWithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente)throws Exception;
<%}%>


<%=GetWebMethodAnnotationFromConWebServices()%>	void save<%=GetNombreClase(TablaBase.ToString())%>WithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> save<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> save<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;

<%//if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
<%=GetWebMethodAnnotationFromConWebServices()%>	void save<%=GetNombreClase(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase)%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> save<%=GetNombreClase(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase)%>,DatosCliente datosCliente)throws Exception;
<%//}%>
	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;

<%= GetIndicesTablasClases() %>

<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
<%= GetIndicesTablasClasesNative() %>
<%}%>
	
<%=GetWebMethodAnnotationFromConWebServices()%>	ArrayList<Classe> getClassesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(ArrayList<Classe> classesP,DeepLoadType deepLoadType)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	ArrayList<Classe> getClassesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(ArrayList<Classe> classesP,DeepLoadType deepLoadType)throws Exception;
	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception;		
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveWithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception;		
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception;		
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesWithConnectionWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception;		

	
/*
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoads(Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloTituloMensaje)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoad(Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloTituloMensaje)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSave(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloTituloMensaje)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloTituloMensaje)throws Exception;		
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaves(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloTituloMensaje)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloTituloMensaje)throws Exception;
*/

<%=GetWebMethodAnnotationFromConWebServices()%>	String getJson<%=GetNombreClase(TablaBase.ToString())%>(String sTipoJsonResponse,<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	String getJson<%=GetNombreClase(TablaBase.ToString())%>s(String sTipoJsonResponse,<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
	
<%if(GenerarTipoGeneracionC(strTipoGeneracionGetXmls,TiposGeneracion)) {%>
<%=GetWebMethodAnnotationFromConWebServices()%>	String getXml<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	String getXml<%=GetNombreClase(TablaBase.ToString())%>s(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%}%>


<%if(GenerarTipoGeneracionC(strTipoGeneracionMantenimientoClasesRelacionadas,TiposGeneracion)) {%>
<%=GetMaintenanceTablasClasesRelacionadas()%>
<%/*=GetMaintenanceTablasClasesRelacionadasDetalles()*/%>
<%}%>

<%if(GenerarTipoGeneracionC(strTipoGeneracionDeletesCascade,TiposGeneracion)) {%>
<%=GetWebMethodAnnotationFromConWebServices()%>	void deleteCascadeWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	void deletesCascadeWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%}%>
	
<%if(GenerarTipoGeneracionC(strTipoGeneracionCompuestos,TiposGeneracion)) {%>	
<%if(!GetEsReporteFromPropertiesC(TablaBase)){%>
<%= GetIndicesTablasClasesCompuesto() %> 
<%}%>	
<%}%>

<%if(GenerarTipoGeneracionC(strTipoGeneracionDeepForeignKey,TiposGeneracion)) {%>	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%}%>

	
<%if(GenerarTipoGeneracionC(strTipoGeneracionDeepRelationship,TiposGeneracion)) {%>	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;
	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%}%>	
	
<%if(GenerarTipoGeneracionC(strTipoGeneracionDeepForeignKeyAndRelatioship,TiposGeneracion)) {%>	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	void deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%=GetWebMethodAnnotationFromConWebServices()%>	<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception;	
<%}%>

<%if(TablasBaseForReporte!=null&&TablasBaseForReporte.Count>0){%>
<%= GetFuncionesTablasClasesReportes() %>	
<%}%>
}

<script runat="template">
//IMPLEMENTACIONES SOBRANTES
//<%=GetWebMethodAnnotationFromConWebServices()%>	void newInstance(<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionNuevoClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionNuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %>	<% } %>,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC)throws Exception;
//<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> newInstanceWithReturn(<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionNuevoClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionNuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %>	<% } %>,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC)throws Exception;	
//<%=GetWebMethodAnnotationFromConWebServices()%>	void update(<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionActualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionActualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC)throws Exception;
//<%=GetWebMethodAnnotationFromConWebServices()%>	<%=GetNombreClase(TablaBase.ToString())%> updateWithReturn(<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionActualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionActualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC)throws Exception;	
//<%=GetWebMethodAnnotationFromConWebServices()%>	void deleteWithConnection(Long <%=strId%>,Long <%=strId%><%=GetNombreClase(TablaBase.ToString())%>,String sUsuarioPC,String sNamePC,String sIPPC)throws Exception;

</script>
