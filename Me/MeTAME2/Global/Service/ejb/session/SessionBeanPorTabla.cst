<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII"%>    	
<%@ CodeTemplate Src="..\..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="TablasBaseForReporte" Type="SchemaExplorer.TableSchemaCollection" Category="Context" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="ConWebServices" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="TiposGeneracion" Type="System.String" Default=" " Category="Options" Description="Nombre de la Entidad" %>

<script runat="template">
public String GetListasParametroTablesRelacionadas(TableSchema table,bool soloLlamar) {
	String sTablaClaseRelacionada=String.Empty;
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
			
	String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strNombreAdicional="";
	
	/*
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	*/
	
	/*
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		//sTablaClaseRelacionada+=","+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {this.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";		
		strTipoLista="";
		
		if(!soloLlamar) {
			strTipoLista=strTypeCollection+"<"+GetNombreClase(tableSchema.ToString())+"> ";	
		}
		
		sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC(tableSchema.ToString())+"s";		
	}
	*/
	
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {								
		strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		strTipoLista="";
		
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			if(!soloLlamar) {
				strTipoLista=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" ";	
			}
		
			sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";		
		
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
			if(!soloLlamar) {
				strTipoLista=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> ";	
			}
			
			sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";		
		}
	}
			
	return sTablaClaseRelacionada;
}

public String GetFuncionesTablasClasesReportes() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
				strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
				strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
				strEndFuncion+="";
			strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{	
				if(!ConWebServices){
				strFuncion+="\r\n\r\n\t@PermitAll";};
				strFuncion+="\r\n\tpublic  "+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithQuerySelect(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {";	
				strFuncion+="\r\n\t\t"+GetNombreClase(TablaBase.ToString())+"Logic "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic=new "+GetNombreClase(TablaBase.ToString())+"Logic();";
					
				strFuncion+="\r\n\r\n\t\ttry {";		
				strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";
				strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(sQuerySelect,queryWhereSelectParameters);";						    	       	 
						
				strFuncion+="\r\n\r\n\t\t} catch(Exception e) {";	
				strFuncion+="\r\n\t\t\tFuncionesEjb.manageException(logger,e);";
				strFuncion+="\r\n\t\t\tthrow e;";
						
				strFuncion+="\r\n\r\n\t\t}";
					
				strFuncion+="\r\n\r\n\t\treturn "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseForReporte[i].ToString())+"s();";
				strFuncion+="\r\n\t}";
			
			
			if(!ConWebServices){
				strFuncion+="\r\n\r\n\t@PermitAll";}
				strFuncion+="\r\n\tpublic  "+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithQuerySelectNative(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {";	
				strFuncion+="\r\n\t\t"+GetNombreClase(TablaBase.ToString())+"Logic "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic=new "+GetNombreClase(TablaBase.ToString())+"Logic();";
					
				strFuncion+="\r\n\r\n\t\ttry {";			
				strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";
				strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(sQuerySelect,queryWhereSelectParameters);";						    	       	 
						
				strFuncion+="\r\n\r\n\t\t} catch(Exception e) {";	
				strFuncion+="\r\n\t\t\tFuncionesEjb.manageException(logger,e);";
				strFuncion+="\r\n\t\t\tthrow e;";
						
				strFuncion+="\r\n\r\n\t\t}";
					
				strFuncion+="\r\n\r\n\t\treturn "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseForReporte[i].ToString())+"s();";
				strFuncion+="\r\n\t}";
		
				//strFuncion+="\r\n\r\n\t"+GetWebMethodAnnotationFromConWebServices()+"	"+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> "+"getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithQuerySelect(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;";
				//strFuncion+="\r\n\t"+GetWebMethodAnnotationFromConWebServices()+"	"+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> "+"getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithQuerySelectNative(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception;";
		
			}
								
			return strFuncion; 
	}
	
	
public String GetConEjbServiceTableFromProperties() 
{
	String strFuncion=string.Empty;		
	bool blnConEjbService=GetConEjbServiceTableFromPropertiesC(TablaBase);
	
	if(!blnConEjbService) {
		strFuncion="//";
	}
	
	return strFuncion;
}
public String GetImportSessionBeanPackages() 
{
	String strFuncion=string.Empty;			
	strFuncion="import java.rmi.RemoteException;";
	
	strFuncion+="\r\nimport javax.ejb.Stateless;";
	strFuncion+="\r\nimport java.rmi.RemoteException;";
	strFuncion+="\r\nimport org.jboss.ejb3.annotation.LocalBinding;";
	strFuncion+="\r\nimport org.jboss.ejb3.annotation.RemoteBinding;";
	strFuncion+="\r\nimport javax.interceptor.Interceptors;";
	strFuncion+="\r\nimport javax.annotation.security.PermitAll;";

	if(ConWebServices)
	{
		strFuncion+="\r\nimport javax.jws.WebService;";
		strFuncion+="\r\nimport javax.jws.soap.SOAPBinding;";
		strFuncion+="\r\nimport javax.jws.soap.SOAPBinding.Style;";
	}
			
			
	return strFuncion;
}
		
public string GetPackageFromConWebServicesWebService()
{	
	String strPackageFromConWebServices="";
	
	if(!ConWebServices) {
		strPackageFromConWebServices=Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbSession;
	
	} else {
		strPackageFromConWebServices=Empresa+"."+Package+"."+Module+strPackageService+"."+strPackageWebServicePrefix+"."+strPackageWebService;
	}
	
	return strPackageFromConWebServices;
}

public string GetPackageFromConWebServices()
{	
	String strPackageFromConWebServices="";
	
	if(!ConWebServices) {
		strPackageFromConWebServices=Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface;
	
	} else {
		strPackageFromConWebServices=Empresa+"."+Package+"."+Module+strPackageService+"."+strPackageWebServicePrefix+"."+strPackageWebServiceInterface;
	}
	
	return strPackageFromConWebServices;
}

public string GetHomeRemoteNameFromConWebServices()
{	
	String strHomeRemoteNameFromConWebServices="";
	
	if(!ConWebServices) {
		strHomeRemoteNameFromConWebServices="HomeRemote";
	
	} else {
		strHomeRemoteNameFromConWebServices="Remote";
	}
	
	return strHomeRemoteNameFromConWebServices;
}

public String GetAddClassesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				strTablaClaseRelacionada+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ ".class));";
								
				/*
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
				*/
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetAddClassesRelacionadasInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				//strTablaClaseRelacionada+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ ".class));";
				
				strTablaClaseRelacionada+="\r\n\t\t\t\tfor(Classe clas:classesP)";
				strTablaClaseRelacionada+=" {\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))";
				strTablaClaseRelacionada+=" {\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));";
				strTablaClaseRelacionada+="\r\n\t\t\t\t\t}\r\n";
				strTablaClaseRelacionada+="\t\t\t\t}\r\n";
				/*
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
				*/
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetAddClassesRelacionadasExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			bool blnExiste=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				//strTablaClaseRelacionada+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ ".class));";
				if(!blnExiste)
				{
					blnExiste=true;
				}
				
						
				strTablaClaseRelacionada+="\r\n\t\t\t\tfor(Classe clas:classesP)";
				strTablaClaseRelacionada+=" {\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))";
				strTablaClaseRelacionada+=" {\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\t\texiste=true;\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\t\tbreak;\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\t}\r\n";
				strTablaClaseRelacionada+="\t\t\t\t}\r\n";
						
				strTablaClaseRelacionada+="\r\n\t\t\t\tif(!existe)";
				strTablaClaseRelacionada+=" {\r\n";
				strTablaClaseRelacionada+="\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));";
				strTablaClaseRelacionada+="\r\n\t\t\t\t}\r\n";
			}
			
			if(blnExiste)
			{
				strTablaClaseRelacionada="\r\n\t\t\t\tBoolean existe=false;\r\n"+strTablaClaseRelacionada;			
			}
			
			return strTablaClaseRelacionada; 
		}
		
public String GetAddClassesForeignKey()
	{
		String strClassesForeignKey=string.Empty;
		TableSchema	tableSchema;
		
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
										
					if(columnSchema.IsForeignKeyMember)
					{
						tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
						strClassesForeignKey+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchema.ToString())+".class));";
					}
				}
				
		return strClassesForeignKey;
	}

public String GetAddClassesForeignKeyInclude()
	{
		String strClassesForeignKey=string.Empty;
		TableSchema	tableSchema;
		
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
										
					if(columnSchema.IsForeignKeyMember)
					{
						tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
						
						strClassesForeignKey+="\r\n\t\t\t\tfor(Classe clas:classesP)";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchema.ToString())+".class))";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchema.ToString())+".class));";
						strClassesForeignKey+="\r\n\t\t\t\t\t}\r\n";
						strClassesForeignKey+="\t\t\t\t}\r\n";
					}
				}
				
		return strClassesForeignKey;
	}

public String GetAddClassesForeignKeyExclude()
	{
		String strClassesForeignKey=string.Empty;
		TableSchema	tableSchema;
		bool blnExiste=false;
		
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
										
					if(columnSchema.IsForeignKeyMember)
					{
						if(!blnExiste)
						{
							blnExiste=true;
						}
						
						tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
						
						strClassesForeignKey+="\r\n\t\t\t\tfor(Classe clas:classesP)";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchema.ToString())+".class))";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\t\texiste=true;\r\n";
						strClassesForeignKey+="\t\t\t\t\t\tbreak;\r\n";
						strClassesForeignKey+="\t\t\t\t\t}\r\n";
						strClassesForeignKey+="\t\t\t\t}\r\n";
						
						strClassesForeignKey+="\r\n\t\t\t\tif(!existe)";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchema.ToString())+".class));";
						strClassesForeignKey+="\r\n\t\t\t\t}\r\n";
					}
				}
		
		if(blnExiste)
		{
			strClassesForeignKey="\r\n\t\t\t\tBoolean existe=false;\r\n"+strClassesForeignKey;			
		}
		
		return strClassesForeignKey;
	}
	
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String strFuncion=string.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			strFuncion+="\r\n\r\n\tpublic String getXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s("+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)throws Exception";
			strFuncion+=" {";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablaBase.ToString())+"Logic "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic= new "+GetNombreClase(TablaBase.ToString())+"Logic();";
			strFuncion+="\r\n\t\tString strXml"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s=\"\";";
			/*
			strFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			strFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			strFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
			*/	
			strFuncion+="\r\n\t\ttry"; 
			strFuncion+=" {";
			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s);";			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.getXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
			
			/*
			strFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			strFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\");";
			strFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\");";	    
				
			strFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			strFuncion+=" {";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.deepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				strFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			strFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\");";			
			strFuncion+="\r\n\t\t\t\t}\r\n";
					
			strFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\");";
					
			strFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			*/
			strFuncion+="\r\n\r\n\t\t}"; 
			strFuncion+=" catch(Exception e)"; 
			strFuncion+=" {";
			//strFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();\r\n\t\t\tFunciones.logShowExceptionMessages(e);";
			strFuncion+="\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;";
			strFuncion+="\r\n\t\t}";
			/*
			strFuncion+=" finally";
			strFuncion+=" {";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			strFuncion+="\r\n\t\t}";
				
			strFuncion+="\r\n\t\t\treturn Funciones.validarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getStrTableName());";
			*/
			strFuncion+="\r\n\t\treturn strXml"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s;";
			strFuncion+="\r\n\t}";
		}
	}
	
	return strFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				strInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">"+strTypeNewCollectionEnd+";" ;																
																																																		
				}													
			}
								
			return strInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strInitFuncion+="\r\n\tprivate "+""+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
					/*																																			
					strInitFuncion+="\r\n\r\n\tpublic "+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s("+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
					*/					
				}													
			}
								
			return strInitFuncion; 
		}

public String GetDefinicionVariableClasesCompuestosGetSet() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					/*
					strInitFuncion+="\r\n\tprivate "+""+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
					*/																																			
					strInitFuncion+="\r\n\r\n\tpublic "+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s("+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return strInitFuncion; 
	}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strParametroCompuesto="";
				strParametroCompuesto+="";
			String strParametroCompuesto2="";
				strParametroCompuesto2+="";
			String strParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";
				strParametroCompuestoFinal2+="";
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					/*
							strParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							strParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							strParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							strParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							strParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";
					*/
							strInitFuncion+="\r\n\tpublic  "+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws Exception"; 
							strInitFuncion+=" {\r\n\t\t";
							strInitFuncion+=""+GetNombreClaseC(TablaBase.ToString())+"Logic "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClaseC(TablaBase.ToString())+"Logic();";
							strInitFuncion+="\r\n\t\ttry {\r\n\t\t\t";//\r\n\t\t\tconnexion=Connexion.getNewConnexion();";		
							//strInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							//strInitFuncion+=strParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//strInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);\r\n\t\t\t";
							strInitFuncion+=GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+");";												
							strInitFuncion+="\r\n\t\t} catch(SQLException e) {";
							strInitFuncion+="\r\n\t\t\tthrow e;\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}";	
							strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";						
							strInitFuncion+="\r\n\t}\r\n";
							
							String strFinalQuery="";

					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						
						

						
						if(!indexSchema.IsPrimaryKey)
						{
							
						
							strParametersFuncion="";
							strParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
								strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									strInitFuncion+="\r\n\tpublic "+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									strInitFuncion+="\r\n\tpublic "+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								strBodyFuncion="\r\n\t\t"+GetNombreClaseC(TablaBase.ToString())+"Logic "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClaseC(TablaBase.ToString())+"Logic();";							
								strBodyFuncion+="\r\n\t\ttry {";
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									/*
									strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
									
									strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
									*/		
								}
								else
								{
									/*
									strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									
									strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									strBodyFuncion+="\r\n\r\n\t\t\t"+strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
									*/
								}
								
								strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}";
								strEndFuncion+="\r\n\t\treturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";						
								strEndFuncion+="\r\n\t}\r\n";
								
							}	
							int count=1;	
							strParametersFuncion="";
							strParametersNameFuncion="";	
							strParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
											
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										//strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							if(indexSchema.IsUnique) {
								strFinalQuery="";
							} else {
								strFinalQuery="sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+",";
							}

							strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion+strFinalQuery+strParametersNameFuncion+");\r\n"/*+strParametersNameFuncion+");"*/+strEndFuncion+" ";																																			
						}
					}
				}													
			}
								
			return strInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas(bool blnConReturn) 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionada3="";
			
			String strTypeReturn="void";
			String strReturn="";
			String strNameWithReturn="";
			
			if(blnConReturn) {
				strNameWithReturn="WithReturn";
				strTypeReturn=GetNombreClase(TablaBase.ToString());
				strReturn="\r\n\t\treturn "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablaBase.ToString())+"();";
			}
			
			String strFuncionInit="\r\n\tpublic "+strTypeReturn+" save"+GetNombreClase(TablaBase.ToString())+"Relaciones"+strNameWithReturn+"("+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString())+",DatosCliente datosCliente";
			String strFuncionMiddle=")throws Exception {";
			strFuncionMiddle+="\r\n\t\t"+ GetNombreClase(TablaBase.ToString())+"Logic "+GetNombreClaseObjeto(TablaBase.ToString())+"Logic=new "+ GetNombreClase(TablaBase.ToString())+"Logic();\r\n\t";
			strFuncionMiddle+="\r\n\t\ttry {\r\n\t\t\t";//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			strFuncionMiddle+=GetNombreClaseObjeto(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);\r\n\t\t\t";			
			strFuncionMiddle+=GetNombreClaseObjeto(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"Relaciones("+GetNombreClaseObjetoC(TablaBase.ToString());
			String strFuncionEnd="\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\r\n\t\t}"+strReturn+"\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
				}
			}
			
			arrayListRelaciones=new ArrayList();
			strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
			
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			
			/*
			strTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
					
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsdeleted()"+")";
			strTablaClaseRelacionada2+=" {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sHostName,sHostIp);";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sHostName,sHostIp"+strTablaClaseRelacionada3+");";
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\t}";
			strTablaClaseRelacionada2+=" else if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsdeleted())";
			strTablaClaseRelacionada2+=" {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sHostName,sHostIp"+strTablaClaseRelacionada3+");";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sHostName,sHostIp);";
			strTablaClaseRelacionada2+="\r\n\t\t\t}";
			*/
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada3+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String strTablaClaseRelacionada="";
			String strFuncionInit="\r\n\tpublic void save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(";
			String strFuncionMiddle=")throws Exception {\r\n";
			strFuncionMiddle+="\t\ttry {\r\n\t";
			String strFuncionEnd="\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.logShowExceptionMessages(e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			
			bool blnExisteDetalles=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					blnExisteDetalles=true;
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null) {";										
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,sUsuarioPC,sHostName,sHostIp);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					blnExisteDetalles=true;
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s()) {";					
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".setField_"+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,sUsuarioPC,sHostName,sHostIp);";
				}
			}
			
			if(blnExisteDetalles)
			{
				strTablaClaseRelacionada2="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();"+strTablaClaseRelacionada2;
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysisDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysisDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;							
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadasave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {"+ strTablaClaseRelacionadasave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysisDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;						
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Classe clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadasave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {"+ strTablaClaseRelacionadasave+"\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;							
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadasave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {"+ strTablaClaseRelacionadasave+strTablaClaseRelacionadaLogicisDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoisDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;	
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			String strTablaClaseRelacionadaLogic=string.Empty;
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();	
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadasave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor+"\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {"+ strTablaClaseRelacionadasave+strTablaClaseRelacionadaLogicisDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysisDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysisDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysisDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n"+ strTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicisDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoisDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicisDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="classes.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesisDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String strInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(DeepLoadType.equals(DeepLoadType.NONE)) {\r\n";
			String strInitInclude="\telse if(DeepLoadType.equals(DeepLoadType.INCLUDE)) {\r\n";
			String strInitExclude="\telse if(DeepLoadType.equals(DeepLoadType.EXCLUDE)) {\r\n";
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			String strInitIfClass="\r\n\t\t\tif(clas.clas.equals(";
			
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
            strTablaClaseRelacionada2="\r\nelse {"+strInitNone +SetClasesRelacionadasForeigKeysNoisDeepSaveBeep();
			
			strFuncionInclude="";
			strFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+="\r\n"+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//strTablaClaseRelacionada+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
			
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoisDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoisDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			// parte del no if isDeep
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion=strInit+"\r\nif(!isDeep) {\r\n";
			strInitElseFuncion="\r\n}\r\nelse {\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0=strInitNone+ SetClasesRelacionadasForeigKeysisDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+="\r\n"+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//strTablaClaseRelacionada+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {";
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//strTablaClaseRelacionada+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strTablaClaseRelacionada0+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysisDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysisDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			
			strIfFuncion=strInitIfFuncion+strTablaClaseRelacionada0+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesisDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(DeepLoadType.equals(DeepLoadType.NONE)) {\r\n\r\n";
			String strInitInclude="\telse if(DeepLoadType.equals(DeepLoadType.INCLUDE)) {\r\n";
			String strInitExclude="\telse if(DeepLoadType.equals(DeepLoadType.EXCLUDE)) {\r\n";
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			String strInitIfClass="\r\n\t\t\tif(clas.clas.equals(";
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
            strTablaClaseRelacionada2="\r\nelse {\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoisDeepLoadBeep();
			
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),isDeep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//strTablaClaseRelacionada+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;		
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";
					strFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}\r\n";
				strFuncionExclude+="\t\t}";
				
			}
			
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoisDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoisDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			
			//Parte del no if del isDeep
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			strFuncion=string.Empty;
			
			strTablaClaseRelacionada=string.Empty;
			strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion="\r\nif(!isDeep) {\r\n";
			strInitElseFuncion="\r\nelse {\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			strFuncion=strInitNone+ SetClasesRelacionadasForeigKeysisDeepLoadBeep();
			strFuncionInclude="";
			strFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
			strFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysisDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysisDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String strParaBusquedaString=""; 
			String strParaBusquedaCompuesto=""; 
			
			if(esCompuesto)
			{
				strParaBusquedaCompuesto="Constantes.getStrSchema()+\".\"+"+GetNombreClase(column.Table.ToString())+".getStrTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				if(!esUnico)	
				{
				strParaBusquedaString="+\"%\"";
				}
			}
			
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+strParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+column.Name+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String strIndexName) 
		{
			String strParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				strParaBusquedaString="+\"%\"";
			}
			
			String strParameterSelection=String.Empty;
			
			if(!strIndexName.Contains("BusquedaRango"))
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(strIndexName.Contains("BusquedaMayorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMayor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				strParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				strParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return strParameterSelection;
		}
		
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strFinalQuery="";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						if(!ConWebServices){
						strInitFuncion+="\r\n\t@PermitAll";}
						
						strInitFuncion+="\r\n\tpublic "+GetNombreClaseC(TablaBase.ToString())+" "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(DatosCliente datosCliente,";
						strBodyFuncion="\r\n\t\t"+GetNombreClaseC(TablaBase.ToString())+"Logic "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClaseC(TablaBase.ToString())+"Logic();";
						strBodyFuncion+="\r\n\t\ttry {";// .setDatosCliente(datosCliente);
						strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";						
						strEndBodyFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}";
						strEndFuncion+="\r\n\t\treturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"();";
						strEndFuncion+="\r\n\t}\r\n";
					}
					else
					{
						if(!ConWebServices){
						strInitFuncion+="\r\n\t@PermitAll";}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(DatosCliente datosCliente,";
						}
						strBodyFuncion="\r\n\t\t"+GetNombreClaseC(TablaBase.ToString())+"Logic "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClaseC(TablaBase.ToString())+"Logic();";			
						strBodyFuncion+="\r\n\t\ttry {";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
							strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";						
							strEndBodyFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(sFinalQuery,pagination,";
						
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";						
							strEndBodyFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
						
						}
						
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}";
						strEndFuncion+="\r\n\t\treturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s();";
						strEndFuncion+="\r\n\t}\r\n";
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								} else {
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strParametersFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
										strParametersNameFuncion+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
									}	
								}
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								//strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					if(indexSchema.IsUnique) {
						strFinalQuery="";
					} else {
						strFinalQuery="";//"sFinalQuery,";
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion+strFinalQuery+strParametersNameFuncion+");\r\n"/*+strParametersNameFuncion+");"*/+strEndFuncion+"";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
		public String GetIndicesTablasClasesNative() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strFinalQuery="";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						if(!ConWebServices){
						strInitFuncion+="\r\n\t@PermitAll";}
						
						strInitFuncion+="\r\n\tpublic "+GetNombreClaseC(TablaBase.ToString())+" "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+strNative+"WithConnection(DatosCliente datosCliente,";
						strBodyFuncion="\r\n\t\t"+GetNombreClaseC(TablaBase.ToString())+"Logic "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClaseC(TablaBase.ToString())+"Logic();";
						strBodyFuncion+="\r\n\t\ttry {";// .setDatosCliente(datosCliente);
						strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";						
						strEndBodyFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+strNative+"WithConnection(";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}";
						strEndFuncion+="\r\n\t\treturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"();";
						strEndFuncion+="\r\n\t}\r\n";
					}
					else
					{
						if(!ConWebServices){
						strInitFuncion+="\r\n\t@PermitAll";}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(DatosCliente datosCliente,";
						}
						strBodyFuncion="\r\n\t\t"+GetNombreClaseC(TablaBase.ToString())+"Logic "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClaseC(TablaBase.ToString())+"Logic();";			
						strBodyFuncion+="\r\n\t\ttry {";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
							strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";						
							strEndBodyFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(sFinalQuery,pagination,";
						
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							strEndBodyFuncion="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";						
							strEndBodyFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(";
						
						}
						
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFuncionesEjb.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}";
						strEndFuncion+="\r\n\t\treturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s();";
						strEndFuncion+="\r\n\t}\r\n";
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								} else {
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strParametersFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
										strParametersNameFuncion+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
									}	
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								//strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					if(indexSchema.IsUnique) {
						strFinalQuery="";
					} else {
						strFinalQuery="";//"sFinalQuery,";
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion+strFinalQuery+strParametersNameFuncion+");\r\n"/*+strParametersNameFuncion+");"*/+strEndFuncion+"";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
		public String GetIndicesTablasClasesDeReporte() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			String strQueryChange=String.Empty;
			String strGetFunctionLoadRelaciones=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
						strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						strQueryChange="\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.GetQuery"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(queryWhereSelectParameters,";
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						strEndBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.CargarTablasRelaciones"+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+");";						
						strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.logShowExceptionMessages(e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
					}

					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
							strQueryChange="\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.GetQuery"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(queryWhereSelectParameters,sFinalQuery,";
							strGetFunctionLoadRelaciones="\r\n\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.CargarTablasRelaciones"+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,";
						}

						else
						{
							strInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strQueryChange="\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.GetQuery"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(queryWhereSelectParameters,";
							strGetFunctionLoadRelaciones="\r\n\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.CargarTablasRelaciones"+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,";
						}
						
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						strEndBodyFuncion+=strGetFunctionLoadRelaciones+"BYDANCODE1";
						strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.logShowExceptionMessages(e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+/*strParameterSelection+*/strQueryChange+strParametersNameFuncion+");"+strEndBodyFuncion.Replace("BYDANCODE1",strParametersNameFuncion+");")/*+strParametersNameFuncion+");"*/+strEndFuncion+"";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n}\r\ncatch(Exception e)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ ""+strTypeNewCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public  string GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	

	strSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	strSetEntity+="\t\t\t\tauditoria.setField_strCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	strSetEntity+="\t\t\t\tstrValorActual=null;\r\n";
	strSetEntity+="\t\t\t\tstrValorNuevo=null;\r\n\r\n";
	
	strSetEntity+="\t\t\t\tif("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()!=null)\r\n\t\t\t\t{\r\n";
	strSetEntity+="\t\t\t\t\tstrValorActual="+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+";\r\n";
	strSetEntity+="\t\t\t\t}\r\n";
	
	strSetEntity+="\t\t\t\tif("+ GetNombreClaseObjetoC(TablaBase.ToString())+".get"+ GetNombreCompletoColumnaClaseC(column)+ "()!=null)\r\n\t\t\t\t{\r\n";
	strSetEntity+="\t\t\t\t\tstrValorNuevo="+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " ;\r\n";
	strSetEntity+="\t\t\t\t}\r\n\r\n";
	
	strSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegistrarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),strValorActual,strValorNuevo);";
	strSetEntity+="\r\n\t\t\t}";
	
	return strSetEntity;
}

public static string GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String strSetEntity=string.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return strSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return strSetEntity;
		}
	}
	//usuario.setClave(strClave);
	String strEntityInit="";//GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal="";//");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}

public String getClassesSetAddTablasRelacionadas() 
{
			String strTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\t\t\tclasses.add(new Classe("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class));";									
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetdelete() 
{
			String strTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						strTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsdeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsdeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return strTablaClaseRelacionada; 
}


</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%=GetByDanLicence()%>
package <%=GetPackageFromConWebServicesWebService()%>;

import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
<%if(blnTieneTimestamp){%>
import java.sql.Timestamp;
<%}%>
import java.sql.SQLException;
import java.util.Date;

import org.apache.log4j.Logger;

<%=GetImportSessionBeanPackages()%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.Constantes;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.DatosCliente;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%= strPackageService%>.<%= strEjb%>.AuditoriaInterceptor;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageUtils%>.<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%>.<%=GetNombreClase(TablaBase.ToString())%>;<%=GetEsImportPaqueteReporteC(TablaBase,"import "+Empresa+"."+ Package+"."+strPackageBusiness+"."+strPackageEntities)%>
<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageEntities+GetEsPaqueteReporteC(TablaBase)+".*;")%>

import <%=GetPackageFromConWebServices()%>.<%=GetNombreClase(TablaBase.ToString())%>Implementable;
<%if(!ConWebServices){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageService%>.<%= strEjb%>.<%= strEjbInterface%>.<%=GetNombreClase(TablaBase.ToString())%>ImplementableHome;<%}%>
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageBusiness%>.<%= strPackageLogic%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageLogic%>.<%=GetNombreClase(TablaBase.ToString())%>Logic;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageLogic%>.<%=GetNombreClase(TablaBase.ToString())%>LogicAdditional;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageDataAccess%>.*;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageUtils%>.*;
<%if(TieneClasesRelacionadasOForeignKeyC(TablaBase)){%>import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%>.*;<% } %>
//import <%=Empresa%>.<%= strPackageAuditoria%>.<%= strPackageBusiness%>.<%= strPackageEntities%>.*;
//import <%=Empresa%>.<%= strPackageAuditoria%>.<%= strPackageBusiness%>.<%= strPackageLogic%>.*;

//PARA EJB ON HTTP
//clientBindUrl = "http://localhost:80/servlet-invoker/ServerInvokerServlet",
//default clientBindUrl ="socket://0.0.0.0:3873"

<%=GetConEjbServiceTableFromProperties()%>@Stateless
<%if(ConWebServices){%>@WebService(endpointInterface="<%=GetPackageFromConWebServices()%>.<%=GetNombreClase(TablaBase.ToString())%>Implementable")<%}else{%>@LocalBinding(jndiBinding=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SLOCALEJBNAME)//"<%= Package%>/<%=GetNombreClase(TablaBase.ToString())%><%=GetHomeRemoteNameFromConWebServices()%>/local"
@RemoteBinding(clientBindUrl=Constantes.SCLIENTBINDURL,jndiBinding=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SREMOTEEJBNAME)//remote
@Interceptors({AuditoriaInterceptor.class})
@PermitAll
<%}%>
public class <%=GetNombreClase(TablaBase.ToString())%><%=GetHomeRemoteNameFromConWebServices()%> implements <%=GetNombreClase(TablaBase.ToString())%>Implementable <%if(!ConWebServices){%>,<%=GetNombreClase(TablaBase.ToString())%>ImplementableHome<%}%> {				
	private static Logger logger = Logger.getLogger(<%=GetNombreClase(TablaBase.ToString())%><%=GetHomeRemoteNameFromConWebServices()%>.class);
	
	<%if(!ConWebServices){%>
	//EntityManager and Factory in EJB
	//@PersistenceContext(unitName="PersistenceName")
	//EntityManager em;
	//@PersistenceContext(unitName="PersistenceName")
	//EntityManagerFactory emf;
	<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%><%=GetHomeRemoteNameFromConWebServices()%>()throws Exception {
		try	{
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
		}	 
    }
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntity(Long id) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityWithConnection(id);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	
	<%if(blnNoStandardTableFromProperties){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntityWithConnection(<%=strPorTablaColumnsPKParametrosSinComaPrimero%>) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityWithConnection(<%=strPorTablaColumnsPKParametrosUsoSinComaPrimero%>);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	<%}%>

	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntity(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityWithConnection(queryWhereSelectParameters);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntity(String sFinalQuery,DatosCliente datosCliente) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityWithConnection(sFinalQuery);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	
	<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntityNative(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityNativeWithConnection(queryWhereSelectParameters);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntityNative(String sFinalQuery,DatosCliente datosCliente) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityNativeWithConnection(sFinalQuery);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	
	<%if(blnNoStandardTableFromProperties){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=GetNombreClase(TablaBase.ToString())%> getEntityNativeWithConnection(<%=strPorTablaColumnsPKParametrosSinComaPrimero%>) throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
  		  
        try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntityNativeWithConnection(<%=strPorTablaColumnsPKParametrosUsoSinComaPrimero%>);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
    }
	<%}%>
	<%}%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntities(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {		  
        <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesWithConnection(queryWhereSelectParameters);					
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntities(String sFinalQuery,DatosCliente datosCliente)throws Exception {		  
        <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesWithConnection(sFinalQuery);					
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	
	<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesNative(QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {		  
        <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesNativeWithConnection(queryWhereSelectParameters);					
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesNative(String sFinalQuery,DatosCliente datosCliente)throws Exception {		  
        <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesNativeWithConnection(sFinalQuery);					
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	
	<%}%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesWithQuerySelect(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
        
		try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesWithConnection(sQuerySelect,queryWhereSelectParameters);						    	       	 
			
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;
			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	
	<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesWithQuerySelectNative(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
        
		try {			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesNativeWithConnection(sQuerySelect,queryWhereSelectParameters);						    	       	 
			
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;
			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	<%}%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesSimpleQueryBuild(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();			  		  
        
		try {							
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesSimpleQueryBuildWithConnection(sQuerySelect,queryWhereSelectParameters);			
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	
	<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getEntitiesSimpleQueryBuildNative(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();			  		  
        
		try {							
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntitiesSimpleQueryBuildNativeWithConnection(sQuerySelect,queryWhereSelectParameters);			
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
    }
	<%}%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>>  getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente)throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();			
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(sFinalQuery,pagination);
				
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;
			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();	     
	}
	
	<%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public  <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>>  getTodos<%=GetNombreClase(TablaBase.ToString())%>sNativeWithConnection(String sFinalQuery,Pagination pagination,DatosCliente datosCliente)throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();			
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getTodos<%=GetNombreClase(TablaBase.ToString())%>sNativeWithConnection(sFinalQuery,pagination);
				
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;
			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();	     
	}
	<%}%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void save<%=GetNombreClase(TablaBase.ToString())%>WithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.save<%=GetNombreClase(TablaBase.ToString())%>WithConnection();	
									
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> save<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {		
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.save<%=GetNombreClase(TablaBase.ToString())%>WithConnection();	
									
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {				
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
					
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> save<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {				
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
					
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%//if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void save<%=GetNombreClase(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false)%>,DatosCliente datosCliente)throws Exception {				
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

		try {	
			//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.save<%=GetNombreClase(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true)%>);
					
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
	}
		
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> save<%=GetNombreClase(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false)%>,DatosCliente datosCliente)throws Exception {				
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

		try {	
			//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.save<%=GetNombreClase(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true)%>);
					
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	<%//}%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {		
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>WithConnection();	
									
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}	


	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {				
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
					
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public ArrayList<Classe> getClassesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(ArrayList<Classe> classesP,DeepLoadType deepLoadType)throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		ArrayList<Classe> classes=new ArrayList<Classe>();	
			
		try {		
			classes=<%=GetNombreClase(TablaBase.ToString())%>Logic.getClassesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(classesP,deepLoadType);
				
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
		}
		
		return classes;
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public ArrayList<Classe> getClassesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(ArrayList<Classe> classesP,DeepLoadType deepLoadType)throws Exception {
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		try {
			classes=<%=GetNombreClase(TablaBase.ToString())%>Logic.getClassesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
		}
		
		return classes;
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception {		
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadWithConnection(isDeep,deepLoadType,clases,sTituloMensaje);		
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
  		}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception {		
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsWithConnection(isDeep,deepLoadType,clases,sTituloMensaje);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
  		}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception {		
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveWithConnection(isDeep,deepLoadType,clases,sTituloMensaje);		
			
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;			
  		}
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepSaveWithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception {		
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveWithConnection(isDeep,deepLoadType,clases,sTituloMensaje);		
			
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;			
  		}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception {		
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesWithConnection(isDeep,deepLoadType,clases,sTituloMensaje);			
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
  		}
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesWithConnectionWithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,Boolean isDeep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje,DatosCliente datosCliente)throws Exception {		
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesWithConnection(isDeep,deepLoadType,clases,sTituloMensaje);			
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
  		}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}

	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public String getJson<%=GetNombreClase(TablaBase.ToString())%>(String sTipoJsonResponse,<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
	    String strJson<%=GetNombreClase(TablaBase.ToString())%>="";
		
	    try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			strJson<%=GetNombreClase(TablaBase.ToString())%>=<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getJson<%=GetNombreClase(TablaBase.ToString())%>(sTipoJsonResponse);	
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}
		
		return strJson<%=GetNombreClase(TablaBase.ToString())%>;	
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public String getJson<%=GetNombreClase(TablaBase.ToString())%>s(String sTipoJsonResponse,<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		String strJson<%=GetNombreClase(TablaBase.ToString())%>s="";
		
	    try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			strJson<%=GetNombreClase(TablaBase.ToString())%>s=<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getJson<%=GetNombreClase(TablaBase.ToString())%>s(sTipoJsonResponse);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}
		
		return strJson<%=GetNombreClase(TablaBase.ToString())%>s;
	}
	
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionGetXmls,TiposGeneracion)) {%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public String getXml<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
	    String strXml<%=GetNombreClase(TablaBase.ToString())%>="";
		
	    try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			strXml<%=GetNombreClase(TablaBase.ToString())%>=<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getXml<%=GetNombreClase(TablaBase.ToString())%>();	
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}
		
		return strXml<%=GetNombreClase(TablaBase.ToString())%>;	
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public String getXml<%=GetNombreClase(TablaBase.ToString())%>s(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		String strXml<%=GetNombreClase(TablaBase.ToString())%>s="";
		
	    try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			strXml<%=GetNombreClase(TablaBase.ToString())%>s=<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getXml<%=GetNombreClase(TablaBase.ToString())%>s();
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}
		
		return strXml<%=GetNombreClase(TablaBase.ToString())%>s;
	}
	<%}%>
	
	
	<%if(!GetEsReporteFromPropertiesC(TablaBase)){%>
	<%if(GenerarTipoGeneracionC(strTipoGeneracionCompuestos,TiposGeneracion)) {%>
	<%if(GenerarTipoGeneracionC(strTipoGeneracionGetXmls,TiposGeneracion)) {%>
	<%=GetXmlFuncionesClasesCompuestos()%> 
	<%}%>
	<%}%>
	<%}%>
	
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionMantenimientoClasesRelacionadas,TiposGeneracion)) {%>
	
	<%=GetMaintenanceTablasClasesRelacionadas(false) %>
	
	<%=GetMaintenanceTablasClasesRelacionadas(true) %>
	
	<%}%>
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionDeletesCascade,TiposGeneracion)) {%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deleteCascadeWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente) throws Exception {	
		//AuditoriaLogic auditoriaLogic= new AuditoriaLogic(); 
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

	    try {
	    	<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deleteCascadeWithConnection();
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
      	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deletesCascadeWithConnection(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente) throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deletesCascadeWithConnection();
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
      	}
	}
	<%}%>
	
	
	<%if(!GetEsReporteFromPropertiesC(TablaBase)){%>
	<%= GetIndicesTablasClases() %>
	<%if(GenerarTipoGeneracionC(strTipoGeneracionCompuestos,TiposGeneracion)) {%>
	<%= GetIndicesTablasClasesCompuestos() %>
	<%}%>
	<%}else{%>
	<%= GetIndicesTablasClasesDeReporte() %>
	<%}%>
	
	
    <%if(GetEsReporteFromPropertiesC(TablaBase)||GetEsNativeFromPropertiesC(TablaBase)){%>
	<%= GetIndicesTablasClasesNative() %>
	<%}%>
	
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionDeepForeignKey,TiposGeneracion)) {%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {				
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {		
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
					
		}  catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;		
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClaseC(TablaBase.ToString())%> deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}				
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}	
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception	{	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
				
		} catch(Exception e) {		
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}				
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception	{	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
				
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}	
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	<%}%>	
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionDeepRelationship,TiposGeneracion)) {%>
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception	{	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
					
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClaseC(TablaBase.ToString())%> deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception	{	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}				
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception	{	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {		
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}	
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
				
		} catch(Exception e) {		
			FuncionesEjb.manageException(logger,e);
			throw e;
			
	  	}				
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
				
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}	
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	<%}%>	
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionDeepForeignKeyAndRelatioship,TiposGeneracion)) {%>
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClase(TablaBase.ToString())%> deepLoadRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
				
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;		
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception	{	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepLoadsRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoadsRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
				
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;		
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClaseC(TablaBase.ToString())%> deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}
		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=GetNombreClaseC(TablaBase.ToString())%> deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {	
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSaveRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
			
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>();
	}	
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>()	;
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}		
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturn(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,DatosCliente datosCliente)throws Exception {	
		<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>()	;
		
		} catch(Exception e) {
			FuncionesEjb.manageException(logger,e);
			throw e;
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public void deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
							
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;			
	  	}				
	}
	
	<%if(!ConWebServices){%>
	@PermitAll<%}%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithReturnWithClassesWithDeepLoadType(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,ArrayList<Classe> classesP,DeepLoadType deepLoadType,DatosCliente datosCliente)throws Exception {	
	    <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepSavesRelationshipsAndForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>WithClassesWithDeepLoadType(classesP,deepLoadType);
							
		} catch(Exception e) {	
			FuncionesEjb.manageException(logger,e);
			throw e;	
	  	}
		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
	}
	<%}%>	
	
	<%if(TablasBaseForReporte!=null&&TablasBaseForReporte.Count>0){%>
	<%= GetFuncionesTablasClasesReportes() %>	
	<%}%>
}
