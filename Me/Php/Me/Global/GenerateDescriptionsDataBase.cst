<%@ Template Language="C#" Debug="true" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" %>    	
<%@ CodeTemplate Src="CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8" %>
<%@ Import NameSpace="Me" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import NameSpace="System.IO" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Category="1. General" Description="Database to get the extended properties from." %>
<%@ Property Name="ConStoreProcedures" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="ConNombresMayusculas" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsConUpdateSqlSentence" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>

<%@ Property Name="GeneracionProcesos" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="GeneracionReportes" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>

<%@ Property Name="EsGeneracionInicializarSession" Type="System.Boolean" Default="true" Category="1. Tipo Generacion Auxiliar" Description="Nombre del Programdor" %>
<%@ Property Name="EsGeneracionInicializarController" Type="System.Boolean" Default="false" Category="1. Tipo Generacion Auxiliar" Description="Nombre del Programdor" %>

<%@ Property Name="GeneracionPorTablas" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="SourceTablesForGenerate" Type="SchemaExplorer.TableSchemaCollection" Category="0. Tipo Generacion Source" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SourceModuloForGenerate" Type="System.String" Default="" Category="0. Tipo Generacion Source" Description="Nombre de la Entidad" Optional="true"%>
<%@ Property Name="SourceEsquemaForGenerate" Type="System.String" Default="" Category="0. Tipo Generacion Source" Description="Nombre de la Entidad" Optional="true"%>

<%@ Property Name="GeneracionTodos" Type="System.Boolean" Default="true" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="GeneracionPorModulos" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="GeneracionPorEsquema" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>



<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>

<%@ Property Name="NoTablasWebConAtras" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="NoTablasEsInterno" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasEsMenu" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesNo" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiTablasClasesEsRompimiento" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConFinalQuery" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConIndicesNo" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConWebRelacionesNo" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="NoTablasClasesConAuditoria" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="NoTablasClasesConObjetoOriginal" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConInsertNo" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 1" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiTablasClasesConDelCascade" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConPrefijoId" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 2" Description="Select a set of tables." Optional="true"%>


<%@ Property Name="SiColumnasTablasWebCombo" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasFKTablasConBusqueda" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 1" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiColumnasTablasConTipo" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConTipoSql" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConJsValidacion" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConEsParaRompimiento" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConTabla" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConWebOrden" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConEsReporte" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiColumnasTablasConEditNo" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Requerimiento 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConNoUpper" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Requerimiento 1" Description="Select a set of tables." Optional="true"%>

<script runat="template">
TableSchemaCollection SourceDatabaseTables;

public void CargarTablas() {
	SourceDatabaseTables=new TableSchemaCollection();
	
	if(GeneracionPorTablas) {
		SourceDatabaseTables=GetTablasNormalesReportesC(SourceTablesForGenerate,GeneracionReportes,GeneracionProcesos,TiposGeneracionGrupo.TODOS,TiposGeneracionRelaciones.NINGUNO);			
				
	} else if(GeneracionPorModulos){
		//Trace.WriteLine(SourceModuloForGenerate);
		SourceDatabaseTables=GetTablasForModuloC(SourceDatabase,SourceModuloForGenerate,GeneracionReportes,GeneracionProcesos,TiposGeneracionGrupo.TODOS,TiposGeneracionRelaciones.NINGUNO);
				
	} else if(GeneracionPorEsquema) {
		SourceDatabaseTables=GetTablasForEsquemaC(SourceDatabase,SourceEsquemaForGenerate,GeneracionReportes,GeneracionProcesos,TiposGeneracionGrupo.TODOS,TiposGeneracionRelaciones.NINGUNO);
			
	} else {
		SourceDatabaseTables=GetTablasNormalesReportesC(SourceDatabase.Tables,GeneracionReportes,GeneracionProcesos,TiposGeneracionGrupo.TODOS,TiposGeneracionRelaciones.NINGUNO);							
		
		//Trace.WriteLine(SourceDatabaseTables.Count);
	}		
}

public string GetSetControllerImports()
{	
	string strNombreClase=string.Empty;

	foreach(TableSchema tableSchema in SourceDatabaseTables) {//SourceDatabaseTables) {//SourceDatabaseTables)
	strNombreClase+="\r\ninclude_once('"+Empresa+"/"+Package+"/"+strPackagePresentation+"/"+strPackageFaces+"/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFFaces+".php');";
	strNombreClase+="\r\n"+strPhp53VersionComment+"use "+Empresa+"/"+ Package+"/"+strPackagePresentation+"/"+strPackageFaces+"/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFFaces+";";
	strNombreClase+="\r\ninclude_once('"+Empresa+"/"+Package+"/"+strPackageUtils+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.php');";
	strNombreClase+="\r\n"+strPhp53VersionComment+"use "+Empresa+"/"+ Package+"/"+strPackageUtils+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones;";
	}
	
	return strNombreClase;
}

public string GetSetControllerRelations()
{
	//TableSchemaCollection SourceDatabaseTables=new TableSchemaCollection();
	//SourceDatabaseTables.Add(TablaBase);
	
	string strNombreClase=string.Empty;
	string strNombreClaseDeclaracion=string.Empty;
	String strPaquete=String.Empty;
	
	String strClassTest=String.Empty;
	String strIfElse=String.Empty;
	String strTab="\t";;
	bool isPrimero=true;
	
	strClassTest="Test";
	
	strNombreClase="";//"\r\nString strPathImagenes=\"\";";
	
	String strPluralSingular="";
	string strModulo="";
	
	ArrayList arrayListNombresTablas=new ArrayList();
	
		foreach(TableSchema tableSchema in SourceDatabaseTables)//SourceDatabaseTables)//SourceDatabaseTables)
		{
			InicializarVariablesPorTabla(tableSchema,TiposGeneracionGrupo.TODOS);
			
			strModulo=GetRelativePathNavegacionFromModuleActualC(tableSchema,true);
			
			strTab="\t";
			
			if(isPrimero) {
				strIfElse="if";
			} else {
				strIfElse="else if";
			}
			
			//SIEMPRE YA QUE SE USA PARA LOGIN Y MAIN
			strIfElse="else if";
			
			//strNombreClaseDeclaracion+="\r\n\t"+GetNombreClaseC(tableSchema.ToString())+"SessionBean "+GetNombreClaseObjetoC(tableSchema.ToString())+"SessionBean=null;";
			
			String strTablaClaseRelacionada="";	
			strTablaClaseRelacionada+="";
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
				
			TableSchema tablaRelacionadaObjetivo;
			
			String strSufijoJSPFinalTable="";
			String strCondicionJSPFinalTable="";
			
			if(GetFinalJspVersionFromPropertiesC(tableSchema)) {
				strSufijoJSPFinalTable=strSufijoJSPJSFFinal;
				//strCondicionJSPFinalTable=" || opcion.getField_sNombreClase().equals(\"Mantenimiento"+GetNombreClaseC(tableSchema.ToString())+strSufijoJSPFinalTable+".jsf\")";
			}
			
			//"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRCLASSNAME"+strCondicionJSPFinalTable+") {  ";		
			
			strNombreClase+="\r\n\t\t"+strIfElse+"($controllerParaEjecutar=='"+GetNombreClaseC(tableSchema.ToString())+"') {  ";		
			
			strNombreClase+="\r\n\t\t\tinclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackagePresentation+"/"+strPackageFaces+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFFaces+".php');";
			strNombreClase+="\r\n\t\t\t"+strPhp53VersionComment+"use "+Empresa+"/"+ Package+"/"+strModulo+strPackagePresentation+"/"+strPackageFaces+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFFaces+";";			
			/*strNombreClase+="\r\n\t\tinclude_once('"+Empresa+"/"+Package+"/"+strModulo+strPackageUtils+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.php');";
			strNombreClase+="\r\n\t\t"+strPhp53VersionComment+"use "+Empresa+"/"+ Package+"/"+strModulo+strPackageUtils+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones;";
			*/
	
			strNombreClase+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFFaces+"();"; 	
			strNombreClase+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"->inicializarParametrosQueryString();";
			strNombreClase+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"->ejecutarParametrosQueryString();";
			//strNombreClase+="\r\n\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"->setstrPermiteRecargarInformacion('display:table-row');";
			
					
        	
			/*
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
				{				
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
					{
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						strPluralSingular="";
					}	
					else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{						
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						strPluralSingular="s";
					}
					else
					{
						continue;
					}
					
					if(tablaRelacionadaObjetivo.Name.Equals(tableSchema.Name)) {
						continue;	
					}
					strNombreClase+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();"; 	
        			strNombreClase+="\r\n\t\t\t$thisController->Session->write("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRSESSIONNAME,$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+");";		
				
					if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
					{
						continue;
					}
					
					GetFuncionesTablasClasesReportes(ref strNombreClase,tablaRelacionadaObjetivo,ref strTab);	
				}
			*/	
			strNombreClase+="\r\n\t\t}";
			
			
			if(isPrimero) {
				isPrimero=false;
			}
		}
		
		strNombreClase=strNombreClaseDeclaracion+"\r\n\t\t"+strNombreClase;
			
	return strNombreClase;
}

public string GetSetSessionImports()
{	
	string strNombreClase=string.Empty;
	string strModulo="";
	
	foreach(TableSchema tableSchema in SourceDatabaseTables) {//SourceDatabaseTables) {//SourceDatabaseTables)
		InicializarVariablesPorTabla(tableSchema,TiposGeneracionGrupo.TODOS);
		
		strModulo=GetRelativePathNavegacionFromModuleActualC(tableSchema,true);
		
		strNombreClase+="\r\n\r\ninclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackagePresentation+"/session"+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"Additional.php');";
		strNombreClase+="\r\ninclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackagePresentation+"/session"+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".php');";
		strNombreClase+="\r\ninclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackageUtils+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFuncionesAdditional.php');";
		strNombreClase+="\r\ninclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackageUtils+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.php');";
		strNombreClase+="\r\n"+strPhp53VersionComment+"use "+Empresa+"/"+ Package+"/"+strModulo+"/"+strPackagePresentation+"/session/"+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+";";
		strNombreClase+="\r\n"+strPhp53VersionComment+"use "+Empresa+"/"+Package+"/"+strModulo+"/"+strPackageUtils+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones;";
	}
	
	return strNombreClase;
}

public void GetFuncionesTablasClasesReportes(ref String strNombreClase, TableSchema tableSchema,ref String strTab) 
		{
			strTab+="\t";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
			TableSchema tablaRelacionadaObjetivo;
			String strModulo="";
			
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
				{				
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
					{
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						//strPluralSingular="";
					}	
					else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{						
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						//strPluralSingular="s";
					}
					else
					{
						//Trace.WriteLine("continue2");
						continue;
					}
					
					if(tablaRelacionadaObjetivo.Name.Equals(tableSchema.Name)) {
						continue;	
					}
					
					//strNombreClase+="\r\n\r\n\t\t\t"+strTab+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"SessionBean=new "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"SessionBean();"; 	
        			//strNombreClase+="\r\n\t\t\t"+strTab+"FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"SessionBean);";		
					
					strModulo=GetRelativePathNavegacionFromModuleActualC(tablaRelacionadaObjetivo,true);
		
					strNombreClase+="\r\n\r\n\t\tinclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackageUtils+GetEsPaqueteReporteC(tablaRelacionadaObjetivo)+"/"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesCarga.php');";
					strNombreClase+="\r\n\t\t"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesCarga::cargarArchivosPaquetesBase(PaqueteTipo::$ENTITIES.PaqueteTipo::$WEB_SESSION);";
	
					strNombreClase+="\r\n\r\n\t\t\t"+strTab+"$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();"; 	
        			strNombreClase+="\r\n\t\t\t"+strTab+"$thisController->Session->write("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"));";		
					
			
						//System.Windows.Forms.MessageBox.Show(tablaRelacionadaObjetivo.Name);
					if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
					{
						continue;
					}
					
					GetFuncionesTablasClasesReportes(ref strNombreClase,tablaRelacionadaObjetivo,ref strTab);
					
					/*
					if(!ExisteTablaParaImagen(arrayListNombresTablas,tablaRelacionadaObjetivo.Name)) {
						arrayListNombresTablas.Add(tablaRelacionadaObjetivo.Name);
						
						strPaquete=GetRelativePathNavegacionFromTableFromPropertiesC(tableSchema);
						strPaquete=strPaquete.Replace("/","\\\\");
						strNombreClase+="\r\ntry{";		
						strNombreClase+=strClassTest+".copyImages(strPathImagenes+\"flechaarriba.gif\",strPathImagenes+\""+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPluralSingular+".gif\");";
						strNombreClase+="}catch(Exception ex){;}";	
					}
					*/
				}
	}
	
public string GetSetSessionRelations()
{
	//TableSchemaCollection SourceDatabaseTables=new TableSchemaCollection();
	//SourceDatabaseTables.Add(TablaBase);
	
	string strNombreClase=string.Empty;
	string strNombreClaseDeclaracion=string.Empty;
	String strPaquete=String.Empty;
	
	String strClassTest=String.Empty;
	String strIfElse=String.Empty;
	String strTab="\t";;
	bool isPrimero=true;
	
	strClassTest="Test";
	
	strNombreClase="";//"\r\nString strPathImagenes=\"\";";
	
	String strPluralSingular="";
	String strModulo="";
	
	ArrayList arrayListNombresTablas=new ArrayList();
	
		foreach(TableSchema tableSchema in SourceDatabaseTables)//SourceDatabaseTables)//SourceDatabaseTables)
		{
			InicializarVariablesPorTabla(tableSchema,TiposGeneracionGrupo.TODOS);
			
			strTab="\t";
			
			if(isPrimero) {
				strIfElse="if";
			} else {
				strIfElse="else if";
			}
			
			//strNombreClaseDeclaracion+="\r\n\t"+GetNombreClaseC(tableSchema.ToString())+"SessionBean "+GetNombreClaseObjetoC(tableSchema.ToString())+"SessionBean=null;";
			
			String strTablaClaseRelacionada="";	
			strTablaClaseRelacionada+="";
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
				
			TableSchema tablaRelacionadaObjetivo;
			
			String strSufijoJSPFinalTable="";
			String strCondicionJSPFinalTable="";
			
			if(GetFinalJspVersionFromPropertiesC(tableSchema)) {
				strSufijoJSPFinalTable=strSufijoJSPJSFFinal;
				//strCondicionJSPFinalTable=" || opcion.getField_sNombreClase().equals(\"Mantenimiento"+GetNombreClaseC(tableSchema.ToString())+strSufijoJSPFinalTable+".jsf\")";
			}
			
			
			strModulo=GetRelativePathNavegacionFromModuleActualC(tableSchema,true);
		
			strNombreClase+="\r\n\t"+strIfElse+"($strType=='"+GetNombreClaseObjetoC(tableSchema.ToString())+"SessionBean') {";//+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRSESSIONNAME"+strCondicionJSPFinalTable+") {  ";		
			
			strNombreClase+="\r\n\t\tinclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackageUtils+GetEsPaqueteReporteC(tableSchema)+"/"+GetNombreClaseC(tableSchema.ToString())+"ConstantesCarga.php');";
			strNombreClase+="\r\n\t\t"+GetNombreClaseC(tableSchema.ToString())+"ConstantesCarga::cargarArchivosPaquetesBase(PaqueteTipo::$ENTITIES.PaqueteTipo::$WEB_SESSION);";
	
			strNombreClase+="\r\n\r\n\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"();"; 	
			strNombreClase+="\r\n\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"->setstrPathNavegacionActual("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRCLASSWEBTITULO);";
			strNombreClase+="\r\n\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"->setstrPermiteRecargarInformacion('display:table-row');";
			
			
			if(GetConPopupTableFromProperties(tableSchema)) {
				strNombreClase+="\r\n\r\n\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"->setPaginaPopupVariables(false);";	
			}
			
			strNombreClase+="\r\n\t\t$thisController->Session->write("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"));";		
					
        	//strNombreClase+="\r\n\r\n\t\t"+"FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tableSchema.ToString())+"SessionBean);";		
			/*
			if(!ExisteRelaciones(tableSchema))
			{
				
			}
			else
			{
			}
			*/
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
				{									
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
					{
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						strPluralSingular="";
					}	
					else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{						
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						strPluralSingular="s";
					}
					else
					{
						//Trace.WriteLine("continue2");
						continue;
					}
					
					if(tablaRelacionadaObjetivo.Name.Equals(tableSchema.Name)) {
						continue;	
					}
					//$opcionSessionBean=new OpcionSessionBean();
					
					strModulo=GetRelativePathNavegacionFromModuleActualC(tablaRelacionadaObjetivo,true);
		
					strNombreClase+="\r\n\r\n\t\tinclude_once('"+Empresa+"/"+Package+"/"+strModulo+"/"+strPackageUtils+GetEsPaqueteReporteC(tablaRelacionadaObjetivo)+"/"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesCarga.php');";
					strNombreClase+="\r\n\t\t"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesCarga::cargarArchivosPaquetesBase(PaqueteTipo::$ENTITIES.PaqueteTipo::$WEB_SESSION);";
	
					strNombreClase+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();"; 	
        			strNombreClase+="\r\n\t\t\t$thisController->Session->write("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"));";		
					//strNombreClase+="\r\n\t\t\t"+"FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"SessionBean);";		
			
						//System.Windows.Forms.MessageBox.Show(tablaRelacionadaObjetivo.Name);
					if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
					{
						continue;
					}
					
					GetFuncionesTablasClasesReportes(ref strNombreClase,tablaRelacionadaObjetivo,ref strTab);
					
					/*
					if(!ExisteTablaParaImagen(arrayListNombresTablas,tablaRelacionadaObjetivo.Name)) {
						arrayListNombresTablas.Add(tablaRelacionadaObjetivo.Name);
						
						strPaquete=GetRelativePathNavegacionFromTableFromPropertiesC(tableSchema);
						strPaquete=strPaquete.Replace("/","\\\\");
						strNombreClase+="\r\ntry{";		
						strNombreClase+=strClassTest+".copyImages(strPathImagenes+\"flechaarriba.gif\",strPathImagenes+\""+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPluralSingular+".gif\");";
						strNombreClase+="}catch(Exception ex){;}";	
					}
					*/
				}
				
			strNombreClase+="\r\n\t}";
			
			
			if(isPrimero) {
				isPrimero=false;
			}
		}
		
		strNombreClase=strNombreClaseDeclaracion+"\r\n\t"+strNombreClase;
			
	return strNombreClase;
}

public String GetConNoUpperDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConNoUpper!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConNoUpper)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|NOUPPER="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|NOUPPER="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConEditNoDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConEditNo!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConEditNo)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|EDITNO="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|EDITNO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConEsReporteDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConEsReporte!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConEsReporte)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|ESREPORTE="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|ESREPORTE="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConWebOrdenDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConWebOrden!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConWebOrden)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|WEBORDEN="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|WEBORDEN="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConTablaDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConTabla!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConTabla)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|TABLA="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|TABLA="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConEsParaRompimientoDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConEsParaRompimiento!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConEsParaRompimiento)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|ESPARAROMPIMIENTO="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|ESPARAROMPIMIENTO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConJsValidacionDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConJsValidacion!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConJsValidacion)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|JSVALIDACION="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|JSVALIDACION="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConTipoSqlDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConTipoSql!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConTipoSql)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|TIPOSQL="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|TIPOSQL="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConTipoDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConTipo!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConTipo)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|TIPO="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|TIPO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConBusquedaDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasFKTablasConBusqueda!=null)
	{
		foreach(ColumnSchema column in SiColumnasFKTablasConBusqueda)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					if(column.IsForeignKeyMember)
					{
						strEsParaCombo="true";
						strDescritionTabla+="|CONBUSQUEDA="+strEsParaCombo;
					}
				}
			}
		}
	}
	
	//strDescritionTabla+="|CONBUSQUEDA="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetWebComboDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasWebCombo!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasWebCombo)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|WEBCOMBO="+strEsParaCombo;
				}
			}
		}
	}
	
	if(strDescritionTabla==string.Empty)
	{
		if(columnSchema.Name.Equals("Codigo"))
		{
			strEsParaCombo="true";
			strDescritionTabla+="|WEBCOMBO="+strEsParaCombo;
		}
		
	}
	//strDescritionTabla+="|WEBCOMBO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetNumeroFilasDescriptionColumn(ColumnSchema column) 
{
	String strDescritionTabla=string.Empty;
	int intNumFilas=1;
	
	if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
	{
		if(column.Size>50)
		{
			intNumFilas=(column.Size/50);
			
			if(intNumFilas<2)
			{
				intNumFilas=2;
			}
			
			if(intNumFilas>15)
			{
				intNumFilas=15;
			}
			
			strDescritionTabla+="|WEBFILAS="+intNumFilas.ToString();
			
		}	
		
		
	}
	
	//strDescritionTabla+="|WEBFILAS="+intNumFilas.ToString();
	
	return strDescritionTabla;
}

public String GetWebNameDescriptionTable(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	
	String strNameTable=string.Empty;
	String strCharNameTable=string.Empty;
	bool esPrimeraVez=true;
	
	if(!columnSchema.IsForeignKeyMember)
	{
		foreach(Char charName in columnSchema.Name.ToCharArray())
		{
			strCharNameTable=charName.ToString();
			
			if(Char.IsUpper(charName))
			{
				if(!esPrimeraVez)
				{
					strCharNameTable=" "+charName.ToString().ToLower();;
				}
				else
				{
					esPrimeraVez=false;
				}
			}
			
			strNameTable+=strCharNameTable;
		}
	}
	else
	{
		
		foreach(Char charName in columnSchema.Name.Replace("id","").ToCharArray())
		{
			strCharNameTable=charName.ToString();
			
			if(Char.IsUpper(charName))
			{
				if(!esPrimeraVez)
				{
					strCharNameTable=" "+charName.ToString().ToLower();;
				}
				else
				{
					esPrimeraVez=false;
				}
			}
			
			strNameTable+=strCharNameTable;
		}
	}
	
	if(ConNombresMayusculas)
	{
		strNameTable=strNameTable.ToUpper();
	}
	
	strDescritionTabla+="|WEBTITULO="+strNameTable;
	
	
	return strDescritionTabla;
}

public String GetNameDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	strDescritionTabla+="NOMBRE="+columnSchema.Name.ToUpper();
	
	return strDescritionTabla;
}

public String GetDescriptionsColumn(ColumnSchema columnSchema) 
{
	String strDescriptionsColumn=string.Empty;
		
	strDescriptionsColumn=GetNameDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetWebNameDescriptionTable(columnSchema);
	strDescriptionsColumn+=GetNumeroFilasDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetWebComboDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConBusquedaDescriptionColumn(columnSchema);
	
	strDescriptionsColumn+=GetConTipoDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConTipoSqlDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConJsValidacionDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConEsParaRompimientoDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConTablaDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConWebOrdenDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConEsReporteDescriptionColumn(columnSchema);
	
	strDescriptionsColumn+=GetConEditNoDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConNoUpperDescriptionColumn(columnSchema);

	return strDescriptionsColumn;
}

public String GetDescriptionsColumns() 
{
	String strDescritionTabla=string.Empty;
	String strAddOrUpdate=string.Empty;
	
	strAddOrUpdate="add";
	
	if(EsConUpdateSqlSentence)
	{
		strAddOrUpdate="update";
	}
	
	for (int i = 0; i < SourceDatabaseTables.Count; i++)//SourceDatabaseTables.Count; i++)
	{
		
		for (int j = 0; j < SourceDatabaseTables[i].Columns.Count; j++)//SourceDatabaseTables
		{
			strDescritionTabla+="\r\nEXEC sys.sp_"+strAddOrUpdate+"extendedproperty @name=N'MS_Description', @value=N'"+GetDescriptionsColumn(SourceDatabaseTables[i].Columns[j])+"' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'"+SourceDatabaseTables[i].Name+"', @level2type=N'COLUMN', @level2name=N'"+SourceDatabaseTables[i].Columns[j].Name+"'\r\n";								   
			strDescritionTabla+="GO\r\n";	
		}
		
	}
    							

	return strDescritionTabla; 
}


public String GetConPrefijoIdDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="X.";
					strDescritionTabla+="|PREFIJOID="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|PREFIJOID="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConDelCascadeDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|DELCASCADE="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|DELCASCADE="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConInsertNoDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|INSERTNO="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|INSERTNO="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConObjetoOriginalDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="true";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="false";
					strDescritionTabla+="|CONORIG="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|CONORIG="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConAuditoriaDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="true";
	
		
	
	
		if(NoTablasClasesConAuditoria!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConAuditoria)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="false";
					strDescritionTabla+="|CONAUD="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|CONAUD="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}


public String GetConStoreProcedures(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(ConStoreProcedures)
		{
			strEsRompimientoTabla="true";
			strDescritionTabla+="|CONSTORE="+strEsRompimientoTabla;
		}
	
	
	//strDescritionTabla+="|CONSTORE="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetWebRelacionesNoDescriptionTable(TableSchema tableSchema) 
{
	Boolean blnConClasesNo=false;
	
	String strDescritionTabla=string.Empty;
	
	String strFuncion=string.Empty;
			
	if(SiTablasClasesConWebRelacionesNo!=null)
	{		
		foreach(TableSchema tableSchemaNo in SiTablasClasesConWebRelacionesNo)
		{
			if(tableSchema.Name==tableSchemaNo.Name)
			{
				blnConClasesNo=true;
			}
		}
	}
	
			
	if(blnConClasesNo)	
	{

			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne|| collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					if(strFuncion!=string.Empty)
					{
						strFuncion+=",";
					}
					
					strFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable);
					
				}
				
				
			
			}
								
		
		strDescritionTabla="|WEBRELACIONESNO="+strFuncion;
	
	}
	
	return strDescritionTabla;
}

public String GetIndicesNoDescriptionTable(TableSchema tableSchema) 
{
	Boolean blnConClasesNo=false;
	
	String strDescritionTabla=string.Empty;
	
	String strFuncion=string.Empty;
			
	if(SiTablasClasesConIndicesNo!=null)
	{		
		foreach(TableSchema tableSchemaNo in SiTablasClasesConIndicesNo)
		{
			if(tableSchema.Name==tableSchemaNo.Name)
			{
				blnConClasesNo=true;
			}
		}
	}
	
			
	if(blnConClasesNo)	
	{

			
										 			
			foreach(IndexSchema indexSchema in tableSchema.Indexes)
			{
				
				
					if(strFuncion!=string.Empty)
					{
						strFuncion+=",";
					}
					
					strFuncion+=indexSchema.Name;
					
				
				
				
			
			}
								
		strDescritionTabla+=" |INDICESNO="+strFuncion;
		
	
	}
	
	return strDescritionTabla;
}


public String GetConFinalQueryDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="";
	
		
	
	
		if(SiTablasClasesConFinalQuery!=null)
		{
			foreach(TableSchema tableSchemaNo in SiTablasClasesConFinalQuery)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="X";
					strDescritionTabla+="|FINALQUERY="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|FINALQUERY="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}


public String GetEsReporteDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsReporteTabla=string.Empty;
	
	strEsReporteTabla="false";
	
		
	
	if(tableSchema.Name.Contains("Reporte"))
	{
		strEsReporteTabla="true";
		strDescritionTabla+="|ESREPORTE="+strEsReporteTabla;
	}
	
	
	
	
	//strDescritionTabla+="|ESREPORTE="+strEsReporteTabla;
	
	return strDescritionTabla;
}

public String GetEsRompimientoDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(SiTablasClasesEsRompimiento!=null)
		{
			foreach(TableSchema tableSchemaNo in SiTablasClasesEsRompimiento)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|ESROMPIMIENTO="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|ESROMPIMIENTO="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}


public String GetClasesNoDescriptionTable(TableSchema tableSchema) 
{
	Boolean blnConClasesNo=false;
	
	String strDescritionTabla=string.Empty;
	
	String strFuncion=string.Empty;
			
	if(SiTablasClasesNo!=null)
	{		
		foreach(TableSchema tableSchemaNo in SiTablasClasesNo)
		{
			if(tableSchema.Name==tableSchemaNo.Name)
			{
				blnConClasesNo=true;
			}
		}
	}
	
			
	if(blnConClasesNo)	
	{

			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					if(strFuncion!=string.Empty)
					{
						strFuncion+=",";
					}
					
					strFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable);
					
				}
				
				
			
			}
								
		
		strDescritionTabla+="|CLASESNO="+strFuncion;
	
	}
	
	return strDescritionTabla;
}

public String GetEsMenuDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(SiTablasEsMenu!=null)
		{
			foreach(TableSchema tableSchemaNo in SiTablasEsMenu)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|ESMENU="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|ESROMPIMIENTO="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetEsInternoDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	
	String strEsInternoTabla=string.Empty;
	
	strEsInternoTabla="true";
	
	Boolean blnEsInterno=false;
	
	foreach(ColumnSchema columnSchema in tableSchema.Columns)
	{
		if(columnSchema.IsForeignKeyMember)
		{
			blnEsInterno=true;
		}
	}
	
	
	if(!blnEsInterno)
	{
		strEsInternoTabla="false";
	}
	
	
	if(blnEsInterno)
	{
		if(NoTablasEsInterno!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasEsInterno)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsInternoTabla="false";
					strDescritionTabla+="|ESINTERNO="+strEsInternoTabla;
					
					return strDescritionTabla;
				}
			}
		}
	}
	
	if(blnEsInterno)
	{
		strDescritionTabla+="|ESINTERNO="+strEsInternoTabla;
	}
	
	//strDescritionTabla+="|ESINTERNO="+strEsInternoTabla;
	
	return strDescritionTabla;
}

public String GetWebConAtrasDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strConAtrasTabla=string.Empty;
	
	strConAtrasTabla="true";
	
	Boolean blnConAtras=false;
	
	foreach(ColumnSchema columnSchema in tableSchema.Columns)
	{
		if(columnSchema.IsForeignKeyMember)
		{
			blnConAtras=true;
		}
	}
	
	
	if(!blnConAtras)
	{
		strConAtrasTabla="false";
	}
	
	if(blnConAtras)
	{
		if(NoTablasWebConAtras!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasWebConAtras)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strConAtrasTabla="false";
					strDescritionTabla+="|WEBCONATRAS="+strConAtrasTabla;
					return strDescritionTabla;
				}
			}
		}
	}
	
	if(blnConAtras)
	{
		strDescritionTabla+="|WEBCONATRAS="+strConAtrasTabla;
	}
	//strDescritionTabla+="|WEBCONATRAS="+strConAtrasTabla;
	
	return strDescritionTabla;
}

public String GetWebPluralDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strPluralTabla=string.Empty;
	Char chrUltimaLetra=Char.MinValue;
	
	strPluralTabla="s";
	
	if(ConNombresMayusculas)
	{
		strPluralTabla="S";
	}
	
	chrUltimaLetra=tableSchema.Name.ToString()[tableSchema.Name.ToCharArray().Length-1];
	
	if(chrUltimaLetra!='a'&&chrUltimaLetra!='e'&&chrUltimaLetra!='i'&&chrUltimaLetra!='o'&&chrUltimaLetra!='u')
	{
		strPluralTabla="es";
	
		if(ConNombresMayusculas)
		{
			strPluralTabla="ES";
		}
	}
	
	strDescritionTabla+="|WEBPLURAL="+strPluralTabla;
	
	return strDescritionTabla;
}

public String GetWebNameDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	
	String strNameTable=string.Empty;
	String strCharNameTable=string.Empty;
	bool esPrimeraVez=true;
	
	foreach(Char charName in tableSchema.Name.ToCharArray())
	{
		strCharNameTable=charName.ToString();
		
		if(Char.IsUpper(charName))
		{
			if(!esPrimeraVez)
			{
				strCharNameTable=" "+charName.ToString().ToLower();;
			}
			else
			{
				esPrimeraVez=false;
			}
		}
		
		strNameTable+=strCharNameTable;
	}
	
	if(ConNombresMayusculas)
	{
		strNameTable=strNameTable.ToUpper();
	}
	
	strDescritionTabla+="|WEBTITULO="+strNameTable;
	
	
	return strDescritionTabla;
}

public String GetNameDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	strDescritionTabla+="NOMBRE="+tableSchema.Name.ToUpper();
	
	return strDescritionTabla;
}

public String GetTableDescriptions(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	strDescritionTabla+=GetNameDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebNameDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebPluralDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebConAtrasDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsInternoDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsMenuDescriptionTable(tableSchema);
	strDescritionTabla+=GetClasesNoDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsRompimientoDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsReporteDescriptionTable(tableSchema);
	strDescritionTabla+=GetConStoreProcedures(tableSchema);
	strDescritionTabla+=GetConFinalQueryDescriptionTable(tableSchema);
	strDescritionTabla+=GetIndicesNoDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebRelacionesNoDescriptionTable(tableSchema);
	
	strDescritionTabla+=GetConAuditoriaDescriptionTable(tableSchema);
	strDescritionTabla+=GetConObjetoOriginalDescriptionTable(tableSchema);
	strDescritionTabla+=GetConInsertNoDescriptionTable(tableSchema);
	strDescritionTabla+=GetConDelCascadeDescriptionTable(tableSchema);
	strDescritionTabla+=GetConPrefijoIdDescriptionTable(tableSchema);
	
	
	return strDescritionTabla;
}

public String GetDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strAddOrUpdate=string.Empty;
	
	strAddOrUpdate="add";
	
	if(EsConUpdateSqlSentence)
	{
		strAddOrUpdate="update";
	}
	
	strDescritionTabla+="\r\nEXEC sys.sp_"+strAddOrUpdate+"extendedproperty @name=N'MS_Description', @value=N'"+GetTableDescriptions(tableSchema)+"' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'"+tableSchema.Name+"'\r\n";
    strDescritionTabla+="GO";								

	return strDescritionTabla; 
}

</script>

<% CargarTablas();%>

<% if(EsGeneracionInicializarSession) {%>
<%//=GetSetSessionImports()%>
<%=GetSetSessionRelations()%>
<% } %>

<% if(EsGeneracionInicializarController) {%>
<%//=GetSetControllerImports()%>
<%=GetSetControllerRelations()%>
<% } %>


<% if(!EsGeneracionInicializarSession && !EsGeneracionInicializarController) {%>

USE <%= SourceDatabase.Name%>

<%for (int i = 0; i < SourceDatabaseTables.Count; i++){ %>
	<%= GetDescriptionTable(SourceDatabaseTables[i]) %>
<% } %>


<%= GetDescriptionsColumns() %>

<% } %>
