<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import NameSpace="Me" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="EsParaCakePhp" Type="System.Boolean" Default="true" Category="4. Service Architecture" Description="Nombre del Programdor" %>

<script runat="template">
//setHtmlTablaDatos
int iPosicionInicialTablaModel=1;

public  String GetInitActionsFrameColumnsVariables()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	String strIrServidorAplicacion="";
	String strElse=" else ";
	String sTipoControl="TEXTBOX";
	String sEventoTipo="CHANGE";
	String sEventoSubTipo="CHANGED";
	
	String strClasesSiRelacionadas="";
	String[] strClasesSi;
	
	String strClasesSiParentRelacionadas="";
	String[] strClasesSiParent;
	
	bool esPrimero=true;
	bool existe=false;
	bool tieneChangeParent=false;
	bool tieneOnEventDbParent=false;
	
	
	bool paraTextField=false;
	bool paraTextArea=false;
	bool paraLabel=false;
	bool paraCheckBox=false;
	bool paraDateChooser=false;
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns){	
		
		if(!column.IsForeignKeyMember){	
			
			
	
				strElse=" else ";				
				existe=false;
				tieneChangeParent=false;
				tieneOnEventDbParent=false;
				
							
				if(GetOnChangeColumnFromPropertiesC(column)) {
					existe=true;
					//Trace.WriteLine(column.Name+"="+GetOnChangeColumnFromPropertiesC(column));
				}
				
				
				
					
				if(existe) {																		
					if(esPrimero) {
						strElse="";
					}
						
						
					if((EsStringColumnC(column) && column.Size<200) || EsTipoColumnaNumeroParaClaseC(column)) {
				paraTextField=true;
				
			} else if(EsStringColumnC(column)) {
				paraTextArea=true;
				
			} else if(EsBitColumn(column)) {
				paraCheckBox=true;
				
			} else if(EsDateColumn(column)) {
				paraDateChooser=true;			
			}
			
			tieneChangeParent=GetOnChangeParentFromColumnFromPropertiesC(column);
			tieneOnEventDbParent=GetOnEventDbParentColumnFromPropertiesC(column);
				
			
			
			String strOnChangeDb="false";
												
			if(GetOnEventDbColumnFromPropertiesC(column)) {
				strOnChangeDb="true";
			}
						
			strIrServidorAplicacion=strOnChangeDb;
			
			/*
			if(tieneOnEventDbParent) {
				strIrServidorAplicacion="true";	
			} else {
				strIrServidorAplicacion="false";	
			}
			*/
			
			sVariablesArray+="\r\n\t\t"+strElse+"if($sTipoControl=='"+GetNombreColumnaClaseC(column)+"') {";//"-"+ +GetNombreClaseC(TablaBase.ToString())
			
			if(paraTextField) {
				sTipoControl="TEXTBOX";
				sEventoTipo="CHANGE";
				sEventoSubTipo="CHANGED";
				
				
				sVariablesArray+="\r\n\t\t\t$sDominio='"+GetNombreClase(TablaBase.ToString())+"';		$eventoGlobalTipo=EventoGlobalTipo::$CONTROL_CHANGE;	$controlTipo=ControlTipo::$"+sTipoControl+";";
				sVariablesArray+="\r\n\t\t\t$eventoTipo=EventoTipo;$"+sEventoTipo+";		$eventoSubTipo=EventoSubTipo::$"+sEventoSubTipo+";		$sTipoGeneral='TEXTBOX';";
				sVariablesArray+="\r\n\t\t\t$classes=array();		$conIrServidorAplicacion="+strIrServidorAplicacion+";		$esControlTabla=false;";
		
			
			} else if(paraTextArea) {
				sTipoControl="TEXTAREA";
				sEventoTipo="CHANGE";
				sEventoSubTipo="CHANGED";
				
				sVariablesArray+="\r\n\t\t\t$sDominio='"+GetNombreClase(TablaBase.ToString())+"';		$eventoGlobalTipo=EventoGlobalTipo::$CONTROL_CHANGE;	$controlTipo=ControlTipo::$"+sTipoControl+";";
				sVariablesArray+="\r\n\t\t\t$eventoTipo=EventoTipo;$"+sEventoTipo+";		$eventoSubTipo=EventoSubTipo::$"+sEventoSubTipo+";		$sTipoGeneral='TEXTBOX';";
				sVariablesArray+="\r\n\t\t\t$classes=array();		$conIrServidorAplicacion="+strIrServidorAplicacion+";		$esControlTabla=false;";
		
			} else if(paraCheckBox) {
				sTipoControl="CHECKBOX";
				sEventoTipo="CLIC";
				sEventoSubTipo="CLICKED";
				
				sVariablesArray+="\r\n\t\t\t$sDominio='"+GetNombreClase(TablaBase.ToString())+"';		$eventoGlobalTipo=EventoGlobalTipo::$CONTROL_CHANGE;	$controlTipo=ControlTipo::$"+sTipoControl+";";
				sVariablesArray+="\r\n\t\t\t$eventoTipo=EventoTipo;$"+sEventoTipo+";		$eventoSubTipo=EventoSubTipo::$"+sEventoSubTipo+";		$sTipoGeneral='TEXTBOX';";
				sVariablesArray+="\r\n\t\t\t$classes=array();		$conIrServidorAplicacion="+strIrServidorAplicacion+";		$esControlTabla=false;";
		
			} else if(paraLabel) {
				sTipoControl="LABEL";
				sEventoTipo="CHANGE";
				sEventoSubTipo="CHANGED";
				
				sVariablesArray+="\r\n\t\t\t$sDominio='"+GetNombreClase(TablaBase.ToString())+"';		$eventoGlobalTipo=EventoGlobalTipo::$CONTROL_CHANGE;	$controlTipo=ControlTipo::$"+sTipoControl+";";
				sVariablesArray+="\r\n\t\t\t$eventoTipo=EventoTipo;$"+sEventoTipo+";		$eventoSubTipo=EventoSubTipo::$"+sEventoSubTipo+";		$sTipoGeneral='TEXTBOX';";
				sVariablesArray+="\r\n\t\t\t$classes=array();		$conIrServidorAplicacion="+strIrServidorAplicacion+";		$esControlTabla=false;";
		
			} else if(paraDateChooser) {
				sTipoControl="DATE";
				sEventoTipo="CHANGE";
				sEventoSubTipo="CHANGED";
				
				sVariablesArray+="\r\n\t\t\t$sDominio='"+GetNombreClase(TablaBase.ToString())+"';		$eventoGlobalTipo=EventoGlobalTipo::$CONTROL_CHANGE;	$controlTipo=ControlTipo::$"+sTipoControl+";";
				sVariablesArray+="\r\n\t\t\t$eventoTipo=EventoTipo;$"+sEventoTipo+";		$eventoSubTipo=EventoSubTipo::$"+sEventoSubTipo+";		$sTipoGeneral='TEXTBOX';";
				sVariablesArray+="\r\n\t\t\t$classes=array();		$conIrServidorAplicacion="+strIrServidorAplicacion+";		$esControlTabla=false;";
		
			}	
					
					//sVariablesArray+="\r\n\t\t\t"+strElse+"if(sTipo.equals(\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\")) {";//"-"+
					//Trace.WriteLine(sVariablesArray);
						
						String strClasesSiOnChange="";
						
						//Trace.WriteLine(sVariablesArray);
						/*
						if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {
							strClasesSiOnChange=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
							
							if(!strClasesSiOnChange.Equals("")) {
								
								//if(GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column).Equals("")) {
								//	strClasesSiRelacionadas=GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase);					
								//} else {
								//	strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
								//}
								
								
								if(!strClasesSiOnChange.Equals("TODOS")) {
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
									
									strClasesSi=strClasesSiRelacionadas.Split(',');
									
									//sVariablesArray+="\r\n\t\t\t\tclasses=new ArrayList<Classe>();";
									
									foreach(String strClase in strClasesSi) {
										sVariablesArray+="\r\n\t\t\t\tclasses.add(new Classe("+strClase+".class));";
									}
								} else {
									sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
									sVariablesArray+="\r\n\t\t\t\t\tclasses="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
									sVariablesArray+="\r\n\t\t\t\t}";
								}
							} else {
								sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
								sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
								sVariablesArray+="\r\n\t\t\t\t}";
							}
						} else {
							sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
							sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
							sVariablesArray+="\r\n\t\t\t\t}";
						}
						*/
						
						//String strOnChangeDb="false";
						
						/*
						if(GetOnEventDbColumnFromPropertiesC(column)) {
							strOnChangeDb="true";
						}
						
						
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.classesActual=new ArrayList<Classe>();";
						sVariablesArray+="\r\n\t\t\t\tthis.classesActual.addAll(classes);";
		
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+"(sTipo,\"Formulario\",eventoGlobalTipo,ControlTipo."+sTipoControl+",EventoTipo."+sEventoTipo+",EventoSubTipo."+sEventoSubTipo+",\""+sTipoControl+"\",classes,"+strOnChangeDb+",esControlTabla);";//sTipo//EventoGlobalTipo.CONTROL_CHANGE GetNombreClaseC(tableSchema.ToString())
						
						if(tieneChangeParent) {
							sVariablesArray+="\r\n\r\n\t\t\t\tesUsoDesdeHijoLocal=true;";
						}
						
						if(tieneOnEventDbParent) {
							sVariablesArray+="\r\n\t\t\t\tconIrServidorAplicacionParent=true;";
						}
						
						
						strClasesSiParentRelacionadas=GetNombresClasesSiOnChangeParentFromColumnFromPropertiesC(column);									
						
						if(!strClasesSiParentRelacionadas.Equals("")) {
							strClasesSiParent=strClasesSiParentRelacionadas.Split(',');
							
							sVariablesArray+="\r\n";
							
							foreach(String strClase in strClasesSiParent) {
								sVariablesArray+="\r\n\t\t\t\tarrClasses.add(\""+strClase+"\");";
							}
						}
						*/
						
						
						sVariablesArray+="\r\n\t\t}";
						
						if(esPrimero) {
							esPrimero=false;
						}
										
					//sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column,paraSeleccionarEvento,esPrimero);			
				}				
		} else {
			
		}
	}
	
	
					
	return sVariablesArray;
}

public  String GetInitActionsFrameColumnsVariables0(bool paraTextField,bool paraTextArea,bool paraLabel,bool paraCheckBox,bool paraDateChooser)
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	String strElse=" else ";
	String sTipoControl="TEXTBOX";
	String sEventoTipo="CHANGE";
	String sEventoSubTipo="CHANGED";
	
	String strClasesSiRelacionadas="";
	String[] strClasesSi;
	
	String strClasesSiParentRelacionadas="";
	String[] strClasesSiParent;
	
	bool esPrimero=true;
	bool existe=false;
	bool tieneChangeParent=false;
	bool tieneOnEventDbParent=false;
	
	if(paraTextArea) {
		sTipoControl="TEXTAREA";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
	
	} else if(paraTextField) {
		sTipoControl="TEXTBOX";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
		
	} else if(paraCheckBox) {
		sTipoControl="CHECKBOX";
		sEventoTipo="CLIC";
		sEventoSubTipo="CLICKED";
		
	} else if(paraLabel) {
		sTipoControl="LABEL";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
		
	} else if(paraDateChooser) {
		sTipoControl="DATE";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns){
		
		if(!column.IsForeignKeyMember){	
			if(paraTextField) {
				if(!EsStringColumnC(column) && !EsTipoColumnaNumeroParaClaseC(column)) {
					continue;
				}
			} else if(paraTextArea) {
				if(!EsStringColumnC(column)) {
					continue;
				}
			} else if(paraCheckBox) {
				if(!EsBitColumn(column)) {
					continue;
				}
			} else if(paraDateChooser) {
				if(!EsDateColumn(column)) {
					continue;
				}
			}
			
				strElse=" else ";				
				existe=false;
				tieneChangeParent=false;
				tieneOnEventDbParent=false;
				
				/*
				if(!paraTextArea && GetOnChangeColumnFromPropertiesC(column)) {	
					existe=true;
					
				}  else if (paraTextArea && GetOnChangeColumnFromPropertiesC(column) && EsTextAreaColumnC(column)){
					existe=true;
				}
				*/
				
				if(GetOnChangeColumnFromPropertiesC(column)) {
					existe=true;
					//Trace.WriteLine(column.Name+"="+GetOnChangeColumnFromPropertiesC(column));
				}
				
				
				tieneChangeParent=GetOnChangeParentFromColumnFromPropertiesC(column);
				tieneOnEventDbParent=GetOnEventDbParentColumnFromPropertiesC(column);
				
					
				if(existe) {
					//Trace.WriteLine("Columna="+column.Name);
					
					/*
					if(paraTextField && !paraTextArea && !paraLabel && !paraCheckBox && !paraDateChooser) {
						Trace.WriteLine("TEXTF");
					}
					*/										
					
					if(esPrimero) {
							strElse="";
						}
						
						sVariablesArray+="\r\n\t\t\t"+strElse+"if(sTipo.equals(\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\")) {";//"-"+
						//Trace.WriteLine(sVariablesArray);
						
						String strClasesSiOnChange="";
						
						//Trace.WriteLine(sVariablesArray);
						
						if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {
							strClasesSiOnChange=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
							
							if(!strClasesSiOnChange.Equals("")) {
								/*
								if(GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column).Equals("")) {
									strClasesSiRelacionadas=GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase);					
								} else {
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
								}
								*/
								
								if(!strClasesSiOnChange.Equals("TODOS")) {
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
									
									strClasesSi=strClasesSiRelacionadas.Split(',');
									
									//sVariablesArray+="\r\n\t\t\t\tclasses=new ArrayList<Classe>();";
									
									foreach(String strClase in strClasesSi) {
										sVariablesArray+="\r\n\t\t\t\tclasses.add(new Classe("+strClase+".class));";
									}
								} else {
									sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
									sVariablesArray+="\r\n\t\t\t\t\tclasses="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
									sVariablesArray+="\r\n\t\t\t\t}";
								}
							} else {
								sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
								sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
								sVariablesArray+="\r\n\t\t\t\t}";
							}
						} else {
							sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
							sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
							sVariablesArray+="\r\n\t\t\t\t}";
						}
						
						String strOnChangeDb="false";
						
						if(GetOnEventDbColumnFromPropertiesC(column)) {
							strOnChangeDb="true";
						}
						
						
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.classesActual=new ArrayList<Classe>();";
						sVariablesArray+="\r\n\t\t\t\tthis.classesActual.addAll(classes);";
		
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())/*GetNombreClaseC(tableSchema.ToString())*/+"(sTipo,\"Formulario\",eventoGlobalTipo,ControlTipo."+sTipoControl+",EventoTipo."+sEventoTipo+",EventoSubTipo."+sEventoSubTipo+",\""+sTipoControl+"\",classes,"+strOnChangeDb+",esControlTabla);";//sTipo//EventoGlobalTipo.CONTROL_CHANGE
						
						if(tieneChangeParent) {
							sVariablesArray+="\r\n\r\n\t\t\t\tesUsoDesdeHijoLocal=true;";
						}
						
						if(tieneOnEventDbParent) {
							sVariablesArray+="\r\n\t\t\t\tconIrServidorAplicacionParent=true;";
						}
						
						
						strClasesSiParentRelacionadas=GetNombresClasesSiOnChangeParentFromColumnFromPropertiesC(column);									
						
						if(!strClasesSiParentRelacionadas.Equals("")) {
							strClasesSiParent=strClasesSiParentRelacionadas.Split(',');
							
							sVariablesArray+="\r\n";
							
							foreach(String strClase in strClasesSiParent) {
								sVariablesArray+="\r\n\t\t\t\tarrClasses.add(\""+strClase+"\");";
							}
						}
						
						
						
						sVariablesArray+="\r\n\t\t\t}";
						
						if(esPrimero) {
							esPrimero=false;
						}
										
					//sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column,paraSeleccionarEvento,esPrimero);			
				}				
		}	
	}
	
	
					
	return sVariablesArray;
}

public String GetAccionConRecargarFk() {
	String strReturn="false";
	
	if(!blnEsReporte) {
		if(blnTieneForeignKey) {
			strReturn="true";
		}
	}
	
	return strReturn;
}

public String GetRelacionesEventoNuevoPreparar() {
	String sVariablesArray="";
	String strClasesSiRelacionadas="";
	String[] strClasesSi;

	if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {
		if(!GetNombresClasesSiOnChangeFromTableFromPropertiesC(TablaBase).Equals("")) {
			/*
			if(GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column).Equals("")) {
			strClasesSiRelacionadas=GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase);					
			} else {
			strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
			}
			*/
									
			strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromTableFromPropertiesC(TablaBase);
									
			strClasesSi=strClasesSiRelacionadas.Split(',');
									
			//sVariablesArray+="\r\n\t\t\t\tclasses=new ArrayList<Classe>();";
									
			foreach(String strClase in strClasesSi) {
				sVariablesArray+="\r\n\t\t$classes[]=new Classe("+strClase+"->class);";
			}
		} else {
			sVariablesArray+="\r\n\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getConGuardarRelaciones()) {";
			sVariablesArray+="\r\n\t\t\t\t$classes[]="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(array(),DeepLoadType::$NONE);";
			sVariablesArray+="\r\n\t\t\t}";
		}
			
	} else {
		sVariablesArray+="\r\n\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getConGuardarRelaciones()) {";
		sVariablesArray+="\r\n\t\t\t$classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(array(),DeepLoadType::$NONE);";
		sVariablesArray+="\r\n\t\t}";
	}
						
	return sVariablesArray;						
}

public  String GetCallFuncionesSetActualComboForeignKeys(bool esParaVariablesGlobalDataBase,bool conTraerDesdeBaseDatos,bool esConObjetoClaseParametro)
{
	String sVariablesArray="";	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	String sModuloDominio="";
	String sModuloDominioProperties="";
	
	bool ConEjb=false;
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strObjetoBean="";

	if(!esConObjetoClaseParametro) {
		strObjetoBean=GetObjetoBeanC(TablaBase);
	} else {
		strObjetoBean="$"+GetNombreClaseObjetoC(TablaBase.ToString());
	}
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sModuloDominio="$this->moduloActual->getId()";
				
				if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)){
					continue;
				}
				
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!esParaVariablesGlobalDataBase) {
					if(conTraerDesdeBaseDatos) {
						/*
						sVariablesArray+="\r\n\r\n\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column);
						sVariablesArray+="\r\n\t\t\t\t\tif(!"+strObjetoBean+"."+GetNombreConCargarControlVariablesSwingC(column,"","",false)+") {";	
						sVariablesArray+="\r\n\t\t\t\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKeyLista(\" where id=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"());";
						sVariablesArray+="\r\n\t\t\t\t\t\t//this.inicializarActualizarBinding"+GetNombreClase(TablaBase.ToString())+"(false,false);";
						sVariablesArray+="\r\n\t\t\t\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey(\"Todos\");";
						sVariablesArray+="\r\n\t\t\t\t\t}";
							
						sVariablesArray+="\r\n\t\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";
						*/
					} else {
						if(!EsColumnaVariableGlobalDataBaseFromPropertiesC(column) && !EsColumnaVariableModuloGlobalC(column)
							&& !column.Name.Equals(strIdUsuario) && !column.Name.Equals(strIdAnio) && !column.Name.Equals(strIdMes)) { //&& !ContieneColumna(TablaBase,strIdAnio) && !ContieneColumna(TablaBase,strIdMes)) {
								
							sVariablesArray+="\r\n\t\t\t$this->setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+/*GetNombreClaseObjetoC(TablaBase.ToString())*/strObjetoBean+"->get"+strField_+""+sPrefijo+sColumna+"(),false,'Formulario');";
						}
					}
				} else {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						//sVariablesArray+="\r\n\t\t\t\t//this.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
						
						if(!column.Name.Equals(strIdUsuario)) {
							sVariablesArray+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString()) +"Clase->set"+strField_+""+sPrefijo+sColumna+"($this->parametroGeneralUsuarioActual->get"+strField_+""+sPrefijo+sColumna+"());";
						
						} else {
							sVariablesArray+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString()) +"Clase->set"+strField_+""+sPrefijo+"id_usuario"+"($this->usuarioActual->get"+strField_+""+strIdGetSet+"());";
						}
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						
						sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
						
						if(!sModuloDominioProperties.Equals(String.Empty)) {
							sModuloDominio="ModuloConstantesFuncionesAdditional::"+sModuloDominioProperties;														
						}												
	
						//sVariablesArray+="\r\n\t\t\t\t$this->setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+sModuloDominio+",false,'Formulario');";
						sVariablesArray+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString()) +"Clase->set"+strField_+""+sPrefijo+"id_modulo"+"($this->moduloActual->get"+strField_+""+strIdGetSet+"());";
					}
				}
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
				if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
					/*
					arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
					strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
					*/
				}
			}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualFechas(bool esParaVariablesGlobalDataBase)
{
	String sVariablesArray="";	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	String sModuloDominio="";sModuloDominio+="";
	String sModuloDominioProperties="";sModuloDominioProperties+="";
		
	if(ConFechaSistemaDatabaseFromPropertiesC(TablaBase.Database)) {
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsDateColumn(column)) {
				sVariablesArray+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+GetNombreCompletoColumnaClaseC(column)+"($this->parametroGeneralUsuarioActual->getfecha_sistema());";
			}	
		}
	}
	
	return sVariablesArray;
}

public string GetSetVariablesClaseReturnToBean(bool fromObjetoToBean,bool soloForeignKey,bool fromObjetoToObjeto){		
		bool ConEjb=false;
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\r\n\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=false;
		string strCommentEjb="";strCommentEjb+="";
		
		String strControl="";strControl+="";
		String strTituloControl="";strTituloControl+="";
		String strTipoControlId="";
		String strTipoControClaselId="";strTipoControClaselId+="";
		String strColumna="";
		String strToString="";
		String strToStringBase=".toString()";
		String strClaseBeanLocal=strClaseBean;
		
		String strSufijoObjeto="Local";
		
		if(!fromObjetoToBean) {
			if(!fromObjetoToObjeto) {
				strSufijoObjeto=strClaseBean;
				strClaseBeanLocal="";
			} else {
				strSufijoObjeto="Origen";
				strClaseBeanLocal="";
			}
		}
		
		//if(paraObjetoBean) {
		//strSufijoObjeto=strClaseBean;
		//}
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		String strDefaultInit="if($conDefault || ($conDefault==false && ";
		String strIfDefault="";
		
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(soloForeignKey) {
				if(!column.IsForeignKeyMember) {
					continue;
				}
			}
			
			if(column.Name.Equals(strVersionRow)) {
				continue;
			}
			
			if(!fromObjetoToObjeto) {
				if(EsColumnaOcultaTablaC(column) || EsBinaryColumn(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
					continue;	
				}
			}
			
			strToString="";
			strColumna=GetNombreColumnaClaseC(column);
			
			strIfDefault=strDefaultInit+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+"->get"+GetNombreCompletoColumnaClaseC(column)+"()!=null && $"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+"->get"+GetNombreCompletoColumnaClaseC(column)+"()!="+GetDefaultValueColumna(column)+"";
			strIfDefault+=")) {";
			
			if(column.Name.Equals(strId)) {
				strColumna=GetNombreColumnaClaseC(column);
				strToString=strToStringBase;
				
				strTipoControlId="jLabel";
				strTipoControClaselId="JLabel";
				
				if(!TieneIdentityColumnC(column)) {
					strTipoControlId="jTextField";
					strTipoControClaselId="JTextFieldMe";
				}
				
				//strVariables+=strTabsBase+"this."+strTipoControlId+GetNombreColumnaClaseC(column)/*strIdGetSet*/+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
				strVariables+=strTabsBase+"if($conColumnasBase) {"+strIfDefault+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+"->set"+GetNombreCompletoColumnaClaseC(column)+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+"->get"+GetNombreCompletoColumnaClaseC(column)+"());}"+"}";
				
			}  else if(column.Name.Equals(strVersionRow)) {
				strToString=strToStringBase;
				//strVariables+=strTabsBase+"this.jLabel"+strVersionRowGetSet+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
				strVariables+=strTabsBase+strIfDefault+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+"->set"+GetNombreCompletoColumnaClaseC(column)+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+"->get"+GetNombreCompletoColumnaClaseC(column)+"());}";
				
			} else if(!column.IsForeignKeyMember) {
				strVariables+=strTabsBase+strIfDefault+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+"->set"+GetNombreCompletoColumnaClaseC(column)+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+"->get"+GetNombreCompletoColumnaClaseC(column)+"());}";
				
				/*
				if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
					if(column.Size<51) {	
						strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";
						
					} else if(column.Size<200) {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					} else {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					}
				} else if(column.DataType==DbType.Boolean) {
					strVariables+=strTabsBase+"this.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setSelected("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
					strToString=strToStringBase;
					strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";	
					
				} else if(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column)) {
					strVariables+=strTabsBase+"this.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".setDate("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				}
				*/
			} else {
				if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)){
					continue;
				}
				
				if(!EsColumnaVariableGlobalDataBaseFromPropertiesC(column) && !EsColumnaVariableModuloGlobalC(column)
							&& !column.Name.Equals(strIdUsuario) && !ContieneColumna(TablaBase,strIdAnio) && !ContieneColumna(TablaBase,strIdMes)) {
					
					strVariables+=strTabsBase+strIfDefault+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+"->set"+GetNombreCompletoColumnaClaseC(column)+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+"->get"+GetNombreCompletoColumnaClaseC(column)+"());}";
				}								
			}
		}
		
		return strVariables;
}

public String GetJQueryHtmlTabla(TableSchema TablaBase,TableSchema TablaBasePadre,ColumnSchema columnSchemaPadre,bool esMantenimientoSimple,bool esParaForeignKey,TableSchema TablaBasePadreFK,bool esParaReportes,bool esMantenimientoDeImagen,bool ConFaces,bool ConRichFaces,bool EsParaBusquedaRapida,bool conEditar)  {
	String strHtml="";
	String strHtmlCampoId="";
	String strHtmlCampoTextBoxId="";
	String strHtmlReadOnly="readonly";
	String strClassCampo=" class=\"elementotabla\" ";
	String strTituloColumna="";
	String strGetColumnsFaces="";
	
	String strVariableAppend="$this->htmlTabla"+GetNombreClaseC(TablaBase.ToString())+"s";
	
	strVariableAppend="$htmlTabla"+GetNombreClaseC(TablaBase.ToString())+"sLocal";
	
	strHtml+="\r\n\t\t"+strVariableAppend+"='<form id=\"frmTablaDatos"+GetNombreClaseC(TablaBase.ToString())+"\" name=\"frmTablaDatos"+GetNombreClaseC(TablaBase.ToString())+"\">';";
	strHtml+="\r\n\t\t"+strVariableAppend+".='<div id=\"divTablaDatosAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"sAjaxWebPart\"'.$style_div.'>';";
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='<input type=\"hidden\" id=\"t-maxima_fila\" name=\"t-maxima_fila\" value=\"'.count($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"s).'\">';";
	strHtml+="\r\n\t\t"+strVariableAppend+".='<span class=\"titulotabla\">"+GetTituloNombreTableFromPropertiesC(TablaBase)+GetPluralTituloNombreTableFromPropertiesC(TablaBase)+"</span>';";
	strHtml+="\r\n\t\t"+strVariableAppend+".='<table id=\"tblTablaDatos"+GetNombreClaseC(TablaBase.ToString())+"s\" name=\"tblTablaDatos"+GetNombreClaseC(TablaBase.ToString())+"s\" '.$class_display.' cellpadding=\"3\" cellspacing=\"3\" '.$style_tabla.' border=\"1\" rules=\"rows\">';";
	
	//String strHtmlTitulosColumnas="\r\n\t\t"+strVariableAppend+".='<thead><tr class=\"cabeceratabla\">';\r\n";					
	
	String strHtmlTitulosColumnas="";
	
	strHtml+="\r\n\t\t"+strVariableAppend+".='<thead><tr'.$class_cabecera.'>';\r\n\t\t// class=\"cabeceratabla\"\r\n";
	strHtml+="\r\n\t\t\t\tBYDAN-TITULOS";
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='</tr></thead>';";
	
	strHtml+="\r\n\r\n\t\tif(!$paraReporte) {";
	strHtml+="\r\n\t\t"+strVariableAppend+".='<tfoot><tr'.$class_cabecera.'>';\r\n\t\t// class=\"cabeceratabla\"\r\n";
	strHtml+="\r\n\t\t\t\tBYDAN-TITULOS";
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='</tr></tfoot>';";
	strHtml+="\r\n\t\t}";
	
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='<tbody>';";
	
	//strHtml+="\r\n\t\t\t\t<?php";
	strHtml+="\r\n\r\n\t\t$i = 0;";
	//strHtml+="\r\n\r\n\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"s!=null && count($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"s)>0) {";
	//strHtml+="\r\n\t\t\tforeach ($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"s as $"+GetNombreClaseObjetoC(TablaBase.ToString())+") {";
	
	strHtml+="\r\n\r\n\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+"sLocal!=null && count($"+GetNombreClaseObjetoC(TablaBase.ToString())+"sLocal)>0) {";
	strHtml+="\r\n\t\t\tforeach ($"+GetNombreClaseObjetoC(TablaBase.ToString())+"sLocal as $"+GetNombreClaseObjetoC(TablaBase.ToString())+") {";
	
	
	strHtml+="\r\n\r\n\t\t\t\tif(Constantes::$STRTIPOTABLA!='normal' && !paraReporte) {";
	strHtml+="\r\n\t\t\t\t\t$i++;";
	strHtml+="\r\n\t\t\t\t\t"+strVariableAppend+".='<tr>';";
	strHtml+="\r\n\t\t\t\t} else {";	
	strHtml+="\r\n\t\t\t\t\t$class = null;";
	strHtml+="\r\n\t\t\t\t\t$onmouse = null;";
	strHtml+="\r\n\t\t\t\t\tif ($i++ % 2 == 0) {";
	strHtml+="\r\n\t\t\t\t\t\t$class = 'filazebra';";
	strHtml+="\r\n\t\t\t\t\t} else {";
	strHtml+="\r\n\t\t\t\t\t\t$class = 'filazebraanti';";
	strHtml+="\r\n\t\t\t\t\t}";
	//strHtml+="\r\n\t\t?>";
	
	strHtml+="\r\n\r\n\t\t\t\t\tif(!$paraReporte && Constantes::$STRTIPOTABLA=='normal') {";
	strHtml+="\r\n\t\t\t\t\t\t$onmouse = ' onmouseover=\"funcionGeneral.activarFilaTabla(this);\" onmouseout=\"funcionGeneral.desactivarFilaTabla(this,\\''.$class.'\\');\" ';";
	strHtml+="\r\n\t\t\t\t\t}\r\n";
	strHtml+="\r\n\t\t\t\t\t"+strVariableAppend+".='<tr class=\"'.$class.'\"'.$onmouse.'>';";
	strHtml+="\r\n\t\t\t\t}\r\n";
	
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC().ToLower();
	string strPrefijoFuncion="\r\n\t";
	string strPrefijoTipo = "";

	strPrefijo=strPrefijoFuncion;	
	string strNombre = "";	
	
	if(!blnTieneIdentityColumn) {
		strHtmlReadOnly="";
	}
	
	
	for (int i = 0,iNoFk=0; i < TablaBase.Columns.Count; i++) {
		if(!TablaBase.Columns[i].IsForeignKeyMember && !TablaBase.Columns[i].Name.Equals(strId) && !TablaBase.Columns[i].Name.Equals(strVersionRow)) {
			iNoFk++;
		}
		
		if(GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])) { continue; }
		
		if(!PermiteColumnaTablaC(TablaBase.Columns[i], iNoFk,EsParaBusquedaRapida)) { continue;}
		
		/*
		if(EsPathImagenDocumentoArchivoColumn(TablaBase.Columns[i])) {
			//||TablaBase.Columns[i].IsForeignKeyMember
			continue;
		}
		*/
		
		
		strTituloColumna=GetColumnsFacesTituloTableMaintenanceC(TablaBase.Columns[i],TablaBasePadre,columnSchemaPadre,esParaForeignKey,TablaBasePadreFK,esMantenimientoDeImagen,ConFaces,ConRichFaces,EsParaBusquedaRapida,i,conEditar);		
		//POR CAKEPHP SE REEMPLAZA TITULOS
		strHtmlTitulosColumnas+=GetJQueryHtmlTablaReemplaceTitulo(TablaBase.Columns[i],strTituloColumna,conEditar,strVariableAppend);
	
		if(!TablaBase.Columns[i].Name.Equals(strId) && !TablaBase.Columns[i].Name.Equals(strVersionRow)) {
			if(!TablaBase.Columns[i].IsForeignKeyMember) {
				strGetColumnsFaces=GetColumnsFacesTableMaintenanceC(TablaBase.Columns[i],TablaBasePadre,columnSchemaPadre,esParaForeignKey,TablaBasePadreFK,esMantenimientoDeImagen,ConFaces,ConRichFaces,EsParaBusquedaRapida,conEditar,i.ToString(),strVariableAppend);			
				strHtml+=strGetColumnsFaces;
				//TALVEZ REVISAR, PERO NO SE NECESITA YA REEMPLAZOS
				//strHtml+=GetJQueryHtmlTablaReemplaceColumn(TablaBase.Columns[i],strGetColumnsFaces,conEditar,strVariableAppend);
			} else {
				if(!conEditar) {
					strPrefijoTipo = GetPrefijoTipoC(TablaBase.Columns[i]);
					strNombre = GetNombreColumnaClaseC(TablaBase.Columns[i]);
					
					strPrefijo=strPrefijoTabla+strPrefijoTipo;
		
					strPrefijo+=strNombre;
										
					//string strColumn="public "+/*param+*/"$"+strPrefijo+";";
		
					//strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td> '."+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::getRelationship_"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(TablaBase.Columns[i]))+"Descripcion($"+GetNombreClaseObjetoC(TablaBase.ToString())+"->getRelationship_"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(TablaBase.Columns[i]))+"()).'</td>';";
					
					if(!(EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) || EsColumnaVariableModuloGlobalC(TablaBase.Columns[i]))) {					
						//NORMAL		
						strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td"+strClassCampo+"> '.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->"+strPrefijo+strDescription+".'</td>';";
					} else {
						//VARIABLE GLOBAL
						strHtml+="\r\n\t\t\t\tif(Constantes::$ISDEVELOPING) {\r\n\t\t\t\t"+strVariableAppend+".='<td> '.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->"+strPrefijo+strDescription+".'</td>';\r\n\t\t\t\t}";
					}
					
				} else {
					strGetColumnsFaces=GetColumnsFacesTableMaintenanceC(TablaBase.Columns[i],TablaBasePadre,columnSchemaPadre,esParaForeignKey,TablaBasePadreFK,esMantenimientoDeImagen,ConFaces,ConRichFaces,EsParaBusquedaRapida,conEditar,i.ToString(),strVariableAppend);			
					
					strHtml+=strGetColumnsFaces;
					
					/*
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) || EsColumnaVariableModuloGlobalC(TablaBase.Columns[i])) {
						//ES GLOBAL
						strHtml+="111"+strGetColumnsFaces+"222";
						//strHtml+="\r\n\r\n\t\tif(Constantes::$ISDEVELOPING) {"+strGetColumnsFaces+"\r\n\t\t}";
						
						//strTituloColumna="\r\n\r\n\t\tif(Constantes::$ISDEVELOPING) {"+strTituloColumna+"\r\n\t\t}";					
					} else {
						//NORMAL
						
						strHtml+=strGetColumnsFaces;
					}
					*/
				}
			}
			
			//continue;
		} else if(TablaBase.Columns[i].Name.Equals(strId)){
				
			String strFuncionJsActual="";
			String strParametroDescripcion="";
			//TableSchema tableFk;
			
			if(EsParaBusquedaRapida) {
				//if(TablaBase.Columns[i].IsForeignKeyMember) {
					//tableFk=GetNombreTablaRelacionadaFromColumn(TablaBase.Columns[i]);
					
					//if(GetConNoLoadForeignKeyTableFromPropertiesC(tableFk)) {
						
						strParametroDescripcion=".',\\''."+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::get"+GetNombreClaseC(TablaBase.ToString())+"Descripcion($"+GetNombreClaseObjetoC(TablaBase.ToString())+").'\\''";
					//}
				//}
	
	
				strFuncionJsActual=" funcionjsactual"+GetNombreClaseObjetoC(TablaBase.ToString())+"=\"'.str_replace('TO_REPLACE',$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"()"+strParametroDescripcion+",$this->strFuncionJs).'\" ";
				
				//strFuncionJsActual=" funcionjsactual"+GetNombreClaseObjetoC(TablaBase.ToString())+"=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\" ";
				//str_replace('TO_REPLACE',$medico->getId(),$this->strFuncionJs)
			}
			
			//<a href="/general/index.php/mejia_ocupacions/seleccionarActual/1" id="link1535221081" onclick=" event.returnValue = false; return false;">1<img src="/general/app/webroot/img/Imagenes/seleccionar.gif" alt="Seleccionar" border="0" height="15" width="15"></a>
			
			strHtml+="\r\n\t\t\t\tif(!$paraReporte) {";
			
			strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td"+strClassCampo+"><a>'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'<img class=\"imgseleccionar"+GetNombreClaseObjetoC(TablaBase.ToString())+"\" idactual"+GetNombreClaseObjetoC(TablaBase.ToString())+"=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\" "+strFuncionJsActual+"title=\"SELECCIONAR "+GetTituloNombreTableFromPropertiesC(TablaBase)+" ACTUAL\" src=\"'.Constantes::$strPathBaseImagenToComplete.'/Imagenes/seleccionar.gif\" alt=\"Seleccionar\" border=\"0\" height=\"15\" width=\"15\"></a></td>';";													
			
			if(!EsParaBusquedaRapida) {
				strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td"+strClassCampo+"><a>'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'<img class=\"imgeliminartabla"+GetNombreClaseObjetoC(TablaBase.ToString())+"\" idactual"+GetNombreClaseObjetoC(TablaBase.ToString())+"=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\" title=\"ELIMINAR "+GetTituloNombreTableFromPropertiesC(TablaBase)+" ACTUAL\" src=\"'.Constantes::$strPathBaseImagenToComplete.'/Imagenes/eliminar.gif\" alt=\"Eliminar\" border=\"0\" height=\"15\" width=\"15\"></a></td>';";							
				
				
				if(!conEditar) {
					//strHtml+="\r\n\t\t\t\tif(!$paraReporte) {";
					strHtml+="\r\n\t\t\t\t//CHECKBOX SELECCIONAR, ELIMINAR Y TEXTBOX ID";
					strHtmlCampoId="'.$i.'";
					strHtmlCampoTextBoxId="";
					
				} else {				
					strHtml+="\r\n\t\t\t\t//CHECKBOX SELECCIONAR, ELIMINAR Y TEXTBOX ID";
					strHtmlCampoId="";
					strHtmlCampoTextBoxId="<input id=\"t-cel_'.$i.'_0\" name=\"t-cel_'.$i.'_0\" type=\"text\" maxlength=\"25\" value=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\" style=\"width:50px\" "+strHtmlReadOnly+"></input>";
				}
				
				strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td"+strClassCampo+"><input id=\"t-id_'.$i.'\" name=\"t-id_'.$i.'\" type=\"checkbox\" class=\"chkb_id\" title=\"SELECCIONAR "+GetTituloNombreTableFromPropertiesC(TablaBase)+" ACTUAL\" value=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\">"+strHtmlCampoId+"</input>"+strHtmlCampoTextBoxId+"</td>';"; //ESTO '.$i.', ANTES FIN INPUT CHECKBOX </input>
				
				if(GetConDivResumenTableFromPropertiesC(TablaBase)) {
					strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td"+strClassCampo+"><a>'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'<img class=\"imgseleccionarmostrardivresumen"+GetNombreClaseObjetoC(TablaBase.ToString())+"\" idactual"+GetNombreClaseObjetoC(TablaBase.ToString())+"=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\" title=\"DATOS RESUMIDOS "+GetTituloNombreTableFromPropertiesC(TablaBase)+" ACTUAL\" src=\"'.Constantes::$strPathBaseImagenToComplete.'/Imagenes/ojo.gif\" alt=\"Ver\" border=\"0\" height=\"15\" width=\"15\"></a></td>';";	
				}
				
				
				
				
				
				//MOSTRAR DIV-ACCIONES-RELACIONADAS
				if(TieneClasesRelacionadasParaMostrarC(TablaBase)) {
					strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td"+strClassCampo+"><a>'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'<img class=\"imgseleccionarmostraraccionesrelaciones"+GetNombreClaseObjetoC(TablaBase.ToString())+"\" idactual"+GetNombreClaseObjetoC(TablaBase.ToString())+"=\"'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"().'\" title=\"DATOS RELACIONADOS\" src=\"'.Constantes::$strPathBaseImagenToComplete.'/Imagenes/ejecutar_acciones.gif\" alt=\"Ver\" border=\"0\" height=\"15\" width=\"15\"></a></td>';";	
					//strColumn+="<td>"+strPhpEcho+" $ajax->link($"+GetNombreClaseObjetoC(column.Table.ToString())+"->"+strId+".$html->image('/img/Imagenes/ejecutar_acciones.gif', array('width'=>15,'height'=>15, 'alt' => 'Acciones', 'border' =>'0')), array( 'controller' => '"+GetCakeModelControllerNameC(column.Table.ToString())+"s', 'action' => 'mostrarEjecutarAcciones', $"+GetNombreClaseObjetoC(column.Table.ToString())+"->"+strId+"),array( 'escape'=>false, 'update' => array('divAccionesRelaciones"+GetNombreClaseC(column.Table.ToString())+strAjaxWebPart+"','divMensajes'), 'before' => '"+GetNombreClaseObjetoC(column.Table.ToString())+"FuncionGeneral.seleccionar"+GetNombreClaseC(column.Table.ToString())+"OnClick();', 'complete' => '"+GetNombreClaseObjetoC(column.Table.ToString())+"FuncionGeneral.seleccionar"+GetNombreClaseC(column.Table.ToString())+"OnComplete();' )); "+strCierraPhpEcho+"</td>";
					//strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='<td></td>';";
				}
			}
			
			
			strHtml+="\r\n\t\t\t\t}";
			
		} else if(TablaBase.Columns[i].Name.Equals(strVersionRow)){
			strGetColumnsFaces=GetColumnsFacesTableMaintenanceC(TablaBase.Columns[i],TablaBasePadre,columnSchemaPadre,esParaForeignKey,TablaBasePadreFK,esMantenimientoDeImagen,ConFaces,ConRichFaces,EsParaBusquedaRapida,conEditar,i.ToString(),strVariableAppend);			
			
			strHtml+="\r\n\t\t\t\tif(!$paraReporte) {";
			strHtml+=strGetColumnsFaces;
			strHtml+="\r\n\t\t\t\t}";
		}
	}
	
	if(esMantenimientoSimple){
		//BYDAN-TO-DO
		//Trace.WriteLine("ok-ok-ok-ok-ok-ok-ok");
		strHtml+="\r\n\r\n\t\t\t\tif(!$paraReporte && !$this->bitEsBusqueda) {";
		strHtml+=GetNavegacionTituloTablaFacesTablasClasesRelacionadasC(TablaBase,esParaForeignKey,ConFaces,ConRichFaces,true,strVariableAppend,false);							
		strHtml+="\r\n\r\n\t\t\t\t}";
		
		strHtmlTitulosColumnas+="\r\n\r\n\t\tif(!$paraReporte && !$this->bitEsBusqueda) {";
		strHtmlTitulosColumnas+=GetNavegacionTituloSoloTablaFacesTablasClasesRelacionadasC(TablaBase,esParaForeignKey,ConFaces,ConRichFaces,true,strVariableAppend);
		strHtmlTitulosColumnas+="\r\n\r\n\t\t}";
	}
	
	strHtmlTitulosColumnas+="\r\n\t\t"+strVariableAppend+".='<th style=\"display:none\" class=\"actions\"></th>';";
	
					
	strHtml=strHtml.Replace("BYDAN-TITULOS",strHtmlTitulosColumnas);
					
	//ACCIONES YA NO
	strHtml+="\r\n\r\n\t\t\t\t"+strVariableAppend+".='<td style=\"display:none\" class=\"actions\"></td>';";
	
	
	//strHtml+="\r\n\t\t\t\t\t\t<?php //echo $this->Html->link(__('Visualizar', true), array('action' => 'view', $"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"'])); ?>";
	//strHtml+="\r\n\t\t\t\t\t\t<?php //echo $this->Html->link(__('Editar', true), array('action' => 'edit', $"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"'])); ?>";
	//strHtml+="\r\n\t\t\t\t\t\t<?php //echo $this->Html->link(__('Eliminar', true), array('action' => 'delete', $"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"']), null, sprintf(__('Esta usted seguro de eliminar # %s?', true), $"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"'])); ?>";
	//strHtml+="\r\n\t\t\t\t"+strVariableAppend+".='</td>';";
	
	strHtml+="\r\n\r\n\t\t\t\t"+strVariableAppend+".='</tr>';";		
	
	strHtml+="\r\n\t\t\t}";
	strHtml+="\r\n\t\t}";
	
	
	strHtml+="\r\n\r\n\t\tif($paraReporte) {";
	strHtml+="\r\n\t\t\t$proceso_print='document.getElementById(\\'divTablaDatosAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"sAjaxWebPart\\').style.overflow=\\'visible\\';';";
	strHtml+="\r\n\t\t\t$proceso_print.='window.print();';";
	strHtml+="\r\n\t\t\t$proceso_print.='document.getElementById(\\'divTablaDatosAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"sAjaxWebPart\\').style.overflow=\\'auto\\';';";
	strHtml+="\r\n\r\n\t\t\t"+strVariableAppend+".='<tr><td><input type=\"button\" onclick=\"'.$proceso_print.'\" style=\"visibility:visible\" value=\"Imprimir\" /></td></tr>';";
	strHtml+="\r\n\t\t}";
	
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='</tbody>';";
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='</table>';";	
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='</div>';";
	strHtml+="\r\n\r\n\t\t"+strVariableAppend+".='</form>';";
	
	
	//strHtml+="\r\n\r\n\t\treturn "+strVariableAppend+";\r\n\r\n";
						
	return strHtml;
}

public String GetJQueryHtmlTablaReemplaceTitulo(ColumnSchema column,String strTituloColumna,bool conEditar,String strVariableAppend) {
	strTituloColumna=strTituloColumna.Replace("\r\n","");
	strTituloColumna=strTituloColumna.Replace("\t","");
	
	strTituloColumna="\r\n\t\t"+strVariableAppend+".='"+strTituloColumna+"';";
	
	strTituloColumna=strTituloColumna.Replace("<?php echo '","");
	strTituloColumna=strTituloColumna.Replace("</b>';?>","</b>");					
	
	if(column.Name.Equals(strId)) {
		strTituloColumna="\r\n\t\tif(!$paraReporte) {\r\n\t\t//EN UNA LINEA PRIMERO COLUMNAS(ID,ELIMINAR,SELECCIONAR)"+strTituloColumna+"\r\n\t\t}";		
	
	} else if(column.Name.Equals(strVersionRow)) {
		strTituloColumna="\r\n\t\tif(!$paraReporte) {\r\n\t\t"+strTituloColumna+"\r\n\t\t}";		
	
	} else if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column) || EsColumnaVariableModuloGlobalC(column)) {
		strTituloColumna="\r\n\r\n\t\tif(Constantes::$ISDEVELOPING) {"+strTituloColumna+"\r\n\t\t}";					
	}
	
	return strTituloColumna;
}

public String GetJQueryHtmlTablaReemplaceColumn(ColumnSchema column,String strGetColumnsFaces,bool conEditar,String strVariableAppend) {
	/*
	strGetColumnsFaces=strGetColumnsFaces.Replace("\r\n","");
	strGetColumnsFaces=strGetColumnsFaces.Replace("\t","");
	
	strGetColumnsFaces="\r\n\t\t\t\t"+strVariableAppend+".='"+strGetColumnsFaces+"';";
	
	strGetColumnsFaces=strGetColumnsFaces.Replace("<?php echo '","");
	strGetColumnsFaces=strGetColumnsFaces.Replace("</b>';?>","");
	strGetColumnsFaces=strGetColumnsFaces.Replace("?></td>",".'</td>");
	strGetColumnsFaces=strGetColumnsFaces.Replace("<td> <?php echo ","<td> '.");
	strGetColumnsFaces=strGetColumnsFaces.Replace("style=\"display:none\"> <?php echo","style=\"display:none\">'.");
	strGetColumnsFaces=strGetColumnsFaces.Replace("<td><?php echo ","<td> '.");
	strGetColumnsFaces=strGetColumnsFaces.Replace("; .",".");					
	*/		
	
	if(column.Name.Equals(strId)) {
		strGetColumnsFaces="\r\n\t\tif(!$paraReporte) {\r\n\t\t//EN UNA LINEA PRIMERO COLUMNAS(ID,ELIMINAR,SELECCIONAR)"+strGetColumnsFaces;
		strGetColumnsFaces+="\r\n\t\t}";
	}
	
	return strGetColumnsFaces;
}

public String GetJQueryHtmlTablaResumen(TableSchema TablaBase,TableSchema TablaBasePadre,ColumnSchema columnSchemaPadre,bool esMantenimientoSimple,bool esParaForeignKey,TableSchema TablaBasePadreFK,bool esParaReportes,bool esMantenimientoDeImagen,bool ConFaces,bool ConRichFaces,bool esObjetoLocal,String strTab)  {
	String strHtml="";
	String strEsObjetoLocal="";
	int intRowSpan=1;
	
	String strVariableHtml="$htmlTabla"+GetNombreClaseC(TablaBase.ToString())+"sLocal";	
	//strVariableHtml="$this->htmlTabla"+GetNombreClaseC(TablaBase.ToString());
	
	foreach (ColumnSchema column in TablaBase.Columns) {
		String strTipo=GetTipoColumnaClaseC(column);	
		String strPrefijo=GetPrefijoTipoC(column);	
		String strColumna=GetNombreColumnaClaseC(column);
			
		String strPrefijoCampo="";
		
		strPrefijoCampo=GetPrefijoTablaC().ToLower();
		
		String strPrefijoColumn=strPrefijoCampo+strPrefijo;	
		strPrefijoColumn+=strColumna;
		
		strEsObjetoLocal="$"+GetNombreClaseObjetoC(column.Table.ToString())+"Local";
		if(!esObjetoLocal) {
			strEsObjetoLocal="$this->"+GetNombreClaseObjetoC(column.Table.ToString());
		}
		
		//String strColumnName=GetNombreClaseObjetoC(column.Table.ToString())+"['"+GetNombreClaseC(column.Table.ToString())+"']['"+GetNombreColumnFromProperties(column)+"']";
		String strColumnName=strEsObjetoLocal+"->"+strPrefijoColumn;
		String strColumnLabel="- "+GetWebNombreTituloColumnFromPropertiesC(column)+"";
		
		if(!column.IsForeignKeyMember && !column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
			intRowSpan++;
			
			if(EsBitColumn(column)) {
				 strColumnName="Funciones::getCheckBox("+strColumnName+",'none',true)";
			}
			
			strHtml+="\r\n\t\t"+strTab+strVariableHtml+".='<tr><td><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tr '.$strAuxStyleBackgroundContenido.'><td width=\"20%\" '.$strAuxStyleBackgroundContenidoCabecera.' ><b>"+strColumnLabel+"</b></td><td>'.trim("+strColumnName+").'</td></tr></table></td></tr>';";
		} else {
			if(column.IsForeignKeyMember) {//ServicioEventoConstantesFunciones::getRelationship_ValorEventoDescripcion
				strHtml+="\r\n\t\t"+strTab+strVariableHtml+".='<tr><td><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tr '.$strAuxStyleBackgroundContenido.'><td width=\"20%\" '.$strAuxStyleBackgroundContenidoCabecera.' ><b>"+strColumnLabel+"</b></td><td>'.trim("+strColumnName+strDescription+").'</td></tr></table></td></tr>';";
			}
		}
	}
	
	strHtml+="\r\n\r\n\t\t"+strTab+strVariableHtml+"=str_replace('#rowspan','"+intRowSpan.ToString()+"',"+strVariableHtml+");";
	
	return strHtml;
}

public String GetSessionClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			ArrayList tiposClasesRelacionadas=GetTipoClasesRelacionadasTablaClasesRelacionadasC(TablaBase,false,false,true);
						
			foreach(TipoClaseRelacionada tipoClaseRelacionada in tiposClasesRelacionadas) {
				strTablaClaseRelacionada+="\r\n\r\n\t\t$"+GetNombreClaseObjetoC(tipoClaseRelacionada.tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(tipoClaseRelacionada.tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";
						
				strTablaClaseRelacionada+="\r\n\r\n\t\tif($"+GetNombreClaseObjetoC(tipoClaseRelacionada.tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"==null) {";
				strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tipoClaseRelacionada.tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tipoClaseRelacionada.tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();";
				strTablaClaseRelacionada+="\r\n\t\t}";
			}
			
			return strTablaClaseRelacionada;
		}
		
public  string GetModificarParametroMantenimientoColumna(ColumnSchema column) {
	String strVariablesArray="";
			
	if(EsBitColumn(column)){
		//strVariablesArray+="jQuery(\"#"+GetNombreColumnFromProperties(column)+"\").val("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+".data."+GetNombreColumnFromProperties(column)+");";		
		strVariablesArray+="\r\n\t\t\t\tif($this->data['"+GetNombreColumnFromProperties(column)+"']==null) {$this->data['"+GetNombreColumnFromProperties(column)+"']=false;} else {if($this->data['"+GetNombreColumnFromProperties(column)+"']=='on') {$this->data['"+GetNombreColumnFromProperties(column)+"']=true;}}";
	}
	
	
				
	return strVariablesArray;
}

public String GetJQueryRowActionsBusquedasIndicesTablasClases(TableSchema TablaBase,TableSchema TablaBasePadre,bool esMantenimientoSimple,bool esParaForeignKey,bool esParaReportes,bool ConFaces,bool ConRichFaces) 
		{	
		
			String strHtml="";
			//String strBusquedasDe="";
			//String strBusquedaFK="";
			//String strBusquedaFKVisibleCabbecera="";								
			String strObjectFace="";											
			
			String strJQueryFuncion="";	
			
			strJQueryFuncion+="\r\n\t\t\telse if($action==\"visibilidadvariablebydanreplace\"){\r\n";
			
			if(!blnEsProceso) {
				strJQueryFuncion+="\t\t\t\t$this->setCargarDivSeccionesActualizar"+GetNombreClaseC(TablaBase.ToString())+"(false,true,false,false,false,false,false,false,false,false,false,false);\r\n";
			} else {
				strJQueryFuncion+="\t\t\t\t$this->setCargarDivSeccionesActualizar"+GetNombreClaseC(TablaBase.ToString())+"(false,false,false,false,true,false,false,false,false,false,false,false);\r\n";
			}
			
			strJQueryFuncion+="\t\t\t\t$this->get"+GetNombreClaseC(TablaBase.ToString())+"svisibilidadvariablebydanreplaceParaProcesar();\r\n";							
			strJQueryFuncion+="\t\t\t}";
	
	
			if(ConFaces||ConRichFaces)
			{
				strObjectFace=GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces;
			}
			
			String strHtmlInicial="\r\n<tr class=\"busqueda\">\r\n<td align=\"center\">\r\n<a name=\"Busquedas\"></a>\r\n<table width=\"100%\" align=\"center\" style=\"visibility:visible\">";
			String strHtmlFinal="\r\n\t</tr>\r\n</table>\r\n</td>\r\n</tr>";
			strHtmlInicial+="";
			strHtmlFinal+="";;
			
			String strTituloBusquedaInicialConRichFaces="";strTituloBusquedaInicialConRichFaces+="";
			String strTituloBusquedaInicialConRichFaces2="";
		
			if(ConRichFaces) {//labelbydanreplace para luego ser reemplazado por en nombre de la busqueda
				
				//if(!blnConJQueryCode) {
					//strTituloBusquedaInicialConRichFaces="\r\n\t\t\t\t\t<div id=\"divvisibilidadvariablebydanreplace\" style=\"<?php echo $"+strObjectFace+"->visibilidadvariablebydanreplace ?>\"><span class=\"busquedatitulo\">labelbydanreplace</span> \r\n\t\t\t\t\t<table class=\"busqueda\">";
				//} else {
					
/*JQUERY*/			strTituloBusquedaInicialConRichFaces2+=strJQueryFuncion;//"\r\n\t\tjQuery(\"#divvisibilidadvariablebydanreplace\").attr(\"style\","+strObjectFace+".visibilidadvariablebydanreplace);";
				//}
				
			}
			
			String strTituloBusquedaFinalConRichFaces="";
				   strTituloBusquedaFinalConRichFaces+="";
			//Adiciono por cada tipo de busqueda sera una tabla y en ella un control simpletogglepanel
						
			String strBusquedaConRichFaces=strBusqueda;
				   strBusquedaConRichFaces+="";
			//quito la palabra "BUSQUEDAS", es decir para que quede vacio,el titulo ira en el simpletoggle
			if(ConRichFaces) {
				strBusquedaConRichFaces="";
			}
			
			String strHtmlFormularioFinal="";
				   strHtmlFormularioFinal+="";
			String strTituloBusqueda="";
			String strTituloBusquedaInicial="";//strTituloBusquedaInicialConRichFaces+"\r\n\t\t\t\t\t<tr class=\"busquedatitulo\">\r\n\t\t\t\t\t\t<td colspan=\"3\" align=\"left\" class=\"busquedatitulo\">\r\n\t\t\t\t\t\t\t<font>"+strBusquedaConRichFaces;					
			
			String strTituloBusquedaMiddle="";
			String strTituloBusquedaFinal="";//"</font>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>";
				   strTituloBusquedaFinal+="";
			
			if(!ConRichFaces) {
				strTituloBusquedaFinal="</font>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>";
			} else {
				strTituloBusquedaFinal="";
			}
			
			String strTitulo=string.Empty;
			String strComboText=string.Empty;
			String strBoton=string.Empty;
			String strBotonBusqueda=string.Empty;
			String strCombo=string.Empty;
			
			String strFuncion=string.Empty;
			bool existe=false;
				 existe=false;
			
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			String sVisibiliadIndice=String.Empty;
	
			if(!esParaReportes)
			{
				foreach(IndexSchema indexSchema in TablaBase.Indexes) {						
					if(!indexSchema.IsPrimaryKey) {
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
							continue;
						}
					
						sVisibiliadIndice=indexSchema.Name;
						if(indexSchema.IsUnique) {
							continue;																						//strTitulo=GetNombreClaseC(TablaBase.ToString())+"</td>";
							//strBoton="\r\n\t\t<td width=\"11%\"><input type=\"button\" value=\"Buscar\" onclick=\"PaginaWebInteraccion"+  GetNombreClaseC(TablaBase.ToString())+"Buscar"+GetNombreClaseC(TablaBase.ToString())+"s('"+indexSchema.Name+ "')\">\r\n\t\t</td>";																						//strCombo="<td width=\"79%\"><a:widget id=\"djcmb"+  GetNombreClaseC(TablaBase.ToString())+"\" name=\"dojo.combobox\"/></td>";																																//strInitFuncion+=GetNombreClaseC(TablaBase.ToString())+" "+"Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						} else {
							existe=true;
							
							
							strComboText="";
							strTitulo="";
							strTituloBusquedaMiddle="";
							
							if(indexSchema.Name.Contains(strFK)) {									
								TableSchema tableRelacionada=GetNombreTablaRelacionadaFromColumn(indexSchema.MemberColumns[0]);								
								
								//solo cambia el comentario
								//if(ConRichFaces) {
									strTituloBusqueda+=strTituloBusquedaInicialConRichFaces2;//strTituloBusquedaInicial+/*strTituloBusquedaMiddle+ */strTituloBusquedaFinal;
								//} else {
									//strTituloBusqueda=strTituloBusquedaInicial+strTituloBusquedaMiddle+ strTituloBusquedaFinal;
								//}
								
							}
						}	
						
						if(!indexSchema.Name.Contains("FK"))
						{
							strComboText="";
							strTitulo="";
							strTituloBusquedaMiddle="";
							int count=1;	count+=0;
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{									
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									}
								} else {
									if(!indexSchema.Name.Contains("BusquedaRango")) {										
										
									} else {
																		break;
									}
								}
							}
							
								strTituloBusqueda+=strTituloBusquedaInicial;/*strTituloBusquedaMiddle+*/// strTituloBusquedaFinal;
							}
						//solo cambia el replace
						//if(ConRichFaces) {
						//Trace.WriteLine("abc");
						strInitFuncion+=strTituloBusquedaInicialConRichFaces2.Replace("labelbydanreplace",strTituloBusquedaMiddle).Replace("visibilidadvariablebydanreplace",sVisibiliadIndice);//strTituloBusqueda.Replace("labelbydanreplace",strTituloBusquedaMiddle).Replace("visibilidadvariablebydanreplace",sVisibiliadIndice);//+"\r\n\t\t\t\t\t<tr>"+strTitulo+strComboText+strBoton+"\r\n\r"+strTituloBusquedaFinalConRichFaces;
							
					}
					
				}
			}			
			
			strHtml=strInitFuncion;//strRowSearch+strHtmlInicial0+strhtmlformularioinicial+strInitFuncion +strHtmlFormularioFinal+strHtmlFinal0+"\r\n\r\n";
								
			return strHtml;//+strBusquedaFK; 
		}
		
public String GetNameController() {
	String strTablaClaseRelacionada=string.Empty;
	
		if(EsParaCakePhp) {
			strTablaClaseRelacionada=GetNombreClase(TablaBase.ToString())+"sController";
		}else {
			strTablaClaseRelacionada=GetNombreClase(TablaBase.ToString())+"Controller";
		}
		
	return strTablaClaseRelacionada;
}
		
public String GetExtendController() {
	String strTablaClaseRelacionada=string.Empty;
	
	if(EsParaCakePhp){
		strTablaClaseRelacionada="AppController";
	}else {
		//strTablaClaseRelacionada="ControllerBase";
		
		strTablaClaseRelacionada=GetNombreClase(TablaBase.ToString())+"ControllerAdditional";
	}
		
	return strTablaClaseRelacionada;
}



public String GetAddClassTablasClasesRelacionadas(bool conComentario,String strTab) 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			String strNombreAdicional="";
			String strClaseRelacionada="";
			String strComment="";
			
			if(conComentario) {
				strComment="//";
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);					
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strTablaClaseRelacionada+="\r\n\tpublic "+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/ "$"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";";
					strClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable);
				}
				else
				{
					//strTablaClaseRelacionada+="\r\n\tpublic "+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/"$"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s;";
					strClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable);
				}

				strTablaClaseRelacionada+="\r\n\t\t\t"+strTab+strComment+"$class=new Classe('"+strClaseRelacionada+"');";				
				strTablaClaseRelacionada+="\r\n\t\t\t"+strTab+strComment+"$classes[]=$class;";
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetAsignarParameterMensajeClase(ColumnSchema column)
{
	string strFunction="";strFunction+="";
	string strIfFunction="";
	
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	string strSufijoMensaje="Mensaje";
	
	string strPrefijo=String.Empty;
	string strPrefijoTabla="";//GetPrefijoTablaC().ToLower();
	string strPrefijoTipo ="str";//GetPrefijoTipoC(column);

	strPrefijo=strPrefijoTabla+strPrefijoTipo+strSufijoMensaje;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
		
	string param =  GetTipoColumnaClaseC(column);
	
	strIfFunction="if($strNombreCampo=='"+GetNombreColumnFromProperties(column)+"') {";
	
	return /*param+*/strIfFunction+"$this->"+strPrefijo+"=$strMensajeCampo;}";
}

public string GetParameterMensajeClase(ColumnSchema column)
{
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	string strSufijoMensaje="Mensaje";
	
	string strPrefijo=String.Empty;
	string strPrefijoTabla="";//GetPrefijoTablaC().ToLower();
	string strPrefijoTipo ="str";//GetPrefijoTipoC(column);

	strPrefijo=strPrefijoTabla+strPrefijoTipo+strSufijoMensaje;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
		
	string param =  GetTipoColumnaClaseC(column);
	

	return "public "+/*param+*/"$"+strPrefijo+"='';";
}

public string GetValueDefaultParameterMensajeClase(ColumnSchema column)
{	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	string strPrefijo=String.Empty;
	string strValor=String.Empty;
	string strSufijoMensaje="Mensaje";
	string strPrefijoTabla="";//GetPrefijoTablaC().ToLower();
	string strPrefijoTipo ="str";//GetPrefijoTipoC(column);

	strPrefijo="$this->"+strPrefijoTabla+strPrefijoTipo+strSufijoMensaje;
	
	
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;

			
	return strPrefijo+"='';";
}

public string GetValueParameterSessionMensajeClase(ColumnSchema column)
{	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	string strPrefijo=String.Empty;
	string strValor=String.Empty;
	string strSufijoMensaje="Mensaje";
	string strPrefijoTabla="";//GetPrefijoTablaC().ToLower();
	string strPrefijoTipo ="str";//GetPrefijoTipoC(column);

	strPrefijo="$this->"+strPrefijoTabla+strPrefijoTipo+strSufijoMensaje;
	
	
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;

	strPrefijo+="=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+strPrefijoTabla+strPrefijoTipo+strSufijoMensaje+strNombre+";";
	
	return strPrefijo;
}

public string GetFuncionDescargarArchivo(ColumnSchema columnSchema) {
	string strVariables="";

	strVariables="\r\n\tfunction descargarArchivo ($strPathFile='') {";
	strVariables+="\r\n\t\t$this->view = 'Media';";
	strVariables+="\r\n\r\n\t\t$strPathFile=str_replace('-.-','/',$strPathFile);";			
	strVariables+="\r\n\r\n\t\t$params = array(";
	strVariables+="\r\n\t\t'id' => Funciones::getArchivoParametro($strPathFile,'id'),";
	strVariables+="\r\n\t\t'name' => Funciones::getArchivoParametro($strPathFile,'name'),";
	strVariables+="\r\n\t\t'download' => true,";
	strVariables+="\r\n\t\t'extension' => Funciones::getArchivoParametro($strPathFile,'extension'), // must be lower case";
	strVariables+="\r\n\t\t'path' => Funciones::getArchivoParametro(WWW_ROOT.$strPathFile,'path') // don't forget terminal 'DS'";
	strVariables+="\r\n\t\t);";
		
	strVariables+="\r\n\r\n\t\t$this->set($params);";
	strVariables+="\r\n\t}";
	
	return strVariables;
}

public string GetFuncionesGuardarArchivo(ColumnSchema columnSchema) {
	string strVariables="";
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC();
	string strPrefijoFuncion="set";
	string strPrefijoTipo = GetPrefijoTipoC(columnSchema);
	string strNombre = GetNombreColumnaClaseC(columnSchema);
	
	strVariables="\r\n\tfunction guardarArchivo"+columnSchema.Name+"() {";
	strVariables+="\r\n\t\t//SOLO SI ES NECESARIO";
	strVariables+="\r\n\t\ttry {";
	strVariables+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
	strVariables+="\r\n\t\t$this->getNewConnexion();";
	strVariables+="\r\n\r\n\t\t$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=0;";
	strVariables+="\r\n\r\n\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";				
	strVariables+="\r\n\r\n\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {;";
	strVariables+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();";
	strVariables+="\r\n\t\t}";
	strVariables+="\r\n\r\n\t\t$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual();";
	
	strVariables+="\r\n\r\n\t\t$strNameFile=$this->data['frmArchivo"+columnSchema.Name+"']['archivo']['name'];";
	strVariables+="\r\n\t\t$strPathUploadedFile=$this->data['frmArchivo"+columnSchema.Name+"']['archivo']['tmp_name'];";		
	strVariables+="\r\n\t\t$strPathFolder=WWW_ROOT.Constantes::$STRCARPETAARCHIVOS.DS.Constantes::$STRCONTEXTSERVER.DS.'"+GetNombreClaseObjetoC(TablaBase.ToString())+"'.DS.'"+columnSchema.Name.ToLower()+"';";
	strVariables+="\r\n\t\t$strPathFile=$strPathFolder.DS.$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual.$strNameFile;";
	strVariables+="\r\n\t\t$strPathFileToSave=str_replace(WWW_ROOT,'',$strPathFile);";
	strVariables+="\r\n\t\t$strPathFileToSave=str_replace('\\\\','/',$strPathFileToSave);";
	
	strVariables+="\r\n\r\n\t\tif($"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual!=null && $"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual>0 && file_exists($strPathUploadedFile)) {";
	strVariables+="\r\n\t\t\t$this->cargarDatosCliente();";
	strVariables+="\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->setConnexion($this->getConnexion());";
	strVariables+="\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->getEntity($"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);\r\n\t\t\t//WithConnection";
	strVariables+="\r\n\t\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()!=null && $this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->get"+strIdGetSet+"()>0) {";
	strVariables+="\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->"+strPrefijoFuncion+strPrefijoTabla+strPrefijoTipo+strNombre+"($strPathFileToSave);";
	strVariables+="\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->setDatosCliente($this->datosCliente);";
	strVariables+="\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->save"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t//WithConnection";
	strVariables+="\r\n\t\t\t\t$this->actualizarLista($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"(),$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s());";
	strVariables+="\r\n\t\t\t}";
	strVariables+="\r\n\t\t}";
	
	strVariables+="\r\n\r\n\t\tFunciones::moverUploadedArchivo($strPathFolder,$strPathUploadedFile,$strPathFile);";
	
	strVariables+="\r\n\r\n\r\n\t\t//SOLO SI ES NECESARIO";
	strVariables+="\r\n\t\t$this->setCommitCloseConnexion();";
	strVariables+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";
	
	strVariables+="\r\n\r\n\t\t$this->inicializar"+GetNombreClaseC(TablaBase.ToString())+"();";
	strVariables+="\r\n\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Actual =$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase;";
	
	strVariables+="\r\n\t\t//$this->data =$this->migrarModel"+GetNombreClaseC(TablaBase.ToString())+"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase);";
			
	strVariables+="\r\n\r\n\t\t$this->returnAjax"+GetNombreClaseC(TablaBase.ToString())+"();";
	strVariables+="\r\n\t\t} catch(Exception $e) {";
	strVariables+="\r\n\t\t\t$this->setRollbackCloseConnexion();";
	strVariables+="\r\n\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);";
	//strVariables+="\r\n\t\t\tthrow $e;";
	strVariables+="\r\n\t\t}";
	strVariables+="\r\n\t}";
	
	return strVariables;
}

public string GetFuncionesSeleccionarActualArchivo(ColumnSchema columnSchema) {
	string strVariables="";
	
	//NO-ACTUALIZAR-ARCHIVO-PAGINA
	if(ConArchivosV1Cake) {
		strVariables="\r\n\tfunction seleccionarActualArchivo"+columnSchema.Name+"($"+strId+GetNombreClaseC(TablaBase.ToString())+") {";
		strVariables+="\r\n\t\t//SOLO SI ES NECESARIO";
		strVariables+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
		strVariables+="\r\n\r\n\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";				
		strVariables+="\r\n\r\n\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {;";
		strVariables+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();";
		strVariables+="\r\n\t\t}";
		strVariables+="\r\n\r\n\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual($"+strId+GetNombreClaseC(TablaBase.ToString())+");";		
		strVariables+="\r\n\r\n\t\t//SOLO SI ES NECESARIO";
		strVariables+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";
		strVariables+="\r\n\r\n\t\t$this->Session->write("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"));";		
		
		strVariables+="\r\n\r\n\t\t$this->returnAjax"+GetNombreClaseC(TablaBase.ToString())+"(true);";
		strVariables+="\r\n\t}";
	}
	
	strVariables+="\r\n\tpublic function abrirCargarArchivo"+GetNombreColumnaClaseC(columnSchema)+"($"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=0) {";
	strVariables+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
	strVariables+="\r\n\r\n\t\t$this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual;";
	strVariables+="\r\n\r\n\t\ttry {";
	strVariables+="\r\n\r\n\t\t\t$strPagina=Constantes::$STRNONE;";
	strVariables+="\r\n\r\n\t\t\t//$this->sistemaLogicAdditional=new SistemaLogicAdditional();";
	strVariables+="\r\n\r\n\t\t} catch(Exception $e) {";
	strVariables+="\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);";
	strVariables+="\r\n\t\t}";
	strVariables+="\r\n\t}";
	
	//Trace.WriteLine("kjsdkfj");
	
	return strVariables;
}

public string SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				/*
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isIngreso() || perfilcampo"+strSufijoVariables+".getField_isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isModificacion() || perfilcampo"+strSufijoVariables+".getField_isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isConsulta() || perfilcampo"+strSufijoVariables+".getField_isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				*/
				//NO FUNCIONA READONLY PARA INSERT UPDATE TOCA OCULTAR TODO
				strVariables+="\r\n\r\n\t\t\tif($this->blnPermisoTodo"+strSufijoVariables+"==false && $this->blnPermisoActualizarOriginal"+strSufijoVariables+"==false) {";								
				strVariables+="\r\n\t\t\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+"=false;";
				strVariables+="\r\n\t\t\t\t$this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+"='display:none';";
				strVariables+="\r\n\t\t\t} else {";								
				strVariables+="\r\n\t\t\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+"=true;";
				strVariables+="\r\n\t\t\t\t$this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+"='display:table-row';";
				strVariables+="\r\n\t\t\t}";

			}
		}
		
		return strVariables;
	}
	
public string SetSeguridadNuevoPrepararCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				/*
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isIngreso() || perfilcampo"+strSufijoVariables+".getField_isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isModificacion() || perfilcampo"+strSufijoVariables+".getField_isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".getField_isConsulta() || perfilcampo"+strSufijoVariables+".getField_isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				*/
				
				strVariables+="\r\n\r\n\t\tif($this->blnPermisoTodo"+strSufijoVariables+"==false && $this->blnPermisoNuevo"+strSufijoVariables+"==false) {";								
				strVariables+="\r\n\t\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+"=false;";
				strVariables+="\r\n\t\t\t$this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+"='display:none';";
				strVariables+="\r\n\t\t} else {";								
				strVariables+="\r\n\t\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+"=true;";
				strVariables+="\r\n\t\t\t$this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+"='display:table-row';";
				strVariables+="\r\n\t\t}";
			}
		}
		
		return strVariables;
	}
	
public  String DefinirVariablesActualForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			
			if(!GetNombreCompletoClaseRelacionadaFromColumn(column).Equals(GetNombreClaseC(TablaBase.ToString()))) {
				sVariablesArray+="\r\n\tpublic $"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=0;";
				sVariablesArray+="\r\n\r\n\tpublic function get"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual() {";
				sVariablesArray+="\r\n\t\treturn $this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual;";
				sVariablesArray+="\r\n\t}";
			
				sVariablesArray+="\r\n\r\n\tpublic function set"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual($"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual) {";
				sVariablesArray+="\r\n\t\t$this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=$"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual;";
				sVariablesArray+="\r\n\t}";
			}
		}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public  String DefinirVariablesActualInicializarForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			
			sVariablesArray+="\r\n\t\t\t$this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=0;";
		
		}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t\t\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public  String DefinirFuncionesSeleccionarActualForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	String strEjbComment="";
	
	//if(ConEjb){
	//	strEjbComment="//";
	//}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			/*
			sVariablesArray+="\r\n\tprotected Long "+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual=0L;";
			sVariablesArray+="\r\n\r\n\tpublic Long get"+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual() {";
			sVariablesArray+="\r\n\t\treturn "+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual;";
			sVariablesArray+="\r\n\t}";
		
			sVariablesArray+="\r\n\r\n\tpublic void set"+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual(Long "+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual) {";
			sVariablesArray+="\r\n\t\tthis."+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual= "+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual;";
			sVariablesArray+="\r\n\t}";
			*/
			
			sVariablesArray+="\r\n\tpublic function seleccionar"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual($"+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual=0) {";
			sVariablesArray+="\r\n\t\ttry	{";
			sVariablesArray+="\r\n\t\t\t//SOLO SI ES NECESARIO";
			sVariablesArray+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
			sVariablesArray+="\r\n\r\n\t\t\t$this->"+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual=$"+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual;";
			sVariablesArray+="\r\n\t\t\t"+/*GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+*/"$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Aux=new "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"();";
					
			//sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Aux= "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable.getEntity("+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual);";
			sVariablesArray+="\r\n\t\t\t"+strEjbComment+"$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Logic= new "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Logic();";
			sVariablesArray+="\r\n\t\t\t"+strEjbComment+"$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Logic->getEntityWithConnection($this->"+strId+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Actual);";
			sVariablesArray+="\r\n\t\t\t"+strEjbComment+"$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Aux= $"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Logic->get"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"();";			
				
			sVariablesArray+="\r\n\r\n\t\t\t$this->"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey=array();";//new "+strTypeNewCollection+"<"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+">"+strTypeNewCollectionEnd+";";
			sVariablesArray+="\r\n\t\t\t//$this->"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey[]=$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Aux;";
			sVariablesArray+="\r\n\t\t\t$this->"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey[$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Aux->get"+strIdGetSet+"()]="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::get"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion($"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Aux);";//Relationship_
			sVariablesArray+="\r\n\r\n\t\t\t//SOLO SI ES NECESARIO";
			sVariablesArray+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";
			sVariablesArray+="\r\n\r\n\t\t\t$this->return"+GetNombreClaseC(TablaBase.ToString())+"s(true);";
				
			sVariablesArray+="\r\n\r\n\t\t} catch(Exception $e) {";
			
			sVariablesArray+="\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);";
			
			sVariablesArray+="\r\n\t\t}";
			sVariablesArray+="\r\n\t}";
			}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public string GetBusquedaFKFuncionesGeneralesVariablesInicializar() {
	String strTablaClaseRelacionada=string.Empty;
	TableSchema tableSchema=null;
	bool blnEsPrimero=true;
	String strCondicion="";
	       strCondicion+="";
		
	foreach(ColumnSchema columnSchema in TablaBase.Columns) {	
		//&&!columnSchema.Name.Equals(strId+TablaBase.Name)
		
		if(columnSchema.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(columnSchema)) {			
			tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);						
			//$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces
			strTablaClaseRelacionada+="\r\n\tpublic $"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+strPrefijoJSFFaces+"=null;";
			strTablaClaseRelacionada+="\r\n\tpublic $"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+strPrefijoJSFSessionFaces+"=null;";
		}
	}
	
	return  strTablaClaseRelacionada;
}

public string GetBusquedaFKFuncionesGeneralesInicializar() {
	String strTablaClaseRelacionada=string.Empty;
	TableSchema tableSchema=null;
	bool blnEsPrimero=true;
	String strCondicion="";strCondicion+="";
	//&&!columnSchema.Name.Equals(strId+TablaBase.Name)
	foreach(ColumnSchema columnSchema in TablaBase.Columns) {	
		if(ConBusquedaAnterior && columnSchema.IsForeignKeyMember && GetBusquedaForeignKeyColumnFromPropertiesC(columnSchema)) {			
			tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);			
			/*
			strTablaClaseRelacionada+="\r\n\t\t\t"+strCondicion+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getstrNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(TablaBase.ToString())+"().equals("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SNOMBREOPCION)) {";
			strTablaClaseRelacionada+="\r\n\t\t\t\t$sClavePaginaFk='"+GetNombreClaseObjetoC(tableSchema.ToString())+"';";
			strTablaClaseRelacionada+="\r\n\t\t\t}";
			*/
			strTablaClaseRelacionada+="\r\n\r\n\t\t\t//FUNCIONES BUSQUEDA "+GetNombreClaseC(tableSchema.ToString()).ToUpper();
			strTablaClaseRelacionada+="\r\n\t\t\t$this->inicializarControllerAuxiliarBusqueda"+GetNombreClaseC(tableSchema.ToString())+"();";			
			strTablaClaseRelacionada+="\r\n\t\t\t$this->inicializarSessionAuxiliarBusqueda"+GetNombreClaseC(tableSchema.ToString())+"();";
		}
	}
	
	return  strTablaClaseRelacionada;
}

public string GetBusquedaFKFuncionesGenerales() {
	String strTablaClaseRelacionada=string.Empty;
	TableSchema tableSchema=null;
	bool blnEsPrimero=true;
		 blnEsPrimero=true;
	String strCondicion="";
		 strCondicion+="";
		
	String strSufijo=string.Empty;
	
	if(EsParaCakePhp) {
		strSufijo="s";
	}
		
	foreach(ColumnSchema columnSchema in TablaBase.Columns) {	
		//&&!columnSchema.Name.Equals(strId+TablaBase.Name)
		
		if(ConBusquedaAnterior && columnSchema.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(columnSchema)) {			
			tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);			
			/*
			strTablaClaseRelacionada+="\r\n\t\t\t"+strCondicion+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getstrNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(TablaBase.ToString())+"().equals("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SNOMBREOPCION)) {";
			strTablaClaseRelacionada+="\r\n\t\t\t\t$sClavePaginaFk='"+GetNombreClaseObjetoC(tableSchema.ToString())+"';";
			strTablaClaseRelacionada+="\r\n\t\t\t}";
			*/
			strTablaClaseRelacionada+="\r\n\tpublic function inicializarControllerAuxiliarBusqueda"+GetNombreClaseC(tableSchema.ToString())+"() {";
			if(!blnConJQueryCode){
				strTablaClaseRelacionada+="\r\n\t\tApp::import('Controller', '"+GetNombreClaseC(tableSchema.ToString())+"s');";
			}
			strTablaClaseRelacionada+="\r\n\t\t$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strSufijo+ strPrefijoJSFFaces+"();";
			strTablaClaseRelacionada+="\r\n\t\t$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"->Session=$this->Session;";
			
			//CARGAR COMBOS FOREIGN KEYS
			foreach(ColumnSchema column in tableSchema.Columns) {
				if(column.IsForeignKeyMember) {								
					strTablaClaseRelacionada+="\r\n\t\t$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+"->cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"($this->getConnexion());\r\n";								
				}	
			}
			
			strTablaClaseRelacionada+="\r\n\t\t$this->set("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRCONTROLLERNAME, $this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFFaces+");";
			strTablaClaseRelacionada+="\r\n\t}";
			
			strTablaClaseRelacionada+="\r\n\r\n\tpublic function inicializarSessionAuxiliarBusqueda"+GetNombreClaseC(tableSchema.ToString())+"() {";
			strTablaClaseRelacionada+="\r\n\t\t$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";				
			strTablaClaseRelacionada+="\r\n\t\tif($this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"==null) {";
			strTablaClaseRelacionada+="\r\n\t\t\t$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"();";				
			strTablaClaseRelacionada+="\r\n\t\t\t//$this->Session->write('"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"',$this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+");";							
			strTablaClaseRelacionada+="\r\n\t\t}";			
			strTablaClaseRelacionada+="\r\n\t\t$this->set("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRSESSIONNAME, $this->"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+");";		
			strTablaClaseRelacionada+="\r\n\t}";
		}
	}
	
	return  strTablaClaseRelacionada;
}

public string  GetNombreCompletarIdSistemaActual() {
	string strVariables="";//Empresa+"\"+ Package+"\"+ strPackageBusiness+"\"+ strPackageEntities+"\"+GetNombreClaseC(TablaBase.ToString());
	
	if(strPhp53Version.Equals("5.2.17")) {
		strVariables=Package.ToUpper();		
			
	} else if(strPhp53Version.Equals("5.3")) {
		strVariables="";
		
	} else {
		strVariables=Package.ToUpper();		
	}
		
	return strVariables;
	
}

public string  GetNombrecompletoclase() {
	string strVariables="";//Empresa+"\"+ Package+"\"+ strPackageBusiness+"\"+ strPackageEntities+"\"+GetNombreClaseC(TablaBase.ToString());
	
	if(strPhp53Version.Equals("5.2.17")) {
		strVariables=GetNombreClaseC(TablaBase.ToString());		
			
	} else if(strPhp53Version.Equals("5.3")) {
		strVariables=Empresa+"\\"+ Package+"\\"+ strPackageBusiness+"\\"+ strPackageEntities+"\\"+GetNombreClaseC(TablaBase.ToString());
		
	} else {
		strVariables=GetNombreClaseC(TablaBase.ToString());		
	}
		
	return strVariables;
	
}

public string  GetActualizarSessionSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);															
				strVariables+="\r\n\r\n\r\n\t\t$this->blnPermisoTodo"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->blnPermisoTodo"+strSufijoVariables+";";
				strVariables+="\r\n\t\t$this->blnPermisoNuevo"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->blnPermisoNuevo"+strSufijoVariables+";";
				strVariables+="\r\n\t\t$this->blnPermisoActualizarOriginal"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->blnPermisoActualizarOriginal"+strSufijoVariables+";";			
				strVariables+="\r\n\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->blnPermisoNuevoActualizar"+strSufijoVariables+";";			
				strVariables+="\r\n\t\t$this->blnPermisoConsulta"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->blnPermisoConsulta"+strSufijoVariables+";";
				strVariables+="\r\n\t\t$this->strPermisoCssAuxiliar"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->strPermisoCssAuxiliar"+strSufijoVariables+";";
				strVariables+="\r\n\t\t$this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->strPermisoReadOnlyAuxiliar"+strSufijoVariables+";";
				
			}
		}
		
		return strVariables;
	}
	
public string GetSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);															
				strVariables+="\r\n\r\n\r\n\tpublic $blnPermisoTodo"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic $blnPermisoNuevo"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic $blnPermisoActualizarOriginal"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\tpublic $blnPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\tpublic $blnPermisoConsulta"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic $strPermisoCssAuxiliar"+strSufijoVariables+"='';";
				strVariables+="\r\n\tpublic $strPermisoReadOnlyAuxiliar"+strSufijoVariables+"='';";
				
				strVariables+="\r\n\r\n\tpublic function getblnPermisoTodo"+strSufijoVariables+"() {\r\n\t\treturn $this->blnPermisoTodo"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setblnPermisoTodo"+strSufijoVariables+"($blnPermisoTodo"+strSufijoVariables+") {\r\n\t\t$this->blnPermisoTodo"+strSufijoVariables+" = $blnPermisoTodo"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic function getblnPermisoNuevo"+strSufijoVariables+"() {\r\n\t\treturn $this->blnPermisoNuevo"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setblnPermisoNuevo"+strSufijoVariables+"($blnPermisoNuevo"+strSufijoVariables+") {\r\n\t\t$this->blnPermisoNuevo"+strSufijoVariables+" = $blnPermisoNuevo"+strSufijoVariables+";\r\n\t}";
								
				strVariables+="\r\n\r\n\tpublic function getblnPermisoActualizarOriginal"+strSufijoVariables+"() {\r\n\t\treturn $this->blnPermisoActualizarOriginal"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setblnPermisoActualizarOriginal"+strSufijoVariables+"($blnPermisoActualizarOriginal"+strSufijoVariables+") {\r\n\t\t$this->blnPermisoActualizarOriginal"+strSufijoVariables+" = $blnPermisoActualizarOriginal"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic function getblnPermisoNuevoActualizar"+strSufijoVariables+"() {\r\n\t\treturn $this->blnPermisoNuevoActualizar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setblnPermisoNuevoActualizar"+strSufijoVariables+"($blnPermisoNuevoActualizar"+strSufijoVariables+") {\r\n\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+" = $blnPermisoNuevoActualizar"+strSufijoVariables+";\r\n\t}";
			
				strVariables+="\r\n\r\n\tpublic function getblnPermisoConsulta"+strSufijoVariables+"() {\r\n\t\treturn $this->blnPermisoConsulta"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setblnPermisoConsulta"+strSufijoVariables+"($blnPermisoConsulta"+strSufijoVariables+") {\r\n\t\t$this->blnPermisoConsulta"+strSufijoVariables+" = $blnPermisoConsulta"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic function getstrPermisoCssAuxiliar"+strSufijoVariables+"() {\r\n\t\treturn $this->strPermisoCssAuxiliar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setstrPermisoCssAuxiliar"+strSufijoVariables+"($strPermisoCssAuxiliar"+strSufijoVariables+") {\r\n\t\t$this->strPermisoCssAuxiliar"+strSufijoVariables+" = $strPermisoCssAuxiliar"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic function getstrPermisoReadOnlyAuxiliar"+strSufijoVariables+"() {\r\n\t\treturn $this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic function setstrPermisoReadOnlyAuxiliar"+strSufijoVariables+"($strPermisoReadOnlyAuxiliar"+strSufijoVariables+") {\r\n\t\t$this->strPermisoReadOnlyAuxiliar"+strSufijoVariables+" = $strPermisoReadOnlyAuxiliar"+strSufijoVariables+";\r\n\t}";
			}
		}
		
		return strVariables;
	}
	
public string SetSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				strVariables+="\r\n\r\n\t\t\t$perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional::getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones::$"+column.Name.ToUpper()+",$perfilCampos);";
				
				strVariables+="\r\n\t\t\t$this->blnPermisoTodo"+strSufijoVariables+"=$perfilcampo"+strSufijoVariables+"->gettodo();";
				strVariables+="\r\n\t\t\t$this->blnPermisoNuevo"+strSufijoVariables+"=$perfilcampo"+strSufijoVariables+"->getingreso() || $perfilcampo"+strSufijoVariables+"->gettodo();";
				strVariables+="\r\n\t\t\t$this->blnPermisoActualizarOriginal"+strSufijoVariables+"=$perfilcampo"+strSufijoVariables+"->getmodificacion() ||$perfilcampo"+strSufijoVariables+"->gettodo();";				
				strVariables+="\r\n\t\t\t$this->blnPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\t$this->blnPermisoConsulta"+strSufijoVariables+"=$perfilcampo"+strSufijoVariables+"->getconsulta() || $perfilcampo"+strSufijoVariables+"->gettodo();";
				
				strVariables+="\r\n\t\t\t$this->strPermisoCssAuxiliar"+strSufijoVariables+"='display:table-row';";								
				strVariables+="\r\n\r\n\t\t\tif($this->blnPermisoConsulta"+strSufijoVariables+"==false) {";								
				strVariables+="\r\n\t\t\t\t$this->strPermisoCssAuxiliar"+strSufijoVariables+"='display:none';\r\n\t\t\t}";								
				
			}
		}
		
		return strVariables;
	}
	
public String SetVariablesTablaToCancelar(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String sValor="";
	
	switch(column.Name)
	{
		case strIsActive:
		sValor="";
		break;
		
		case strIsExpired:
		sValor="";
		break;
		
		case strVersionRow:
		sValor="";
		break;
		
		default:
		sValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strIdGetSet+"("+sValor+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "";//"this.set"+strVersionRowGetSet+"(\"\");";
	}
	return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+sPrefijo+ sColumna +"("+sValor+");";
}

public string  GetReportePdfRows(TableSchema tableSchema) {
	String strColumnLabels="";
	String strColumnLabel="";
	bool blnEsPrimero=true;
	
	String strTipo="";
	String strPrefijo="";	
	String strColumna="";	
	String strIfElse="";
	
	//$row=array(<%=GetReportePdfRows(TablaBase)%>);
	
	foreach( ColumnSchema column in tableSchema.Columns) {
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
			continue;
		}
		
		//strColumnLabels+="\r\n\t\t\t";
		
		if(!blnEsPrimero) {
			//strColumnLabels+=",";
		} else {
			blnEsPrimero=false;
		}
		
		strTipo=GetTipoColumnaClaseC(column);	
		strPrefijo=GetPrefijoTipoC(column);	
		strColumna=GetNombreColumnaClaseC(column);	
		strIfElse="\r\nif($request->getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||$request->getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())=='')\r\n{\r\n";
		strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
		
		if(column.Name.Equals(strId)) {
			strColumnLabel="$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"()";
			continue;
		}
		
		if(column.Name.Equals(strVersionRow)) {
			strColumnLabel="$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strVersionRowGetSet+"()";
			continue;
		}
		
		if(!column.IsForeignKeyMember) {
			strColumnLabel="$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strPrefijo+ strColumna +"()";		
			//strColumnLabels+="$data[]=$row;";
		} else {
			strColumnLabel="$this->cargarDescripcion"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strForeignKey+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strPrefijo+ strColumna +"(),$connexion)";		
		}
		
		strColumnLabels+="\r\n\t\t\t$cellReport=new CellReport();";
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport->inicializarTextWidthHeightLine("+strColumnLabel+",40,6,1);";				
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $row[]=$cellReport;";
		
	}
	
	return strColumnLabels;
}		

public string  GetReportePdfRowsVertical(TableSchema tableSchema) {
	String strColumnLabels="";
	String strColumnLabel="";
	bool blnEsPrimero=true;
	
	String strTipo="";
	String strPrefijo="";	
	String strColumna="";	
	String strIfElse="";
	
	//$row=array(<%=GetReportePdfRows(TablaBase)%>);
	
	foreach( ColumnSchema column in tableSchema.Columns) {
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
			continue;
		}
		
		//strColumnLabels+="\r\n\t\t\t";
		
		if(!blnEsPrimero) {
			//strColumnLabels+=",";
		} else {
			blnEsPrimero=false;
		}
		
		strTipo=GetTipoColumnaClaseC(column);	
		strPrefijo=GetPrefijoTipoC(column);	
		strColumna=GetNombreColumnaClaseC(column);	
		strIfElse="\r\nif($request->getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||$request->getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())=='')\r\n{\r\n";
		strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
		
		if(column.Name.Equals(strId)) {
			strColumnLabel="$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strIdGetSet+"()";
			continue;
		}
		
		if(column.Name.Equals(strVersionRow)) {
			strColumnLabel="$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strVersionRowGetSet+"()";
			continue;
		}
		
		if(!column.IsForeignKeyMember) {
			strColumnLabel="$"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strPrefijo+ strColumna +"()";		
			//strColumnLabels+="$data[]=$row;";
		} else {
			strColumnLabel="$this->cargarDescripcion"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strForeignKey+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+"->get"+strPrefijo+ strColumna +"(),$connexion)";		
		}
		
		strColumnLabels+="\r\n\r\n\t\t\t$row=array();";
		strColumnLabels+="\r\n\t\t\t$cellReport=new CellReport();";
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport->inicializarTextWidthHeightLine('"+GetWebNombreTituloColumnFromPropertiesC(column)+"',100,6,1);";				
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $row[]=$cellReport;";
		
		strColumnLabels+="\r\n\t\t\t$cellReport=new CellReport();";
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport->inicializarTextWidthHeightLine("+strColumnLabel+",100,6,1);";				
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $row[]=$cellReport;";
		
		strColumnLabels+=/*"\r\n\t\t\t"+*/"\r\n\t\t\t$data[]=$row;";
		
	}
	
	return strColumnLabels;
}		

public string GetReportePdfHeaders(TableSchema tableSchema)
{
	//ANTES EN GENERAR PDF
	//$header=array(<%=GetReportePdfHeaders(TablaBase)%>);
	
	String strColumnLabels="";
	bool blnEsPrimero=true;
	
	foreach( ColumnSchema column in tableSchema.Columns) {
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
			continue;
		}
		
		if(!blnEsPrimero) {
			//strColumnLabels+=",";
		} else {
			blnEsPrimero=false;
		}
		
		strColumnLabels+="\r\n\t\t$cellReport=new CellReport();";
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport->inicializarTextWidthHeightLine('"+GetWebNombreTituloColumnFromPropertiesC(column)+"',40,7,1);";				
		//strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport.setstrText('"+GetWebNombreTituloColumnFromPropertiesC(column)+"');";				
		//strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport.setintWidth(40);";
		//strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport.setintHeigh(7);";
		//strColumnLabels+=/*"\r\n\t\t\t"+*/" $cellReport.setintLine(1);";		
		strColumnLabels+=/*"\r\n\t\t\t"+*/" $header[]=$cellReport;";
	}
			
	return strColumnLabels;
}

public String GetIndicesInicializarVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				 sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			
			//if(!EsSwing){
				sTipo="String";
				sPrefijo="str";
				sDefault="\"true\"";
			/*} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="true";
			}
			*/
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\t\t\t$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"='display:table-row';";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
public String GetFuncionesIndicesFKVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
			sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			String sDefaultTrue=String.Empty;
			String sDefaultFalse=String.Empty;
			
				sTipo="String";
				sPrefijo="str";
				sDefault="\"false\"";
				sDefaultTrue="\"true\"";
				sDefaultFalse="\"false\"";
			
			
			bool blnTieneForeignMember=false;
			
			String sToString="";
			
			sToString=".toString()";	
			
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema column in TablaBase.Columns)
				{
					if(column.IsForeignKeyMember) {
						sInitFuncion+="\r\n\r\n\tpublic function setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"($isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"){";
						//sInitFuncion+="\r\n\t\t$isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Negation=!$isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+";";
						sInitFuncion+="\r\n\t\t$strParaVisibilidad"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"='display:table-row';";
						sInitFuncion+="\r\n\t\t$strParaVisibilidadNegacion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"='display:none';";
							
						sInitFuncion+="\r\n\r\n\t\tif($isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+") {";
						sInitFuncion+="\r\n\t\t\t$strParaVisibilidad"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"='display:table-row';";
						sInitFuncion+="\r\n\t\t\t$strParaVisibilidadNegacion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"='display:none';";
						sInitFuncion+="\r\n\t\t} else {";
						sInitFuncion+="\r\n\t\t\t$strParaVisibilidad"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"='display:none';";
						sInitFuncion+="\r\n\t\t\t$strParaVisibilidadNegacion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"='display:table-row';";
						sInitFuncion+="\r\n\t\t}\r\n";
						
						foreach(IndexSchema indexSchema in TablaBase.Indexes) {
							if(!indexSchema.IsPrimaryKey)
							{
								sParametersFuncion="";
								sParametersNameFuncion="";
															
								if(indexSchema.IsUnique) {								
								} else {
									blnTieneForeignMember=false;
																		
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{
										if(memberColumnSchema.Column.Name.Equals(column.Name)) {
											blnTieneForeignMember=true;
										}
									}																		
									//sInitFuncion+="\r\n\tprivate "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
								
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {									
									} else {
									}
									
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
										//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
									} else {
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									}
																											
									if(blnTieneForeignMember) {
										sInitFuncion+="\r\n\t\t$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"=$strParaVisibilidad"+GetNombreCompletoClaseRelacionadaFromColumn(column)+";";//sToString+
									} else {
										sInitFuncion+="\r\n\t\t$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"=$strParaVisibilidadNegacion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+""+";";//+sToString
									}									
								}									
								//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
							}
						}						
						sInitFuncion+="\r\n\t}";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					sInitFuncion+="\r\n\tpublic function setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"($isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"){";
					//sInitFuncion+="\r\n\t\t$isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation=!$isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
					sInitFuncion+="\r\n\t\t$strParaVisibilidad"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"='display:table-row';";
					sInitFuncion+="\r\n\t\t$strParaVisibilidadNegacion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"='display:none';";
						
					sInitFuncion+="\r\n\r\n\t\tif($isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+") {";
					sInitFuncion+="\r\n\t\t\t$strParaVisibilidad"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"='display:table-row';";
					sInitFuncion+="\r\n\t\t\t$strParaVisibilidadNegacion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"='display:none';";
					sInitFuncion+="\r\n\t\t} else {";
					sInitFuncion+="\r\n\t\t\t$strParaVisibilidad"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"='display:none';";
					sInitFuncion+="\r\n\t\t\t$strParaVisibilidadNegacion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"='display:table-row';";
					sInitFuncion+="\r\n\t\t}";
					//foreach(ColumnSchema column in TablaBase.Columns)
					//{
					//if(column.IsForeignKeyMember) {
						//sInitFuncion+="\r\n\tprivate void setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(Boolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"){";
						//sInitFuncion+="\r\n\t\tBoolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation=!isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						
						foreach(IndexSchema indexSchema in TablaBase.Indexes) {
							if(!indexSchema.IsPrimaryKey)
							{
								sParametersFuncion="";
								sParametersNameFuncion="";
															
								if(indexSchema.IsUnique) {								
								} else {
									blnTieneForeignMember=false;								
									
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{
										if(GetNombreClaseC(GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column).ToString()).Equals(GetNombreClaseC(tableSchemaForeignKey.ToString()))) {
											blnTieneForeignMember=true;
										}
									}																	
									//sInitFuncion+="\r\n\tprivate "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
								
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {								
									} else {
									}
									
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
										//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
									} else {
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									}
																										
									if(blnTieneForeignMember) {
										sInitFuncion+="\r\n\t\t$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"=$strParaVisibilidad"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";//sToString+
									} else {
										sInitFuncion+="\r\n\t\t$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"=$strParaNoVisibilidadNegacion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+""+";";//sToString+
									}
									
								}									
								//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
							}
						}
						
						sInitFuncion+="\r\n\t}";
					//}
				//}							
				}
			}
			
			return sInitFuncion; 
		}

public String GetSetVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				sClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				sClases=sClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String sClase in sClases)
				{						
					if(sClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	String sComment="";

	sColumna+="\r\n\r\n\t\t$this->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"='none';\r\n";
	sColumna+="\r\n\t\t"+sComment+strGlobalSeguridadComment+"$this->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=(($this->sistemaLogicAdditional->tienePermisosEnPaginaWeb($this->usuarioActual, Constantes::$BIGIDSISTEMA"+GetNombreCompletarIdSistemaActual()+"ACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones::$STRNOMBRECLASE,false))? 'table-cell':'none');\r\n";	
	sColumna+="\r\n\t\t"+strGlobalSeguridadCommentNo+"$this->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"='table-cell';\r\n\r\n";				
	
	return sColumna;
}

public String GetDefinitionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				sClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				sClases=sClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String sClase in sClases)
				{						
					if(sClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetDefinitionVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}

public String GetActualizarSessionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				sClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				sClases=sClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String sClase in sClases)
				{						
					if(sClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetActualizarSessionVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetDefinitionVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\tpublic $strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"='none';\r\n";
	sColumna+="\r\n\tpublic function getstrTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
	sColumna+="\r\n\t\treturn $this->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";

	sColumna+="\r\n\tpublic function setstrTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"($strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+") {";
	sColumna+="\r\n\t\t$this->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"= $strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";
	
	return sColumna;
}

public String GetActualizarSessionVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\t\t$this->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->strTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	
	return sColumna;
}

public String GetSufijoJSPFinalTable()
	{
		String strSufijoJSPFinalTable="";
			
		if(GetFinalJspVersionFromPropertiesC(TablaBase)) {
			strSufijoJSPFinalTable=strSufijoJSPJSFFinal;
		}
			
	return strSufijoJSPFinalTable;
	}	
	
public String GetTraerIndicesVariablesSessionTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{	/*
					if(EsSwing) {
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
						{
							continue;
						}
					}
					*/
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						sInitFuncion+="\r\n\t\t\t else if($this->getstrAccionBusqueda()=='"+indexSchema.Name+"') {";
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\r\n\t\t\t\t$this->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"());";
							sInitFuncion+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+");";
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\r\n\t\t\t\t$this->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"());";
								sInitFuncion+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+");";
							}
							/*
							sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							*/
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+="";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\r\n\t\t$this->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"());"; 
								sInitFuncion+="\r\n\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+")";
								
								/*
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								
							}
							else
							{
								/*
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								break;
							}
						}
						count++;
					}
					//sInitFuncion+="\r\n\tif(this.getstrAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						sInitFuncion+="\r\n\r\n\t\t\t}";			
					}
				} else {
					continue;	
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetGuardarIndicesVariablesSessionTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					/*
					if(EsSwing) {
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
						{
							continue;
						}
					}
					*/
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						//Trace.WriteLine(indexSchema.Name);
						sInitFuncion+="\r\n\t\telse if($this->getstrAccionBusqueda()=='"+indexSchema.Name+"') {";
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"($this->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"());\t"; 
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"($this->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"());\t"; 
							}
							/*
							sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							*/
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+="";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\r\n\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"($this->get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"());\r\n"; 
								
								/*
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								
							}
							else
							{
								/*
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								break;
							}
						}
						count++;
					}
					//sInitFuncion+="\r\n\tif(this.getstrAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						sInitFuncion+="\r\n\r\n\t\t}";			
					}
				} else {
					continue;	
				}
			}
			
			//System.Windows.Forms.MessageBox.Show(sInitFuncion);					
			return sInitFuncion; 
		}
		
public string GetClaveNavigationRuleFK() {
	String strTablaClaseRelacionada=string.Empty;
	TableSchema tableSchema=null;
	bool blnEsPrimero=true;
	String strCondicion="";
	
	foreach(ColumnSchema columnSchema in TablaBase.Columns) {	
		if(columnSchema.IsForeignKeyMember&&!columnSchema.Name.Equals(strId+TablaBase.Name)) {			
			tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
			
			if(blnEsPrimero) {
				strCondicion="if";
				blnEsPrimero=false;
			} else {
				strCondicion="else if";
			}
			
			strTablaClaseRelacionada+="\r\n\t\t\t"+strCondicion+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getstrNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(TablaBase.ToString())+"().equals("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SNOMBREOPCION)) {";
			strTablaClaseRelacionada+="\r\n\t\t\t\t$sClavePaginaFk='"+GetNombreClaseObjetoC(tableSchema.ToString())+"';";
			strTablaClaseRelacionada+="\r\n\t\t\t}";
			/*
			strTablaClaseRelacionada+="\r\n\t<navigation-case>";
			strTablaClaseRelacionada+="\r\n\t\t<from-outcome>"+GetNombreClaseObjetoC(tableSchema.ToString())+"</from-outcome>";
			strTablaClaseRelacionada+="\r\n\t\t<to-view-id>/Paginas/"+GetRelativePathNavegacionFromTableFromPropertiesC(tableSchema)+"Mantenimiento"+GetNombreClaseC(tableSchema.ToString())+".jsp</to-view-id>";
			strTablaClaseRelacionada+="\r\n\t\t<redirect/>";
			strTablaClaseRelacionada+="\r\n\t</navigation-case>";
			*/
		}
	}
	
	return  strTablaClaseRelacionada;
}

public String GetNoStandardSetVariablesActualSession(TableSchema tablaRelacionadaObjetivo,String strNombreAdicional) 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
						
				}
	
			return sTablaClaseRelacionada; 
		}
		
public static String getFrameworkDomain() {
	return strFrameworkDomain;
}

public String GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(TableSchema tablaRelacionadaObjetivo,String strNombreAdicional) 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";				
						
				}
	
			return sTablaClaseRelacionada; 
		}
		
		
public String GetFuncionesAccionesNavegacionTablasClasesRelacionadasC() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional="";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				if(collectionInfo.CollectionRelationshipType!=RelationshipType.OneToOne) {
					
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					//DESHABILITADO
					//OJO USA PRIMARYTABLE Y NO SECONDARYTABLE COMO NORMALMENTE USABA
					//EN REEMPLAZO DE PASO 2 , TOMA A TODOS strNombreAdicional YA QUE ASI LO HACE EL FOREIGN KEY RELACIONADO
					//TOMA EL NOMBRE RESTANTE DE LA COLUMNA MAS DE 1 FOREIGN KEY DE UNA TABLA
					//strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					//CON DESORDEN NO FUNCIONA
					/*
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.PrimaryTable)) {
						//continue;
						//PASO 2
						//TOMA EL NOMBRE RESTANTE DE LA COLUMNA MAS DE 1 FOREIGN KEY DE UNA TABLA
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					} else {
						strNombreAdicional="";
						arrayListRelaciones.Add(collectionInfo.PrimaryTable);
					}
					*/	
				} else {
					strNombreAdicional="";
				}
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					//&&strNombreAdicional.Equals("") SI NO ES VACIO SE PUEDE TRATAR DE MAS DE UNA RELACION FOREIGN KEY HACIA UNA TABLA
					if(tableSchema.Equals(tablaRelacionadaObjetivo)&&strNombreAdicional.Equals(""))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					String strComentarioParaEjb="";
						   strComentarioParaEjb+="";
					String strComentarioInicioParaEjb="";
						   strComentarioInicioParaEjb+="";
					String strComentarioFinParaEjb="";
						   strComentarioFinParaEjb+="";
				
					//if(ConEjb){
						strComentarioParaEjb="//";
						strComentarioInicioParaEjb="\r\n\t\t\t\t/*";
						strComentarioFinParaEjb="*/";
					//}
					
					
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					
					strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
					
					strTablaClaseRelacionada+="\r\n\r\n\tpublic function registrarSesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Para"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPlural.ToLower()+"($"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=null) {";
					strTablaClaseRelacionada+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t$this->strVisibilidadTablaAccionesRelaciones='none';\r\n";
					strTablaClaseRelacionada+="\r\n\t\t$this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual;\r\n";
					strTablaClaseRelacionada+="\r\n\t\t$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n";
					
						strTablaClaseRelacionada+="\r\n\t\ttry {\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();";
					strTablaClaseRelacionada+="\r\n\t\t\t}";
					
						strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";
					
					
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\tif($"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"==null) {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();";
					strTablaClaseRelacionada+="\r\n\t\t\t}";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setstrPathNavegacionActual($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getstrPathNavegacionActual().Constantes::$STRHTMLFLECHA."+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRCLASSWEBTITULO);";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setstrPermiteRecargarInformacion('display:none');";
					
					strTablaClaseRelacionada+="\r\n\t\t\t//$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->getbitPaginaPopup();";
					
					//strTablaClaseRelacionada+="\r\n\r\n\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual=Long.parseLong(httpServletRequest.getParameter(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\"));";
					//strTablaClaseRelacionada+="\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+"\",true);";
					//strTablaClaseRelacionada+="\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
					String strPermiteNavegacionHaciaForeignKeyDesde="";
					
					if(!GetConPopupTableFromProperties(tablaRelacionadaObjetivo)) {
						strPermiteNavegacionHaciaForeignKeyDesde="true";
						strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setPaginaPopupVariables(false);";
						//strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(false);";
					} else {
						strPermiteNavegacionHaciaForeignKeyDesde="false";
						strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setPaginaPopupVariables(true);";
					}
					
					strTablaClaseRelacionada+="\r\n\t\t\t$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->getbitPaginaPopup();";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setbitPermiteNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+strPermiteNavegacionHaciaForeignKeyDesde+");";
					
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setstrNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRNOMBREOPCION);";
					
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setbitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setbig"+strId+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual($this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						strTablaClaseRelacionada+="\r\n\t\t\t"+GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(tablaRelacionadaObjetivo,strNombreAdicional);
					}
					
					
					//strTablaClaseRelacionada+="\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"\",true);";
					//strTablaClaseRelacionada+="\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbitBusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"(true);";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey($this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						strTablaClaseRelacionada+="\r\n\t\t\t"+GetNoStandardSetVariablesActualSession(tablaRelacionadaObjetivo,strNombreAdicional);
					}
					//$idiomaparaalumnoSessionBean->setstrPermiteRecargarInformacion('display:none');
					if(GetEsGuardarRelacionesPorParteFromPropertiesC(TablaBase)) {
						strTablaClaseRelacionada+="\r\n\r\n\t\t\tif(Constantes::$BITUSA_GUARDAR_REL_PORPARTE) {";
						strTablaClaseRelacionada+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setstrFuncionJsPadre('window.opener."+GetNombreClaseObjeto(TablaBase.ToString())+"JQueryPaginaWebInteraccion.recargarUltimaInformacionDesdeHijo"+GetNombreClaseC(TablaBase.ToString())+"();');";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$strPagina=Constantes::$STRNONE;";
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+/*strComentarioParaEjb+strGlobalSeguridadComment+*/"//$this->sistemaLogicAdditional=new SistemaLogicAdditional();";
					
					/*
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\tsistemaAdditionable= (SistemaAdditionable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);";
					strTablaClaseRelacionada+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\tsistemaAdditionableHome= (SistemaAdditionableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);";
					strTablaClaseRelacionada+="\r\n\t\t\t\t}";
					*/
					
					//strTablaClaseRelacionada+="\r\n\r\n\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";
					
					String  strTablaClaseRelacionadaFunction=" "+strGlobalSeguridadComment+"{";					
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t//$strPagina="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRRELATIVEPATH + Constantes::$STRCARPETAPAGINAS+\"/\"+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaObjetivo)+"\"+Constantes::$STRPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes::$STREXTENSIONARCHIVOJSP;";
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t//"+strGlobalSeguridadComment+"}";
					
					
					
					/* TEMPORAL ERA ANTERIOR
					//if(ConEjb){
						strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {";
						strTablaClaseRelacionada+="\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
						strTablaClaseRelacionada+=strTablaClaseRelacionadaFunction;
						strTablaClaseRelacionada+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
						strTablaClaseRelacionada+="\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
						strTablaClaseRelacionada+=strTablaClaseRelacionadaFunction;
						strTablaClaseRelacionada+="\r\n\t\t\t\t}";
					//}
					*/
					
					//strTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\t//ARCHITECTURE";
					//strTablaClaseRelacionada+="\r\n\t\t\t\t\tif(Constantes::$BITUSAEJBLOGICLAYER) {";
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+/*strComentarioParaEjb+strGlobalSeguridadComment+*/"//if($this->sistemaLogicAdditional->tienePermisosEnPaginaWeb($this->usuarioActual, Constantes::$LIDSISTEMAACTUAL, Constantes::$STRPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes::$STREXTENSIONARCHIVOJSP))";
					strTablaClaseRelacionada+=strTablaClaseRelacionadaFunction;
					//strTablaClaseRelacionada+=strComentarioInicioParaEjb+strTablaClaseRelacionadaFunction+strComentarioFinParaEjb;
					//strTablaClaseRelacionada+="\r\n\t\t\t\t\t}";
					
					
					//if(ConEjb){
						//strTablaClaseRelacionada+=" else if(Constantes::$BITUSAEJBREMOTE) {";
						//strTablaClaseRelacionada+="\r\n\t\t\t\t\t\t"+strGlobalSeguridadComment+"if($sistemaAdditionable->tienePermisosEnPaginaWeb($this->usuarioActual, Constantes::$LIDSISTEMAACTUAL, Constantes::$STRPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes::$STREXTENSIONARCHIVOJSP))";					
						//strTablaClaseRelacionada+=strTablaClaseRelacionadaFunction;
						//strTablaClaseRelacionada+="\r\n\t\t\t\t\t} else if(Constantes::$BITUSAEJBHOME) {";
						//strTablaClaseRelacionada+="\r\n\t\t\t\t\t\t"+strGlobalSeguridadComment+"if($sistemaAdditionableHome->tienePermisosEnPaginaWeb($this->usuarioActual, Constantes::$LIDSISTEMAACTUAL, Constantes::$STRPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes::$STREXTENSIONARCHIVOJSP))";					
						//strTablaClaseRelacionada+=strTablaClaseRelacionadaFunction;
						//strTablaClaseRelacionada+="\r\n\t\t\t\t\t}";
						//strTablaClaseRelacionada+="\r\n\t\t\t\t\t//ARCHITECTURE";
					//}
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$this->Session->write("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"));";
					strTablaClaseRelacionada+="\r\n\t\t\t$this->Session->write("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"));";
					
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$this->guardarDatosBusquedaSession();";
					strTablaClaseRelacionada+="\r\n\r\n\t\t} catch(Exception $e) {";
					strTablaClaseRelacionada+="\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);"; 
					strTablaClaseRelacionada+="\r\n\t\t}";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\tif("+"$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"!=false) {";
					if(!blnConJQueryCode){
						strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRNOMBREOPCION.'/index/onload_fk/iframe/none/index/true/false/none/none';";//"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRPATHOPCION.
					} else {
						strTablaClaseRelacionada+="\r\n\t\t\t//$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.str_replace('TOREPLACE',"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRCLASSNAME,Constantes::$STRCARPETAPAGINASJQUERYTOREPLACE);";//.'/'."+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRNOMBREOPCION;";
						strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarUrlPagina=Funciones::getUrlParametrosPaginaHijo("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRCLASSNAME,'"+GetNombreModuloJsC()+"','"+GetNombreSubModuloJsC()+"','POPUP',$this->strTipoPaginaAuxiliar"+GetNombreClaseC(TablaBase.ToString())+",$this->strTipoUsuarioAuxiliar"+GetNombreClaseC(TablaBase.ToString())+",false,'');";
					}
					strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarTipo='POPUP';";
					//strTablaClaseRelacionada+="\r\n\t\t\treturn "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getstrimpleName().toLowerCase()+ConstantesJsp.SS;";
					strTablaClaseRelacionada+="\r\n\t\t} else {";					
					if(!blnConJQueryCode){
						strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRNOMBREOPCION.'/index/onload_fk/none/none/index/false/false/none/none';";//"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRPATHOPCION.					
					} else {
						strTablaClaseRelacionada+="\r\n\t\t\t//$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.str_replace('TOREPLACE',"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRCLASSNAME,Constantes::$STRCARPETAPAGINASJQUERYTOREPLACE);";//.'/'."+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRNOMBREOPCION;";
						strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarUrlPagina=Funciones::getUrlParametrosPaginaHijo("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRCLASSNAME,'"+GetNombreModuloJsC()+"','"+GetNombreSubModuloJsC()+"','NO-POPUP',$this->strTipoPaginaAuxiliar"+GetNombreClaseC(TablaBase.ToString())+",$this->strTipoUsuarioAuxiliar"+GetNombreClaseC(TablaBase.ToString())+",false,'');";
					}
					
					strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarTipo='NO-POPUP';";
					//strTablaClaseRelacionada+="\r\n\t\t\treturn \"\";";//GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getstrimpleName().toLowerCase()+ConstantesJsp.SS;";
					strTablaClaseRelacionada+="\r\n\t\t}";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t$this->returnAjax"+GetNombreClaseC(TablaBase.ToString())+"();";
					strTablaClaseRelacionada+="\r\n\t}";
				}
				
			}
								
			return strTablaClaseRelacionada; 
		}

public  string GetFuncionesAccionesBusquedaForeignKeyTablasClasesRelacionadasC(bool paraEscojerAccionInicial)
{
	String strVariablesArray="";
	String strTablaClaseRelacionada="";
	TableSchema tablaRelacionadaFk=null;
	String strNombreAdicional="";
	String strPlural="";
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember && GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			tablaRelacionadaFk=GetTableSchemaFromColumnForeignKey(column);
			
			if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
				if(!paraEscojerAccionInicial) {
					strTablaClaseRelacionada+="\r\n\r\n\tpublic function abrirBusqueda"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Para"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"() {//$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=0";
					strTablaClaseRelacionada+="\r\n\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);\r\n";
					//strTablaClaseRelacionada+="\r\n\t\t$this->strVisibilidadTablaAccionesRelaciones='none';\r\n";
					strTablaClaseRelacionada+="\r\n\t\t//$this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=$"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual;\r\n";
					//strTablaClaseRelacionada+="\r\n\t\t$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"=false;\r\n";
					
					strTablaClaseRelacionada+="\r\n\t\ttry {";
					
					/*
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();";
					strTablaClaseRelacionada+="\r\n\t\t\t}";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"=unserialize($this->Session->read("+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRSESSIONNAME));";
					
					
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\tif($"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"==null) {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();";
					strTablaClaseRelacionada+="\r\n\t\t\t}";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setstrPathNavegacionActual($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getstrPathNavegacionActual().Constantes::$STRHTMLFLECHA."+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones::$STRCLASSWEBTITULO);";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"->setstrPermiteRecargarInformacion('display:none');";
					
					strTablaClaseRelacionada+="\r\n\t\t\t$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"=$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"->getbitPaginaPopup();";
					*/
					
					/*String strPermiteNavegacionHaciaForeignKeyDesde="";*/
					
					if(!GetConPopupTableFromProperties(tablaRelacionadaFk)) {
						/*strPermiteNavegacionHaciaForeignKeyDesde="true";*/
					} else {
						/*strPermiteNavegacionHaciaForeignKeyDesde="false";*/
						//strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"->setPaginaPopupVariables(true);";
					}
					
					/*
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"->setbitPermiteNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"("+strPermiteNavegacionHaciaForeignKeyDesde+");";
					
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"->setstrNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRNOMBREOPCION);";
					
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"->setbitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"->setbig"+strId+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual($this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					*/
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						//strTablaClaseRelacionada+="\r\n\t\t\t"+GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(tablaRelacionadaFk,strNombreAdicional);
					}
								
					/*
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbitBusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"(true);";
					strTablaClaseRelacionada+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey($this->"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					*/
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						//strTablaClaseRelacionada+="\r\n\t\t\t"+GetNoStandardSetVariablesActualSession(tablaRelacionadaFk,strNombreAdicional);
					}
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$strPagina=Constantes::$STRNONE;";
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+/*strComentarioParaEjb+strGlobalSeguridadComment+*/"//$this->sistemaLogicAdditional=new SistemaLogicAdditional();";
					
					String  strTablaClaseRelacionadaFunction=" "+strGlobalSeguridadComment+"{";					
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t//$strPagina="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRRELATIVEPATH + Constantes::$STRCARPETAPAGINAS+\"/\"+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaFk)+"\"+Constantes::$STRPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaFk.ToString())+"\"+Constantes::$STREXTENSIONARCHIVOJSP;";
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t//"+strGlobalSeguridadComment+"}";
					
					/*
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+"//if($this->sistemaLogicAdditional->tienePermisosEnPaginaWeb($this->usuarioActual, Constantes::$LIDSISTEMAACTUAL, Constantes::$STRPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaFk.ToString())+"\"+Constantes::$STREXTENSIONARCHIVOJSP))";
					strTablaClaseRelacionada+=strTablaClaseRelacionadaFunction;
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t$this->Session->write("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"));";
					strTablaClaseRelacionada+="\r\n\t\t\t$this->Session->write("+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRSESSIONNAME,serialize($"+GetNombreClaseObjetoC(tablaRelacionadaFk.ToString())+strPrefijoJSFSessionFaces+"));";
					*/
					
					//strTablaClaseRelacionada+="\r\n\r\n\t\t\t$this->guardarDatosBusquedaSession();";
					//strTablaClaseRelacionada+="\r\n\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";
					strTablaClaseRelacionada+="\r\n\r\n\t\t} catch(Exception $e) {";
					strTablaClaseRelacionada+="\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);"; 
					strTablaClaseRelacionada+="\r\n\t\t}";
					
					//strTablaClaseRelacionada+="\r\n\r\n\t\tif("+"$bitPaginaPopup"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"!=false) {";
					
					String strPrefijoCapa="FuncionGeneral";
					
					if(blnConJQueryCode) {
						strPrefijoCapa="JQueryPaginaWebInteraccion";	
					}
					
					String strFuncionJavaScript="";
					strFuncionJavaScript="window.opener."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoCapa+".setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(column)+"(TO_REPLACE);";
					
					if(!blnConJQueryCode){
						strTablaClaseRelacionada+="\r\n\r\n\r\n\t$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRNOMBREOPCION.'/index/onload_busqueda/iframe/none/search/true/true/0/"+strFuncionJavaScript+"';";//"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRPATHOPCION.
					} else {
						strTablaClaseRelacionada+="\r\n\r\n\t\t//1-ANTERIOR,2-PROPUESTO";
						strTablaClaseRelacionada+="\r\n\t\t//$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRNOMBREOPCION.'/index/onload_busqueda/iframe/none/search/true/true/0/"+strFuncionJavaScript+"';";//"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRPATHOPCION.
						strTablaClaseRelacionada+="\r\n\t\t//$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.str_replace('TOREPLACE',"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRCLASSNAME,Constantes::$STRCARPETAPAGINASJQUERYTOREPLACE);";//.'/'."+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRNOMBREOPCION;";
						strTablaClaseRelacionada+="\r\n\r\n\t\t$strFuncionJavaScriptFinal='"+strFuncionJavaScript+"';";
						strTablaClaseRelacionada+="\r\n\r\n\t\t$this->strAuxiliarUrlPagina=Funciones::getUrlParametrosPaginaHijo("+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRCLASSNAME,'"+GetNombreModuloJsC()+"','','POPUP','iframe',$this->strTipoUsuarioAuxiliar"+GetNombreClaseC(TablaBase.ToString())+",true,$strFuncionJavaScriptFinal);";

					}
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t$this->strAuxiliarTipo='POPUP';";
					
					//strTablaClaseRelacionada+="\r\n\t\t} else {";					
					
					if(!blnConJQueryCode){
						//strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRNOMBREOPCION;";//"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRPATHOPCION.					
					} else {
						//strTablaClaseRelacionada+="\r\n\t\t$this->strAuxiliarUrlPagina=Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.str_replace('TOREPLACE',"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRCLASSNAME,Constantes::$STRCARPETAPAGINASJQUERYTOREPLACE);";//.'/'."+GetNombreClaseC(tablaRelacionadaFk.ToString())+"ConstantesFunciones::$STRNOMBREOPCION;";
					}
					
					//strTablaClaseRelacionada+="\r\n\t\t\t$this->strAuxiliarTipo='NO-POPUP';";
					//strTablaClaseRelacionada+="\r\n\t\t}";
					strTablaClaseRelacionada+="\r\n\r\n\t\t$this->returnAjax"+GetNombreClaseC(TablaBase.ToString())+"();";
					strTablaClaseRelacionada+="\r\n\t}";
				
				} else {
					strTablaClaseRelacionada+="\r\n\t\t\telse if($action=='abrirBusqueda"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Para"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"') {";
					strTablaClaseRelacionada+="\r\n\t\t\t\t$this->setCargarDivSeccionesActualizar"+GetNombreClaseC(TablaBase.ToString())+"(false,false,false,false,false,false,false,false,false,false,false,false);";
					strTablaClaseRelacionada+="\r\n\t\t\t\t//$id"+GetNombreClaseC(TablaBase.ToString())+"Actual=$this->data['id'];";
					strTablaClaseRelacionada+="\r\n\t\t\t\t$this->abrirBusqueda"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Para"+GetNombreClaseC(tablaRelacionadaFk.ToString())+"();//$id"+GetNombreClaseC(TablaBase.ToString())+"Actual";
					strTablaClaseRelacionada+="\r\n\t\t\t}";
					
				}
			}
		}	
	}
	return strTablaClaseRelacionada;
}

public  string GuardarVariablesSessionArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			strVariablesArray+="\r\n\t\t$this->"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";";
			strVariablesArray+="\r\n\t\t$this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+";";
		}	
	}
	return strVariablesArray;
}

public string GetstretParametroEntityColumna(ColumnSchema column,bool esParaEditarTabla,String strColumnCountName)
{				
	String strSetEntity=string.Empty;
	String strColumnEntity=string.Empty;
	String strSufijoObjeto="Clase";
	String strThis="this->";
	String strParametroCliente="$this->data['form'.$this->strSufijo]";
	String strNombreColumnaParametro=GetNombreColumnFromProperties(column);
	
	if(esParaEditarTabla) {
		if(column.Name.Equals(strId) || column.Name.Equals(strVersionRow)) {
			return "";
		}
	}
	
	if(esParaEditarTabla) {
		strSufijoObjeto="Actual";
		strParametroCliente="$this->data['t']";
		strThis="";
		strNombreColumnaParametro="cel_'.$i.'_"+strColumnCountName;
	}
	
	/*
	$sistemaCake['Sistema']['id'] = $sistemaLocal->getId();					
	$sistemaCake['Sistema']['versionrow'] = $sistemaLocal->getVersionRow();
	$sistemaCake['Sistema']['codigo'] = $sistemaLocal->getstrCodigo();
	*/
	
	/*
	if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow)) {
		return strSetEntity;
	}
	*/
	
	if(column.Name.Equals(strId)) {
		strColumnEntity=strIdGetSet;
	
	} else if(column.Name.Equals(strVersionRow)) {
		strColumnEntity=strVersionRowGetSet;
	
	} else {
		strColumnEntity=GetNombreCompletoColumnaClaseC(column);
	}
	
	String strEntityInit="$"+strThis+GetNombreClaseObjetoC(column.Table.ToString())+strSufijoObjeto+"->set";
	String strEntityMiddle="";//"->get";
	String strEntityFinal="";//"($this->data['"+GetNombreColumnFromProperties(column)+"']);";//"\"));";
	//entity.setNombre(rs.getstring("nombre"));	
	
	String strType="";
	
	if(!(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column) || EsBitColumn(column))) {
		strEntityFinal="("+strParametroCliente+"['"+strNombreColumnaParametro+"']);";//"\"));";
	
	} else if(!EsBitColumn(column)){
		if(EsDateColumn(column)) {
			strType="'date'";
			
		} else if(EsDateTimeColumn(column)) {
			strType="'datetime'";
			
		} else if(EsTimeColumn(column)) {
			strType="'time'";
		}
		
		strEntityFinal="(Funciones::getFechaHoraFromData("+strType+","+strParametroCliente+",'"+strNombreColumnaParametro+"'));";//"\"));";
	} else {
		strEntityFinal="(Funciones::getBooleanFromDataValue("+strParametroCliente+"['"+strNombreColumnaParametro+"']));";//getBooleanFromDataValue
	}
	
	
	
    strSetEntity=strEntityInit+strColumnEntity+strEntityMiddle+strEntityFinal;
	//GetNombreCompletoColumnaClaseC(column)+"$strPrefijo.'"+
	return strSetEntity;
}

public string GetstretMigrateObjectDataEntityColumna(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	String strColumnEntity=string.Empty;
	/*
		$sistemaCake['id'] = $sistemaLocal->getId();
		$sistemaCake['versionrow'] = $sistemaLocal->getVersionRow();
		$sistemaCake['codigo'] = $sistemaLocal->getstrCodigo();
		$sistemaCake['nombreprincipal'] = $sistemaLocal->getstrNombrePrincipal();
		$sistemaCake['nombresecundario'] = $sistemaLocal->getstrNombreSecundario();
	*/
	
	/*
	if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow)) {
		return strSetEntity;
	}
	*/
	
	if(column.Name.Equals(strId)) {
		strColumnEntity=strIdGetSet;
	
	} else if(column.Name.Equals(strVersionRow)) {
		strColumnEntity=strVersionRowGetSet;
	
	} else {
		strColumnEntity=GetNombreCompletoColumnaClaseC(column);
	}
	
	String strEntityInit="$"+GetNombreClaseObjetoC(column.Table.ToString())+"Cake['"+GetNombreColumnFromProperties(column)+"'] = $"+GetNombreClaseObjetoC(column.Table.ToString())+"Local->get";
	String strEntityMiddle="";//"->get";
	String strEntityFinal="();";//"\"));";
	//entity.setNombre(rs.getstring("nombre"));	
    strSetEntity=strEntityInit+strColumnEntity+strEntityMiddle+strEntityFinal;
	//GetNombreCompletoColumnaClaseC(column)+"$strPrefijo.'"+
	return strSetEntity;
}

public string GetstretMigrateEntityColumna(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	String strColumnEntity=string.Empty;
	/*
	$sistemaCake['Sistema']['id'] = $sistemaLocal->getId();					
	$sistemaCake['Sistema']['versionrow'] = $sistemaLocal->getVersionRow();
	$sistemaCake['Sistema']['codigo'] = $sistemaLocal->getstrCodigo();
	*/
	
	/*
	if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow)) {
		return strSetEntity;
	}
	*/
	
	if(column.Name.Equals(strId)) {
		strColumnEntity=strIdGetSet;
	
	} else if(column.Name.Equals(strVersionRow)) {
		strColumnEntity=strVersionRowGetSet;
	
	} else {
		strColumnEntity=GetNombreCompletoColumnaClaseC(column);
	}
	
	String strEntityInit="";//"$"+GetNombreClaseObjetoC(column.Table.ToString())+"Cake['"+GetNombreClaseC(column.Table.ToString())+"']['"+GetNombreColumnFromProperties(column)+"'] = $"+GetNombreClaseObjetoC(column.Table.ToString())+"Local->get";
	String strEntityMiddle="";//"->get";
	String strEntityFinal="";//"();";//"\"));";
	//entity.setNombre(rs.getstring("nombre"));	
	
	String strType="";
	
	if(!(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column))) {
		strEntityInit="$"+GetNombreClaseObjetoC(column.Table.ToString())+"Cake['"+GetNombreClaseC(column.Table.ToString())+"']['"+GetNombreColumnFromProperties(column)+"'] = $"+GetNombreClaseObjetoC(column.Table.ToString())+"Local->get";
		strEntityFinal="();";
		
	} else {
		if(EsDateColumn(column)) {
			strType="'date'";
			
		} else if(EsDateTimeColumn(column)) {
			strType="'datetime'";
			
		} else if(EsTimeColumn(column)) {
			strType="'time'";
		}
		
		strEntityFinal="());";
		strEntityInit="$"+GetNombreClaseObjetoC(column.Table.ToString())+"Cake['"+GetNombreClaseC(column.Table.ToString())+"']['"+GetNombreColumnFromProperties(column)+"'] = Funciones::getFechaHoraCakeFromEntity("+strType+",$"+GetNombreClaseObjetoC(column.Table.ToString())+"Local->get";
	}
	
	
    strSetEntity=strEntityInit+strColumnEntity+strEntityMiddle+strEntityFinal;
	//GetNombreCompletoColumnaClaseC(column)+"$strPrefijo.'"+
	return strSetEntity;
}

public string  GetindicesEscogerTablasClases() {
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersFuncion2="";
			String strParametersFuncion3="";
			String strParametersNameFuncion="";strParametersNameFuncion+="";
			String strParameterSelection=String.Empty;
			String strPlural="";
			
			strParametersFuncion="\r\n\t\t\t\telse if (isset($this->params['form']['btn"+GetNombreClaseC(TablaBase.ToString());
			strParametersFuncion2="'])) {\r\n\t\t\t\t\t$this->get"+GetNombreClaseC(TablaBase.ToString());
			strParametersFuncion3="ParaProcesar();\r\n\t\t\t\t}";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					strBodyFuncion="";
					if(indexSchema.IsUnique) {
						strPlural="";
						//strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"ParaProcesar(";
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						
						
						strBodyFuncion+=strParametersFuncion+indexSchema.Name+strParametersFuncion2+strPlural+indexSchema.Name+strParametersFuncion3;
						//strBodyFuncion+="\r\n\r\n\t\t\t$this->procesarBusqueda($strAccionBusqueda";
						
						//strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
					} else {	
						 strPlural="s";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							//strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"ParaProcesar(";
							
							//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+=strParametersFuncion+indexSchema.Name+strParametersFuncion2+strPlural+indexSchema.Name+strParametersFuncion3;
							//strBodyFuncion+="\r\n\r\n\t\t\t$this->procesarBusqueda($strAccionBusqueda";
						} else {
							//strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"ParaProcesar(";
							//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							
							strBodyFuncion+=strParametersFuncion+indexSchema.Name+strParametersFuncion2+strPlural+indexSchema.Name+strParametersFuncion3;
							//strBodyFuncion+="\r\n\r\n\t\t\t$this->procesarBusqueda($strAccionBusqueda";
						}
			
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK)) {
						} else {
						}
						
						//strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
					}						
					strInitFuncion+=strBodyFuncion+strEndBodyFuncion+strEndFuncion+"";																																			
				}
			}			
								
			return strInitFuncion; 
		}
		
public String GetindicesGetstretVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion=""; sBodyFuncion+="";
			String sEndBodyFuncion=""; sEndBodyFuncion+="";
			String sEndFuncion=""; sEndFuncion+="";
			String sParametersFuncion=""; sParametersFuncion+="";
			String sParametersNameFuncion=""; sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sPrefijoGetstret=String.Empty;
			
			//if(!EsSwing){
				sTipo="";
				sPrefijo="str";
				sPrefijoGetstret="Str";
			/*} else {
				sTipo="Boolean";
				sPrefijo="is";
			}
			*/
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\tpublic "+sTipo+"function get"+sPrefijoGetstret+"Visibilidad"+indexSchema.Name+"() {";
						sInitFuncion+="\r\n\t\treturn $this->"+sPrefijo+"Visibilidad"+indexSchema.Name+";";
						sInitFuncion+="\r\n\t}";
						
						sInitFuncion+="\r\n\r\n\tpublic function set"+sPrefijoGetstret+"Visibilidad"+indexSchema.Name+"("+sTipo+"$"+sPrefijo+"Visibilidad"+indexSchema.Name+") {";
						sInitFuncion+="\r\n\t\t$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"=$"+sPrefijo+"Visibilidad"+indexSchema.Name+";";
						sInitFuncion+="\r\n\t}\r\n";
						
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}

public String GetActualizarSessionindicesVariablesVisibilidadTablasClases()  {
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion=""; sBodyFuncion+="";
			String sEndBodyFuncion=""; sEndBodyFuncion+="";
			String sEndFuncion=""; sEndFuncion+="";
			String sParametersFuncion=""; sParametersFuncion+="";
			String sParametersNameFuncion=""; sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			
			//if(false){
				sTipo="";
				sPrefijo="str";
				sDefault="'display:table-row'";
			/*} else {
				sTipo="";
				sPrefijo="is";
				sDefault="false";
			}
			*/
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {
					sParametersFuncion="";
					sParametersNameFuncion="";
									
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\t\t"+sTipo+"$this->"+sPrefijo+"Visibilidad"+indexSchema.Name+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+sPrefijo+"Visibilidad"+indexSchema.Name+";";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
public String GetindicesVariablesVisibilidadTablasClases()  {
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion=""; sBodyFuncion+="";
			String sEndBodyFuncion=""; sEndBodyFuncion+="";
			String sEndFuncion=""; sEndFuncion+="";
			String sParametersFuncion=""; sParametersFuncion+="";
			String sParametersNameFuncion=""; sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			
			//if(false){
				sTipo="";
				sPrefijo="str";
				sDefault="'display:table-row'";
			/*} else {
				sTipo="";
				sPrefijo="is";
				sDefault="false";
			}
			*/
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {
					sParametersFuncion="";
					sParametersNameFuncion="";
									
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\tpublic "+sTipo+"$"+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
public  string DefinirFuncionesListItemsArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			
			strVariablesArray+="\r\n\tpublic function get"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"ListSelectItem() \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\t$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sList=array();\r\n\r\n";
			strVariablesArray+="\t\t$item=null;\r\n\r\n";
		
			strVariablesArray+="\t\tforeach($this->"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"s"+strForeignKey+" as $"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +")\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\t$item=new SelectItem();\r\n";
			strVariablesArray+="\t\t\t$item->setLabel($"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column))+");\r\n";
			strVariablesArray+="\t\t\t$item->setValue($"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"->getId());\r\n";
				
			strVariablesArray+="\t\t\t$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sList[]=item;\r\n";
			strVariablesArray+="\t\t}\r\n\r\n";
		
			strVariablesArray+="\t\treturn "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sList;\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			
		}	
	}
	return strVariablesArray;
}

public  string FuncionesForeignKeys()
{
	String strVariablesArray="";
	
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			strVariablesArray+="\r\n\tpublic function cargarCombos"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +"s"+strForeignKey+"($connexion,$strRecargarFkQuery)\r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\ttry\r\n\t\t{\r\n";
			strVariablesArray+="\t\t\t$paginationLocal=new Pagination();\r\n\r\n";
			strVariablesArray+="\t\t\t$this->"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"s"+strForeignKey+" = array();\r\n\r\n";//ArrayList<"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+">
			strVariablesArray+="\t\t\t$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"Locic=new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Logic();\r\n\r\n\r\n";//"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Logic
			strVariablesArray+="\t\t\t$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"Locic->setConnexion($connexion);\r\n\r\n\r\n";
			strVariablesArray+="\t\t\t$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"Locic->get"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DataAccess()->setIsForForeingKeyData(true);\r\n\r\n\r\n";
			strVariablesArray+="\t\t\t$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"Locic->getTodos"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"s($strRecargarFkQuery,$paginationLocal);\r\n\t\t\t//WithConnection\r\n\r\n";
			strVariablesArray+="\t\t\t$this->"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"s"+strForeignKey+"=$"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"Locic->get"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"s();\r\n\r\n";
			strVariablesArray+="\t\t}\r\n";
			strVariablesArray+="\t\tcatch(Exception $e)\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\tthrow $e;\r\n";
			strVariablesArray+="\t\t}\r\n";
			strVariablesArray+="\t}\r\n";
		}	
	}
	return strVariablesArray;
}


public  string ConstructorVariablesArrayForeignKeys(bool paraConstructor,bool conNinguno)
{
	String strVariablesArray="";
	
	String strQuery="$this->strRecargarFkQuery";
	String strTab="";
	
	if(conNinguno) {
		strQuery="' where id=-1 '";
		strTab="\t";
	}
	
	String strCommentDepend="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			strCommentDepend="";
			
			if(paraConstructor && !GetConEventDependColumnFromPropertiesC(column).Equals("")) {
				strCommentDepend="//";
			}
	
			if(!conNinguno) {
				strVariablesArray+="\r\n\t\t\tif($this->strRecargarFkTipos=='TODOS' || Funciones::existeCadenaSplit('"+GetNombreColumnFromProperties(column)+"',$this->strRecargarFkTipos,',')) {";
			} else {
				strVariablesArray+="\r\n\t\t\t\tif($this->strRecargarFkTiposNinguno!='NINGUNO' && Funciones::existeCadenaSplit('"+GetNombreColumnFromProperties(column)+"',$this->strRecargarFkTiposNinguno,',')) {";
			}
			
			strVariablesArray+="\r\n\t\t\t\t"+strTab+strCommentDepend+"$this->cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"($this->getConnexion(),"+strQuery+");";
			strVariablesArray+="\r\n\t\t\t"+strTab+"}";
			
		}	
	}
	return strVariablesArray;
}

public  string DefinirVariablesArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			//LOGIC
			strVariablesArray+="\r\n\tpublic $"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=array();\r\n\r\n";
			
			strVariablesArray+="\tpublic function get"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"() {";
			strVariablesArray+="\r\n";
			strVariablesArray+="\t\treturn $this->"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			strVariablesArray+="\tpublic function set"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"($"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") {\r\n";
			strVariablesArray+="\r\n";
			strVariablesArray+="\t\t$this->"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = $"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n";
			
			//DEFAULT VALUE
			strVariablesArray+="\r\n\tpublic $"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+"=-1;\r\n\r\n";
			
			strVariablesArray+="\tpublic function get"+ strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)+strDefault+strForeignKey+"() {";
			strVariablesArray+="\r\n";
			strVariablesArray+="\t\treturn $this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			strVariablesArray+="\tpublic function set"+ strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)+strDefault+strForeignKey+"($"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+") {\r\n";
			strVariablesArray+="\r\n";
			strVariablesArray+="\t\t$this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+" = $"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n";
		}	
	}
	return strVariablesArray;
}

public  string InicializarVariablesArrayForeignKeysDefault()
{
	String strVariablesArray="";
		
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {			
			strVariablesArray+="\r\n\t\t$this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+" = 0;";			
		}	
	}
	return strVariablesArray;
}

public  string SetVariablesArrayForeignKeysDefault()
{
	String strVariablesArray="";
		
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {			
			strVariablesArray+="\r\n\t\t$this->data['form']['"+GetNombreColumnFromProperties(column).ToLower()+"']=$this->"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +strDefault+strForeignKey+";";			
		}	
	}
	return strVariablesArray;
}

/*
public CargarCombosFramePerfilsForeignKey(){
		try {
			
			JComboBoxBinding jComboBoxBindingPerfil;

			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, $this->perfilsForeignKey, $this->jComboBoxIdPerfilPerfilUsuario);
			
			$this->jComboBoxIdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();
			
			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, $this->perfilsForeignKey, $this->jComboBoxIdPerfilFK_IdPerfilPerfilUsuario);
			
			$this->jComboBoxIdPerfilFK_IdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();

		} catch(Exception $e) {
			throw $e;
		}
	}
*/

public string  GetindicesVariablesTablasClases(ColumnSchema columnForeignKey) 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
		
			String strPanelesBusquedas=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						
						
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						if(columnForeignKey.Name!=memberColumnSchema.Name)
						{
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							
							strControlesPanelesBusquedas+="\r\n\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, $this->"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema ).ToLower()+"sForeignKey, $this->"+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+",\""+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+"\");\r\n\r\n";
							
							
			
							strControlesPanelesBusquedas+="\t\t\t\t$this->"+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"DefaultListCellRenderer());\r\n\r\n";
			
							strControlesPanelesBusquedas+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+".bind();\r\n\r\n";
			
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								//strInitFuncion+=";\r\n";	
							}
						}
						else
						{
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//strInitFuncion+=",";
								strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
																																						
				}
			}
			
			strInitFuncion=strControlesPanelesBusquedas;	
			
			return strInitFuncion; 
		}
		
		
		
public  string GetCargarCombosFrameColumnsVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	strVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {							
			strVariablesArray+="\t\t\t$this->CargarCombosFrame"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey();\r\n";
		}	
	}
	return strVariablesArray;
}

public  string CargarCombosFrameColumnsVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	strVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {	
						
			strVariablesArray+="\t\tpublic CargarCombosFrame"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey()\r\n";
			strVariablesArray+="\t\t{\r\n";
				strVariablesArray+="\t\t\ttry\r\n";
				strVariablesArray+="\t\t\t{\r\n\r\n";
					
					strVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+";\r\n\r\n";
		
					strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, $this->"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey, $this->jComboBox"+strIdGetSet+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
					
					strVariablesArray+="\t\t\t\t$this->jComboBox"+strIdGetSet+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
					
					strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".bind();\r\n\r\n";
					
					strVariablesArray+=GetindicesVariablesTablasClases(column);
		
				strVariablesArray+="\t\t\t}\r\n";
				strVariablesArray+="\t\t\tcatch(Exception $e)\r\n";
				strVariablesArray+="\t\t{\r\n";
					strVariablesArray+="\t\t\t\tthrow $e;\r\n";
				strVariablesArray+="\t\t\t}\r\n";
			strVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return strVariablesArray;
}


public  string DefinirClassDefaultListCellRendererColumnsVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	strVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {	
			strVariablesArray+="\t\tpublic class "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer  extends DefaultListCellRenderer\r\n";
			strVariablesArray+="\t\t{\r\n";
						
			strVariablesArray+="\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus)\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
					
			strVariablesArray+="\t\t\t\tif(value instanceof "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+")\r\n";
			strVariablesArray+="\t\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\t\t"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+" "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"=("+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+")value;\r\n";
			strVariablesArray+="\t\t\t\t\t$this->setText("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.get"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"));\r\n";//Relationship_
			strVariablesArray+="\t\t\t\t}\r\n\r\n";
					
			strVariablesArray+="\t\t\t\treturn this;\r\n";
			strVariablesArray+="\t\t\t}\r\n";
			strVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return strVariablesArray;
}

public  string ReDefinirColumnsTableVariablesForeignKeys()
{
	String strVariablesArray="";
		
		
	//strVariablesArray+="\r\n\t\tTableColumn tableColumn;\r\n\r\n";
	strVariablesArray+="\r\n\r\n";
			
	String strTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			strTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
			
			strVariablesArray+="\t\ttableColumn= $this->jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumn(\""+strTitulo+"\");\r\n";
			strVariablesArray+="\t\ttableColumn.setCellRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"TableCell());\r\n";
			strVariablesArray+="\t\ttableColumn.setCellEditor(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"TableCell());\r\n\r\n";

		}	
	}
	return strVariablesArray;
}


	
public  string ReDefinirTableCellColumnsTableVariablesForeignKeys()
{
	String strVariablesArray="";
			
	String strTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns) {
		if(column.IsForeignKeyMember) {
			strVariablesArray+="\r\n\t\tpublic class "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"TableCell extends AbstractCellEditor implements TableCellRenderer,TableCellEditor\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\tJLabel jLabel"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+";\r\n";
			strVariablesArray+="\t\t\tJComboBox jComboBox"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+";\r\n";
			strVariablesArray+="\t\t\tObject valor;\r\n\r\n";
			
			strVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
	
			strVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
			strVariablesArray+="\t\t\t\tclasses.add("+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".class);\r\n\r\n";
				
			strVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";       
			strVariablesArray+="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+" = "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s().get(table.convertRowIndexToModel(intSelectedRow));\r\n\r\n";
				
			strVariablesArray+="\t\t\t\ttry\r\n";
			strVariablesArray+="\t\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->setConnexion(Connexion.getNewConnexion());\r\n";
			strVariablesArray+="\t\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
			strVariablesArray+="\t\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->getConnexion().getConnection().commit();\r\n";
			strVariablesArray+="\t\t\t\t}\r\n";
			strVariablesArray+="\t\t\t\tcatch(Exception $e)\r\n";
			strVariablesArray+="\t\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\t\tthrow $e;\r\n";
			strVariablesArray+="\t\t\t\t}\r\n\r\n";
				
			strVariablesArray+="\t\t\tjLabel"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"=new JLabel();\r\n\r\n";
				//valor=value;
			strVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".setText("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.get"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()));\r\n";//Relationship_
			strVariablesArray+="\t\t\t\treturn jLabel"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+";\r\n";
					
				
			strVariablesArray+="\t\t\t}\r\n\r\n";
			
			strVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"=new JComboBox();\r\n\r\n";
				
			strVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+";\r\n\r\n";

			strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey, jComboBox"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+");\r\n\r\n";

			strVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";

			strVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".bind();	\r\n\r\n";
				
			strVariablesArray+="\t\t\t\tvalor=value;\r\n";
			strVariablesArray+="\t\t\t\treturn jComboBox"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+";\r\n";
			strVariablesArray+="\t\t\t}\r\n\r\n";
			
			strVariablesArray+="\t\t\tpublic Object getCellEditorValue()\r\n";
			strVariablesArray+="\t\t\t{\r\n";
			strVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+")jComboBox"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".getstrelectedItem()).get"+strIdGetSet+"();\r\n";
			strVariablesArray+="\t\t\t}\r\n";
			strVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return strVariablesArray;
}

public String GetBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;
			TableSchema tableSchema=null;
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						
						tableSchema=GetTableSchemaFromColumnForeignKey(columnSchema);
						
						sTablaClaseRelacionada+="\r\n\t\t\telse if($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"()!=null && $"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"()==true)";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
								
						sTablaClaseRelacionada+="\r\n\t\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual()!=0)";
						sTablaClaseRelacionada+=" {";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t$this->strAccionBusqueda='"+strFK+"_"+strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"';";						
						
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+"Logic= new "+GetNombreClaseC(tableSchema.ToString())+"Logic();";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+"Logic->setConnexion($this->getConnexion());";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t$"+GetNombreClaseObjetoC(tableSchema.ToString())+"Logic->getEntity($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual());\r\n\t\t\t\t\t//WithConnection";

						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\t$existe_history=HistoryWeb::ExisteElemento("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRCLASSNAME,$this->arrHistoryWebs);";			
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tif(!$existe_history && !$this->bitEsPopup) {";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$historyWeb=new HistoryWeb();";			
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$historyWeb->setStrCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRNOMBREOPCION);";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$historyWeb->setStrNombre("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRCLASSWEBTITULO);";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$historyWeb->setstrNombreElemento("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::get"+GetNombreClaseC(tableSchema.ToString())+"Descripcion($"+GetNombreClaseObjetoC(tableSchema.ToString())+"Logic->get"+GetNombreClaseC(tableSchema.ToString())+"()));";//Relationship_
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$historyWeb->setIdActual($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual());";						
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$this->arrHistoryWebs[]=$historyWeb;";						
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t}";
						
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tif($this->bitEsPopup) {";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$this->strHistoryWebAuxiliar="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRCLASSWEBTITULO;";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t$this->strHistoryWebElementoAuxiliar="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::get"+GetNombreClaseC(tableSchema.ToString())+"Descripcion($"+GetNombreClaseObjetoC(tableSchema.ToString())+"Logic->get"+GetNombreClaseC(tableSchema.ToString())+"());";//GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones::$STRCLASSWEBTITULO;";//Relationship_
						sTablaClaseRelacionada+="\r\n\t\t\t\t\t}";
						
						sTablaClaseRelacionada+="\r\n\t\t\t\t}";
									
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t//PARA HABILITAR REGRESAR";
						sTablaClaseRelacionada+="\r\n\t\t\t\t//$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(false);";
						
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t$this->intNumeroPaginacionPagina=0;";
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t$this->intNumeroPaginacion="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$INTNUMEROPAGINACION;";
						//sTablaClaseRelacionada+="\r\n\t\t\t\t$this->iFinPaginacion=10;";
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
										
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
						
						sTablaClaseRelacionada+="\r\n\t\t\t}";
							
						
				
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					sTablaClaseRelacionada+="\r\n\t\t\telse if($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"())";
					sTablaClaseRelacionada+="\r\n\t\t\t{";
								
					sTablaClaseRelacionada+="\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getbit"+strId+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual()!=0)";
					sTablaClaseRelacionada+="\r\n\t\t\t\t{";
					sTablaClaseRelacionada+="\r\n\t\t\t\t\t$this->strAccionBusqueda='"+strFK+"_"+strIdGetSet+GetNombreClaseC(tableSchemaForeignKey.ToString())+"';";						
					sTablaClaseRelacionada+="\r\n\t\t\t\t}";
									
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(false);";
						
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t$this->intNumeroPaginacionPagina=0;";
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t$this->intNumeroPaginacion="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$INTNUMEROPAGINACION;";
					//sTablaClaseRelacionada+="\r\n\t\t\t\t$this->iFinPaginacion=10;";
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
										
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
						
					sTablaClaseRelacionada+="\r\n\t\t\t}";							
				}
			}
				
			return sTablaClaseRelacionada; 
		}
		
public string  GetXmlBusquedasIndicesTablas() {
			bool blnEsIndiceFkUnoAUno=false;
			
			String strParaReporte="";
			
			if(blnEsReporte) {
				strParaReporte="ParaReporte";	
			}
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if($strAccionBusqueda==\"{0}\") {";
			
			String strFuncionBusqueda="";
			String strFuncionBusqueda2="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			
			String strFuncionLogic="";strFuncionLogic+="";
			
			
			//strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->toXml"+GetNombreClaseC(TablaBase.ToString())+"s();";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s()==null || count($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s())==0)";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";	
			strXmlFuncion+=" {\r\n\t\t\t\t\t}";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t//if($this->strGenerarReporte!=''&& $this->strGenerarReporte!=null) {";
			
			
			strXmlFuncion+="\r\n\t\t\t\t\tif($this->strTipoPaginacion=='TODOS') {";
			strXmlFuncion+="\r\n\t\t\t\t\t\t$this->pagination->setIntFirstResult(-1);";
			strXmlFuncion+="\r\n\t\t\t\t\t\t$this->pagination->setIntMaxResults(-1);";			
			strXmlFuncion+="\r\n\t\t\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"s=$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s();";						
			strXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			strXmlFuncion+="\r\n\t\t\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"sReporte=$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s();";
			strXmlFuncion+="\r\n\r\n\t\t\t\t\t\t$this->pagination->setIntFirstResult($this->intNumeroPaginacion);";
			strXmlFuncion+="\r\n\t\t\t\t\t\t$this->pagination->setIntMaxResults($this->intNumeroPaginacionPagina);";	
			strXmlFuncion+="\r\n\t\t\t\t\t}";			
			
			strXmlFuncion+="\r\n\t\t\t\t\t//$this->generarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\",$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s());";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif($this->strTipoPaginacion=='TODOS') {";
			strXmlFuncion+="\r\n\t\t\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->set"+GetNombreClaseC(TablaBase.ToString())+"s($"+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			strXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t//}";	
			
			//strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			//strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
			
			String strXmlFuncionObjeto=string.Empty;
			
			strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic->get"+GetNombreClase(TablaBase.ToString())+"()!=null && $this->"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic->get"+GetNombreClase(TablaBase.ToString())+"()->get"+strIdGetSet+"()!=0) {";
			//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t} else {";
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
			
						
			//strXmlFuncion+="\r\n\r\n\t\t\t\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento=='')";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			//strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			//strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
				
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					blnEsIndiceFkUnoAUno=false;
					
					strFuncionBusqueda2="\r\n\t\t\t\t//"+GetNombreClase(TablaBase.ToString())+"LogicAdditional::getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique)
					{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+strParaReporte+"(";//WithConnection
						strIfFuncion="\r\n\t\t\telse if($strAccionBusqueda=='"+indexSchema.Name+"')\r\n\t\t\t{";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strParaReporte+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"$finalQueryPaginacion,$this->pagination,";//WithConnection
						strIfFuncion="\r\n\t\t\telse if($strAccionBusqueda=='"+indexSchema.Name+"')\r\n\t\t\t{";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strParaReporte+"(";//WithConnection
						strIfFuncion="\r\n\t\t\telse if($strAccionBusqueda=='"+indexSchema.Name+"')\r\n\t\t\t{";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{								
									//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									//strDefinicionVariables+="\r\n\r\n\t\t\t\tif($request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									//strDefinicionVariables+="\r\n\t\t\t\t{";
									//strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";										
									//strDefinicionVariables+="\r\n\t\t\t\t}";
										
									
									if(indexSchema.Name.Contains(strFK+"_"))
									{
										if(!blnNoStandardTableFromProperties && memberColumnSchema.Column.IsPrimaryKeyMember && memberColumnSchema.Column.Name.Equals(strId) && memberColumnSchema.Column.IsForeignKeyMember) {
											blnEsIndiceFkUnoAUno=true;
										}
										
											strDefinicionVariables+="\r\n\r\n\t\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual()!=null && $"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual()!=0)";
											strDefinicionVariables+="\r\n\t\t\t\t{";
											//strDefinicionVariables+="\r\n\t\t\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=$this->Session->read('$"+memberColumnSchema.Column.Name+"Actual');";
											strDefinicionVariables+="\r\n\t\t\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->getbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual();";
											strDefinicionVariables+="\r\n\t\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"->setbig"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual(0);";
											//strDefinicionVariables+="\r\n\t\t\t\t\t$this->Session->delete('"+memberColumnSchema.Column.Name+"Actual');";
											
											strDefinicionVariables+="\r\n\t\t\t\t}";
									}
									
									strUsoVariables+="$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 
									
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strUsoVariables+=",$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name; 
									}
									
									if(!indexSchema.MemberColumns.Count.Equals(count))
									{
										strUsoVariables+=",";	
									}
								}
								else
								{
									if(!indexSchema.Name.Contains("BusquedaRango"))
									{
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										strUsoVariables+="$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									}
									else
									{
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										strUsoVariables+="$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name; 									
										
										strUsoVariables+=",";	
										
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										strUsoVariables+="$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name; 									
									}
									
								
								}
								count++;
							}
							
							strFuncionBusqueda2+=strUsoVariables+");\r\n";
							strFuncionBusqueda+=strUsoVariables+");";
							
							if(blnEsProceso) {
								strFuncionBusqueda+="\r\n\t\t\t\t$this->inicializarMensajesTipo"+GetNombreClaseC(TablaBase.ToString())+"('PROCESAR',null);";
							}
							
					if(indexSchema.IsUnique)
					{
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					}
					else
					{							
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",strFuncionBusqueda.Replace("$finalQueryPaginacion","''").Replace("\r\n\r\n","\r\n\t\t"));//+"\r\n\r\n\t\t\t}";																																		
							
							if(blnEsIndiceFkUnoAUno) {								
								strInitFuncion+="\r\n\t\t\t\t\t$blnTieneDatos"+GetNombreClaseC(TablaBase.ToString())+"=true;";
								strInitFuncion+="\r\n\t\t\t\t\t$blnTieneDatos"+GetNombreClaseC(TablaBase.ToString())+"=$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s()!=null && count($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s())>0;";
								strInitFuncion+="\r\n\r\n\t\t\t\t\t"+"if($blnTieneDatos"+GetNombreClaseC(TablaBase.ToString())+") {";
								strInitFuncion+="\r\n\t\t\t\t\t\t$this->strPermisoNuevo"+GetNombreClaseC(TablaBase.ToString())+"='none';";
								
								strInitFuncion+="\r\n\t\t\t\t\t}";
							}
							
							strInitFuncion+="\r\n\r\n\t\t\t}";
					}
				}
			}								
			return  strInitFuncion;
		}
		
		
		public string  GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if($this->strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			String strParametroPadre="";
			
			strParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong($request->getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";
			
											
											
			String strFuncionTodos=string.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0){ 
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++) {
					
					strFuncionTodos="\r\n\t\t\telse if($this->strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					strFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+strParametroPadre+"\r\n\t\t\t\t";					
					strFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"$finalQueryPaginacion,$big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					//strFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					strFuncionTodos+="\r\n\r\n\t\t\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					strFuncionTodos+="\r\n\t\t\t\t{";
					//strFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					strFuncionTodos+="\r\n\t\t\t\t}";
					
					//strFuncionTodos+="\r\n\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					//strFuncionTodos+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strFuncionTodos+="\r\n\t\t\t}";
					
					
					
					//strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					strXmlFuncion+="\r\n\r\n\t\t\t\t\tif($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic->get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
					
					//strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					//strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
					
					String strXmlFuncionObjeto=string.Empty;
					
					strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic->get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic->get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					
					//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
					
					
					
					//strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					//strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strFuncionBusqueda="\r\n\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if($this->strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"$finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								strIfFuncion="\r\n\t\t\telse if($this->strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if($this->strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							strIfFuncion+=strParametroPadre;
							
							int count=1;
							strDefinicionVariables="";
							strUsoVariables="";							
							//strFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{	
											
											strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
											
											
											
											strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												strUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
																							
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												
												
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												strUsoVariables+=",";	
												
												
												
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"$request->getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												
												
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									strFuncionBusqueda+=strUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
					}
					
					strInitFuncion=strFuncionTodos+strInitFuncion;
				}
			}
			
			return  strInitFuncion;
		}
		
public string  GetVariablesTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strNombreAdicional="";
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			ArrayList clases=new ArrayList();	
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				if(!ExisteClaseEnListaC(GetNombreClaseC("dbo."+collectionInfo.SecondaryTable),clases)) {			
					if(!GetNombreClaseC("dbo."+collectionInfo.SecondaryTable).Equals(GetNombreClaseC(TablaBase.ToString()))) {
						if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
							strTablaClaseRelacionada+="\r\n\r\n\tpublic $"+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+*/GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;\r\n\r\n";
							
							strTablaClaseRelacionada+="\tpublic function "+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic"*/" get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic() "; 
							strTablaClaseRelacionada+="{\r\n";		
							strTablaClaseRelacionada+="\t\treturn $"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
							strTablaClaseRelacionada+="\t}\r\n\r\n";
						
							strTablaClaseRelacionada+="\tpublic function set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic("+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic"*/"$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic) "; 
							strTablaClaseRelacionada+="{\r\n";
							strTablaClaseRelacionada+="\t\t$this->"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic =$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
							strTablaClaseRelacionada+="\t}\r\n";
						}
					}
				}
				
				clases.Add(GetNombreClaseC("dbo."+collectionInfo.SecondaryTable));
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
		public string  GetVariablesTablasInicializarClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strCommentClaseRelacionada="";
			
			if(usaConstantesCarga) {
				strCommentClaseRelacionada="//";
			}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					strTablaClaseRelacionada+="\r\n\t\t\t"+strCommentClaseRelacionada+"$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public string GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					strTablaClaseRelacionada+="\t\tclasses.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string  GetXmlFuncionesClasesCompuestos() 
{
	String strFuncion=string.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0) {
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++) {
			strFuncion+="\r\n\r\n\tpublic toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()";
			strFuncion+="\r\n\t{";
			strFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			strFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			strFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			strFuncion+="\r\n\t\ttry"; 
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic->setConnexion(connexion);";
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic->setConnexion(connexion);";
			
			strFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\\r\n\");";
			strFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\''+System.currentTimeMillis()+\"\\\">\\r\n\");";	    
				
			strFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			strFuncion+="\r\n\t\t\t\t{";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic->DeepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++) { 
					strFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				strFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++) { 
					strFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			strFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\\r\n\");";			
			strFuncion+="\r\n\t\t\t\t}\r\n";
					
			strFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\\r\n\");";
					
			strFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			strFuncion+="\r\n\t\t}"; 
			strFuncion+="\r\n\t\tcatch(Exception $e)"; 
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();";
			strFuncion+="\r\n\t\t\tthrow $e;";
			strFuncion+="\r\n\t\t}";
			strFuncion+="\r\n\t\tfinally";
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			strFuncion+="\r\n\t\t}";
				
			strFuncion+="\r\n\t\t\treturn Funciones.ValidarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getstrTableName());";
				
			strFuncion+="\r\n\t}";
		}
	}
	
	return strFuncion;
}


public string  GetintNicializacionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0){ 
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++) {
					
				strInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">();" ;																
																																																		
				}													
			}
								
			return strInitFuncion; 
		}
		
public string  GetDefinicionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0){ 
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++) {
					
					strInitFuncion+="\r\n\t"+"ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
																																								
					strInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+="\r\n\t{";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic function set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					strInitFuncion+="\r\n\t{";	
					strInitFuncion+="\r\n\t\t$this->"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return strInitFuncion; 
		}
		
public string  GetindicesTablasClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strParametroCompuesto="";
			String strParametroCompuesto2="";
			String strParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0){ 
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++) {
							//strParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							//strParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,'','');";
					
							//strParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							//strParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							//strParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";

							strInitFuncion+="\r\n\tpublic  String  Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String strFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")"; 
							strInitFuncion+="\r\n\t{\r\n\t\tString strMensaje='';\r\n\t\t";
							strInitFuncion+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							strInitFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos($strFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+");";
						
							//strInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');";	
							//strInitFuncion+=strParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//strInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery($strFinalQuery);\r\n\t\t\t";
							//strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.GetEntities" +strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							strInitFuncion+="\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException ex)\r\n\t\t{\r\n\t\t\t";//connexion.getConnection().commit();//connexion.getConnection().rollback();
							
							strInitFuncion+="\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t";	//connexion.getConnection().rollback();	//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();
							strInitFuncion+="\r\n\r\n\t\treturn $strMensaje;\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						
						

						
						if(!indexSchema.IsPrimaryKey)
						{
							
						
							strParametersFuncion="";
							strParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strInitFuncion+="\r\n\tpublic "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');";		
								strEndBodyFuncion="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
								strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									strInitFuncion+="\r\n\tpublic "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String strFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";									
									strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"($strFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									strInitFuncion+="\r\n\tpublic "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
									strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery($strFinalQuery);";	
									
									//strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
									strBodyFuncion+=strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
											
								}
								else
								{
									//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									
									//strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,'');\r\n";		
									strBodyFuncion+="\r\n\r\n\t\t\t"+strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
								}
								
								//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
							
							}	
							int count=1;	
							strParametersFuncion="";
							strParametersNameFuncion="";	
							strParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
											
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							strInitFuncion+=strParametersFuncion+")\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
						}
					}
				}													
			}
								
			return strInitFuncion; 
		}

public string  GetMaintenanceTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionadaNombre="";
			String strTablaClaseRelacionada3="";
			
			String strFuncionInit="\r\n\tpublic function save"+GetNombreClase(TablaBase.ToString())+"Relaciones($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC,"+/*GetNombreClase(TablaBase.ToString()) +*/"$"+GetNombreClaseObjetoC(TablaBase.ToString());
			String strFuncionMiddle=")\r\n\t{\r\n\t\t$strMensaje='';\r\n";//Mensaje.getMensajeGeneralDeepSave('')
			strFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\t";//$this->getNewConnexionToDeep();
			
			strFuncionMiddle+="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->save"+GetNombreClase(TablaBase.ToString())+"Relaciones($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC,"+"$"+GetNombreClaseObjetoC(TablaBase.ToString());
			
			String strFuncionEnd="\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t\r\n\r\n\treturn $strMensaje;\r\n\r\n\t}";
			
			//connexion.getConnection().commit();
			//connexion.getConnection().rollback();
			//connexion.getConnection().rollback();
			//finally\r\n\t\t{\r\n\t\t\t$this->closeNewConnexionToDeep();\r\n\t\t}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada+=",$"+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					strTablaClaseRelacionada+=",$"+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada3+=",$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					strTablaClaseRelacionada3+=",$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			//strTablaClaseRelacionada2+="\r\n\t\t\t$this->set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(($"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->getIsDeleted()"+")";
			//strTablaClaseRelacionada2+="\r\n\t\t\t{";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\t$this->save"+GetNombreClaseC(TablaBase.ToString())+"($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\t$this->save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC"+strTablaClaseRelacionada3+");";
			//strTablaClaseRelacionada2+="\r\n\t\t\t}";
			//strTablaClaseRelacionada2+="\r\n\t\t\telse if($"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->getIsDeleted())";
			//strTablaClaseRelacionada2+="\r\n\t\t\t{";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\t$this->save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC"+strTablaClaseRelacionada3+");";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\t$this->save"+GetNombreClaseC(TablaBase.ToString())+"($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);";
			//strTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada3+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public string  GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionadaNombre="";
			String strFuncionInit="\r\n\tpublic function save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC";
			String strFuncionMiddle=")\r\n\t{\r\n";
			strFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";
			
			strFuncionMiddle+="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC";
			
			String strFuncionEnd="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada+=","+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					strTablaClaseRelacionadaNombre+=",$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					strTablaClaseRelacionada+=","+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/"$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
					strTablaClaseRelacionadaNombre+=",$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			//strTablaClaseRelacionada2+="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=$this->get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();";
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null)\r\n\t\t\t{";										
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->setConnexion($this->getConnexion());";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s())\r\n\t\t\t{";					
					//strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->setConnexion($this->getConnexion());";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic->save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);";
				}
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionadaNombre+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public string  SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ strTablaClaseRelacionadaSave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;						
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ strTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public string SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strTablaClaseRelacionadaLogic=string.Empty;
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();	
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	
		
public string  SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public string SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public string  SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public string  SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					 existe= true;
				}
			}
								
			return existe; 
		}

public string  GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns){ 
				if(columnSchema.IsForeignKeyMember) {
					strTablaClaseRelacionada+="classes.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public string  GetindicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String strInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.Save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
            strTablaClaseRelacionada2="\r\nelse\r\n{"+strInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			strFuncionInclude="";
			strFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values){ 
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				} else {
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
			
			
			}
			
				strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			// parte del no if deep
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion=strInit+"\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				strInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					//strInitFuncion=strInitFuncion;strInitFuncion+="";
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				} else {
					//strInitFuncion=strInitFuncion;strInitFuncion+="";
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0=strInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values){ 
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada0+="\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionInclude+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionExclude+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				} else {
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{";
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada0+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			
			strIfFuncion=strInitIfFuncion+strTablaClaseRelacionada0+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada){ 
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public string  GetindicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
            strTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values){ 
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepLoad($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				} else {
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;		
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic->DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
				
			}
			
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			
			//Parte del no if del deep
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			strFuncion=string.Empty;
			
			strTablaClaseRelacionada=string.Empty;
			strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			strFuncion=strInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			strFuncionInclude="";
			strFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				} else {
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+="\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			strFuncionInclude+="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			strFuncionExclude+= "\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada){ 
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public string  GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String strParaBusquedaString=""; 
			String strParaBusquedaCompuesto=""; 
			
			if(esCompuesto){ 
				strParaBusquedaCompuesto="Constantes.getstrSchema()+\".\"+"+GetNombreClase(column.Table.ToString())+".getstrTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength){ 
				if(!esUnico)	 {
				strParaBusquedaString="+\"%\"";
				}
			}
			
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+strParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo){ 
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			} else { 
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
	public string  GetParameterSelectionRango(ColumnSchema column,String strIndexName) 
		{
			String strParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength){ 
				strParaBusquedaString="+\"%\"";
			}
			
			String strParameterSelection=String.Empty;
			
			if(!strIndexName.Contains("BusquedaRango")){ 
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(strIndexName.Contains("BusquedaMayorIgual")) {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMayor")) {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenorIgual")) {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenor")) {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			} else { 
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(strIndexName.Contains("BusquedaRangoIgual")) {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				} else {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				strParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				strParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(strIndexName.Contains("BusquedaRangoIgual")) {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				} else {
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return strParameterSelection;
		}

		public string  GetindicesTablasFacesClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			String strType="";
			String strPrefijoControl="'.$this->strSufijo.'";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"ParaProcesar(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						strBodyFuncion+="\r\n\t\t\t//SOLO SI ES NECESARIO";
						strBodyFuncion+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
						strBodyFuncion+="\r\n\t\t\t$this->getNewConnexion();";
						strBodyFuncion+="\r\n\r\n\t\t\tif($strNombreOpcionRetorno!=null && $strNombreOpcionRetorno!='') {\r\n\t\t\t\t$this->strNombreOpcionRetorno=$strNombreOpcionRetorno;\r\n\t\t\t}";						
						strBodyFuncion+="\r\n\r\n\t\t\t$this->intNumeroPaginacion="+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones::$INTNUMEROPAGINACION;";
						strBodyFuncion+="\r\n\t\t\t$this->intNumeroPaginacionPagina=0;\t\t\t\r\n";
						strBodyFuncion+="BYDAN-PARAMETROS";
						
						strBodyFuncion+="\r\n\r\n\t\t\t$this->strAccionBusqueda='"+indexSchema.Name+"';";
						strBodyFuncion+="\r\n\r\n\t\t\t$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion()";						
						//strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');";		
						//strEndBodyFuncion="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\r\n\t\t\t//SOLO SI ES NECESARIO";
						strEndFuncion+="\r\n\t\t\t$this->setCommitCloseConnexion();";
						strEndFuncion+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";
						strEndFuncion+="\r\n\r\n\t\t\t$this->return"+GetNombreClaseC(TablaBase.ToString())+"s(true);\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{";
						strEndFuncion+="\r\n\t\t\t$this->setRollbackCloseConnexion();";
						strEndFuncion+="\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"ParaProcesar(";
							
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\t\t\t//SOLO SI ES NECESARIO";
							strBodyFuncion+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
							strBodyFuncion+="\r\n\r\n\t\t\t$this->getNewConnexion();";
							strBodyFuncion+="\r\n\r\n\t\t\tif($strNombreOpcionRetorno!=null && $strNombreOpcionRetorno!='') {\r\n\t\t\t\t$this->strNombreOpcionRetorno=$strNombreOpcionRetorno;\r\n\t\t\t}";							
							strBodyFuncion+="\r\n\r\n\t\t\t$this->intNumeroPaginacion="+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones::$INTNUMEROPAGINACION;";
							strBodyFuncion+="\r\n\t\t\t$this->intNumeroPaginacionPagina=0;\t\t\t\r\n";						
							strBodyFuncion+="BYDAN-PARAMETROS";
							strBodyFuncion+="\r\n\r\n\t\t\t$this->strAccionBusqueda='"+indexSchema.Name+"';";
							strBodyFuncion+="\r\n\r\n\t\t\t$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion()";
						
							//strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"($strFinalQuery,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"ParaProcesar(";
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\t\t\t//SOLO SI ES NECESARIO";
							strBodyFuncion+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(false);";
							strBodyFuncion+="\r\n\r\n\t\t\t$this->getNewConnexion();";
							strBodyFuncion+="\r\n\r\n\t\t\tif($strNombreOpcionRetorno!=null && $strNombreOpcionRetorno!='') {\r\n\t\t\t\t$this->strNombreOpcionRetorno=$strNombreOpcionRetorno;\r\n\t\t\t}";														
							strBodyFuncion+="\r\n\r\n\t\t\t$this->intNumeroPaginacion="+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones::$INTNUMEROPAGINACION;";
							strBodyFuncion+="\r\n\t\t\t$this->intNumeroPaginacionPagina=0;\t\t\t\r\n";						
							strBodyFuncion+="BYDAN-PARAMETROS";
							strBodyFuncion+="\r\n\r\n\t\t\t$this->strAccionBusqueda='"+indexSchema.Name+"';";
							strBodyFuncion+="\r\n\r\n\t\t\t$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion()";
						
							//strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery($strFinalQuery);";			
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
						}
						
						//strEndBodyFuncion="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";						
						strEndFuncion="\r\n\r\n\t\t\t//SOLO SI ES NECESARIO";
						strEndFuncion+="\r\n\t\t\t$this->setCommitCloseConnexion();";
						strEndFuncion+="\r\n\t\t\t$this->saveGetSessionControllerAndPageAuxiliar"+GetNombreClaseC(TablaBase.ToString())+"(true);";					
						strEndFuncion+="\r\n\r\n\t\t\t$this->return"+GetNombreClaseC(TablaBase.ToString())+"s(true);\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{";
						strEndFuncion+="\r\n\t\t\t$this->setRollbackCloseConnexion();";
						strEndFuncion+="\r\n\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
								//strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 								
									
								if(!(EsDateColumn(memberColumnSchema.Column) || EsDateTimeColumn(memberColumnSchema.Column) 
										|| EsTimeColumn(memberColumnSchema.Column) || EsBitColumn(memberColumnSchema.Column))) {
											
									strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=$this->data['"+strPrefijoControl+indexSchema.Name+"']['"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+"'];"; 
									
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"=$this->data['"+strPrefijoControl+indexSchema.Name+"']['"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+strSufijoRangoFinal+"'];"; 
									}
									
								} else if(!EsBitColumn(memberColumnSchema.Column)){
									if(EsDateColumn(memberColumnSchema.Column)) {
										strType="'date'";
										
									} else if(EsDateTimeColumn(memberColumnSchema.Column)) {
										strType="'datetime'";
										
									} else if(EsTimeColumn(memberColumnSchema.Column)) {
										strType="'time'";
									}
									
									//strEntityFinal="(Funciones::getFechaHoraFromData("+strType+",$this->data,'"+GetNombreColumnFromProperties(memberColumnSchema.Column)+"'));";//"\"));";
									strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=Funciones::getFechaHoraFromDataBusqueda("+strType+",$this->data,'"+strPrefijoControl+indexSchema.Name+"','"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+"');"; 
									
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"=Funciones::getFechaHoraFromDataBusqueda("+strType+",$this->data,'"+strPrefijoControl+indexSchema.Name+"','"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+strSufijoRangoFinal+"');"; 
									}
								} else {
									strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=Funciones::getBooleanFromDataValueBusqueda($this->data['"+strPrefijoControl+indexSchema.Name+"']['"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+"']);"; 
								}
								
						
								if(indexSchema.IsUnique) {
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count)) {
									//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								
								} else {
									//strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count)) {					
									//strParametersFuncion+=",";
									//strParametersNameFuncion+=",";	
								}
							} else {
								if(!indexSchema.Name.Contains("BusquedaRango")) {
									//strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=$this->data['"+strPrefijoControl+indexSchema.Name+"']['"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+"'];"; 
								
								} else {
									//strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name+"=$this->data['"+strPrefijoControl+indexSchema.Name+"']['"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+"'];"; 
									
									//strParametersFuncion+=",";
									//strParametersNameFuncion+=",";	
									
									//strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+="\r\n\t\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name+"=$this->data['"+strPrefijoControl+indexSchema.Name+"']['"+GetNameControlHtmlBusqueda(memberColumnSchema.Column,"")+"'];"; 						
								}
								//strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}							
						count++;
					}
					
					strInitFuncion+=strParametersFuncion+"$strNombreOpcionRetorno='')\r\n\t{"+strBodyFuncion.Replace("BYDAN-PARAMETROS",strParametersNameFuncion)+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
											
			return strInitFuncion; 
		}
		
public string  GetindicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');";		
						//strEndBodyFuncion="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"($strFinalQuery,";
							
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();					
							strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"($strFinalQuery,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic function "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\r\n\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->"+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery($strFinalQuery);";			
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,'');\r\n";		
						}
						
						//strEndBodyFuncion="\r\n\r\n\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception $e)\r\n\t\t{\r\n\t\t\tthrow $e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								//ESTABA FUNCIONANDO SIN FINAL
								//strParametersNameFuncion+="$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
							
								//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									strParametersFuncion+=","+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
								}
							
								strParametersNameFuncion+="$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 							
								//COPIADO DESDE JAVA
								//sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									strParametersNameFuncion+=",$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
								}
								
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+="$"+GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									strParameterSelection+="$"+GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+="$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+="$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+="$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+="$"+GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strInitFuncion+=strParametersFuncion+")\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public string  GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				} else {
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public string  GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				} else {
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public  string GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	

	strSetEntity="\r\n\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	strSetEntity+="\t\t\t\tauditoria.setstrCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	strSetEntity+="\t\t\t\tauditoria.setstrValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	strSetEntity+="\t\t\t\tauditoria.setstrValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	
	strSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegistrarNuevaAuditoriaDetalle(auditoriaObj->getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),"+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ","+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );";
	strSetEntity+="\r\n\t\t\t}";
	
	return strSetEntity;
}

public static string GetstretEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String strSetEntity=string.Empty;
	
	if(conVersionRow) {
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)) {
			return strSetEntity;
		}
	}
	else{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow)) {
			return strSetEntity;
		}
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string  GetParametroFuncionnuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
			return strParamtro;
		}
		strParamtro=/*GetTipoColumnaClaseC(column)+" "+*/"$"+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroUsoFuncionnuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
			return strParamtro;
		}
		strParamtro="$"+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionactualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return strParamtro;
		}
		if(!column.Name.Equals(strId)) {
		strParamtro=/*GetTipoColumnaClaseC(column)+*/"$"+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		} else
		{
		strParamtro=/*GetTipoColumnaClaseC(column)+" "*/"$"+strId;			
		}
		return strParamtro;
}

public string GetParametroUsoFuncionactualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return strParamtro;
		}
		if(!column.Name.Equals(strId)) {
		strParamtro="$"+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		} else
		{
		strParamtro="$"+strId;			
		}
		return strParamtro;
}

public string  GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string  GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}

public string  GetClassesSetAddTablasRelacionadas() 
{
			String strTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany) {
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				} else {
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo)) {
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					strTablaClaseRelacionada+="\r\n\t\t\tclasses.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class);";									
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public string  GetForTablasRelacionadasForSetDelete() 
{
			String strTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany) {
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				} else {
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo)) {
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						strTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"->setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada+="\r\n\t\t\tif($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()->setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public string  GetindicesVariablesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=null;\r\n\r\n"; 
							
							strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"() "; 
							strInitFuncion+="{\r\n";
							strInitFuncion+="\t\treturn $this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							strInitFuncion+="\t}\r\n\r\n";
						
							strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") ";
							strInitFuncion+="{\r\n";
							strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							strInitFuncion+="\t}\r\n\r\n";
	
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"=null;\r\n\r\n"; 
							
								strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"()"; 
								strInitFuncion+=" {\r\n";
								strInitFuncion+="\t\treturn $this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic function set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+")";
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+" = $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							}
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+="\r\n";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=null;\r\n\r\n"; 
								
								strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"() "; 
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\treturn $this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") ";
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" =$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							}
							else
							{
								strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+"=null;\r\n\r\n"; 
								
								strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial() "; 
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\treturn $this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+/*GetPrefijoTipoC(memberColumnSchema.Column)+*/"$"+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) ";
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
								
								//strInitFuncion+=",";
								strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+"=null;\r\n\r\n"; 
								
								strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final() "; 
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\treturn $this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
							
								strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) ";
								strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								strInitFuncion+="\t}\r\n\r\n";
								break;
							}
						}
						count++;
					}
					//strInitFuncion+=");";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
		public string  GetGuardarDesdeSessionindicesVariablesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							//strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=null;\r\n\r\n"; 
							
							//strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"() "; 
							//strInitFuncion+="{\r\n";
							strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							//strInitFuncion+="\t}\r\n\r\n";
						
							
							//strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") ";
							//strInitFuncion+="{\r\n";
							//strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							//strInitFuncion+="\t}\r\n\r\n";
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+="\r\n";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								//strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=null;\r\n\r\n"; 
								
								//strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"() "; 
								//strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								//strInitFuncion+="\t}\r\n\r\n";
							
								//strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") ";
								//strInitFuncion+="{\r\n";
								//strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" =$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								//strInitFuncion+="\t}\r\n\r\n";
							}
							else
							{
								//strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+"=null;\r\n\r\n"; 
								
								//strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial() "; 
								//strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+"=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								//strInitFuncion+="\t}\r\n\r\n";
							
								//strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+/*GetPrefijoTipoC(memberColumnSchema.Column)+*/"$"+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) ";
								//strInitFuncion+="{\r\n";
								//strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = $"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								//strInitFuncion+="\t}\r\n\r\n";
								
								//strInitFuncion+=",";
								//strInitFuncion+="\tpublic "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+"=null;\r\n\r\n"; 
								
								//strInitFuncion+="\tpublic function "+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final() "; 
								//strInitFuncion+="{\r\n";
								strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final=$"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFFaces+strPrefijoJSFSessionFaces+"->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								//strInitFuncion+="\t}\r\n\r\n";
							
								//strInitFuncion+="\tpublic function set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+/*GetTipoColumnaClaseC(memberColumnSchema.Column)+*/"$"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) ";
								//strInitFuncion+="{\r\n";
								//strInitFuncion+="\t\t$this->"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								//strInitFuncion+="\t}\r\n\r\n";
								break;
							}
						}
						count++;
					}
					//strInitFuncion+=");";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public string  GetstretVariablesTablaToBean(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif($request->getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||$request->getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())=='')\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return string.Empty;
	}
		
	if(column.Name.Equals(strId)) {
		return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strIdGetSet+"($"+GetNombreClaseObjeto(TablaBase.ToString())+"->get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow)) {
		return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strVersionRowGetSet+"($"+GetNombreClaseObjeto(TablaBase.ToString())+"->get"+strVersionRowGetSet+"());";
	}
	return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strPrefijo+ strColumna +"($"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->get"+strPrefijo+ strColumna+"());";
}		

public string  GetstretVariableToVariableLocal(ColumnSchema column,bool blnConClase)
{
	String strSufijo="";
	
	if(blnConClase) {
		strSufijo="Clase";
	}
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif($request->getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||$request->getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())=='')\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return string.Empty;
	}
		
	if(column.Name.Equals(strId)) {
		return  "$"+GetNombreClaseObjetoC(TablaBase.ToString())+"Local->set"+strIdGetSet+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijo+"->get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow)) {
		return  "$"+GetNombreClaseObjetoC(TablaBase.ToString())+"Local->set"+strVersionRowGetSet+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijo+"->get"+strVersionRowGetSet+"());";
	}
	return  "$"+GetNombreClaseObjetoC(TablaBase.ToString())+"Local->set"+strPrefijo+ strColumna +"($"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijo+"->get"+strPrefijo+ strColumna+"());";
}	

public string  GetstretVariablesBeanToTable(ColumnSchema column,bool esParaLogic)
{
	String strReturn="";
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif($request->getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||$request->getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())=='')\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
		
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return string.Empty;
	}
	
	if(esParaLogic) {
		if(column.Name.Equals(strId)) {
			strReturn="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->set"+strIdGetSet+"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->get"+strIdGetSet+"());";
		} else if(column.Name.Equals(strVersionRow)) {
			strReturn="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->set"+strVersionRowGetSet+"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->get"+strVersionRowGetSet+"());";
		} else {
			strReturn="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->set"+strPrefijo+ strColumna +"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->get"+strPrefijo+ strColumna+"());";
		}
	} else {
		if(column.Name.Equals(strId)) {
			strReturn="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strIdGetSet+"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->get"+strIdGetSet+"());";
		} else if(column.Name.Equals(strVersionRow)) {
			strReturn="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strVersionRowGetSet+"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->get"+strVersionRowGetSet+"());";
		} else {
			strReturn="$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strPrefijo+ strColumna +"($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"()->get"+strPrefijo+ strColumna+"());";
		}
	}
	
	return strReturn;
}	

public string  SetVariablesTablaTocancelar(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif($request->getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||$request->getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())=='')\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String strValor="";
	
	switch(column.Name) {
		case strIsActive:
		strValor="";
		break;
		
		case strIsExpired:
		strValor="";
		break;
		
		case strVersionRow:
		strValor="";
		break;
		
		default:
		strValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return string.Empty;
	}
		
	if(column.Name.Equals(strId)) {
		return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strIdGetSet+"("+strValor+");";
	}
	if(column.Name.Equals(strVersionRow)) {
		return  "";//"$this->set"+strVersionRowGetSet+"('');";
	}
	return  "$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Clase->set"+strPrefijo+ strColumna +"("+strValor+");";
}
/*
	private Long id;
	private Boolean isActive;
	private Boolean isExpired;
	private Timestamp versionRow;
	private boolean isNew;
	private boolean isChanged;
	private boolean isDeleted;
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% } %>
	
	public Long getId( {
		return id;
	}

	public function setId(Long id {
		$this->id = id;
	}

	public Boolean getbitActive( {
		return isActive;
	}

	public function setbitActive(Boolean isActive {
		$this->bitActive = isActive;
	}

	public Boolean getbitExpired( {
		return isExpired;
	}

	public function setbitExpired(Boolean isExpired {
		$this->bitExpired = isExpired;
	}

	public Timestamp getVersionRow( {
		return versionRow;
	}

	public function setVersionRow(Timestamp versionRow {
		$this->versionRow = versionRow;
	}

	public boolean getIsNew( {
		return isNew;
	}

	public function setIsNew(boolean isNew {
		$this->bitNew = isNew;
	}

	public boolean getIsChanged( {
		return isChanged;
	}

	public function setIsChanged(boolean isChanged {
		$this->bitChanged = isChanged;
	}

	public boolean getIsDeleted( {
		return isDeleted;
	}

	public function setIsDeleted(boolean isDeleted {
		$this->bitDeleted = isDeleted;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseSetMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	
	
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
			<% } %>
*/

public string GetParameterBindingClase(ColumnSchema column)
{
	String strBindingColumnTable="";
	
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
		return"";
	}
		
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC().ToLower();
	string strPrefijoTipo =GetPrefijoTipoC(column);

	strPrefijo=strPrefijoTabla+strPrefijoTipo;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
	
	String strTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
		
	string param =  GetTipoColumnaClaseC(column);
	
	//return param+" "+strPrefijo+";";
	
	if(column.Name!=strId) {
		strBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strPrefijo+"}\"));\r\n";
		
		//strBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strPrefijo+"}\"));\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strTitulo+"\");\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	else{
		strBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strId+"}\"));\r\n";
		
		//strBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strId+"}\"));\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strIdGetSet+"\");\r\n";
		strBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	
	return strBindingColumnTable;
}

public string  GetindicesActionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String strActionsButtons=string.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							//strPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButton();\r\n";
 							
							strActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener\r\n";
							strActionsButtons+="\t\t(\r\n";
							strActionsButtons+="\t\t\tnew java.awt.event.ActionListener() \r\n";
							strActionsButtons+="\t\t\t{\r\n";
							strActionsButtons+="\t\t\t\tpublic actionPerformed(java.awt.event.ActionEvent evt) \r\n";
							strActionsButtons+="\t\t\t\t{\r\n";
							strActionsButtons+="\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							strActionsButtons+="\t\t\t\t}\r\n";
							strActionsButtons+="\t\t\t}\r\n";
							strActionsButtons+="\t\t);\r\n";
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return strActionsButtons; 
		}		
	
		public string GetindicesFunctionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String strActionsButtons=string.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							
							
						
							strActionsButtons+="\r\n\tpublic jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt) \r\n";
							strActionsButtons+="\t{\r\n";
							strActionsButtons+="\t\ttry\r\n";
							strActionsButtons+="\t\t{\r\n";
							strActionsButtons+="\t\t\tintInicioPaginacion=0;\r\n";
							strActionsButtons+="\t\t\tintFinPaginacion=10;\r\n";
							strActionsButtons+="\t\t\t$this->get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"();\r\n";
							strActionsButtons+="\t\t\t$this->InicializaractualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"();\r\n";
							
							strActionsButtons+="\t\t}\r\n";
							strActionsButtons+="\t\tcatch(Exception $e)\r\n";
							strActionsButtons+="\t\t{\r\n";
							strActionsButtons+="\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);\r\n";
							strActionsButtons+="\t\t}\r\n";
							strActionsButtons+="\t}\r\n";
							
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return strActionsButtons; 
		}		
		
public string  GetindicesInicializacionBindingsVariablesTablasClasesC(TableSchema TablaBase) 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
		
			String strPanelesBusquedas=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			
			String strFinalFuncion="";
			
			strFinalFuncion="\r\n\t\t$this->bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding($this->binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
			strFinalFuncion+="\r\n\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
			String strControlBinding=string.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes){ 
				if(!indexSchema.IsPrimaryKey) {
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						


						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							//strControlesPanelesBusquedas+="\t"+GetintNicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
							strControlesPanelesBusquedas="\r\n\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
							strControlesPanelesBusquedas+="\t\tif($this->binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
							strControlesPanelesBusquedas+="\t\t{\r\n";
							strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding($this->binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
							strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
							strControlesPanelesBusquedas+="\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), $this->"+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
								
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								;
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strControlesPanelesBusquedas="\r\n\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
								strControlesPanelesBusquedas+="\t\tif($this->binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								strControlesPanelesBusquedas+="\t\t{\r\n";
								strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding($this->binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								strControlesPanelesBusquedas+="\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), $this->"+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
						
								
							}
							else
							{
								strControlesPanelesBusquedas="\r\n\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
								strControlesPanelesBusquedas+="\t\tif($this->binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								strControlesPanelesBusquedas+="\t\t{\r\n";
								strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding($this->binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								strControlesPanelesBusquedas+="\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), $this->"+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n";
						
								
								//strInitFuncion+=",";
								strControlesPanelesBusquedas+="\r\n\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n\r\n";				
								strControlesPanelesBusquedas+="\t\tif($this->binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								strControlesPanelesBusquedas+="\t\t{\r\n";
								strControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding($this->binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								strControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								strControlesPanelesBusquedas+="\t\t$this->binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), $this->"+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n";
						
								
								break;
							}
						}
						count++;
						
						strControlBinding=strControlesPanelesBusquedas+strFinalFuncion;
						strInitFuncion+=strControlBinding;
					}
																																						
				}
			}
			
			
			return strInitFuncion; 
		}

public string  GetNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String strClasesNoRelacionadas=string.Empty;
			String[] strClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				strClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				strClases=strClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String strClase in strClases) {						
					if(strClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo) {
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado) {
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					strTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(strTablaClaseRelacionada);
									
			return strTablaClaseRelacionada; 
		}
		
public string GetNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String strColumna="";
	
	strColumna+="\r\n\r\n\t\ttableColumn= new TableColumn();\r\n";
	strColumna+="\t\ttableColumn.setHeaderValue(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	strColumna+="\t\ttableColumn.setCellRenderer(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n";
	strColumna+="\t\ttableColumn.setCellEditor(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n\r\n";

	strColumna+="\t\t$this->jTableDatos"+GetNombreClase(TablaBase.ToString())+".addColumn(tableColumn);\r\n";
	
	return strColumna;
}


public string  GetNavegacionColumnsTableCellTablasClasesRelacionadas(TableSchema table) 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String strClasesNoRelacionadas=string.Empty;
			String[] strClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values){ 
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				strClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				strClases=strClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String strClase in strClases) {						
					if(strClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo) {
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado) {
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					strTablaClaseRelacionada+=GetNavegacionColumnTableCellTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(strTablaClaseRelacionada);
									
			return strTablaClaseRelacionada; 
		}
		
public string  GetNavegacionColumnTableCellTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String strColumna="";
	
		
	strColumna+="\r\n\r\n\t\tpublic class "+GetNombreClase(tablaRelacionada.ToString())+"TableCell extends AbstractCellEditor implements TableCellRenderer,TableCellEditor\r\n";
	strColumna+="\t\t{\r\n";
		strColumna+="\t\t\tJButton jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		strColumna+="\t\t\tObject valor;\r\n\r\n\r\n";

		
		strColumna+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+" =new JButton(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			strColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		strColumna+="\t\t\t}\r\n\r\n";

		strColumna+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"=new JButton(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";

			strColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".addActionListener\r\n";
	        strColumna+="\t\t\t\t(\r\n";
		          strColumna+="\t\t\t\t\tnew java.awt.event.ActionListener()\r\n";
		          strColumna+="\t\t\t\t\t{\r\n";
		              strColumna+="\t\t\t\t\t\tpublic actionPerformed(java.awt.event.ActionEvent evt)\r\n";
		              strColumna+="\t\t\t\t\t\t{\r\n";
		            	  strColumna+="\t\t\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(evt);\r\n";
		              strColumna+="\t\t\t\t\t\t}\r\n";
		          strColumna+="\t\t\t\t\t}\r\n";
	        strColumna+="\t\t\t\t);\r\n\r\n";

			strColumna+="\t\t\t\tvalor=value;\r\n";
			strColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		strColumna+="\t\t}\r\n\r\n";

		strColumna+="\t\tpublic Object getCellEditorValue()\r\n";
		strColumna+="\t\t{\r\n";
			strColumna+="\t\t\treturn valor;\r\n";
		strColumna+="\t\t}\r\n";
	strColumna+="\t\t}\r\n\r\n";
	
	strColumna+="\t\tprivate void jButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt)\r\n";
	strColumna+="\t\t{\r\n";   
		strColumna+="\t\t\ttry\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\t"+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false);\r\n\r\n";
			
			strColumna+="\t\t\t\tint intSelectedRow = $this->jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getstrelectedRow();\r\n";	       
			strColumna+="\t\t\t\t$this->"+GetNombreClaseObjetoC(TablaBase.ToString())+" = $this->"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic->get"+GetNombreClaseC(TablaBase.ToString())+"s().get($this->jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow));\r\n\r\n";
				
			strColumna+="\t\t\t\tArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new ArrayList<"+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
			strColumna+="\t\t\t\t$"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add($this->"+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n\r\n";
				
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseC(TablaBase.ToString())+"sForeignKey($"+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
			
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.CargarCombos"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.CargarCombosFrame"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setBig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"($"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.procesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.InicializaractualizarBindingTabla"+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";

			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
			strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
	        
			strColumna+="\t\t\t\t$this->jDesktopPane.add("+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n\r\n";
	        
	        strColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setstrelected(true);\r\n";
		strColumna+="\t\t\t}\r\n";
		strColumna+="\t\t\tcatch(Exception $e)\r\n";
		strColumna+="\t\t\t{\r\n";
			strColumna+="\t\t\t\t$this->manejarRetornarExcepcion"+GetNombreClaseC(TablaBase.ToString())+"($e);\r\n";
		strColumna+="\t\t\t}\r\n";
	strColumna+="\t\t}\r\n";
	
	return strColumna;
}


</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresaC(Empresa,false);%>
<?php 
<%=GetByDanLicence()%>
<%=strPhp53VersionComment%>namespace <%=Empresa%>/<%= Package%>/<%=Module%><%=strPackagePresentation%>/<%=strPackageWeb%>/<%=strPackageBeans%>/<%=strPackageFaces%>;


include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/Constantes.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/Funciones.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageUtils%>/PaqueteTipo.php');
include_once('<%=Empresa%>/<%=Package%>/<%=Module%><%=strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesCarga.php');


if(Constantes::$BIT_CONCARGA_INICIAL_POR_ARCHIVO) {


if(!Constantes::$BIT_CONCARGA_INICIAL) {
	//FK
<%=GetFkIncludeUseC(TablaBase,Empresa,Package,false,"\t",true)%>

	//REL
<%=GetClasesRelacionadasIncludeUseC(TablaBase,Empresa,Package,false,"\t",true)%>

}

<%if(!EsParaCakePhp){%>
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackagePresentation%>/<%=strPackageWeb%>/SessionBase.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackagePresentation%>/<%=strPackageWeb%>/<%=strPackageFaces%>/ControllerBase.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusinessSeguridad%>/<%=strPackageDataAccessSeguridad%>/ModelBase.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/excel/excel.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/pdf/fpdf.php');
<%}%>
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackagePresentation%>/<%=strPackageWeb%>/PaginationLink.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackagePresentation%>/<%=strPackageWeb%>/HistoryWeb.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageLogic%>/QueryWhereSelectParameters.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageBusiness%>/<%= strPackageLogic%>/Pagination.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageBusiness%>/<%= strPackageLogic%>/DatosCliente.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageBusiness%>/<%= strPackageLogic%>/DatosDeep.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackagePresentation%>/report/CellReport.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/DeepLoadType.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/DataType.php');
include_once('<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/FuncionesWebArbol.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Classe.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/OrderBy.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Reporte.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/DatoGeneral.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/DatoGeneralMinimo.php');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/MaintenanceType.php');
//include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageLogic%>\*');
//include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageUtils%>\*');
include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Conexion<%=strPrefijoJSFFaces%>.php');
//include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Mensajes.php');

<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>\Classe;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>\MaintenanceType;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageLogic%>\*;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageUtils%>\*;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Conexion<%=strPrefijoJSFFaces%>;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Mensajes;

<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%=strPackageBusiness%>/<%=strPackageLogic%>\QueryWhereSelectParameters;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/Constantes;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/Funciones;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/FuncionesWebArbol;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageBusiness%>/<%= strPackageLogic%>/Pagination;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageBusiness%>/<%= strPackageLogic%>/DatosCliente;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackagePresentation%>/report/CellReport;



<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("ParametroGeneralUsuario")){%>
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/ParametroGeneralUsuario.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("ParametroGeneralSg")){%>
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/ParametroGeneralSg.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("ResumenUsuario")){%>
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/ResumenUsuario.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Modulo")){%>
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Modulo.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Opcion")){%>
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Opcion.php');
<%}%>


<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Usuario")){%>
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Usuario.php');
include_once('<%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageLogic%>/UsuarioLogic.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Sistema")){%>
<%=strGlobalSeguridadComment%>include_once('<%=strEmpresaSeguridad%>/<%=PackageSeguridad%>/<%=strPackageBusinessSeguridad%>/<%=strPackageLogicSeguridad%>/SistemaLogicAdditional.php');
<%=strGlobalSeguridadComment%>include_once('<%=strEmpresaSeguridad%>/<%=PackageSeguridad%>/<%=strPackageUtilsSeguridad%>/SistemaConstantesFuncionesAdditional.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("PerfilOpcion")){%>
<%=strGlobalSeguridadComment%>include_once('<%=strEmpresaSeguridad%>/<%=PackageSeguridad%>/<%=strPackageBusinessSeguridad%>/<%=strPackageEntitiesSeguridad%>/PerfilOpcion.php');
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Usuario")){%>
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageEntities%>/Usuario;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%=PackageSeguridad%>/<%=strPackageBusiness%>/<%=strPackageLogic%>/UsuarioLogic;
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Sistema")){%>
<%=strGlobalSeguridadComment%><%=strPhp53VersionComment%>use <%=strEmpresaSeguridad%>/<%=PackageSeguridad%>/<%=strPackageBusinessSeguridad%>/<%=strPackageLogicSeguridad%>/SistemaLogicAdditional;
<%}%>

<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("PerfilOpcion")){%>
<%=strGlobalSeguridadComment%><%=strPhp53VersionComment%>use <%=strEmpresaSeguridad%>/<%=PackageSeguridad%>/<%=strPackageBusinessSeguridad%>/<%=strPackageEntitiesSeguridad%>/PerfilOpcion;
<%}%>



include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%= strPackageBusiness%>/<%= strPackageEntities%><%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClaseC(TablaBase.ToString())%>.php');
include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%= strPackageBusiness%>/<%= strPackageLogic%><%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClaseC(TablaBase.ToString())%>Logic.php');
include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%= strPackageBusiness%>/<%= strPackageLogic%><%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional.php');
include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%=strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.php');
include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%=strPackagePresentation%>/view<%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoView%>Additional.php');
include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%=strPackagePresentation%>/session<%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.php');
//include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%=strPackagePresentation%>/<%=strPackageReporte%>/<%=strPackageSource%>/<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>.php');
//include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%=strPackageBusiness%>/<%=strPackageLogic%>\*');
//include_once('<%=Empresa%>/<%= Package%>/<%=Module%><%=strPackageBusiness%>/<%=strPackageEntities%>\*');

<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%= strPackageBusiness%>/<%= strPackageEntities%>/<%=GetNombreClaseC(TablaBase.ToString())%>;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%= strPackageBusiness%>/<%= strPackageLogic%>/<%=GetNombreClaseC(TablaBase.ToString())%>Logic;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%= strPackageBusiness%>/<%= strPackageLogic%>/<%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%=strPackageUtils%>/<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones;	
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%=strPackagePresentation%>/<%=strPackageReporte%>/<%=strPackageSource%>/<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%=strPackagePresentation%>/session/<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%=strPackageBusiness%>/<%=strPackageLogic%>\*;
<%=strPhp53VersionComment%>use <%=Empresa%>/<%= Package%>/<%=Module%><%=strPackageBusiness%>/<%=strPackageEntities%>\*;



if(Constantes::$BIT_CONCARGA_INICIAL) {
	//FK
<%=GetFkIncludeUseC(TablaBase,Empresa,Package,false,"\t",false)%>

	//REL
<%=GetClasesRelacionadasIncludeUseC(TablaBase,Empresa,Package,false,"\t",false)%>

}

<%if(ContieneImagenesC(TablaBase)){%>
	<%=GetFuncionesImagenesC(TablaBase)%>
<%}%>


} else {
	//CARGA ARCHIVOS FRAMEWORK
	<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesCarga::cargarArchivosFrameworkBase(PaqueteTipo::$CONTROLLER);
	
	//CARGA ARCHIVOS PAQUETES DE CLASE ACTUAL 
	<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesCarga::cargarArchivosPaquetesBase(PaqueteTipo::$CONTROLLER);
	
	//CARGA ARCHIVOS FK (CARGAR COMBOS) 
	<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesCarga::cargarArchivosPaquetesForeignKeys(PaqueteTipo::$LOGIC);
	
	//CARGA ARCHIVOS RELACIONES
	//SOLO ENTITIES -> SE DEBE CARGAR DEACUERDO SE UTILIZE	
	<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesCarga::cargarArchivosPaquetesRelaciones(PaqueteTipo::$ENTITIES.PaqueteTipo::$DATA_ACCESS);
	
	//<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesCarga::cargarArchivosPaquetesRelaciones(PaqueteTipo::$LOGIC);	
}


class <%=GetNameController()%> extends <%=GetExtendController()%> {	
	<%if(EsParaCakePhp){%>
	var $name = '<%=GetNombreClaseC(TablaBase.ToString())%>s';
	var $uses = array('<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoCakeModel%>');
	<%if(GetCakeConUsesTableFromPropertiesC(TablaBase)) {%>
	var $uses = array('<%=GetNombreClase(TablaBase.ToString())%>');
	<%}%>		
	var $helpers = array('Html', 'Javascript', 'Ajax','Session','Fpdf', 'Excel'/*,'Menu','CssMenu'*/);		
	<%}%>		
	
	public $strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>='onload';
	public $strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='none';
	public $strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='none';
	public $bitEsPopup=false;			
	public $bitEsBusqueda=false;
	public $strFuncionJs='';
	public $strFuncionJsPadre='';
	public $strSufijo='';
	public $bitEsRelaciones=false;
	public $bitEsRelacionado=false;
	
	//RECARGAR_FK
	public $strRecargarFkTipos='';
	public $strRecargarFkTiposNinguno='';
	public $intRecargarFkIdPadre=0;
	public $strRecargarFkColumna='';
	public $strRecargarFkQuery='';
	
	public $strTituloTabla='';
	public $strTituloPathPagina='';
	public $strTituloPathElementoActual='';
	
	public $strHistoryWebAuxiliar='';
	public $strHistoryWebElementoAuxiliar='';
	
	public $strStyleDivArbol='';	
	public $strStyleDivContent='';
	public $strStyleDivOpcionesBanner='';
	public $strStyleDivExpandirColapsar='';	
	public $strStyleDivHeader='';	
	public $strPermiteRecargarInformacion='';
	
	public $paginationLinks=null;
	
	public $arrHistoryWebs=null;
	public $classesActual=array();
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral;
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral;
	
	<%if(blnConJQueryCode){%>
	public $htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>s='';	
	public $htmlTablaOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>='';
	public $htmlTablaReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s='';
	public $htmlTablaAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>='';
	
	public $bitDivsEsCargarGeneral<%=GetNombreClaseC(TablaBase.ToString())%><%=strAjaxWebPart%>=false;
	public $bitDivEsCargar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivsEsCargarMostrar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivsEsCargarMostrarSoloBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivsEsCargarMostrarSoloMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivEsCargarMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivEsCargarMensajes<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivsEsCargarMostrarBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true;
	public $bitDivsEsCargarReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false;
	public $bitDivsEsCargarResumen<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false;
	public $bitDivsEsCargarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false;
	public $bitDivsEsCargarForeignKeys<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false;
	
	public $<%=GetNombreClaseC(TablaBase.ToString())%>Model=null;
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ControllerAdditional;
	
	public function inicializarParametrosQueryString() {
		$post=$_POST;			
		
		if($post==null || count($post)<=0) {
			$post=$_GET;
		}
		
		if($post!=null && count($post)>0) {
			$this->data=array();
			$nombrecompuesto=array();
			
			foreach($post as $postx  => $value) {
				$nombrecompuesto=preg_split("/-/",$postx);
				//split(
				
				if(count($nombrecompuesto)==1){
					$this->data[$postx]=$value;
				} else {
					$this->data[$nombrecompuesto[0]][$nombrecompuesto[1]]=$value;
				}
			}
			
			//TIENE PARAMETROS DE MANTENIMIENTO DE DATOS			
			if($this->data['<%=strId %>']!=null&&$this->data['<%=strVersionRow.ToLower() %>']!=null) {
				<%for (int i = 0; i < TablaBase.Columns.Count; i++){if(EsBitColumn(TablaBase.Columns[i])){%>
				<%=GetModificarParametroMantenimientoColumna(TablaBase.Columns[i])%>
				<%}}%>
			}
		}
		
		$this->cargarParametrosReporte();
		
		$this->cargarParametrosPostAccion();
	}
	
	public function ejecutarParametrosQueryString() {
		//$post=$_POST;			
		$action='';
		$return_json=true;
		
		/*
		if(count($_GET) > 1) {
			$post=$_GET;
		}
		*/
		
		if($this->data['action']!=null) {
			$action=$this->data['action'];
			
			//NO SE GUARDA EN SESSION PERO SIEMPRE SE INICIALIZA DEFECTO
			//INICIALIZA VARIABLES PARA QUE RECARGE TODOS COMBOS
			$this->setstrRecargarFkInicializar();
				
			if($action=='load' || $action=='index' ) {
				$strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>=$this->data['strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>'];
				$strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$this->data['strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>'];
				$strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$this->data['strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>'];
				$bitEsPopup=$this->data['ESPOPUP'];
				$this->bitEsBusqueda=$this->data['ESBUSQUEDA'];
				$this->strFuncionJs=$this->data['FUNCIONJS'];
				$this->strSufijo=$this->data['SUFIJO'];
				$this->bitEsRelaciones=$this->data['ESRELACIONES'];
				$this->bitEsRelacionado=$this->data['ESRELACIONADO'];
				
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(true,true,true,true,true,true,true,false,false,false,false,true);				
				
				$this->index($strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>,$strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>,$strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>,'index',$bitEsPopup);			
				
			} else if($action=='recargarInformacion') {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,false,true,false,false,false,false,false,false,false);				
				$this->recargarInformacion();								
				
			} else if($action=='anteriores' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,false,true,false,false,false,false,false,false,false);				
				$this->anteriores();				
				
			} else if($action=='siguientes' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,false,true,false,false,false,false,false,false,false);			
				$this->siguientes();	
				
			} else if($action=='recargarUltimaInformacion') {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,false,true,false,false,false,false,false,false,false);				
				$this->recargarUltimaInformacion();								
				
			} else if($action=='nuevo') {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->nuevo();				
				
			} else if($action=='actualizar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->actualizar();				
				
			} else if($action=='eliminar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->eliminar();				
				
			} else if($action=='cancelar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,true,true,false,false,true,false,false,false,false);
				$this->cancelar();				
				
			} else if($action=='guardarCambios' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->guardarCambios();				
				
			} else if($action=='duplicar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->duplicar();				
				
			}  else if($action=='copiar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->copiar();				
				
			} else if($action=='seleccionarActual' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,true,true,false,false,true,false,false,false,false);			
				$id<%=GetNombreClaseC(TablaBase.ToString())%>Actual=$this->data['id'];
				
				$this->seleccionarActual($id<%=GetNombreClaseC(TablaBase.ToString())%>Actual);	
				
			} 
			<%if(blnTieneForeignKey) {%>
			else if($action=='recargarReferencias' ) {
				//CARGA VARIABLES PARA TALVEZ RECARGAR POR PARTES
				if($this->data['strRecargarFkTipos']!=null && $this->data['strRecargarFkTipos']!='') {
					$this->strRecargarFkTipos=$this->data['strRecargarFkTipos'];
				}
				
				if($this->data['strRecargarFkTiposNinguno']!=null && $this->data['strRecargarFkTiposNinguno']!='') {
					$this->strRecargarFkTiposNinguno=$this->data['strRecargarFkTiposNinguno'];
				}
				
				if($this->data['intRecargarFkIdPadre']!=null && $this->data['intRecargarFkIdPadre']!='') {
					$this->intRecargarFkIdPadre=$this->data['intRecargarFkIdPadre'];
				}
				
				if($this->data['strRecargarFkColumna']!=null && $this->data['strRecargarFkColumna']!='') {
					$this->strRecargarFkColumna=$this->data['strRecargarFkColumna'];
				}
				//CARGA VARIABLES PARA TALVEZ RECARGAR POR PARTES_FIN
				
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,false,true,false,false,false,false,false,false,true);											
				
				$this->recargarReferencias<%=GetNombreClaseC(TablaBase.ToString())%>();					
			}
			<%}%>
			
			else if($action=='manejarEventos' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,true,true,false,false,false,false,false,false,false);
				
				$sTipoControl=$this->data['evento_control'];
				$sTipoEvento=$this->data['evento_tipo'];
				
				$this->manejarEventos<%=GetNombreClase(TablaBase.ToString())%>($sTipoControl,$sTipoEvento);				
				
			} 
			
			<%if(GetConDivResumenTableFromPropertiesC(TablaBase)) {%>
			else if($action=='seleccionarMostrarDivResumen' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,false,true,false,false,false,false,true,false,false);			
				$id<%=GetNombreClaseC(TablaBase.ToString())%>Actual=$this->data['id'];
				
				$this->seleccionarMostrarDivResumen<%=GetNombreClaseC(TablaBase.ToString())%>Actual($id<%=GetNombreClaseC(TablaBase.ToString())%>Actual);					
			}
			<%}%>
			
			<%if(TieneClasesRelacionadasParaMostrarC(TablaBase)) {%>
			else if($action=='mostrarEjecutarAccionesRelaciones' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,false,true,false,false,false,false,false,true,false);			
				$id<%=GetNombreClaseC(TablaBase.ToString())%>Actual=$this->data['id'];
				
				$this->mostrarEjecutarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>($id<%=GetNombreClaseC(TablaBase.ToString())%>Actual);					
			}
			<%}%>
			
			else if($action=='eliminarTabla' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);			
				$id<%=GetNombreClaseC(TablaBase.ToString())%>Actual=$this->data['id'];
				
				$this->eliminarTabla($id<%=GetNombreClaseC(TablaBase.ToString())%>Actual);	
				
			} else if($action=='nuevoPreparar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,true,true,false,false,true,false,false,false,false);
				$this->nuevoPreparar();				
				
			} else if($action=='nuevoTablaPreparar' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,true,true,false,false,true,false,false,false,false);
				$this->nuevoTablaPreparar();				
				
			} else if($action=='generarFpdf') {				
				$return_json=false;
				$this->generarFpdf();
				
			} else if($action=='generarHtmlReporte') {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,false,false,false,false,false,true,false,false,false);
				$this->generarHtmlReporte();
				
			} else if($action=='generarHtmlFormReporte') {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,false,false,false,false,false,true,false,false,false);
				$this->generarHtmlFormReporte();
				
			} else if($action=='editarTablaDatos' ) {
				$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,true,false,false,true,false,false,false,false,false,false,false);
				$this->editarTablaDatos();				
				
			}  else if($action=='generarReporteConPhpExcel') {
				$tipo_reporte=$this->data['tipo_reporte'];
				
				$this->generarReporteConPhpExcel($tipo_reporte);				
				$return_json=false;
				
			}  else if($action=='generarReporteConPhpExcelVertical') {
				$tipo_reporte=$this->data['tipo_reporte'];
				
				$this->generarReporteConPhpExcelVertical($tipo_reporte);				
				$return_json=false;
				
			} <%=GetJQueryTablaEventsControllerTablasClasesRelacionadasC(TablaBase,false,false,true)%> 
			
			<%=GetJQueryRowActionsBusquedasIndicesTablasClases(TablaBase,null,true,false,false,false,true)%>
			
			<%=GetFuncionesAccionesBusquedaForeignKeyTablasClasesRelacionadasC(true)%>
			
			if($return_json==true) {
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller=new <%=GetNombreClase(TablaBase.ToString())%>Controller();
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller=$this;
				
				//CAUSA PROBLEMAS
				//$this->usuarioActual=unserialize($this->Session->read('usuarioActual'));
				
				<%if(!TablaBase.Name.Equals("Usuario")) {%>
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual=new Usuario();
				<%}%>
				
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setId($this->usuarioActual->getId());
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setVersionRow($this->usuarioActual->getVersionRow());
				
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setuser_name($this->usuarioActual->getuser_name());				
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setclave($this->usuarioActual->getclave());						    
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setnombre($this->usuarioActual->getnombre());						    
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setcodigo_alterno($this->usuarioActual->getcodigo_alterno());							    
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->settipo($this->usuarioActual->gettipo());							    
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller->usuarioActual->setestado($this->usuarioActual->getestado());
				
				$jsonResponse<%=GetNombreClaseC(TablaBase.ToString())%>=json_encode($<%=GetNombreClaseObjeto(TablaBase.ToString())%>Controller);
				//$this
			
				echo($jsonResponse<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
		}
	}
	
	public function setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(
		$bitDivsEsCargarGeneral<%=GetNombreClaseC(TablaBase.ToString())%><%=strAjaxWebPart%>=false,
		$bitDivEsCargar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivsEsCargarMostrar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivEsCargarMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivEsCargarMensajes<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivsEsCargarMostrarBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivsEsCargarMostrarSoloBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivsEsCargarMostrarSoloMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=true,
		$bitDivsEsCargarReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false,
		$bitDivsEsCargarResumen<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false,
		$bitDivsEsCargarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false,
		$bitDivsEsCargarForeignKeys<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=false
	) {
		$this->bitDivsEsCargarGeneral<%=GetNombreClaseC(TablaBase.ToString())%><%=strAjaxWebPart%>=$bitDivsEsCargarGeneral<%=GetNombreClaseC(TablaBase.ToString())%><%=strAjaxWebPart%>;
		$this->bitDivEsCargar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivEsCargar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarMostrar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarMostrar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivEsCargarMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivEsCargarMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivEsCargarMensajes<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivEsCargarMensajes<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarMostrarBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarMostrarBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarMostrarSoloBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarMostrarSoloBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarMostrarSoloMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarMostrarSoloMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarResumen<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarResumen<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
		$this->bitDivsEsCargarForeignKeys<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>=$bitDivsEsCargarForeignKeys<%=GetNombreClaseC(TablaBase.ToString())%>s<%=strAjaxWebPart%>;
	}
	<%}%>
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase=null;
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel=null;
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel=null;
	
	<%=DefinirVariablesArrayForeignKeys()%>
	
	<%=GetBusquedaFKFuncionesGeneralesVariablesInicializar()%>
	
	<%=DefinirVariablesActualForeignKeysConBusqueda()%>
	
	public $<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual=0;
	
	public $<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=0;
	
	<%=GetDefinitionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase)%>
	
	public $request=null;
	public $response=null;
	public $stression=null;
	public $context =null;
	
	public $strTipoView='';
	public $intNumeroRegistros;
	public $bitGuardarCambiosEnLote;
	//public $bitGenerarReporte;
	public $bitGenerarTodos;
	public $bitPostAccionNuevo;
	public $bitPostAccionSinCerrar;
	public $bitPostAccionSinMensaje;
	
	public $bitConBusquedaRapida=false;
	public $strValorBusquedaRapida='';
	public $strFuncionBusquedaRapida='';
	
	public $bitGenerarReporte=false;		
	
	public $strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoMostrarTodos<%=GetNombreClase(TablaBase.ToString())%>='none';
	public $strPermisoPopup<%=GetNombreClase(TablaBase.ToString())%>='none';
	
	public $arrDatoGeneral;
	public $arrDatoGeneralNo;
	public $arrDatoGeneralMinimos;
	
	public $tiposReportes=null;
	public $tiposAcciones=null;
	public $tiposAccionesFormulario=null;
	public $tiposPaginacion=null;
	public $tiposColumnasSelect=null;
	public $tiposRelaciones=null;
	public $tiposRelacionesFormulario=null;
	
	public $strTipoReporte<%=strDefault%>=null;
	public $strTipoReporte=null;
	public $strTipoPaginacion=null;
	public $strTipoAccion=null;
	
	public $pagination=null;
	public $datosCliente=null;
	public $intNumeroPaginacion=0;
	public $intNumeroPaginacionPagina=0;
	public $strGenerarReporte='';
	//DEFECTO TRUE, SINO SE DA?A SCROLL INFERIOR
	public $bitConAltoMaximoTabla=true;
	public $bitConEditar=false;
	public $strDetalleReporte='';
	public $bitEsReporteRelaciones=false;
	<%=GetVariablesTablasClasesRelacionadas()%> 
	public $jasperPrint = null;
	
	public $bigIdUsuarioSesion=0;	
	public $usuarioActual=null;	
	
	public $bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public $bitEsnuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public $bitEsMantenimientoRelacionesRelacionadoUnico=false;
	public $bitEsMantenimientoRelaciones=false;
	public $bitEsMantenimientoRelacionado=false;
	public $bitEsBusquedasForeignKey=false;
	public $bitContieneImagenes=false;
	
	<%=strGlobalSeguridadComment%>public $sistemaLogicAdditional=null;
	<%=strGlobalSeguridadComment%>public $resumenUsuarioLogicAdditional=null;
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=null;
	
	<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Usuario")){%>
	public $<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual=null;	
	<%}%>
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=null;
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=null;
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados=array();
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sReporte=null;
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=null;
	public $arrOrderBy=null;
	public $conexion<%=strPrefijoJSFFaces%>=null;
	
	public $strAccionMantenimiento='';
	public $strAccionBusqueda='';
	public $strNombreOpcionRetorno='';
	public $strAccionAdicional='';
	public $strUltimaBusqueda='';
	
	public $mensaje;
	
	public $facesMessage;
					
	public $strVisibilidadTablaBusquedas='';					
	public $strVisibilidadTablaElementos='';	
	public $strVisibilidadTablaAcciones='';
	public $strVisibilidadTablaAccionesRelaciones='';
	
	public $strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	public $strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public $strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public $strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public $strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;	
			
	public $strAuxiliarUrlPagina='';		
	public $strAuxiliarTipo='';	
	public $strAuxiliarMensaje='';	
	public $strAuxiliarMensajeJs='';
	public $strAuxiliarMensajeAlert='';	
	public $strAuxiliarCssMensaje='';	
	public $strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>='';
	public $strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>='';
	public $strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>='';
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%= GetParameterMensajeClase(TablaBase.Columns[i]) %>
	<% } %>
	
	<%=GetindicesVariablesVisibilidadTablasClases()%>
	
	function __construct () {
		parent::__construct();
		
		//INICIALIZAR OBJETOS DE CONTROLLERBASE
		$this->params=array();
		$this->data=array();
		$this->Session=	new SessionBase();
		$this->layout=	'';	
		//INICIALIZAR OBJETOS DE CONTROLLERBASE_FIN
		
		$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>=new <%=GetNombreClase(TablaBase.ToString())%>();
		$this->strFuncionJs='';
		$this->strFuncionJsPadre='';
		$this->strSufijo='';
		
		$this->strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>='onload';
		$this->strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='none';
		$this->strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='none';	

		$this->intNumeroPaginacion=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
		$this->intNumeroPaginacionPagina=0;
		$this->paginationLinks=array();
		$this->arrHistoryWebs=array();
		
		$this->arrDatoGeneral=array();
		$this->arrDatoGeneralNo=array();
		$this->arrDatoGeneralMinimos=array();
		
		<%if(!EsParaCakePhp){%>
		$this-><%=GetNombreClaseC(TablaBase.ToString())%>Model=new ModelBase();
		<% } %>
		
		//RECARGAR_FK
		$this->strRecargarFkTipos='TODOS';
		$this->strRecargarFkTiposNinguno='NINGUNO';
		$this->intRecargarFkIdPadre=0;
		$this->strRecargarFkColumna='';
		$this->strRecargarFkQuery='';
		
		//AUTOREFERENCIA INFINITA TALVEZ
		//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ControllerAdditional=new <%=GetNombreClaseC(TablaBase.ToString())%>ControllerAdditional();
	}
	
	public function get<%=GetNombreClase(TablaBase.ToString())%>ControllerAdditional() {
		return $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ControllerAdditional;
	}

	public function set<%=GetNombreClase(TablaBase.ToString())%>ControllerAdditional($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ControllerAdditional) {
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ControllerAdditional = $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ControllerAdditional;
	}
	
	<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Usuario")){%>
	public function get<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual() {
		return $this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual;
	}

	public function set<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual($<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual) {
		$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual = $<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual;
	}
	<% } %>
	
	public function getPaginationLinks() {
		return $this->paginationLinks;
	}
	
	public function setPaginationLinks($paginationLinks) {
		$this->paginationLinks= $paginationLinks;
	}
	
	public function get<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual() {
		return $this-><%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	}

	public function set<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual($<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual) {
		$this-><%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual = $<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	}
	
	public function get<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this-><%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function set<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>($<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this-><%=strId%><%=GetNombreClaseC(TablaBase.ToString())%> = $<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function setstrAuxiliarUrlPagina($strAuxiliarUrlPagina) {
		$this->strAuxiliarUrlPagina = $strAuxiliarUrlPagina;
	}
	
	public function getstrAuxiliarUrlPagina() {	
		return $this->strAuxiliarUrlPagina;
	}	
	
	public function setstrAuxiliarTipo($strAuxiliarTipo) {
		$this->strAuxiliarTipo = $strAuxiliarTipo;
	}
	
	public function getstrAuxiliarTipo() {	
		return $this->strAuxiliarTipo;
	}	
	
	public function setstrAuxiliarMensaje($strAuxiliarMensaje) {
		$this->strAuxiliarMensaje = $strAuxiliarMensaje;
	}
	
	public function getstrAuxiliarMensaje() {	
		return $this->strAuxiliarMensaje;
	}	
	
	public function setstrAuxiliarMensajeJs($strAuxiliarMensajeJs) {
		$this->strAuxiliarMensajeJs = $strAuxiliarMensajeJs;
	}
	
	public function getstrAuxiliarMensajeJs() {	
		return $this->strAuxiliarMensajeJs;
	}	
	
	public function setstrAuxiliarMensajeAlert($strAuxiliarMensajeAlert) {
		$this->strAuxiliarMensajeAlert = $strAuxiliarMensajeAlert;
	}
	
	public function getstrAuxiliarMensajeAlert() {	
		return $this->strAuxiliarMensajeAlert;
	}	
	
	public function setstrAuxiliarCssMensaje($strAuxiliarCssMensaje) {
		$this->strAuxiliarCssMensaje = $strAuxiliarCssMensaje;
	}
	
	public function getstrAuxiliarCssMensaje() {	
		return $this->strAuxiliarCssMensaje;
	}
	
	public function getstrAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>() {	
		return $this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public function setstrAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>($strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>) {
		$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%> = $strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public function getstrAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>() {	
		return $this->strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public function setstrAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>($strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>) {
		$this->strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%> = $strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public function getstrAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>() {	
		return $this->strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public function setstrAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>($strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>) {
		$this->strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%> = $strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public function get<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	}

	public function set<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>) {
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%> = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	}
	
	<%=GetindicesVariablesTablasClases()%>
	
	public function get<%=GetNombreClaseC(TablaBase.ToString())%>Logic() {		
		return $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}

	public function set<%=GetNombreClaseC(TablaBase.ToString())%>Logic($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic) {
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic = $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}

	public function getConexion<%=strPrefijoJSFFaces%>() {
		return $this->conexion<%=strPrefijoJSFFaces%>;
	}

	public function setConexion<%=strPrefijoJSFFaces%>($conexion<%=strPrefijoJSFFaces%>) {
		$this->conexion<%=strPrefijoJSFFaces%> = $conexion<%=strPrefijoJSFFaces%>;
	}
	
	public function getbitguardarCambiosEnLote() {
		return $this->bitguardarCambiosEnLote;
	}

	public function setbitguardarCambiosEnLote($bitGuardarCambiosEnLote) {
		$this->bitguardarCambiosEnLote = $bitGuardarCambiosEnLote;
	}
	
	public function getbitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setbitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>($bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%> = $bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getstrTituloTabla() {
		return $this->strTituloTabla;
	}

	public function setstrTituloTabla($strTituloTabla) {
		$this->strTituloTabla = $strTituloTabla;
	}
	
	public function getstrFuncionJs() {
		return $this->strFuncionJs;
	}

	public function setstrFuncionJs($strFuncionJs) {
		$this->strFuncionJs = $strFuncionJs;
	}
	
	public function getstrFuncionJsPadre() {
		return $this->strFuncionJsPadre;
	}

	public function setstrFuncionJsPadre($strFuncionJsPadre) {
		$this->strFuncionJsPadre = $strFuncionJsPadre;
	}
	
	public function getstrSufijo() {
		return $this->strSufijo;
	}

	public function setstrSufijo($strSufijo) {
		$this->strSufijo = $strSufijo;
	}
	
	public function getstrTituloPathPagina() {
		return $this->strTituloPathPagina;
	}

	public function setstrTituloPathPagina($strTituloPathPagina) {
		$this->strTituloPathPagina = $strTituloPathPagina;
	}
	
	public function getstrTituloPathElementoActual() {
		return $this->strTituloPathElementoActual;
	}

	public function setstrTituloPathElementoActual($strTituloPathElementoActual) {
		$this->strTituloPathElementoActual = $strTituloPathElementoActual;
	}
	
	public function getstrHistoryWebAuxiliar() {
		return $this->strHistoryWebAuxiliar;
	}

	public function setstrHistoryWebAuxiliar($strHistoryWebAuxiliar) {
		$this->strHistoryWebAuxiliar = $strHistoryWebAuxiliar;
	}
	
	public function getstrHistoryWebElementoAuxiliar() {
		return $this->strHistoryWebElementoAuxiliar;
	}

	public function setstrHistoryWebElementoAuxiliar($strHistoryWebElementoAuxiliar) {
		$this->strHistoryWebElementoAuxiliar = $strHistoryWebElementoAuxiliar;
	}
	
	public function getstrStyleDivArbol() {
		return $this->strStyleDivArbol;
	}

	public function setstrStyleDivArbol($strStyleDivArbol) {
		$this->strStyleDivArbol = $strStyleDivArbol;
	}
	
	public function getstrStyleDivHeader() {
		return $this->strStyleDivHeader;
	}

	public function setstrStyleDivHeader($strStyleDivHeader) {
		$this->strStyleDivHeader = $strStyleDivHeader;
	}
	
	public function getstrStyleDivContent() {
		return $this->strStyleDivContent;
	}

	public function setstrStyleDivContent($strStyleDivContent) {
		$this->strStyleDivContent = $strStyleDivContent;
	}
	
	public function getstrStyleDivOpcionesBanner() {
		return $this->strStyleDivOpcionesBanner;
	}

	public function setstrStyleDivOpcionesBanner($strStyleDivOpcionesBanner) {
		$this->strStyleDivOpcionesBanner = $strStyleDivOpcionesBanner;
	}	
	
	public function getstrStyleDivExpandirColapsar() {
		return $this->strStyleDivExpandirColapsar;
	}

	public function setstrStyleDivExpandirColapsar($strStyleDivExpandirColapsar) {
		$this->strStyleDivExpandirColapsar = $strStyleDivExpandirColapsar;
	}		
	
	public function getstrPermiteRecargarInformacion() {
		return $this->strPermiteRecargarInformacion;
	}

	public function setstrPermiteRecargarInformacion($strPermiteRecargarInformacion) {
		$this->strPermiteRecargarInformacion=$strPermiteRecargarInformacion;
	}
	
	public function getbitEsMantenimientoRelacionesRelacionadoUnico() {
		return $this->bitEsMantenimientoRelacionesRelacionadoUnico;
	}

	public function setbitEsMantenimientoRelacionesRelacionadoUnico($bitEsMantenimientoRelacionesRelacionadoUnico) {
		$this->bitEsMantenimientoRelacionesRelacionadoUnico = $bitEsMantenimientoRelacionesRelacionadoUnico;
	}

	public function getbitEsMantenimientoRelaciones() {
		return $this->bitEsMantenimientoRelaciones;
	}

	public function setbitEsMantenimientoRelaciones($bitEsMantenimientoRelaciones) {
		$this->bitEsMantenimientoRelaciones = $bitEsMantenimientoRelaciones;
	}

	public function getbitEsMantenimientoRelacionado() {
		return $this->bitEsMantenimientoRelacionado;
	}

	public function setbitEsMantenimientoRelacionado($bitEsMantenimientoRelacionado) {
		$this->bitEsMantenimientoRelacionado = $bitEsMantenimientoRelacionado;
	}

	public function getbitEsBusquedasForeignKey() {
		return $this->bitEsBusquedasForeignKey;
	}

	public function setbitEsBusquedasForeignKey($bitEsBusquedasForeignKey) {
		$this->bitEsBusquedasForeignKey = $bitEsBusquedasForeignKey;
	}

	public function getbitContieneImagenes() {
		return $this->bitContieneImagenes;
	}

	public function setbitContieneImagenes($bitContieneImagenes) {
		$this->bitContieneImagenes = $bitContieneImagenes;
	}
	
	public function getstrRecargarFkTipos() {
		return $this->strRecargarFkTipos;
	}

	public function setstrRecargarFkTipos($strRecargarFkTipos) {
		$this->strRecargarFkTipos = $strRecargarFkTipos;
	}
	
	public function getstrRecargarFkTiposNinguno() {
		return $this->strRecargarFkTiposNinguno;
	}

	public function setstrRecargarFkTiposNinguno($strRecargarFkTiposNinguno) {
		$this->strRecargarFkTiposNinguno = $strRecargarFkTiposNinguno;
	}
	
	public function getintRecargarFkIdPadre() {
		return $this->intRecargarFkIdPadre;
	}

	public function setintRecargarFkIdPadre($intRecargarFkIdPadre) {
		$this->intRecargarFkIdPadre = $intRecargarFkIdPadre;
	}
	
	public function getstrRecargarFkColumna() {
		return $this->strRecargarFkColumna;
	}

	public function setstrRecargarFkColumna($strRecargarFkColumna) {
		$this->strRecargarFkColumna = $strRecargarFkColumna;
	}
	
	public function getstrRecargarFkQuery() {
		return $this->strRecargarFkQuery;
	}

	public function setstrRecargarFkQuery($strRecargarFkQuery) {
		$this->strRecargarFkQuery = $strRecargarFkQuery;
	}
	
	public function setstrRecargarFk($strRecargarFkTipos='TODOS',$strRecargarFkTiposNinguno='NINGUNO',$intRecargarFkIdPadre=0,$strRecargarFkColumna='') {
		$this->strRecargarFkTipos = $strRecargarFkTipos;
		$this->strRecargarFkTiposNinguno = $strRecargarFkTiposNinguno;
		$this->intRecargarFkIdPadre = $intRecargarFkIdPadre;
		$this->strRecargarFkColumna = $strRecargarFkColumna;
		$this->strRecargarFkQuery='';
	}
	
	public function setstrRecargarFkInicializar() {
		$this->setstrRecargarFk('TODOS','NINGUNO',0,'');		
	}
	
	<%//=FuncionesForeignKeys()%>
	
	<%=DefinirFuncionesListItemsArrayForeignKeys()%>				
	
	public function get<%=GetNombreClaseC(TablaBase.ToString())%>sModel() {		
		try {						
			//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.setWrappedData(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());			
		} catch (Exception $e) {
			throw $e;
		}
		
		return $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel;
	}
	
	public function set<%=GetNombreClaseC(TablaBase.ToString())%>sModel($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel) {
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel = $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel;
	}
	
	public function getintNumeroPaginacion() {
		return $this->intNumeroPaginacion;
	}

	public function setintNumeroPaginacion($intNumeroPaginacion) {
		$this->intNumeroPaginacion = $intNumeroPaginacion;
	}

	public function getintNumeroPaginacionPagina() {
		return $this->intNumeroPaginacionPagina;
	}

	public function setintNumeroPaginacionPagina($intNumeroPaginacionPagina) {
		$this->intNumeroPaginacionPagina = $intNumeroPaginacionPagina;
	}
	
	public function getbitGenerarReporte() {
		return $this->bitGenerarReporte;
	}

	public function setbitGenerarReporte($bitGenerarReporte) {
		$this->bitGenerarReporte = $bitGenerarReporte;
	}
	
	public function getintNumeroRegistros() {
		return $this->intNumeroRegistros;
	}

	public function setintNumeroRegistros($intNumeroRegistros) {
		$this->intNumeroRegistros = $intNumeroRegistros;
	}
	/*
	public function getbitGenerarReporte() {
		return $this->bitGenerarReporte;
	}

	public function setbitGenerarReporte($bitGenerarReporte) {
		$this->bitGenerarReporte = $bitGenerarReporte;
	}
	*/
	public function getbitGenerarTodos() {
		return $this->bitGenerarTodos;
	}

	public function setbitGenerarTodos($bitGenerarTodos) {
		$this->bitGenerarTodos = $bitGenerarTodos;
	}
	
	public function getbitPostAccionNuevo() {
		return $this->bitPostAccionNuevo;
	}

	public function setbitPostAccionNuevo($bitPostAccionNuevo) {
		$this->bitPostAccionNuevo= $bitPostAccionNuevo;
	}
	
	public function getbitPostAccionSinCerrar() {
		return $this->bitPostAccionSinCerrar;
	}

	public function setbitPostAccionSinCerrar($bitPostAccionSinCerrar) {
		$this->bitPostAccionSinCerrar= $bitPostAccionSinCerrar;
	}
	
	public function getbitPostAccionSinMensaje() {
		return $this->bitPostAccionSinMensaje;
	}

	public function setbitPostAccionSinMensaje($bitPostAccionSinMensaje) {
		$this->bitPostAccionSinMensaje= $bitPostAccionSinMensaje;
	}
	
	public function getbitConBusquedaRapida() {
		return $this->bitConBusquedaRapida;
	}

	public function setbitConBusquedaRapida($bitConBusquedaRapida) {
		$this->bitConBusquedaRapida = $bitConBusquedaRapida;
	}
	
	public function getstrValorBusquedaRapida() {
		return $this->strValorBusquedaRapida;
	}

	public function setstrValorBusquedaRapida($strValorBusquedaRapida) {
		$this->strValorBusquedaRapida = $strValorBusquedaRapida;
	}
	
	public function getstrFuncionBusquedaRapida() {
		return $this->strFuncionBusquedaRapida;
	}

	public function setstrFuncionBusquedaRapida($strFuncionBusquedaRapida) {
		$this->strFuncionBusquedaRapida = $strFuncionBusquedaRapida;
	}
		
	public function getstrTipoView() {
		return $this->strTipoView;
	}

	public function setstrTipoView($strTipoView) {
		$this->strTipoView = $strTipoView;
	}
	
	public function getTiposReportes() {
		return $this->tiposReportes;
	}
	
	public function setTiposReportes($tiposReportes) {
		$this->tiposReportes = $tiposReportes;
	}
	
	public function getTiposAcciones() {
		return $this->tiposAcciones;
	}
	
	public function setTiposAcciones($tiposAcciones) {
		$this->tiposAcciones = $tiposAcciones;
	}
	
	public function getTiposAccionesFormulario() {
		return $this->tiposAccionesFormulario;
	}
	
	public function setTiposAccionesFormulario($tiposAccionesFormulario) {
		$this->tiposAccionesFormulario = $tiposAccionesFormulario;
	}
	
	public function getTiposPaginacion() {
		return $this->tiposPaginacion;
	}
	
	public function setTiposPaginacion($tiposPaginacion) {
		$this->tiposPaginacion = $tiposPaginacion;
	}
	
	public function getTiposColumnasSelect() {
		return $this->tiposColumnasSelect;
	}
	
	public function setTiposColumnasSelect($tiposColumnasSelect) {
		$this->tiposColumnasSelect = $tiposColumnasSelect;
	}
	
	public function getTiposRelaciones() {
		return $this->tiposRelaciones;
	}
	
	public function seTiposRelaciones($tiposRelaciones) {
		$this->tiposRelaciones = $tiposRelaciones;
	}
	
	public function getTiposRelacionesFormulario() {
		return $this->tiposRelacionesFormulario;
	}
	
	public function seTiposRelacionesFormulario($tiposRelacionesFormulario) {
		$this->tiposRelacionesFormulario = $tiposRelacionesFormulario;
	}
	
	public function getstrTipoReporte<%=strDefault%>() {
		return $this->strTipoReporte<%=strDefault%>;
	}

	public function setstrTipoReporte<%=strDefault%>($strTipoReporte<%=strDefault%>) {
		$this->strTipoReporte<%=strDefault%> = $strTipoReporte<%=strDefault%>;
	}
	
	public function getstrTipoReporte() {
		return $this->strTipoReporte;
	}

	public function setstrTipoReporte($strTipoReporte) {
		$this->strTipoReporte = $strTipoReporte;
	}
	
	public function getstrTipoAccion() {
		return $this->strTipoAccion;
	}

	public function setstrTipoAccion($strTipoAccion) {
		$this->strTipoAccion = $strTipoAccion;
	}
	
	public function getstrTipoPaginacion() {
		return $this->strTipoPaginacion;
	}

	public function setstrTipoPaginacion($strTipoPaginacion) {
		$this->strTipoPaginacion = $strTipoPaginacion;
	}
	
	public function getstrPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getstrPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%>($strPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%> = $strPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getbigIdUsuarioSesion() {
		return $this->bigIdUsuarioSesion;
	}

	public function setbigIdUsuarioSesion($bigIdUsuarioSesion) {
		$this->bigIdUsuarioSesion = $bigIdUsuarioSesion;
	}

	public function getUsuarioActual() {
		return $this->usuarioActual;
	}

	public function setUsuarioActual($usuarioActual) {
		$this->usuarioActual = $usuarioActual;
	}
	
	public function getstrAccionMantenimiento() {
		return $this->strAccionMantenimiento;
	}

	public function setstrAccionMantenimiento($strAccionMantenimiento) {
		$this->strAccionMantenimiento = $strAccionMantenimiento;
	}

	public function getstrAccionBusqueda() {
		return $this->strAccionBusqueda;
	}

	public function setstrAccionBusqueda($strAccionBusqueda) {
		$this->strAccionBusqueda = $strAccionBusqueda;
	}
	
	public function getstrNombreOpcionRetorno() {
		return $this->strNombreOpcionRetorno;
	}

	public function setstrNombreOpcionRetorno($strNombreOpcionRetorno) {
		$this->strNombreOpcionRetorno = $strNombreOpcionRetorno;
	}
	
	public function getstrAccionAdicional() {
		return $this->strAccionAdicional;
	}

	public function setstrAccionAdicional($strAccionAdicional) {
		$this->strAccionAdicional = $strAccionAdicional;
	}

	public function getstrGenerarReporte() {
		return $this->strGenerarReporte;
	}

	public function setstrGenerarReporte($strGenerarReporte) {
		$this->strGenerarReporte = $strGenerarReporte;
	}
	
	public function getstrUltimaBusqueda() {
		return $this->strUltimaBusqueda;
	}

	public function setstrUltimaBusqueda($strUltimaBusqueda) {
		$this->strUltimaBusqueda = $strUltimaBusqueda;
	}
		
	public function getbitConAltoMaximoTabla() {
		return $this->bitConAltoMaximoTabla;
	}

	public function setbitConAltoMaximoTabla($bitConAltoMaximoTabla) {
		$this->bitConAltoMaximoTabla = $bitConAltoMaximoTabla;
	}

	public function getbitConEditar() {
		return $this->bitConEditar;
	}

	public function setbitConEditar($bitConEditar) {
		$this->bitConEditar = $bitConEditar;
	}
	
	public function getstrDetalleReporte() {
		return $this->strDetalleReporte;
	}

	public function setstrDetalleReporte($strDetalleReporte) {
		$this->strDetalleReporte = $strDetalleReporte;
	}

	public function getbitEsReporteRelaciones() {
		return $this->bitEsReporteRelaciones;
	}

	public function setbitEsReporteRelaciones($bitEsReporteRelaciones) {
		$this->bitEsReporteRelaciones = $bitEsReporteRelaciones;
	}
	
	public function getMensaje() {
		return $this->mensaje;
	}

	public function setMensaje($mensaje) {
		$this->mensaje = $mensaje;
	}
	
	public function getstrVisibilidadTablaBusquedas() {
		return $this->strVisibilidadTablaBusquedas;
	}

	public function setstrVisibilidadTablaBusquedas($strVisibilidadTablaBusquedas) {
		$this->strVisibilidadTablaBusquedas = $strVisibilidadTablaBusquedas;
	}
	
	public function getstrVisibilidadTablaElementos() {
		return $this->strVisibilidadTablaElementos;
	}

	public function setstrVisibilidadTablaElementos($strVisibilidadTablaElementos) {
		$this->strVisibilidadTablaElementos = $strVisibilidadTablaElementos;
	}

	public function getstrVisibilidadTablaAcciones() {
		return $this->strVisibilidadTablaAcciones;
	}

	public function setstrVisibilidadTablaAcciones($strVisibilidadTablaAcciones) {
		$this->strVisibilidadTablaAcciones = $strVisibilidadTablaAcciones;
	}
	
	public function getstrVisibilidadTablaAccionesRelaciones() {
		return $this->strVisibilidadTablaAccionesRelaciones;
	}

	public function setstrVisibilidadTablaAccionesRelaciones($strVisibilidadTablaAccionesRelaciones) {
		$this->strVisibilidadTablaAccionesRelaciones = $strVisibilidadTablaAccionesRelaciones;
	}
	
	public function getstrVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>()	{
		return $this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>($strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = $strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>($strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = $strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>($strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = $strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>($strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%> = $strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function getstrVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>($strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> = $strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	<%=GetindicesGetstretVariablesVisibilidadTablasClases()%>
	
	public function get<%=GetNombreClaseC(TablaBase.ToString())%>ActualFromListDataModel() {
		try {
			//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase= $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel->getRowData();
			
			return $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	function prepararEjecutarMantenimiento() {
		try {					
			if ($this->params!=null && $this->params['form']!=null) {
				if (isset($this->params['form']['btnNuevo<%=GetNombreClaseC(TablaBase.ToString())%>'])) {
					$this->nuevo<%=GetNombreClaseC(TablaBase.ToString())%>();
				} 			
				else if (isset($this->params['form']['btnActualizar<%=GetNombreClaseC(TablaBase.ToString())%>'])) {
					$this->actualizar<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
				else if (isset($this->params['form']['btnEliminar<%=GetNombreClaseC(TablaBase.ToString())%>'])) {
					$this->eliminar<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
				else if (isset($this->params['form']['btnCancelar<%=GetNombreClaseC(TablaBase.ToString())%>'])) {
					$this->cancelar<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
				else if (isset($this->params['form']['btnGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>'])) {
					$this->guardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
				
				$this->returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>();
			}				
		}
	 	catch(Exception $e) {
			throw $e;
	  	}
	}
	
	public function cargarDatosCliente() {
		$this->datosCliente=new DatosCliente();
		if($this->bigIdUsuarioSesion!=null){$this->datosCliente->setIdUsuario($this->bigIdUsuarioSesion);}
			
		//if(httpServletRequest.getRemoteUser()!=null){
		$this->datosCliente->setstrUsuarioPC('');
		$this->datosCliente->setstrNamePC($_SERVER['REMOTE_HOST']);
		$this->datosCliente->setstrIPPC($_SERVER['REMOTE_ADDR']);		
	}
	
	public function cargarDatosLogicClaseBean<%=GetNombreClaseC(TablaBase.ToString())%>($esParaLogic=true) {
		if($esParaLogic) {
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%= GetstretVariablesBeanToTable(TablaBase.Columns[i],true) %>	
			<% } %>
		} else {
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%= GetstretVariablesBeanToTable(TablaBase.Columns[i],false) %>	
			<% } %>
		}
	}
	
	public function ejecutarMantenimiento($maintenanceType,$connexion){
		
		try {
			
			$this->cargarDatosCliente();		
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($connexion);
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setDatosCliente($this->datosCliente);
			
			$recargarCombosDescription=false;
			
			if($maintenanceType==MaintenanceType::$NUEVO){ 
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>(new <%=GetNombrecompletoclase()%>());
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()->setIsNew(true);
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()->setIsChanged(true);
				
				$this->cargarParametros<%=GetNombreClaseC(TablaBase.ToString())%>();
				
				if ($this-><%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoCakeModel%>->validates()==true) {
					$this->cargarDatosLogicClaseBean<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
					$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s[]=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>();
					
					if(!$this->bitGuardarCambiosEnLote) {
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->save<%=GetNombreClaseC(TablaBase.ToString())%>s();
						//WithConnection										
					}
					
					$recargarCombosDescription=true;
					
				} else {
					$this->inicializarMensajesDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
			} else  if($maintenanceType==MaintenanceType::$ACTUALIZAR){ 
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()->setIsNew(false);
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()->setIsDeleted(false);
				
				$this->cargarParametros<%=GetNombreClaseC(TablaBase.ToString())%>();
				
				if ($this-><%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoCakeModel%>->validates()==true) {
					$this->cargarDatosLogicClaseBean<%=GetNombreClaseC(TablaBase.ToString())%>(true);
					
					$this->actualizarLista($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					
					if(!$this->bitGuardarCambiosEnLote) {
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->save<%=GetNombreClaseC(TablaBase.ToString())%>s();
						//WithConnection								
					}
					
					$recargarCombosDescription=true;
					
				} else {
					$this->inicializarMensajesDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
			} else  if($maintenanceType==MaintenanceType::$ELIMINAR){ 
				
				$this->cargarParametros<%=GetNombreClaseC(TablaBase.ToString())%>();
				
				$this->cargarDatosLogicClaseBean<%=GetNombreClaseC(TablaBase.ToString())%>(true);
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()->setIsDeleted(true);
				
				$this->actualizarLista($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				
				if(!$this->bitGuardarCambiosEnLote) {
					$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->save<%=GetNombreClaseC(TablaBase.ToString())%>s();
					//WithConnection					
				}
				
			} else  if($maintenanceType==MaintenanceType::$GUARDARCAMBIOS){ 					
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->save<%=GetNombreClaseC(TablaBase.ToString())%>s();
				//WithConnection
				
				$recargarCombosDescription=true;
			}
			
			if($recargarCombosDescription) {
				$classes=array();
				$class=new Classe('');
				
				<%=GetAddClasseTablasClasesRelacionadasForeigKeysC(TablaBase,"\t")%>
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoads(false,DeepLoadType::$INCLUDE, $classes,'');

				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->loadForeignsKeysDescription();
			}
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();
			
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados=array();
			
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	public function actualizarLista($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
		try {
			foreach($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local){ 
				if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->getId()==$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>->getId()) {
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->setIsChanged($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>->getIsChanged());
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->setIsNew($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>->getIsNew());
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->setIsDeleted($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>->getIsDeleted());
					//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->setbitExpired($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>->getbitExpired());
					
					<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
					<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
					<%= GetstretVariableToVariableLocal(TablaBase.Columns[i],false) %>	
					<% } %>			
				}
			}
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	public function inicializarAuxiliares<%=GetNombreClaseC(TablaBase.ToString())%>() {
		$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>='';
		$this->strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>='';
		$this->strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>='';
		
		$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('INICIALIZAR',null);				
	}
	
	public function inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>($tipo,$e=null) {
		if($tipo=='ACTUALIZAR') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			
		} else if($tipo=='NUEVO_TABLA') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			
		} else if($tipo=='ELIMINAR') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			
		} else if($tipo=='GUARDAR_CAMBIOS') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			
		} else if($tipo=='DUPLICAR') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			
		} else if($tipo=='COPIAR') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEDATOSACTUALIZADOS;
			
		} else if($tipo=='INDEX') {
			$this->strAuxiliarCssMensaje=Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje='';
			$this->strAuxiliarMensajeAlert='';
			
		} else if($tipo=='INICIALIZAR') {
			$this->strAuxiliarCssMensaje ='';
			$this->strAuxiliarMensaje ='';
			$this->strAuxiliarMensajeJs ='';
			$this->strAuxiliarMensajeAlert ='';
			
		} else if($tipo=='EXCEPTION') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEERROR;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEERRORDEAPLICACION.':'.$e->getMessage();
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEERRORDEAPLICACION.':'.$e->getMessage();
			
		} else if($tipo=='PROCESAR') {
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			$this->strAuxiliarMensaje = Constantes::$SMENSAJEPROCESOCORRECTO;
			$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEPROCESOCORRECTO;
		}
	}
	
	public function inicializarMensajesDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>() {
		$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEERROR;
		$this->strAuxiliarMensaje = Constantes::$SMENSAJEERRORDEAPLICACION.': revise los datos ingresados ';
		$this->strAuxiliarMensajeAlert = Constantes::$SMENSAJEERRORDEAPLICACION.': revise los datos ingresados ';
		
		$this->inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		$arrErrors = $this-><%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoCakeModel%>->invalidFieldsMe();
		
		if($arrErrors!=null && count($arrErrors)>0){
			foreach($arrErrors as $keyCampo => $valueMensaje) { 
				$this->asignarMensajeCampo<%=GetNombreClaseC(TablaBase.ToString())%>($keyCampo,$valueMensaje);
			}
			
			throw new Exception('Error de Validacion de datos');
		}
	}
	
	public function inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>() {
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
		<%= GetValueDefaultParameterMensajeClase(TablaBase.Columns[i]) %>
		<% } %>
	}
	
	public function asignarMensajeCampo<%=GetNombreClaseC(TablaBase.ToString())%>($strNombreCampo,$strMensajeCampo) {
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
		<%= GetAsignarParameterMensajeClase(TablaBase.Columns[i]) %>
		<% } %>
	}
	
	public function nuevoPreparar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
						
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
			}
			
			$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			$this->inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			//ACTUALIZO VERDADERO ESTADO DEL PERMISO DE MODIFICACION TOMANDO EN CUENTA EL PERMISO MODIFICACION ORIGINAL
			$this->strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=($this->strPermisoActualizarOriginal<%=GetNombreClaseC(TablaBase.ToString())%>=='table-row' || $this->strPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>)=='table-row'? 'table-row':'none';
			
			////$this->Session->write('blnEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>', true);
			
			$this->strVisibilidadTablaElementos='table-row';
			$this->strVisibilidadTablaAcciones='table-row';
			
			<%=SetSeguridadNuevoPrepararCampoVariablesClase(TablaBase)%>
			
			$this->inicializar<%=GetNombreClaseC(TablaBase.ToString())%>();						
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase;
			
			//$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);						
			
			$this->set<%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%>s<%=strDefault%>();
			
			$this->actualizarEstadoCeldasBotones('a', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
						
			<%if(blnEsTablaUnoAUnoFk) {%>
			//PARA RELACION DE UNO A UNO
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase->set<%=strIdGetSet%>($this->big<%=strIdGetSet%><%=strFK%>_<%=strIdGetSet%><%=strNombreTablaUnoAUnoPk%>);
			$this->data['<%=strId%>']=$this->big<%=strIdGetSet%><%=strFK%>_<%=strIdGetSet%><%=strNombreTablaUnoAUnoPk%>;
			<%}%>
			
			
			
			//MANEJAR EVENTO
			$classes=array();
		
			<%if(!blnEstablaModulo && !blnEsReporte) {%>
			/*
			if($this->jInternalFrameParent!=null) {
				$this->jInternalFrameParent->actualizarObjetoPadreFk(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$CLASSNAME);
			}	
			*/
			
			<%=GetRelacionesEventoNuevoPreparar()%>
			
			$this->classesActual=array();
			$this->classesActual=array_merge($classes);
			
			$this->setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true,true,false);
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection($this->parametroGeneralUsuario,$this->moduloActual,$this->opcionActual,$this->usuarioActual,EventoGlobalTipo::$FORM_RECARGAR,ControlTipo::$FORM,EventoTipo::$LOAD,EventoSubTipo::$NEW,'FORM',$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s(),$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>,$classes);
			
			<%}%>
						
			if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->getConRecargarPropiedades()) {
				
				$this->setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual,true,true,false);
			
				//NO_APLICAN
				//INICIALIZA VARIABLES COMBOS NORMALES (FK)
				//$this->setVariablesObjetoActualToFormulario<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>());
				
				//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
				//$this->setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>());
			}
			
			if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->getConRecargarRelaciones()) {
				//INICIALIZA VARIABLES RELACIONES A FORMULARIO
				//BYDAN_FALTA
				//$this->setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$classes);
			}
				
			//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
			if($this->bitEsnuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>) {
				//NO_APLICA
				//$this->setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,false);
			}
			//MANEJAR EVENTO_FIN
			
			
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>();		
		
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function nuevoTablaPreparar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->bitConEditar=true;
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>=new <%=GetNombreClase(TablaBase.ToString())%>();
					
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s[]=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>;
					
			$this->cancelarControles();		
						
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('NUEVO_TABLA',null);
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}		
	
	public function recargarForm<%=GetNombreClase(TablaBase.ToString())%>($sTipo,$sDominio,$eventoGlobalTipo,$controlTipo,$eventoTipo,$eventoSubTipo,$sTipoGeneral,$classes,$conIrServidorAplicacion,$esControlTabla) {
		//SOLO SI ES NECESARIO
		$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
						
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		}
			
		if(!$esControlTabla) {
			//NO APLICA
			//this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true);
			//this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);						
			
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getConGuardarRelaciones()) {
				//$this->setVariablesFormularioRelacionesToObjetoActual<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,classes);				
			}
		
			if($conIrServidorAplicacion) {
			
				$this->setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true,true,false);
			
				<%if(!blnEstablaModulo && !blnEsReporte) {%>
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection($this->parametroGeneralUsuario,$this->moduloActual,$this->opcionActual,$this->usuarioActual,$eventoGlobalTipo,$controlTipo,$eventoTipo,$eventoSubTipo,$sTipo,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s(),$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>,$classes);
				<%}%>
									
				//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
				if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getEstaModoGuardarRelaciones()) {
					//$this->setVariablesRelacionesObjetoReturnGeneralToBean<%=GetNombreClase(TablaBase.ToString())%>($classes,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,false);
				}
					
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->getConRecargarPropiedades()) {
					
					$this->setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual,true,true,false);
			
					//NO_APLICA
					//INICIALIZA VARIABLES COMBOS NORMALES (FK)
					//$this->setVariablesObjetoActualToFormulario<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>());
						
					//NO_APLICA
					//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
					//$this->setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>());	
				}
					
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->getConRecargarRelaciones()) {
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					//$this->setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$classes);
				}									
				
			} else {				
				//INICIALIZA VARIABLES RELACIONES A FORMULARIO
				//$this->setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$classes);
			}
		
			//NO APLICA
			/*
			if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame::$ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true);
				this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);				
			}
			*/
		} else {
			/*
			//AUN_NO
			//MANEJAR EN TABLA
			
			if((($controlTipo==ControlTipo::$TEXTBOX || $controlTipo==ControlTipo::$DATE
				|| $controlTipo==ControlTipo::$TEXTAREA || $controlTipo==ControlTipo::$COMBOBOX
				)				
				&& $eventoTipo==EventoTipo::$CHANGE
				)
				
				|| ($controlTipo==ControlTipo::$CHECKBOX && $eventoTipo==EventoTipo::$CLIC)
				
			) { // && sTipoGeneral.equals("TEXTBOX")
				
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior!=null) {
					$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior;
				}
			}
			
			if($conIrServidorAplicacion) {
				<%if(!blnEstablaModulo && !blnEsReporte) {%>
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection($this->parametroGeneralUsuario,$this->moduloActual,$this->opcionActual,$this->usuarioActual,$eventoGlobalTipo,$controlTipo,$eventoTipo,$eventoSubTipo,$sTipo,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s(),$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>,$classes);
				<%}%>
			}
			
			$this->actualizarLista($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral->get<%=GetNombreClaseC(TablaBase.ToString())%>(),$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());
			*/
		}
	}
	
	public function manejarEventos<%=GetNombreClase(TablaBase.ToString())%>($sTipoControl,$sTipoEvento) {		
		$sTipo=$sTipoControl;
		
		$sDominio='';	$eventoGlobalTipo='';	$controlTipo='';
		$eventoTipo=''; $eventoSubTipo='';		$sTipoGeneral='';
		$classes=array(); $conIrServidorAplicacion=false; $esControlTabla=false;
		
		<%=GetInitActionsFrameColumnsVariables()%>
		
		$this->recargarForm<%=GetNombreClase(TablaBase.ToString())%>($sTipo,$sDominio,$eventoGlobalTipo,$controlTipo,$eventoTipo,$eventoSubTipo,$sTipoGeneral,$classes,$conIrServidorAplicacion,$esControlTabla);
	}
	
	public function nuevo() {
		try {			
			$this->getNewConnexion();
			
			$this->ejecutarMantenimiento(MaintenanceType::$NUEVO,$this->getConnexion());
			
			$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			$this->setCommitCloseConnexion();
			
			$this->actualizarEstadoCeldasBotones('n', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
						
			//facesMessage=new FacesMessage(Constantes.getstrMensajeDatosIngresados(),'OK');				
			////FacesContext.getCurrentInstance().addMessage(null,facesMessage);			
				
		} catch(Exception $e) {			
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function actualizar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		
			$this->getNewConnexion();
			
			if(!$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>){ 
				$this->ejecutarMantenimiento(MaintenanceType::$ACTUALIZAR,$this->getConnexion());
				
				if($this->bitPostAccionSinCerrar || $this->bitPostAccionNuevo) {
					$this->actualizarEstadoCeldasBotones('a', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);					
					
				} else {
					$this->actualizarEstadoCeldasBotones('n', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
				}
				
				//facesMessage=new FacesMessage(Constantes.getstrMensajeDatosActualizados(),'OK');				
				////FacesContext.getCurrentInstance().addMessage(null,facesMessage);
			} else { 
				$this->nuevo();
				
				if($this->bitPostAccionSinCerrar || $this->bitPostAccionNuevo) {
					$this->actualizarEstadoCeldasBotones('a', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);					
					
					if($this->bitPostAccionNuevo) {
						$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
					}
				} else {
					$this->actualizarEstadoCeldasBotones('n', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
				}
			}						
					
			
			
			if($this->bitPostAccionSinCerrar || $this->bitPostAccionNuevo) {				
				$this->strVisibilidadTablaElementos='table-row';
				$this->strVisibilidadTablaAcciones='table-row';	
				
			} else {
				//OCULTA CAMPOS Y ACCIONES
				$this->cancelarControles();
			}
			
			
			if($this->bitPostAccionSinCerrar) {
				$id=$this->data['form']['id'];
					
				if($id!=null && $id>0) {
					$this->tipourlLogic->getEntity($id);
					//WithConnection			
					$this->cargarDatosLogicClaseBeanTipoUrl(false);
				}									
			} else {
				$this->inicializar<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase;
			
			//$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
			
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('ACTUALIZAR',null);
			
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
			
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function eliminar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		
			$this->getNewConnexion();
			
			$this->ejecutarMantenimiento(MaintenanceType::$ELIMINAR,$this->getConnexion());
			
			$this->actualizarEstadoCeldasBotones('n', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
			
			$this->cancelarControles();		
			
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('ELIMINAR',null);			
		
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
			
			//facesMessage=new FacesMessage(Constantes.getstrMensajeDatosEliminados(),'OK');				
			////FacesContext.getCurrentInstance().addMessage(null,facesMessage);
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function editarTablaDatos() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//$this->getNewConnexion();
									
			if($this->bitConEditar) {
				$this->bitConAltoMaximoTabla=true;
			}
			
			$this->getHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
									
			//$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			//$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function generarHtmlReporte() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//$this->getNewConnexion();
			
			/*
			if($this->bitConEditar) {
				$this->bitConAltoMaximoTabla=true;
			}
			*/
			
			$this->getHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
									
			//$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			//$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function generarHtmlFormReporte() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=array();
		
			$maxima_fila=$this->data['t']['maxima_fila'];
				
			if($maxima_fila!=null && $maxima_fila>0) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this->get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila);
					
				if(count($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal)<=0) {
					//DEBE ESCOGER
					//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
				}
			} else {
				//DEBE ESCOGER
				//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
			}
						
			//$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>=$this->getHtmlTablaDatosResumen<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal,true);			
			
			$this->htmlTablaReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s=$this->getHtmlTablaDatosResumen<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal,true);
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function guardarCambios() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			$this->guardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>s();
			
			foreach($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Eliminado) {
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s[]=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Eliminado;
			}
				
			$this->ejecutarMantenimiento(MaintenanceType::$GUARDARCAMBIOS,$this->getConnexion());
			
			//facesMessage=new FacesMessage(Constantes.getstrMensajeDatosGuardados(),'OK');				
			////FacesContext.getCurrentInstance().addMessage(null,facesMessage);
			
			$this->cancelarControles();		
			
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('GUARDAR_CAMBIOS',null);			
		
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	function guardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>s() {
		$indice=0;
		$maxima_fila=$this->data['t']['maxima_fila'];
		$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual=new <%=GetNombreClase(TablaBase.ToString())%>();
		
		if($maxima_fila!=null && $maxima_fila>0) {
			for($i=1;$i<=$maxima_fila;$i++) {
				//CUANDO NO EXISTE DATOS TABLA
				if($this->data['t']['cel_'.$i.'_0']==null) {
					break;	
				}
				
				$indice=$i-1;								
				
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s[$indice];		
				
				<%if(!blnTieneIdentityColumn){%>
				$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual->setId($this->data['t']['cel_'.$i.'_0']);
				<% } %>
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){ } //continue;%>
				<%=  GetstretParametroEntityColumna(TablaBase.Columns[i],true,i.ToString()) %>
				<% } %> 
			}
		}
	}
	
	public function duplicar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->bitConEditar=true;
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=array();
			
			$maxima_fila=$this->data['t']['maxima_fila'];			
			
			if($maxima_fila!=null && $maxima_fila>0) {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this->get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila);
			} else {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=array();
			}
			
			if(count($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux) > 0) {
				foreach ($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Seleccionado) {
					$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>=new <%=GetNombreClase(TablaBase.ToString())%>();
					
					$this->setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Seleccionado,$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>,true,true,false);
						
					$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s[]=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>;
				}
			} else {
				throw new Exception("DEBE ESCOGER AL MENOS UN REGISTRO");
			}
			
			$this->cancelarControles();		
			
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('DUPLICAR',null);			
		
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}		
	
	public function copiar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->bitConEditar=true;
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=array();
			
			$maxima_fila=$this->data['t']['maxima_fila'];			
			
			if($maxima_fila!=null && $maxima_fila>0) {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this->get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila);			
			} else {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=array();
			}
			
			if(count($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux)==2) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux[0];
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux[1];
				
				$this->setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen,$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Destino,true,false,false);
				
				$this->actualizarLista($<%=GetNombreClaseObjeto(TablaBase.ToString())%>Destino,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
				
			} else {
				throw new Exception('DEBEN ESTAR SELECCIONADOS 2 REGISTROS');	
			}						
			
			
			$this->cancelarControles();		
			
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('COPIAR',null);			
		
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen,$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$conDefault,$conColumnasBase,$conColumnaVersion=false) { 
		try {
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>==null) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=GetNombreClaseC(TablaBase.ToString())%>();	
			}
			
			<%=GetSetVariablesClaseReturnToBean(false,false,true)%>
			
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	public function seleccionar() {
		try {
			//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase= (<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.getRowData();
			
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%= GetstretVariablesTablaToBean(TablaBase.Columns[i]) %>	
		<% } %>
		
			//$this->Session->write('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>VersionRowActual', <%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getVersionRow());
			
			$this->strVisibilidadTablaElementos='table-row';
			$this->strVisibilidadTablaAcciones='table-row';
			
			$this->actualizarEstadoCeldasBotones('ae', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
			
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	<%=DefinirFuncionesSeleccionarActualForeignKeysConBusqueda()%>
	
	public function cancelar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//if($this->Session->read('blnEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>')!=null){ 	
				//FacesContext.getCurrentInstance().getExternalContext().getstressionMap().remove('blnEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>');
			//}			
			
			$this->inicializar<%=GetNombreClaseC(TablaBase.ToString())%>();
			
		<% //for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%//= SetVariablesTablaTocancelar(TablaBase.Columns[i]) %>	
		<% //} %>
		
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase;
			
			//$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
			
			$this->cancelarControles();
			
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);
			
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function cerrarPagina() {
		try {
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);
			
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function cancelarAccionesRelaciones() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->strVisibilidadTablaAccionesRelaciones='none';	
			
			$this->strAuxiliarCssMensaje =Constantes::$STRMENSAJEINFO;
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);
			
		} catch(Exception $e) {
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function cancelarControles() {			
		$this->strVisibilidadTablaElementos='none';
		$this->strVisibilidadTablaAcciones='none';			
		$this->actualizarEstadoCeldasBotones('n', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);		
	}
	
	public function inicializar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		try {
			if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase==null) {
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase=new <%=GetNombrecompletoclase()%>();
			}
			
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired|| GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])){continue; } %>
			<%= SetVariablesTablaToCancelar(TablaBase.Columns[i]) %>	
			<% } %>
			
		} catch(Exception $e) {
			throw $e;
		}
	}		
	
	public function irPagina($paginacion_pagina=0){
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		
			$this->getNewConnexion();
			
			$this->intNumeroPaginacionPagina=$paginacion_pagina;
						
			//$this->intInicioPaginacion=$this->intNumeroPaginacionPagina;
			//$this->intFinPaginacion=$this->intNumeroPaginacion;
			
			$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion());
			
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
		
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}

	}
	
	public function anteriores(){
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		
			$this->getNewConnexion();
			
			if($this->intNumeroPaginacionPagina - $this->intNumeroPaginacion < $this->intNumeroPaginacion) {
				$this->intNumeroPaginacionPagina=0;		
			} else {
				$this->intNumeroPaginacionPagina=$this->intNumeroPaginacionPagina - $this->intNumeroPaginacion;
			}
			
			//$this->intInicioPaginacion=$this->intNumeroPaginacionPagina;
			//$this->intFinPaginacion=$this->intNumeroPaginacion;
			
			$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion());
			
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
		
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);			
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}

	}
	
	public function siguientes(){
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			if(count($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s) > 0) {
				$this->intNumeroPaginacionPagina=$this->intNumeroPaginacionPagina + $this->intNumeroPaginacion;
			}
			
			//$this->intInicioPaginacion=$this->intNumeroPaginacionPagina;
			//$this->intFinPaginacion=$this->intNumeroPaginacion;
			
			$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion());
			
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
		
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function recargarUltimaInformacion(){
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			/*
			if(count($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s) > 0) {
				$this->intNumeroPaginacionPagina=$this->intNumeroPaginacionPagina + $this->intNumeroPaginacion;
			}
			*/
			
			//$this->intInicioPaginacion=$this->intNumeroPaginacionPagina;
			//$this->intFinPaginacion=$this->intNumeroPaginacion;
			
			$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion());
			
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
		
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	/*
	public function generarReporte<%=GetNombreClase(TablaBase.ToString())%>s($strAccionBusqueda, <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes) {
		 strPathReportes='';
		
		File reportFile;
		File imageFile;
		
		imageFile= new File(context.getRealPath('Imagenes/Logos/LogoReporte.jpg'));
		
		
		if(!$bitEsReporteRelaciones) {
			reportFile = new File(context.getRealPath('Reportes/<%=GetNombreClase(TablaBase.ToString())%>Design.jasper'));
			
		} else
		{
			reportFile = new File(context.getRealPath('Reportes/<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper'));
			strPathReportes=reportFile.getPath().replace('<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper', '');
			
		}
		
		if (!reportFile.exists())
		throw new JRRuntimeException('File WebappReport.jasper not found. The report design must be compiled first.');
		
		Map<, > parameters = new HashMap<, >();
		parameters.put('titulo', Constantes.getstrAreaDepartamento());
		parameters.put('subtitulo', '<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>');
		parameters.put('busquedapor', <%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional.getNombreIndice($strAccionBusqueda)+strDetalleReporte);
		parameters.put('PATH_IMAGEN', imageFile.getPath());
		
		if($bitEsReporteRelaciones) {
			parameters.put('SUBREPORT_DIR', strPathReportes);
		}
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile.getPath());
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		
		
		if($bitEsReporteRelaciones) {
			<%=GetClassClasesForeigKeysC(TablaBase)%>
			<%=GetClassClasesRelacionadasC(TablaBase)%>
		} else
		{
			<%=GetClassClasesForeigKeysC(TablaBase)%>
			
		}
		
		try {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic->getNewConnexionToDeep();
			
			for (<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjeto(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes){ 
				<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic->DeepLoad(<%=GetNombreClaseObjeto(TablaBase.ToString())%>, false, DeepLoadType.INCLUDE, classes);
			}
				
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic->getConnexion().getConnection().commit();
				
		} catch(Exception $e) {
			throw $e;
		}
		finally
		{
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic->closeNewConnexionToDeep();
		}
		
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters, new JRBeanArrayDataSource(<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>.Traer<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes).toArray()));
		
		
		//$this->Session->write(BaseHttpServlet.DEFAULT_JASPER_PRINT_SESSION_ATTRIBUTE, jasperPrint);
		
		if($this->strGenerarReporte.equals('HtmlGenerar')) {
			
			PrintWriter out = response.getWriter();
			JRHtmlExporter exporter = new JRHtmlExporter();
				
			exporter.setParameter(JRExporterParameter.JASPER_PRINT, $request->getstression().getAttribute(BaseHttpServlet.DEFAULT_JASPER_PRINT_SESSION_ATTRIBUTE));
			exporter.setParameter(JRExporterParameter.OUTPUT_WRITER, out);
			
			exporter.exportReport();
			
		}
	}
	*/	
	
	function cargarParametrosReporte() {
		if(isset($this->data['ParametrosBusqueda'])) {
			$this->strGenerarReporte=Funciones::getBooleanFromDataValue($this->data['ParametrosBusqueda']['chbGenerarReporte']);			
			$this->bitGenerarReporte=$this->strGenerarReporte;
			$this->strTipoReporte=$this->data['ParametrosBusqueda']['djcmbGenerarReporte'];
			$this->strTipoPaginacion=$this->data['ParametrosBusqueda']['djcmbPaginacion'];
			$this->strTipoAccion=$this->data['ParametrosBusqueda']['djcmbAcciones'];
			
			$this->bitConAltoMaximoTabla=Funciones::getBooleanFromDataValue($this->data['ParametrosBusqueda']['chbConAltoMaximoTabla']);	
			$this->bitConEditar=Funciones::getBooleanFromDataValue($this->data['ParametrosBusqueda']['chbConEditar']);
			
			//$this->bitGenerarTodos=$this->bitConAltoMaximoTabla;
			//$this->intNumeroRegistros=$this->data['ParametrosBusqueda']['txtNumeroRegistros<%=GetNombreClaseC(TablaBase.ToString())%>'];				
		}
	}
	
	function cargarParametrosPostAccion() {
		if(isset($this->data['ParametrosPostAccion'])) {
			$this->bitPostAccionNuevo=Funciones::getBooleanFromDataValue($this->data['ParametrosPostAccion']['chbPostAccionNuevo']);			
			$this->bitPostAccionSinMensaje=Funciones::getBooleanFromDataValue($this->data['ParametrosPostAccion']['chbPostAccionSinMensaje']);
			$this->bitPostAccionSinCerrar=Funciones::getBooleanFromDataValue($this->data['ParametrosPostAccion']['chbPostAccionSinCerrar']);			
		}
	}
	
	public function getCargarOrderByQuery<%=GetNombreClaseC(TablaBase.ToString())%>() {
		$orderByQuery='';
		
		$orderByQuery=Funciones::getCargarOrderByQuery($this->arrOrderBy,$this->data);
		
		return $orderByQuery;
	}
	
	public function procesarBusqueda($strAccionBusqueda,$connexion) {
		$esBusqueda=false;
		
		if($strAccionBusqueda!="Todos")	{
			$esBusqueda=true;
		}
		
						
		$finalQueryPaginacion=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRFINALQUERY;
		
		$orderByQuery=$this->getCargarOrderByQuery<%=GetNombreClaseC(TablaBase.ToString())%>();  	
				
		
		$this->pagination=new Pagination();
		$classes=array();
		 
		
		//QUERY GLOBAL
		$finalQueryGlobal="";
		$this->arrDatoGeneral = array();
		$this->arrDatoGeneralNo = array();
		
		$arrColumnasGlobalesNo=<%=GetNombreClase(TablaBase.ToString())%><%=strClaseConstantesFunciones%>::getArrayColumnasGlobalesNo<%=GetNombreClaseC(TablaBase.ToString())%>($this->arrDatoGeneral);
		$arrColumnasGlobales=<%=GetNombreClase(TablaBase.ToString())%><%=strClaseConstantesFunciones%>::getArrayColumnasGlobales<%=GetNombreClaseC(TablaBase.ToString())%>($this->arrDatoGeneral,$arrColumnasGlobalesNo);
		
		<%if(!GetModuloDominioConstanteFromTableFromPropertiesC(TablaBase).Equals(String.Empty)) {%>
			//SE CAMBIA FUNCIONALIDAD DE MODULO POR ALGUNO PRIORITARIO
			$moduloActualAux=new Modulo();
			
			$moduloActualAux->setId(ModuloConstantesFuncionesAdditional::$<%=GetModuloDominioConstanteFromTableFromPropertiesC(TablaBase)%>);
		<%}%>
			
						
		$finalQueryGlobal=Funciones::GetWhereGlobalConstants($this->parametroGeneralUsuarioActual,<%if(GetModuloDominioConstanteFromTableFromPropertiesC(TablaBase).Equals(String.Empty)) {%>$this->moduloActual<%}else{%>$moduloActualAux<%}%>,!$esBusqueda,$esBusqueda,$arrColumnasGlobales);
		
		//QUERY GLOBAL
		
		if($finalQueryGlobal!='') {
			$finalQueryPaginacion=$finalQueryGlobal.$finalQueryPaginacion;
		}
		
		if($orderByQuery!='') {
			$finalQueryPaginacion=$finalQueryPaginacion.$orderByQuery;
		}
		
		try {				
			
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
						
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
			}
			
			//$this->cargarParametrosReporte();
			
			//$this->cargarParametrosPostAccion();
			
			$this->inicializarVariables('NORMAL');
			
			if($this->strTipoPaginacion!='TODOS' && $this->strTipoPaginacion!='') {
				$this->intNumeroPaginacion=$this->strTipoPaginacion;				
			} else {
				if($this->strTipoPaginacion=='TODOS') {
					$this->pagination->setBlnConNumeroMaximo(true);
				} else {
					$this->intNumeroPaginacion=10;
				}
			}
			
			$this->pagination->setIntFirstResult($this->intNumeroPaginacion);
			$this->pagination->setIntMaxResults($this->intNumeroPaginacionPagina);
			//$this->pagination->setBlnConNumeroMaximo(true);
			
			//DESHABILITADO AQUI, LA PAGINACION EN DATAACCESS
			/*
			if($this->intNumeroPaginacion!=null && $this->intNumeroPaginacionPagina!=null){ 						
				$finalQueryPaginacion=' LIMIT '.$this->intNumeroPaginacion.','.$this->intNumeroPaginacionPagina;
			}
			*/
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados=array();
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($connexion);
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setIsConDeep(true);
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClase(TablaBase.ToString())%>DataAccess()->setIsForForeingsKeysDataRelationships(true);
			
			<%=GetAddClasseTablasClasesRelacionadasForeigKeysC(TablaBase,"")%>
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setDatosDeepParametros(false,DeepLoadType::$INCLUDE,$classes,'');
			
			if($strAccionBusqueda=='Todos' && !$this->bitConBusquedaRapida){ 						
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getTodos<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>$finalQueryPaginacion,$this->pagination);
				//WithConnection
				
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s()==null|| count($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s())==0) {
				
				}
				
				//if($this->strGenerarReporte!=''&& $this->strGenerarReporte!=null) {
					if($this->strTipoPaginacion=='TODOS') {
						$this->pagination->setIntFirstResult(-1);
						$this->pagination->setIntMaxResults(-1);
			
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();						
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getTodos<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>$finalQueryPaginacion,$this->pagination);
						//WithConnection						
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sReporte=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();
									
						//$this->generarReporte<%=GetNombreClase(TablaBase.ToString())%>s('Todos',$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>s($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
						
						$this->pagination->setIntFirstResult($this->intNumeroPaginacion);
						$this->pagination->setIntMaxResults($this->intNumeroPaginacionPagina);			
					}
				//}
			
			} else if($this->bitConBusquedaRapida) { 
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getTodos<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>$finalQueryPaginacion,$this->pagination);
				//WithConnection
				
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s()==null|| count($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s())==0) {
				
				}
				
				//if($this->strGenerarReporte!=''&& $this->strGenerarReporte!=null) {
					if($this->strTipoPaginacion=='TODOS') {
						$this->pagination->setIntFirstResult(-1);
						$this->pagination->setIntMaxResults(-1);
			
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();						
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getTodos<%=GetNombreClase(TablaBase.ToString())%>s(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>$finalQueryPaginacion,$this->pagination);
						//WithConnection						
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sReporte=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();
									
						//$this->generarReporte<%=GetNombreClase(TablaBase.ToString())%>s('Todos',$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					
						$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>s($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
						
						$this->pagination->setIntFirstResult($this->intNumeroPaginacion);
						$this->pagination->setIntMaxResults($this->intNumeroPaginacionPagina);			
					}
				//}
			} else  if($strAccionBusqueda=='Por<%=strIdGetSet%>'){ 
				$this-><%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=0;				
				
				if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>()!=null && $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>()==true) {
					if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey()!=null && $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey()!=0)	{
						$<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey();	
					}
					
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>(false);
					
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey(0);
				}
				
				/*
				if($this->Session->read('<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey')!=null) {
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=(Long)//$this->Session->read('<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey');	
				
					FacesContext.getCurrentInstance().getExternalContext().getstressionMap().remove('<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey');
				}
				else if($this->Session->read('<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras')!=null) {
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=(Long)//$this->Session->read('<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras');	
				
					FacesContext.getCurrentInstance().getExternalContext().getstressionMap().remove('<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras');
				}
				*/
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntity($this-><%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>);
				//WithConnection
				//<%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional::getDetalleIndicePor<%=strIdGetSet%>($<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>);

				
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()!=null) {
					$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>s(array());
					$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s[]=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
			
			}
		<%=GetXmlBusquedasIndicesTablas()%> 
		<%//=GetXmlBusquedasIndicesTablasCompuestos()%> 
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setintNumeroPaginacion($this->intNumeroPaginacion);
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setintNumeroPaginacionPagina($this->intNumeroPaginacionPagina);
		
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->loadForeignsKeysDescription();
		
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();
		
		$this->cargarLinksPagination();
		
		$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME,serialize($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>));		
		
		} catch(Exception $e) {
			throw $e;
      	}
	}	
	
	public function cargarLinksPagination() {
		$numero_paginas=$this->pagination->getIntNumeroMaximo() / <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
		$numero_pagina=0;
		
		$this->paginationLinks=array();
		$paginationLink=new PaginationLink();
		
		for($i=0,$j=1;$i<$numero_paginas;$i++,$j++) {			
			$paginationLink=new PaginationLink();
			$numero_pagina=$j * <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
			
			$paginationLink->setStrLabel($j);
			$paginationLink->setIntPage($numero_pagina);
			
			$this->paginationLinks[]=$paginationLink;
		}
	}
	
	public function recargarInformacion(){
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);

			$this->getNewConnexion();
			
			$this->strAccionBusqueda='Todos';
			$this->intNumeroPaginacion=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
			$this->intNumeroPaginacionPagina=0;
			$this->procesarBusqueda($this->strAccionBusqueda,$this->getConnexion());
			
			$this->setCommitCloseConnexion();
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);

			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);
			
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
		
	}
	
	public function getNewConnexion() {
		$this->sistemaLogicAdditional=new SistemaLogicAdditional();
		$this->resumenUsuarioLogicAdditional=new ResumenUsuarioLogicAdditional();
		
		$this->sistemaLogicAdditional->getNewConnexionToDeep();
		$this->resumenUsuarioLogicAdditional->setConnexion($this->sistemaLogicAdditional->getConnexion());
	}
	
	public function setCommitCloseConnexion() {
		$this->sistemaLogicAdditional->commitNewConnexionToDeep();
		$this->sistemaLogicAdditional->closeNewConnexionToDeep();
	}
	
	public function setRollbackCloseConnexion() {
		$this->sistemaLogicAdditional->rollbackNewConnexionToDeep();
		$this->sistemaLogicAdditional->closeNewConnexionToDeep();
	}
	
	public function getConnexion() {
		return $this->sistemaLogicAdditional->getConnexion();
	}
	
	<%= GetindicesTablasFacesClases() %>
	
	<%= GetindicesTablasClases() %>
	
	<%//= GetindicesTablasClasesCompuestos() %>
		
	<%//=GetDefinicionVariableClasesCompuestos() %>
		
	//NO VALE ESTA POR TALVEZ
	function inicializarSession<%=GetNombreClaseC(TablaBase.ToString())%>() {
		/*
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=$this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME);
				
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();		
			//$this->Session->write('<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>',$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);							
		}
		*/
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
    	$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setstrPathNavegacionActual(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCLASSWEBTITULO);
    	$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setstrPermiteRecargarInformacion('display:table-row');
		
		//FALTA ADMINISTRAR SESSION RELACIONAS (POR TANTO FALTARIA IMPORTS USE), PONER DE ALGUNA MANERA EN UNA FUNCION GENERAL
		<%//=GetSetSessionRelations()%>
		
		$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME,serialize($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>));		
	}
	
	function activarSession<%=GetNombreClaseC(TablaBase.ToString())%>() {
		<%if(blnConJQueryCode){%>
		//PARA JQUERY
		$this->Session->start();
		<%}%>
			
		if(Constantes::$BITESPRODUCCION) {
			$this->Session->activate();
		}
	}		
	
	function search($strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>='',$strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='',$strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='',$strTipoView='index',$bitConBusquedaRapida=false,$strValorBusquedaRapida='',$strFuncionBusquedaRapida='') {
		try {
			$this->index($strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>,$strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>,$strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>,$strTipoView,$bitConBusquedaRapida,$strValorBusquedaRapida,$strFuncionBusquedaRapida);
			
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}			
    }
	
	function index($strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>='',$strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='',$strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='',$strTipoView='index',$bitEsPopup=false,$bitConBusquedaRapida=false,$strValorBusquedaRapida='',$strFuncionBusquedaRapida='') {
		try {			
			
			$this->strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>=$strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>;
			$this->strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>;
			$this->strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>;
	
			if($strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=='webroot' || $strFuncionBusquedaRapida=='webroot') {
				return ;
			}
			
			$this->activarSession<%=GetNombreClaseC(TablaBase.ToString())%>();						
									
	
	
			//ACTUALIZAR VALOR ESPOPUP
			$this->bitEsPopup=$bitEsPopup;
			
			if($this->bitEsPopup=='false' || $this->bitEsPopup==null) { 
				$this->bitEsPopup=false;
				
			} else if($this->bitEsPopup=='true') { 
				$this->bitEsPopup=true;	
			}
			
			
			//ACTUALIZAR VALOR ESBUSQUEDA
			if($this->bitEsBusqueda=='false' || $this->bitEsBusqueda==null) { 
				$this->bitEsBusqueda=false;
				
			} else if($this->bitEsBusqueda=='true') { 
				$this->bitEsBusqueda=true;	
			}
			
			
			//ACTUALIZAR VALOR ESRELACIONES
			if($this->bitEsRelaciones=='false' || $this->bitEsRelaciones==null) { 
				$this->bitEsRelaciones=false;
				
			} else if($this->bitEsRelaciones=='true') { 
				$this->bitEsRelaciones=true;	
			}
			
			
			//ACTUALIZAR VALOR ESRELACIONADO
			if($this->bitEsRelacionado=='false' || $this->bitEsRelacionado==null) { 
				$this->bitEsRelacionado=false;
				
			} else if($this->bitEsRelacionado=='true') { 
				$this->bitEsRelacionado=true;	
			}
			
			
			//ACTUALIZAR VALOR BUSQUEDA RAPIDA
			$this->bitConBusquedaRapida=$bitConBusquedaRapida;
			
			if($this->bitConBusquedaRapida=='false' || $this->bitConBusquedaRapida==false || $this->bitConBusquedaRapida==null) { 
				$this->bitConBusquedaRapida=false;
				
			} else if($this->bitConBusquedaRapida=='true' || $this->bitConBusquedaRapida==true) { 
				$this->bitConBusquedaRapida=true;	
			}
			
			
			$this->strTipoView=$strTipoView;			
			$this->strValorBusquedaRapida=$strValorBusquedaRapida;
			$this->strFuncionBusquedaRapida=$strFuncionBusquedaRapida;
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>=new <%=GetNombreClase(TablaBase.ToString())%>();
			$this->arrHistoryWebs=array();			
			$this->arrHistoryWebs=unserialize($this->Session->read(Constantes::$SESSION_HISTORY_WEB));
			
			if($this->arrHistoryWebs==null) {
				$this->arrHistoryWebs=array();
			}
				
			$historyWeb=new HistoryWeb();
			$this->strHistoryWebAuxiliar='';
			
			$this->strTituloTabla='<%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>';
			
			
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
							
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
				
				//$this->Session->write('<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>',$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);							
			}
			
			
			//SI HAY QUE EJECUTAR ALGUNA FUNCION JS HACIA EL PADRE
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getstrFuncionJsPadre()!=null && $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getstrFuncionJsPadre()!='') {
				$this->strFuncionJsPadre=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getstrFuncionJsPadre();
				
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setstrFuncionJsPadre('');
			}
			
			
			$this->setUrlPaginaVariables<%=GetNombreClase(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			
			if($strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>!=null && $strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>=='onload') {
				$this->strNombreOpcionRetorno='';
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setPaginaPopupVariables(false);
				$this->intNumeroPaginacion=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
				//$this->inicializarSession<%=GetNombreClaseC(TablaBase.ToString())%>();
				FuncionesWebArbol::inicializarSession($this,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME);																
			
			} else if($strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>!=null && $strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>=='onloadhijos' && $this->bitEsPopup) {
				$this->strNombreOpcionRetorno='';
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setPaginaPopupVariables(true);
				$this->intNumeroPaginacion=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
			}
			
			if($strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>!=null && $strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=='none') {
				//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivHeader='display:table-row';
				
				<%if(!GetConPopupTableFromProperties(TablaBase)) {%>
				//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivArbol='display:table-row';				
				<%} else {%>
				//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivArbol='display:none;width:0px;height:0px;visibility:hidden';
				<%} %>
			} else {
				if($strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>!=null && $strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=='iframe') {
					/*
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivArbol='display:none';
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivHeader='display:none';
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivContent='width:100%;height:100%';
					*/
					
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setPaginaPopupVariablesIFrame();
				}
			}
			
			<%if(blnConJQueryCode){%>
			$this->htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>s='';
			$this->htmlTablaOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>='';
			$this->htmlTablaReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>='';
			$this->htmlTablaAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>='';
			<%}%>
			
			$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('INDEX',null);
						
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase=new <%=GetNombrecompletoclase()%>();
			
			//context=(ServletContext)//FacesContext.getCurrentInstance().getExternalContext().getContext();
			//$request=(HttpServletRequest)//FacesContext.getCurrentInstance().getExternalContext().getRequest();
			//response=(HttpServletResponse)//FacesContext.getCurrentInstance().getExternalContext().getResponse();
			//session=$request->getstression();
			$this->strAccionBusqueda='Todos';
			$this->pagination=new Pagination();
			$this->bigIdUsuarioSesion=0;	
			$this->strGenerarReporte='';
			//DEFECTO TRUE, SINO SE DA?A SCROLL INFERIOR
			$this->bitConAltoMaximoTabla=true;
			$this->strDetalleReporte='';
			$this->bitEsReporteRelaciones=false;
			
			$this->bitGenerarReporte=false;
			$this->bitGenerarTodos=false;
			$this->strTipoReporte='';
			$this->strTipoAccion='';
			$this->strTipoPaginacion='';

			$this->bitPostAccionNuevo=false;
			$this->bitPostAccionSinCerrar=false;
			$this->bitPostAccionSinMensaje=false;
			
			
			$this->tiposReportes=Funciones::getTiposReportes();
			$this->tiposAcciones=Funciones::getTiposAcciones('NORMAL');
			$this->tiposAccionesFormulario=Funciones::getTiposAcciones('NORMAL');			
			$this->tiposPaginacion=Funciones::getTiposPaginacion('NORMAL');
			
			$this->arrDatoGeneral=array();
			$this->arrDatoGeneralNo=array();
			$this->arrDatoGeneralMinimos=array();
		
			<%if(blnTieneForeignKey) {%> 
			$this->tiposAcciones['RECARGAR_REFERENCIAS']='RECARGAR REFERENCIAS';			
			<%}%> 
			
			//$this->tiposColumnasSelect=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			//COLUMNAS
			$this->tiposColumnasSelect[]=Reporte::NewReporte(Constantes::$STR_COLUMNAS,Constantes::$STR_COLUMNAS);
			
			foreach(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(true) as $reporte) {
				$this->tiposColumnasSelect[]=$reporte;
			}
			//COLUMNAS
			
			//RELACIONES
			$this->tiposRelaciones[]=Reporte::NewReporte(Constantes::$STR_RELACIONES,Constantes::$STR_RELACIONES);
			
			foreach($this->getTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>() as $reporte) {
				$this->tiposRelaciones[]=$reporte;
			}
			
			//FORMULARIO
			$this->tiposRelacionesFormulario[]=Reporte::NewReporte(Constantes::$STR_RELACIONES,Constantes::$STR_RELACIONES);
			
			foreach($this->getTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>() as $reporte) {
				$this->tiposRelacionesFormulario[]=$reporte;
			}
			//RELACIONES
			
			$this->strTipoReporte<%=strDefault%>='PDF';
			
			$this->bitguardarCambiosEnLote=false;						
			
			<%=strGlobalSeguridadComment%>$this->sistemaLogicAdditional=new SistemaLogicAdditional();
			<%=strGlobalSeguridadComment%>$this->resumenUsuarioLogicAdditional=new ResumenUsuarioLogicAdditional();
			
			//NO INICIALIZAR, PUEDE CARGAR MUCHA MEMORIA Y SIN UTILIZAR
			<%=GetVariablesTablasInicializarClasesRelacionadas()%> 
			
			
			$this->jasperPrint = null;
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
			
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel=null;
			//new ListDataModel();
			
			//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sModel.setWrappedData(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());
						
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s= array();
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados=array();
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=array();
			
			//ORDER BY
			$this->arrOrderBy= <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::getOrderByLista<%=GetNombreClase(TablaBase.ToString())%>();
			$this->htmlTablaOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>=Funciones::getHtmlTablaDatosOrderBy($this->arrOrderBy);
			//ORDER BY FIN
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>= new <%=GetNombreClase(TablaBase.ToString())%>();
			$this->conexion<%=strPrefijoJSFFaces%>=new Conexion<%=strPrefijoJSFFaces%>();
			//$this->Session->write('Conexion<%=strPrefijoJSFFaces%>', conexion<%=strPrefijoJSFFaces%>);
			
			
			$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			$this->bitEsMantenimientoRelacionesRelacionadoUnico=false;
			$this->bitEsMantenimientoRelaciones=false;
			$this->bitEsMantenimientoRelacionado=false;
			$this->bitEsBusquedasForeignKey=false;
			$this->bitContieneImagenes=false;
			
			$this->strVisibilidadTablaElementos='none';
			$this->strVisibilidadTablaAcciones='none';
			$this->strVisibilidadTablaAccionesRelaciones='none';
			
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			
			$this->inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();			
		
			<%=GetIndicesInicializarVariablesVisibilidadTablasClases()%>
			
			$this->actualizarEstadoCeldasBotones('n', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
			
			
			$this->getNewConnexion();
			
			if($strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>!=null && $strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>!='none' && $strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>!='undefined') {
				$usuarioLogic=new UsuarioLogic();
				
				$idUsuarioAutomatico=Funciones::getIdUsuarioAutomatico($strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>);
				
				$usuarioLogic->setConnexion($this->getConnexion());
				
				$usuarioLogic->getEntity($idUsuarioAutomatico);
				//WithConnection
				
				$this->usuarioActual=$usuarioLogic->getUsuario();
				
				if($this->usuarioActual!=null && $this->usuarioActual->getId()>0) {
					$this->Session->write('usuarioActual',serialize($this->usuarioActual));
				}
			}
			
			//SI NO EXISTE SEGURIDAD
			<%=strGlobalSeguridadCommentNo%>if($this->Session->read('usuarioActual')==null) {
			<%=strGlobalSeguridadCommentNo%>	$this->usuarioActual=new Usuario();
			<%=strGlobalSeguridadCommentNo%>	$this->Session->write('usuarioActual',serialize($this->usuarioActual));
			<%=strGlobalSeguridadCommentNo%>}
			
			if($this->Session->read('usuarioActual')!=null) {
				$this->usuarioActual=unserialize($this->Session->read('usuarioActual'));
				
				if($this->usuarioActual!=null) {
					$this->bigIdUsuarioSesion=$this->usuarioActual->get<%=strIdGetSet%>();	
				}
			} else {
			<%=strGlobalSeguridadComment%>	throw new Exception("Reinicie la sesion");
				//System.out.println(Mensajes.SSESSIONCADUCADA);
			}
			
		
			//PARAMETROS GENERALES USUARIO
			if($this->Session->read('resumenUsuarioActual')!=null) {
				$this->resumenUsuarioActual=unserialize($this->Session->read('resumenUsuarioActual'));
			}
			
			if($this->Session->read('parametroGeneralSgActual')!=null) {
				$this->parametroGeneralSgActual=unserialize($this->Session->read('parametroGeneralSgActual'));
			}
			
			if($this->Session->read('parametroGeneralUsuarioActual')!=null) {
				$this->parametroGeneralUsuarioActual=unserialize($this->Session->read('parametroGeneralUsuarioActual'));
			}
			
			if($this->Session->read('moduloActual')!=null) {
				$this->moduloActual=unserialize($this->Session->read('moduloActual'));
			}
			
			if($this->Session->read('opcionActual')!=null) {
				$this->opcionActual=unserialize($this->Session->read('opcionActual'));
			}
			//PARAMETROS GENERALES USUARIO
			
			
			//VALIDACION_LICENCIA			
			$sUsuarioPCCliente=$_SERVER[Constantes::$REMOTE_USER]; 
			$sNamePCCliente=$_SERVER[Constantes::$REMOTE_HOST]; 
			$sIPPCCliente=$_SERVER[Constantes::$REMOTE_ADDR];
			$sMacAddressPCCliente=$_SERVER[Constantes::$REMOTE_ADDR]; 
			$dFechaServer=date('Y-m-d');
			$idUsuario=$this->usuarioActual->getId();
			$sNombreModuloActual='';
			
			if($this->moduloActual!=null) {
				$sNombreModuloActual=$this->moduloActual->getnombre();
				//'INVENTARIO'; 
			}
						
			$sNombreUsuarioActual=$this->usuarioActual->getuser_name();
			//'ADMIN';
			
			//if($sUsuarioPCCliente=='') {
			//	$sUsuarioPCCliente=$sNombreUsuarioActual;
			//}
			
			if(!GlobalSeguridad::validarLicenciaCliente($sUsuarioPCCliente, $sNamePCCliente, $sIPPCCliente, $sMacAddressPCCliente, $dFechaServer, $idUsuario, $sNombreModuloActual, $sNombreUsuarioActual)) {
				throw new Exception(Mensajes::$SERROR_LICENCIA);
			}
			//VALIDACION_LICENCIA_FIN
			
			
			//VALIDACION_RESUMEN_USUARIO
			<%=strGlobalSeguridadComment%>if($this->resumenUsuarioLogicAdditional->validarResumenUsuarioController($this->usuarioActual,$this->resumenUsuarioActual)==false) {
			<%=strGlobalSeguridadComment%>	throw new Exception('Usuario ingresado mas de una vez, debe reingresar al sistema');
			<%=strGlobalSeguridadComment%>}
			//VALIDACION_RESUMEN_USUARIO_FIN
			
			
			//VALIDACION_PAGINA
			<%=strGlobalSeguridadComment%>if($this->sistemaLogicAdditional->tienePermisosEnPaginaWeb($this->usuarioActual, Constantes::$BIGIDSISTEMA<%=GetNombreCompletarIdSistemaActual()%>ACTUAL, <%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBRECLASE,false)==false) {
			<%=strGlobalSeguridadComment%>	throw new Exception('No tiene permiso pagina');
			<%=strGlobalSeguridadComment%>}
			//VALIDACION_PAGINA_FIN
									
			
			
			$this->inicializarPermisos<%=GetNombreClase(TablaBase.ToString())%>();
						
			$this->setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>();
			
			$this->inicializarSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas();
			
			if($this->bitEsPopup) {
				$this->strPermisoPopup<%=GetNombreClaseC(TablaBase.ToString())%>='table-row';
			}
			
			<%if(blnTieneSeguridadCampo){%>
			$this->setPermisosUsuarioCampos<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
			
			$this->inicializar<%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%>s<%=strDefault%>();
			
			<%=DefinirVariablesActualInicializarForeignKeysConBusqueda()%>
			
			<%=ConstructorVariablesArrayForeignKeys(true,false)%>		
			
			$existe_history=false;
																				
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>()!=null && $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>()==true) {
				if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey()!=null && $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey()!=0)	{
					//BYDAN-TOUPDATE
					//AL IR A HIJOS SE PONE true Y AL RECARGAR TRATA DE CARGAR POR ID (ESTA MAL YA QUE PUEDE SER BUSQUEDA POR TODOS)
					//$this->strAccionBusqueda='Por<%=strIdGetSet%>';
					//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey());
				}
				
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras(true);
				//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>");
			
			} /*else if($httpServletRequest->getParameter('esCargarPagina')==null&&$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras()) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras()!=0)	{
					$this->strAccionBusqueda='Por<%=strIdGetSet%>';					
				}				
				
				//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras");
			}*/
						
			<%=GetBusquedaFromForeigKeysSession()%>
			
			/*
			if($httpServletRequest->getParameter('ultimaBusqueda')!=null)	{
				$this->sUltimaBusqueda=$httpServletRequest->getParameter('ultimaBusqueda');
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>($this->sUltimaBusqueda);
			}
			*/
			
			if($this->bitGenerarReporte) {								
				if($this->strGenerarReporte=='HtmlGenerar') {
					//$this->generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s($this->strAccionBusqueda,$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());									
				} else if($this->strGenerarReporte=='Html')	{
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setstrServletGenerarHtmlReporte('<%=GetNombreClaseC(TablaBase.ToString())%>Servlet');
				}
			}
			
			if(strpos($this->strAccionBusqueda,'FK_')===false) {
				$this->arrHistoryWebs=array();
				$historyWeb=new HistoryWeb();
				
				$historyWeb->setStrCodigo(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBREOPCION);
				$historyWeb->setStrNombre(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCLASSWEBTITULO);
				$historyWeb->setIdActual(0);
				
				$this->arrHistoryWebs[]=$historyWeb;
			}
			
			$this->strTituloPathPagina=HistoryWeb::GetTituloPaginaCompleto($this->arrHistoryWebs,$this->strHistoryWebAuxiliar);
			$this->strTituloPathElementoActual=HistoryWeb::GetTituloElementoActualCompleto($this->arrHistoryWebs,$this->strHistoryWebElementoAuxiliar);
			
			$this->onLoad($this->getConnexion(),$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			
			//EN ONLOAD SE CAMBIO Y SE GUARDO, TALVEZ SE NECESITE LEER NUEVAMENTE
			//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
			
			//SI ES INVITADO, OCULTAR DIVS ANTES DE GUARDAR SESSION
			
			if($strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>!=null && $strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=='invitado') {
				$this->actualizarInvitadoSessionDivStyleVariables<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			}
								
			$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME, $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			
			$this->actualizarDesdeSessionDivStyleVariables<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			
			<%//=CallFuncionesArrayForeignKeysC(TablaBase)%>			
			/*
			$this-><%=GetNombreClaseC(TablaBase.ToString())%>->recursive = 0;
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this->paginate();
			*/
			
			//EL VALOR LO TOMA DESDE EL CONTROLLER
			//$this->set('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s', $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			
			//$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCONTROLLERNAME, $this);
			
			//EN INDEX NO RETORNAR AJAX POR ESO false			
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase;
			
			//$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(false);
			
			$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCONTROLLERNAME, $this);
			
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			<%=GetBusquedaFKFuncionesGeneralesInicializar()%>
			
			
			$strNombreViewIndex='';		
			$strNombreViewIndex=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBREOPCION;
				
			if(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRMODULOOPCION!='') {
				$strNombreViewIndex=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRMODULOOPCION.<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBREOPCION;
			}
			
			//GUARDAR SESSION
			$this->Session->write(Constantes::$SESSION_HISTORY_WEB,serialize($this->arrHistoryWebs));
			
			$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME,serialize($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>));
			//GUARDAR SESSION
			
			//$this->strAuxiliarMensajeAlert=Funciones::mostrarMemoriaActual();
			
			$this->setCommitCloseConnexion();
			
			$this->render('/'.Constantes::$STRCARPETAVIEWS.'/'.$strNombreViewIndex.'/'.$this->strTipoView);
		}
		catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}			
    }
	
	public function setUrlPaginaVariables<%=GetNombreClase(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>) {
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>=$this->strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$this->strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$this->strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->bitEsPopup=$this->bitEsPopup;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->bitEsBusqueda=$this->bitEsBusqueda;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strFuncionJs=$this->strFuncionJs;
		//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strSufijo=$this->strSufijo;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->bitEsRelaciones=$this->bitEsRelaciones;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->bitEsRelacionado=$this->bitEsRelacionado;
	}
	
	public function onLoad($connexion,$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=null) {		
		try {		
			//isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			$this->traerDatosBusquedaDesdeSession($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
						
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if($this->strAccionBusqueda=='') {
				$this->strAccionBusqueda='Todos';
			}
			
			<%if(!blnEsReporte){%>							
			$this->procesarBusqueda($this->strAccionBusqueda,$connexion);
			<%}%>

			
		} catch (Exception $e) {
			throw $e;
		}
	}
	
	//Todo,ActualizarOriginal,Consulta,Busqueda,Reporte
	public function inicializarPermisos<%=GetNombreClase(TablaBase.ToString())%>() {
		$this->strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>='none';
		$this->strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>='none';
		$this->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>='none';
		$this->strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>='none';
		$this->strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>='none';
		$this->strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>='table-row';
		$this->strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>='table-row';
		$this->strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>='table-row';
		$this->strPermisoMostrarTodos<%=GetNombreClase(TablaBase.ToString())%>='table-row';
		$this->strPermisoPopup<%=GetNombreClase(TablaBase.ToString())%>='none';
	}
	
	public function setPermisosUsuarioConPermiso<%=GetNombreClase(TablaBase.ToString())%>($strPermiso) {
		$this->strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoMostrarTodos<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
	}
	
	public function setPermisosMantenimientoUsuarioConPermiso<%=GetNombreClase(TablaBase.ToString())%>($strPermiso) {
		//$this->strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		$this->strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		//$this->strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		//$this->strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
		//$this->strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=$strPermiso;
	}
	
	public function setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>() {
		$perfilOpcionUsuario=null;
		<%=strGlobalSeguridadComment%>$perfilOpcionUsuario=new PerfilOpcion();		
						
		<%=strGlobalSeguridadComment%>$perfilOpcionUsuario=$this->sistemaLogicAdditional->traerPermisosPaginaWebPerfilOpcion($this->usuarioActual, Constantes::$BIGIDSISTEMA<%=GetNombreCompletarIdSistemaActual()%>ACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBRECLASE,false);				
					
		if($perfilOpcionUsuario!=null && $perfilOpcionUsuario->get<%=strIdGetSetSeguridad%>()>0) {
			<%=strGlobalSeguridadComment%>$this->strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->getingreso() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
			<%=strGlobalSeguridadComment%>$this->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->getmodificacion() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
			<%=strGlobalSeguridadComment%>$this->strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=$this->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>;
			<%=strGlobalSeguridadComment%>$this->strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->geteliminacion() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
			<%=strGlobalSeguridadComment%>$this->strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->getconsulta() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
			<%=strGlobalSeguridadComment%>$this->strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->getbusqueda() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
			<%=strGlobalSeguridadComment%>$this->strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->gettodo() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
			<%=strGlobalSeguridadComment%>$this->strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=(($perfilOpcionUsuario->getreporte() || $perfilOpcionUsuario->gettodo()) ? 'table-row':'none'  ); 
		} else {
			$this->setPermisosUsuarioConPermiso<%=GetNombreClase(TablaBase.ToString())%>('none');
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		<%=strGlobalSeguridadCommentNo%>$this->setPermisosUsuarioConPermiso<%=GetNombreClase(TablaBase.ToString())%>('table-row');
		
	}
	
	public function inicializarSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas() {
		<%=GetSetVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase)%>
	}
	
	<%if(blnTieneSeguridadCampo){%>
	public function setPermisosUsuarioCampos<%=GetNombreClase(TablaBase.ToString())%>() {
		$perfilCampos=array();
				
		<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>$perfilCampos=$this->sistemaLogicAdditional->traerPermisosPaginaWebPerfilCampo($this->usuarioActual, Constantes::$BIGIDSISTEMA<%=GetNombreCompletarIdSistemaActual()%>ACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBRECLASE);				
					
		if($perfilCampos!=null && count($perfilCampos)>0) {
			//<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>$this->isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=$this->perfilOpcionUsuario->getField_isIngreso() || $this->perfilOpcionUsuario->getField_isTodo();
			//<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>$this->isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=$this->perfilOpcionUsuario->getField_isModificacion() || $this->perfilOpcionUsuario->getField_isTodo();
			
			<%=SetSeguridadCampoVariablesClase(TablaBase)%>
		}
		
	}	 	
	
	<%=GetSeguridadCampoVariablesClase(TablaBase)%>
	<%}%>
	/*
	function buscar<%=GetNombreClaseC(TablaBase.ToString())%>s() {
		try {
			
			$strAccionBusqueda='Todos';
			
			if ($this->params!=null && $this->params['form']!=null) {
				if (isset($this->params['form']['Todos'])) {
					$this->recargarInformacion();
					//echo("<SCRIPT LANGUAGE='JavaScript'>window.alert('Task') </SCRIPT>");
				} 
				<%=GetindicesEscogerTablasClases()%>
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>s($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s());					
				
				$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCONTROLLERNAME, $this);
						
				$this->render('index', 'ajax');
			}
			*/
			/*
			if (!$this->data['<%=GetNombreClaseC(TablaBase.ToString())%>']) {
				$this->Session->setFlash(__('no name='.$this->data['<%=GetNombreClaseC(TablaBase.ToString())%>'], true));
				$this->redirect(array('action' => 'index'));
			}
			
					
			$this-><%=GetNombreClaseC(TablaBase.ToString())%>->recursive = 0;
			//$this->set('usuarios', $this->paginate());
	
			$this->paginate = array(
				'conditions' => array(
					'<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.Nombre' => $this->data['<%=GetNombreClaseC(TablaBase.ToString())%>'],
				),
			);
				
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this->paginate('<%=GetNombreClaseC(TablaBase.ToString())%>');					
				
			$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCONTROLLERNAME, $this);
					
			$this->render('index', 'ajax');
			*/		
		/*
		}
	 	catch(Exception $e) {
			throw $e;
	  	}
	}
	*/
	
	//DESHABILITADO
	/*
	function migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>s($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s = null) {
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Cake = array();
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sCake = array();
			
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s != null) {
			
			foreach ($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local) {
				
				//$sistemaCake['Sistema']['id'] = $sistemaLocal->getId();					
				//$sistemaCake['Sistema']['versionrow'] = $sistemaLocal->getVersionRow();
				//$sistemaCake['Sistema']['codigo'] = $sistemaLocal->getstrCodigo();
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){ } //continue;%>
				<%=  GetstretMigrateEntityColumna(TablaBase.Columns[i]) %>
				<% } %>  
				
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sCake[] =$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Cake;
			}
		}
		
		return $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sCake;
	}
	*/
	
	//DESHABILITADO
	/*
	function migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local = null) {
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Cake = array();
			
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local != null) {			
			//$sistemaCake['id'] = $sistemaLocal->getId();
			//$sistemaCake['versionrow'] = $sistemaLocal->getVersionRow();			
			//$sistemaCake['codigo'] = $sistemaLocal->getstrCodigo();
			
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){ } //continue;%>
				<%=  GetstretMigrateObjectDataEntityColumna(TablaBase.Columns[i]) %>
			<% } %> 
			
		}
		
		return $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Cake;
	}
	*/
	
	function cargarParametros<%=GetNombreClaseC(TablaBase.ToString())%>() {			
		if($this->data!=null) {	
			if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase==null) {		
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase=new <%=GetNombrecompletoclase()%>();
			}
				/*
				$sistemaCake['Sistema']['id'] = $sistemaLocal->getId();					
				$sistemaCake['Sistema']['versionrow'] = $sistemaLocal->getVersionRow();
				$sistemaCake['Sistema']['codigo'] = $sistemaLocal->getstrCodigo();
				*/
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){ } //continue;%>
				<%=  GetstretParametroEntityColumna(TablaBase.Columns[i],false,i.ToString()) %>
				<% } %>  			
				
				//NO USAR $this->data LO HACE MUY LENTO AL SISTEMA
				$this-><%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoCakeModel%>->set($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
				
				//$this-><%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoCakeModel%>->set($this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase));
		}
	}
	
	<%=GetFuncionesCargarCombosFuncionestrForeignKeysC(TablaBase)%>
	
	<%=GetFuncionesCargarDescripcionFuncionestrForeignKeysC(TablaBase)%>
	
	<%=GetBusquedaFKFuncionesGenerales()%>
	
	public function inicializar<%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%>s<%=strDefault%>() {
	<%=InicializarVariablesArrayForeignKeysDefault()%>
	}
	
	public function set<%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%>s<%=strDefault%>() {
	<%=SetVariablesArrayForeignKeysDefault()%>
	}
	
	<%if(EsParaCakePhp){%>
	function view($<%=strId%> = null) {
		if (!$<%=strId%>) {
			$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> no valido', true));
			$this->redirect(array('action' => 'index'));
		}
		$this->set('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>', $this-><%=GetNombreClaseC(TablaBase.ToString())%>->read(null, $<%=strId%>));
	}
	<%}%>
	
	<%if(blnTieneForeignKey) {%>
	function recargarReferencias<%=GetNombreClaseC(TablaBase.ToString())%>() {		
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($this->getConnexion());
			
			//PARA RECARGAR COMBOS
			if($this->strRecargarFkTipos!=null && $this->strRecargarFkTipos!='TODOS' && $this->strRecargarFkTipos!='') {
				$this->strRecargarFkQuery=' where '.$this->strRecargarFkColumna.'='.$this->intRecargarFkIdPadre;
			}
			
			//CARGA INICIAL O RECARGAR COMBOS
			<%=ConstructorVariablesArrayForeignKeys(false,false)%>	
			
			
			//RECARGAR COMBOS SIN ELEMENTOS
			if($this->strRecargarFkTiposNinguno!=null && $this->strRecargarFkTiposNinguno!='NINGUNO' && $this->strRecargarFkTiposNinguno!='') {						
			<%=ConstructorVariablesArrayForeignKeys(false,true)%>	
			}
			
			$this->setCommitCloseConnexion();
			
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	<%}%>
	
	function seleccionarActual($id = null) {		
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			$this->inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			$this->strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=$this->strPermisoActualizarOriginal<%=GetNombreClaseC(TablaBase.ToString())%>;
	
			if (!$id) {
				$this->Session->setFlash(__('Invalid <%=GetNombreClaseC(TablaBase.ToString())%>', true));
				$this->redirect(array('action' => 'index'));
			}
			
			//CAKE FUNCTIONS
			/*
			$this->set('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>', $this-><%=GetNombreClaseC(TablaBase.ToString())%>->read(null, $<%=strId%>));
	
			
			$this-><%=GetNombreClaseC(TablaBase.ToString())%>->recursive = 0;
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this->paginate();
			
			$this->set('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s', $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
	
			if (empty($this->data)) {
				$this->data = $this-><%=GetNombreClaseC(TablaBase.ToString())%>->read(null, $id);
			}
			*/
			
			$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($this->getConnexion());
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntity($id);
			//WithConnection
			
			$this->cargarDatosLogicClaseBean<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//ASIGNAR VARIABLES GLOBALES
			$this->setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase;
			
			//$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
			
			//$this->form = $this->data['form'];
			
			$this->strVisibilidadTablaElementos='table-row';
			
			$this->actualizarEstadoCeldasBotones('ae', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);
			
			<%=SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TablaBase)%>
			//SOLO SI ES NECESARIO
			
			$this->setCommitCloseConnexion();
			
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			if($this->bitEsRelaciones) {
			<%if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
			<%=GetWebFuncionesTablasClasesRelacionadasC(TablaBase,true,true,"LLAMAR_REGISTRAR_SESSION",Empresa,Package,false,"")%>
			<%}%>
			}
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	public function setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase) {	
		try {
			if($this->parametroGeneralUsuarioActual!=null && $this->parametroGeneralUsuarioActual->getId()>0) {
			<%=GetCallFuncionesSetActualComboForeignKeys(true,true,false)%>
			
			<%=GetCallFuncionesSetActualFechas(true)%>
			}
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	function eliminarTabla($id = null) {		
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			//$this->inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			//$this->strPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=$this->strPermisoActualizarOriginal<%=GetNombreClaseC(TablaBase.ToString())%>;
	
			if (!$id) {
				//$this->Session->setFlash(__('Invalid <%=GetNombreClaseC(TablaBase.ToString())%>', true));
				//$this->redirect(array('action' => 'index'));
			}
					
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($this->getConnexion());
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntity($id);
			//WithConnection						
			
			$indice=0;
			$existe=false;
			
			foreach($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local) {
				if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>()->getId()==$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->getId()) {
					$existe=true;
					break;
				}
				
				$indice++;
			}
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>()->setIsDeleted(true);
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados[]=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>();
			
			//QUITAR DE LISTA MEMORIA
			if($existe) {
				unset($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s[$indice]);
			}
			
			//$this->cargarDatosLogicClaseBean<%=GetNombreClaseC(TablaBase.ToString())%>(false);			
			//$this->data =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);			
			//$this->strVisibilidadTablaElementos='table-row';			
			//$this->actualizarEstadoCeldasBotones('ae', $this->bitGuardarCambiosEnLote, $this->bitEsMantenimientoRelacionado);			
			<%//=SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TablaBase)%>
			
			//SOLO SI ES NECESARIO
			
			$this->setCommitCloseConnexion();
			
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	function seleccionarActualAuxiliar($id = null) {		
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			if (!$id) {
				$this->Session->setFlash(__('Invalid <%=GetNombreClaseC(TablaBase.ToString())%>', true));
				$this->redirect(array('action' => 'index'));
			}
			
			//NO FUNCIONA AQUI, SINO EN search.php
			//$this->strFuncionBusquedaRapida=str_replace('TO_REPLACE',$id,$this->strFuncionBusquedaRapida);
			
					
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	function mostrarEjecutarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>($id = null) {		
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			<%if(!blnConJQueryCode){%>
			if (!$id) {
				$this->Session->setFlash(__('Invalid <%=GetNombreClaseC(TablaBase.ToString())%>', true));
				$this->redirect(array('action' => 'index'));
			}
			<%}%>
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($this->getConnexion());
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntity($id);
			//WithConnection
			
			//$this->data =$this->migrarModel<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>());
			
			$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			//SE LO QUITA CON JQUERY NO SE NECESITA
			//$this->strVisibilidadTablaAccionesRelaciones='table-row';
			
			$this->htmlTablaAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=$this->getHtmlTablaAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>);								
			
			//DEBERIA FUNCIONAR EN ANTERIOR LINEA DE CODIGO
			<%//=SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TablaBase)%>
						
			$this->setCommitCloseConnexion();
			
			//SOLO SI ES NECESARIO
			//$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->return<%=GetNombreClaseC(TablaBase.ToString())%>s(true);	
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	
	<%if(GetConDivResumenTableFromPropertiesC(TablaBase)) {%>
	
	function seleccionarMostrarDivResumen<%=GetNombreClaseC(TablaBase.ToString())%>Actual($id = null) {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			$this->inicializarMensajesDefectoDatosInvalidos<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=array();
			
			<%if(!blnConJQueryCode){%>
			if (!$id) {
				$this->Session->setFlash(__('Invalid <%=GetNombreClaseC(TablaBase.ToString())%>', true));
				$this->redirect(array('action' => 'index'));
			}
			<%}%>						
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->setConnexion($this->getConnexion());
			
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntity($id);
			
			if($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()!=null && $this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>()->get<%=strIdGetSet%>()>0) {		
				
				$classes=array();
					
				<%=GetAddClasseTablasClasesRelacionadasForeigKeysC(TablaBase,"")%>					
				<%=GetAddClassTablasClasesRelacionadas(true,"\t")%>
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoad(false,DeepLoadType::$INCLUDE, $classes,'');
				
				$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>();
				
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s[]=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
				
				$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>=$this->getHtmlTablaDatosResumen<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,false);		
				
				/*
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional=new <%=GetNombreClaseC(TablaBase.ToString())%>ViewAdditional();
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional->Session=$this->Session;
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>();
			
				$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional->getHtmlTablaDatosResumen<%=GetNombreClaseC(TablaBase.ToString())%>();		
				*/	
			} else {
				$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>='';
			}
						
			$this->setCommitCloseConnexion();
			
			//$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			$this->returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			$this->manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e);
		}
	}
	<%}%>
	
	public function generarReporteAuxiliar() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			<%if(!blnConJQueryCode){%>
			$this->returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%}%>
		
		} catch(Exception $e) {
			throw $e;
		}
	}
	
	public function generarFpdf() {
		try {
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			$this->layout = 'fpdf';
			
			$titulo=Constantes::getstrAreaDepartamento();
			$subtitulo='<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>';
			
			$header=array();
			$data=array();
			$row=array();
			$cellReport=new CellReport();
					
			$header=$this->getHeadersReport();
			
			$data=$this->getDataReport($this->getConnexion());
			
			<%if(EsParaCakePhp){%>
			$this->set('header',$header);
			$this->set('data',$data);
			$this->set('font','Arial');
			$this->set('sizefont',12);
			$this->set('titulo',$titulo);
			$this->set('subtitulo',$subtitulo);
			$this->set('fileName','<%=GetNombreClaseObjetoC(TablaBase.ToString())%>');
			<%}%>
			
			//SOLO SI ES NECESARIO
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
			<%if(EsParaCakePhp){%>
			$this->render('/auxiliar/fpdf');
			<%} else {%>
			$fpdf_helper=new FpdfHelper();
			
			$font='Arial';
			$sizefont=12;
			$fileName='<%=GetNombreClaseObjetoC(TablaBase.ToString())%>';
			
			header("Content-type: application/pdf"); 
			header('Content-Disposition: attachment;filename="'.$fileName.'.pdf"'); 
			header('Cache-Control: max-age=0'); 
		
			$fpdf_helper->SetFont($font,'',$sizefont);
			$fpdf_helper->title=$titulo; 
			$fpdf_helper->subtitle=$subtitulo;
			$fpdf_helper->AddPage();
			$fpdf_helper->basicTable($header,$data);
			
			$this->setCommitCloseConnexion();
			
			echo $fpdf_helper->fpdfOutput();  
			<%}%>
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			throw $e;
		}
	}
	
	public function generarReporteConPhpExcel($strTipoReporte='PDF') {
		try {
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			//NO UTILIZA LAYOUT
			$this->layout ='';
	
			$header=array();
			$data=array();
						
			$header=$this->getHeadersReport();
			
			$data=$this->getDataReport($this->getConnexion());
					
			<%if(EsParaCakePhp){%>
			$this->set('header',$header);
			$this->set('data', $data); 	    
			$this->set('title', '<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>');
			$this->set('tipo', $strTipoReporte); 	 
			
			$this->render('/auxiliar/excel');
			<%} else {%>
			$excel_helper=new ExcelHelper();
			
			$title='<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>';
			$tipo=$strTipoReporte;
			
			$this->setCommitCloseConnexion();
			
			$excel_helper->generate($header,$data, $title,$tipo,'webroot');
			<%}%>
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			throw $e;
		}
    } 
	
	public function generarReporteConPhpExcelVertical($strTipoReporte='PDF') {
		try {
			$this->saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			$this->getNewConnexion();
			
			//NO UTILIZA LAYOUT
			$this->layout ='';
	
			$header=array();
			$data=array();
						
			//$header=$this->getHeadersReportVertical();
			
			$data=$this->getDataReportVertical($this->getConnexion());
					
			<%if(EsParaCakePhp){%>
			//$this->set('header',$header);
			$this->set('data', $data); 	    
			$this->set('title', '<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>');
			$this->set('tipo', $strTipoReporte); 	 
			
			$this->render('/auxiliar/excel');
			<%} else {%>
			$excel_helper=new ExcelHelper();
			
			$title='<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>';
			$tipo=$strTipoReporte;
			
			$this->setCommitCloseConnexion();
			
			$excel_helper->generateVertical($header,$data, $title,$tipo,'webroot');
			<%}%>
		} catch(Exception $e) {
			$this->setRollbackCloseConnexion();
			
			throw $e;
		}
    } 
	
	function getHeadersReport() {				
		$header=array();
		$cellReport=new CellReport();
		
		<%=GetReportePdfHeaders(TablaBase)%>
		
		return $header;
	}
	
	function get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila) {
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=array();
		$checkbox_id=0;
		$indice=0;
		
		for($i=1;$i<=$maxima_fila;$i++) {
			$indice=$i-1;
			
			$checkbox_id=$this->data['t']['id_'.$i];
			
			if($checkbox_id!=null && ($checkbox_id=='on' || $checkbox_id==true || $checkbox_id==1)) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados[]=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s[$indice];
			}
		}
		
		return $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados;
	}
	
	function getTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>() {
		$arrTiposRelacionesReportes=array();
				
		$tipoRelacionReporte=new Reporte();
		
		//$tipoRelacionReporte->setsCodigo(PerfilConstantesFunciones::$LABEL_IDSISTEMA);
		//$tipoRelacionReporte->setsDescripcion(PerfilConstantesFunciones::$LABEL_IDSISTEMA);

		//$arrTiposRelacionesReportes[]=$tipoRelacionReporte;
		
		<%if(TieneClasesRelacionadasParaMostrarC(TablaBase)) {%>
		<%=GetReporteComboItemsTablasClasesRelacionadasC(TablaBase,false,true,true,true)%>
		<%}%>
		
		return $arrTiposRelacionesReportes;
	}
	
	
	function getDataReport($connexion) {	
		$data=array();
		$row=array();
		$cellReport=new CellReport();
		$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=null;
		
		//if($this->strTipoPaginacion!='TODOS') {
			$maxima_fila=$this->data['t']['maxima_fila'];			
			
			if($maxima_fila!=null && $maxima_fila>0) {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this->get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila);
				
				if(count($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux)<=0) {
					$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s;
				}
			} else {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s;
			}
		//} else {
		//	$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sReporte;	
		//}
		
		foreach ($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux as $<%=GetNombreClaseObjeto(TablaBase.ToString())%>) {
			$row=array();
			<%=GetReportePdfRows(TablaBase)%>
	   		
			$data[]=$row;			
		}
		
		return $data;
	}
	
	function getDataReportVertical($connexion) {	
		$data=array();
		$row=array();
		$cellReport=new CellReport();
		$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=null;
		
		//if($this->strTipoPaginacion!='TODOS') {
			$maxima_fila=$this->data['t']['maxima_fila'];			
			
			if($maxima_fila!=null && $maxima_fila>0) {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this->get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila);
				
				if(count($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux)<=0) {
					$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s;
				}
			} else {
				$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>s;
			}
		//} else {
		//	$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux=$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sReporte;	
		//}
		
		foreach ($this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>sAux as $<%=GetNombreClaseObjeto(TablaBase.ToString())%>) {
			//$row=array();
			
			$row=array();
			$cellReport=new CellReport(); $cellReport->inicializarTextWidthHeightLine(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::get<%=GetNombreClaseC(TablaBase.ToString())%>Descripcion($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>),100,6,1);$cellReport->setblnEsTituloGrupo(true); $row[]=$cellReport;
			$data[]=$row;
			
			<%=GetReportePdfRowsVertical(TablaBase)%>
	   		
			//$data[]=$row;			
		}
		
		return $data;
	}	
	
	<%if(EsParaCakePhp){%>
	function add() {
		if (!empty($this->data)) {
			$this-><%=GetNombreClaseC(TablaBase.ToString())%>->create();
			if ($this-><%=GetNombreClaseC(TablaBase.ToString())%>->save($this->data)) {
				$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> ha sido guardado correctamente', true));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> NO ha sido guardado. Por favor, intentelo otra vez.', true));
			}
		}
	}

	function edit($<%=strId%> = null) {
		if (!$id && empty($this->data)) {
			$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> no valido', true));
			$this->redirect(array('action' => 'index'));
		}
		if (!empty($this->data)) {
			if ($this-><%=GetNombreClaseC(TablaBase.ToString())%>->save($this->data)) {
				$this->Session->setFlash(__('The <%=GetNombreClaseC(TablaBase.ToString())%> ha sido guardado correctamente', true));
				$this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> NO ha sido guardado. Por favor, intentelo otra vez.', true));
			}
		}
		if (empty($this->data)) {
			$this->data = $this-><%=GetNombreClaseC(TablaBase.ToString())%>->read(null, $<%=strId%>);
		}
	}

	function delete($<%=strId%> = null) {
		if (!$<%=strId%>) {
			$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> no valido', true));
			$this->redirect(array('action'=>'index'));
		}
		if ($this-><%=GetNombreClaseC(TablaBase.ToString())%>->delete($<%=strId%>)) {
			$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> eliminado', true));
			$this->redirect(array('action'=>'index'));
		}
		$this->Session->setFlash(__('<%=GetNombreClaseC(TablaBase.ToString())%> NO ha sido eliminado', true));
		$this->redirect(array('action' => 'index'));
	}
	<%}%>
	
	public function <%=GetNombreClase(TablaBase.ToString())%>sControllerAux($conexion<%=strPrefijoJSFFaces%>) 	 {
		try {
			$this->conexion<%=strPrefijoJSFFaces%>=conexion<%=strPrefijoJSFFaces%>;
		}
	 	catch(Exception $e) {
			throw $e;
	  	}	 
    }
	
					
	public function deepLoad($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$deep,$deepLoadType,$clases) {
		try {
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoad($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$deep,$deepLoadType,$clases);
		}
		catch(Exception $e) {
			throw $e;
  		}
	}
	
	public function deepLoads($deep,$deepLoadType,$clases, $strTituloMensaje) {
		
		 $strMensaje='';
		
		try {
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoads($deep,$deepLoadType,$clases,$strTituloMensaje);
		} catch (Exception $e) {
			throw $e;
  		}
		
		
	return $strMensaje;
	
	}
		
	public function deepLoadSin<%=GetNombreClaseC(TablaBase.ToString())%>($deep,$deepLoadType,$clases, $strTituloMensaje) {
		
		 $strMensaje='';
		
		try {
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoad($deep,$deepLoadType,$clases,$strTituloMensaje);	
		} catch (Exception $e) {
			throw $e;
  		}
				
	return $strMensaje;
		
	}
	
	
	public function deepSave($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$deep,$deepLoadType,$clases) {
			
		try {
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepSave($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,$deep,$deepLoadType,$clases);
		}
		catch(Exception $e) {
			throw $e;
  		}	
	}
	
	public function deepSaves($deep,$deepLoadType,$clases, $strTituloMensaje) {
		
		 $strMensaje='';
		
		try {				
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->DeepSaves($deep,$deepLoadType,$clases,$strTituloMensaje);	
		} catch (Exception $e) {
			throw $e;
  		}
		
		return $strMensaje;
	
	}
		
	public function deepSaveSin<%=GetNombreClaseC(TablaBase.ToString())%>($deep,$deepLoadType,$clases, $strTituloMensaje) {
		
		 $strMensaje='';
	
		try {	
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->DeepSave($deep,$deepLoadType,$clases,$strTituloMensaje);	
		} catch (Exception $e) {
			throw $e;
  		}
		
		
		return $strMensaje;
	
	}
		
	public function getTodos<%=GetNombreClase(TablaBase.ToString())%>s( $strFinalQuery) {
		
		 $strMensaje='';
		
		try { 
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getTodos<%=GetNombreClase(TablaBase.ToString())%>s($strFinalQuery);
		} catch (Exception $e) {
			throw $e;
      	}
		
		
	return $strMensaje;
		
	}
	
	public function getEntities($queryWhereSelectParameters) {	
		 $strMensaje='';
		  		  
        try { 
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntities($queryWhereSelectParameters);
		} catch (Exception $e) {
			throw $e;
      	}
		
		
      	return $strMensaje;
		
    }
	
	public function getEntitiesConQuerySelect( $strQuerySelect,$queryWhereSelectParameters) {	
		 $strMensaje='';
		  		  
        try { 
			$strMensaje=$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic->getEntities($strQuerySelect,$queryWhereSelectParameters);
		} catch (Exception $e) {
			throw $e;
      	}
		
		
      	return $strMensaje;
		
    }
	
	public function getEntitiesSimpleQueryBuild( $strQuerySelect,$queryWhereSelectParameters) {	
		 $strMensaje='';
		  		  
        try { 
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->getEntitiesSimpleQueryBuild($strQuerySelect,$queryWhereSelectParameters);
		} catch (Exception $e) {
			throw $e;
      	}
		
		
      	return $strMensaje;
		
    }
	
	public function getEntity($id) {
		 $strMensaje='';
		  		  
        try { 
			$strMensaje=$<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic->getEntity($id);
		} catch (Exception $e) {
			throw $e;
      	}
		
		
	return $strMensaje;
        
    }
	
	public function save<%=GetNombreClase(TablaBase.ToString())%>WithConnection($idUsuario, $strUsuarioPC, $strNamePC, $strIPPC){	
		 $strMensaje='';
		
	    try { 	
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->save<%=GetNombreClaseC(TablaBase.ToString())%>WithConnection($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);
									
		} catch (Exception $e) {
			throw $e;
      	} 	
	    
		
	return $strMensaje;
	
	}
		
	public function save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection($idUsuario, $strUsuarioPC, $strNamePC, $strIPPC){	
		
		 $strMensaje='';
		
	    try { 	
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);
		} catch (Exception $e) {
			throw $e;
      	}
		
		
	return $strMensaje;
		
	}
	
	<%if(!blnEsProceso){%>
	public function nuevoConDatos(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionnuevoClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionnuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %>	<% } %>,$idUsuario, $strUsuarioPC, $strNamePC, $strIPPC){  	
		
		 $strMensaje='';
		
		
	    try { 		
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->new(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroUsoFuncionnuevoClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroUsoFuncionnuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %>	<% } %>,$idUsuario,$strUsuarioPC,$strNamePC,$strIPPC);
			
	   	} catch (Exception $e) {
			throw $e;
      	}
		
		
	return $strMensaje;
		
	}
	
	public function update(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionactualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionactualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,$idUsuario, $strUsuarioPC, $strNamePC, $strIPPC) {	
		
		 $strMensaje='';
		
	    try { 			
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->update(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroUsoFuncionactualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroUsoFuncionactualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,$idUsuario,$strUsuarioPC,$strNamePC,$strIPPC) ;			
		} catch (Exception $e) {
			throw $e;
      	}
		
		return $strMensaje;
	
	}
	<%}%>
	
	public function deleteConDatos($id,$idUsuario, $strUsuarioPC, $strNamePC, $strIPPC) {	
		 $strMensaje='';
				
	    try { 
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->delete($id,$idUsuario,$strUsuarioPC,$strNamePC,$strIPPC) ;
			
		} catch (Exception $e) {
			throw $e;
      	}		
		
		
		return $strMensaje;
		
	}
	
	public function deleteCascade($idUsuario, $strUsuarioPC, $strNamePC, $strIPPC) {	
		 $strMensaje='';
		
	    try { 	    	
			$strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deleteCascade($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC)  ;
		} catch (Exception $e) {
			throw $e;
      	}		
				
		return $strMensaje;
		
	}
	
	public function deletesCascade($idUsuario, $strUsuarioPC, $strNamePC, $strIPPC) {	
		 $strMensaje='';
			
	    try { 
			 $strMensaje=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deletesCascade($idUsuario,$strUsuarioPC,$strNamePC,$strIPPC) ;
		} catch (Exception $e) {
			throw $e;
      	}		
				
		return $strMensaje;
		
	}
	
	<%=GetMaintenanceTablasClasesRelacionadas() %>
	
	<%=GetMaintenanceTablasClasesRelacionadasDetalles() %>

	public function actualizarEstadoCeldasBotones($strAccion,$bitGuardarCambiosEnLote=false,$bitEsMantenimientoRelacionado=false){
		if($strAccion=='n') {
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			
			if($bitEsMantenimientoRelacionado==false){ 
				if($bitGuardarCambiosEnLote==true) {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
				} else {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				}
			}
		} else if($strAccion=='a') {
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			
			if($bitEsMantenimientoRelacionado==false){ 
				if($bitGuardarCambiosEnLote==true) {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
				} else {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				}
			}
		} else if($strAccion=='ae') {
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			
			if($bitEsMantenimientoRelacionado==false){ 
				if($bitGuardarCambiosEnLote==true) {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
				} else {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				}
			}
		} else if($strAccion=='ae2') {
			//Para Mantenimientos de tablas relacionados con mas de columnas minimas 
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			
			if($bitEsMantenimientoRelacionado==false){ 
				if($bitGuardarCambiosEnLote==true) {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				} else {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				}
			}
		} else if($strAccion=='c') {
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			
			if($bitEsMantenimientoRelacionado==false){ 
				if($bitGuardarCambiosEnLote==true) {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='visible';
				} else {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				}
			}
		} else if($strAccion=='t') {
			$this->strVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			$this->strVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
			
			if($bitEsMantenimientoRelacionado==false){ 
				if($bitGuardarCambiosEnLote==true) {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				} else {
					$this->strVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>='hidden';
				}
			}
		}
	}		
	
	<%=GetFuncionesIndicesFKVisibilidadTablasClases()%>
	
	<%=GetFuncionesAccionesBusquedaForeignKeyTablasClasesRelacionadasC(false)%>
	
	<%=GetFuncionesAccionesNavegacionTablasClasesRelacionadasC()%>

	public function irA<%=GetNombreClaseC(TablaBase.ToString())%>FkActual() {
		$strClavePaginaFk='null';
		
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
		
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getbitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>()) {
			<%=GetClaveNavigationRuleFK()%>
			
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setbitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		}
		
		<%}%>
		
		return $strClavePaginaFk;
	}

	
	public function guardarDatosBusquedaSession() {
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
		
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		}
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>($this->getstrAccionBusqueda());
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setintNumeroPaginacion($this->getintNumeroPaginacion());
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setintNumeroPaginacionPagina($this->getintNumeroPaginacionPagina());
		
		if($this->getstrAccionBusqueda()=='Todos') {;}
		<%=GetGuardarIndicesVariablesSessionTablasClases()%>
		
		$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME,serialize($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>));		
		<%}%>
	}
	
	public function traerDatosBusquedaDesdeSession($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=null) {
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
		}
		
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
		   $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		}
		
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>()!=null && $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>()!='') {
			$this->setstrAccionBusqueda($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>());
			$this->setintNumeroPaginacion($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getintNumeroPaginacion());
			$this->setintNumeroPaginacionPagina($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->getintNumeroPaginacionPagina());		
			
			if($this->getstrAccionBusqueda()=='Todos') {;}
			<%=GetTraerIndicesVariablesSessionTablasClases()%>
		}
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>('');
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setintNumeroPaginacion(10);
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->setintNumeroPaginacionPagina(0);
		
		$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME,serialize($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>));		
		<%}%>
	}
	
	public function inicializarVariables($strType) {		
		if($strType=='NORMAL') {
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
			
		} else {
			$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
		}
	}
	
	public function return<%=GetNombreClaseC(TablaBase.ToString())%>s($bitConRetrurnAjax) {				
		//SE ACTUALIZA AL FINAL DE procesarbusqueda Y AL FINAL DE ejecutarmantenimiento
		//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this->migrarModel<%=GetNombreClase(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s());							
		//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();					
		
		<%if(blnConJQueryCode){%>
			if(!$this->bitEsBusqueda) {
				$this->htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>s=$this->setHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>();
			} else {
				$this->htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>s=$this->setHtmlTablaDatosParaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
		<%}%>
		
		if($bitConRetrurnAjax==true) {			
			$this->returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>();
		}		
	}
	
	public function returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>() {
		$strNombreOpcionRetorno='';
		$strRenderPage='';
		
		//CUANDO LAS BUSQUEDAS SE HACE DESDE OTRA PAGINA
		if($this->strNombreOpcionRetorno!=null && $this->strNombreOpcionRetorno!='') {
			$strNombreOpcionRetorno=$this->strNombreOpcionRetorno;
		} else {
			$strNombreOpcionRetorno=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBREOPCION;
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRMODULOOPCION!='') {
				$strNombreOpcionRetorno=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRMODULOOPCION.<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRNOMBREOPCION;
			}
		}
		
		$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCONTROLLERNAME, $this);					
		
		$strRenderPage='/'.Constantes::$STRCARPETAVIEWS.'/'.$strNombreOpcionRetorno.'/'.$this->strTipoView;
		
		$this->render($strRenderPage, 'ajax');		
	}
	
	<%if(blnConJQueryCode){%>
	public function setHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->getHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		
		/*
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional=new <%=GetNombreClaseC(TablaBase.ToString())%>ViewAdditional();
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional->Session=$this->Session;
		
		return $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ViewAdditional->getHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		*/
	}
	
	public function getHtmlTablaDatos<%=GetNombreClaseC(TablaBase.ToString())%>($paraReporte=false) {	
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal='';
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=array();
		
		if(!$paraReporte) {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
		} else {
			$maxima_fila=$this->data['t']['maxima_fila'];
			
			if($maxima_fila!=null && $maxima_fila>0) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this->get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados($maxima_fila);
				
				if(count($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal)<=0) {
					$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
				}
			} else {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
			}
		}
		
		$classes=array();
		$style_tabla=' style=" width:100%;margin: 0 0 0 0px;" ';//height: 100%;
		//overflow:auto;
		$style_div=' style=" width:100%;height: 300px; overflow:auto; margin: 0 0 0 0px;" ';//background-color: #b0c4de;
		
		$class_cabecera='';
		$class_display=' class="display" ';
		
		if(!$paraReporte) {
			if(Constantes::$STRTIPOTABLA=='normal') {
				$class_cabecera=' class="cabeceratabla" ';
				$class_display='';
			}
			
			if($this->bitConAltoMaximoTabla==true) {
				$style_div=' style=" width:100%;height: 100%; overflow:auto; margin: 0 0 0 0px;" ';//background-color: #b0c4de;			
			}
		} else {			
			$class_cabecera=' class="cabeceratabla" ';
			$class_display=' class="reporte" ';
			$style_tabla='';
			$style_div=' style=" width:100%;height: 100%; overflow:auto; margin: 0 0 0 0px;" ';//background-color: #b0c4de;	
		}
		
		//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
		//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>s($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		
		<%if(blnConJQueryCode){%>
		//PARA JQUERY
		//$this->Session->start();
		<%}%>
		
		<%=GetSessionClasesRelacionadas()%> 
			
		<%=GetAddClasseTablasClasesRelacionadasForeigKeysC(TablaBase,"")%>
		
				//NO AQUI CON NUEVA CONEXION, LO HACE LENTO
				//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoadsWithConnection(false,DeepLoadType::$INCLUDE, $classes,'');
			
		//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();
		
		if($this->bitConEditar==false || $paraReporte) {
			//|| $this->bitConEditar==true
		<%=GetJQueryHtmlTabla(TablaBase,null,null,true,false,null,false,false,false,true,false,false)%>		
		} else {
		<%=GetJQueryHtmlTabla(TablaBase,null,null,true,false,null,false,false,false,true,false,true)%>		
		}
		
		if(!$paraReporte) {
			$this->htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>s=$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
		} else {
			$this->htmlTablaReporteAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>s=$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
		}
		
		return $htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
	}	
	
	public function setHtmlTablaDatosParaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->getHtmlTablaDatosParaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>(false);
	}
	
	public function getHtmlTablaDatosParaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>($paraReporte=false) {	
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal='';
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=array();
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
				
		$classes=array();
		$style_tabla=' style=" width:100%;height: 100%; margin: 0 0 0 0px;" ';
		//overflow:auto;
		$style_div=' style=" width:100%;height: 300px; overflow:auto; margin: 0 0 0 0px;" ';
		
		$class_cabecera='';
		$class_display=' class="display" ';
		
		if(!$paraReporte) {
			if(Constantes::$STRTIPOTABLA=='normal') {
				$class_cabecera=' class="cabeceratabla" ';
				$class_display='';
			}
			
			if($this->bitConAltoMaximoTabla==true) {
				$style_div=' style=" width:100%;height: 100%; overflow:auto; margin: 0 0 0 0px;" ';			
			}
		} else {			
			$class_cabecera=' class="cabeceratabla" ';
			$class_display='';
			$style_div=' style=" width:100%;height: 100%; overflow:auto; margin: 0 0 0 0px;" ';	
		}
		
		//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
		//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>s($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		
		<%if(blnConJQueryCode){%>
		//PARA JQUERY
		//$this->Session->start();
		<%}%>
		
		<%=GetSessionClasesRelacionadas()%> 
			
		<%=GetAddClasseTablasClasesRelacionadasForeigKeysC(TablaBase,"")%>
		
				//NO AQUI CON NUEVA CONEXION, LO HACE LENTO
				//$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->deepLoadsWithConnection(false,DeepLoadType::$INCLUDE, $classes,'');
			
		//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->get<%=GetNombreClaseC(TablaBase.ToString())%>s();
		
		<%=GetJQueryHtmlTabla(TablaBase,null,null,true,false,null,false,false,false,true,true,false)%>		
		
		$this->htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>s=$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
			
		return $htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
	}	
	
	public function getHtmlTablaDatosResumen<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=array(),$paraReporte=false) {	
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal='';
		$borderValue='1';
		$rowSpanValue=2;
		$rowSpanTiene='base';
		$blnTieneCampo=false;
		
		$strAuxStyleBackgroundTablaPrincipal='';
		$strAuxStyleBackgroundTitulo='';
		$strAuxStyleBackgroundContenido='';
			$strAuxStyleBackgroundContenidoCabecera='';
			$strAuxStyleBackgroundContenidoDetalle='';		
		$strAuxStyleBackgroundIzquierda='';
		$strAuxStyleBackgroundDerecha='';
		
		
		
		if(!$paraReporte) {
			$strAuxStyleBackgroundTablaPrincipal=' class="tablaficha" ';
			$strAuxStyleBackgroundContenido=' style="background-image:url('.Constantes::$strPathBaseImagenToComplete.'Imagenes/fondo-contenido-resumen.jpg);background-repeat:repeat;"';
				$strAuxStyleBackgroundContenidoCabecera='';
				$strAuxStyleBackgroundContenidoDetalle='';				
			$strAuxStyleBackgroundTitulo=' style="background-image:url('.Constantes::$strPathBaseImagenToComplete.'Imagenes/fondo-titulo-resumen.gif);background-repeat:repeat;"';
			$strAuxStyleBackgroundIzquierda=' style="background-image:url('.Constantes::$strPathBaseImagenToComplete.'Imagenes/fondo-izquierda-resumen.gif);background-repeat:repeat;"';
			$strAuxStyleBackgroundDerecha=' style="background-image:url('.Constantes::$strPathBaseImagenToComplete.'Imagenes/fondo-derecha-resumen.gif);background-repeat:repeat;"';
			
			
		} else {
			$strAuxStyleBackgroundTablaPrincipal='';
			$strAuxStyleBackgroundTitulo=' class="cabeceraformulario" ';
			$strAuxStyleBackgroundContenido='';			
				$strAuxStyleBackgroundContenidoCabecera=' class="filazebra" ';
				$strAuxStyleBackgroundContenidoDetalle='';				
			$strAuxStyleBackgroundIzquierda='';
			$strAuxStyleBackgroundDerecha='';	
		}
		
		$strAuxColumnRowSpan='<td rowspan="#rowspan" '.$strAuxStyleBackgroundIzquierda.'><pre> </pre></td>';
						
		$strTamanioTablaPrincipal="500px";
		
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<div id="divTablaDatosAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>sAjaxWebPart" style="width:100%;height:100%;overflow:auto;">';
		
		foreach($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local){
			$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<table id="table<%=GetNombreClaseObjetoC(TablaBase.ToString())%>'.$<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local->getId().'" '.$strAuxStyleBackgroundTablaPrincipal.' width="'.$strTamanioTablaPrincipal.'" align="center" cellspacing="0" cellpadding="0" border="'.$borderValue.'">';
			
			$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<tr><td align="center" '.$strAuxStyleBackgroundTitulo.'><p class="tituloficha"><b>'.strtoupper($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local-><%=GetXmlColumnaFuncionDescripcionFromPropertiesC(TablaBase)%>).'</b></p></td></tr>';
			//$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<tr>'.$strAuxColumnRowSpan.'<td align="center" '.$strAuxStyleBackgroundTitulo.'><p class="tituloficha"><b>'.strtoupper($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local-><%=GetXmlColumnaFuncionDescripcionFromPropertiesC(TablaBase)%>).'</b></p></td>'.$strAuxColumnRowSpan.'</tr>';
			
			<%=GetJQueryHtmlTablaResumen(TablaBase,null,null,true,false,null,false,false,false,true,true,"\t")%>		
			
			$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</table>';
		}
		
		if($paraReporte) {
			$proceso_print='document.getElementById(\'divTablaDatosAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>sAjaxWebPart\').style.overflow=\'visible\';';
			$proceso_print.='window.print();';
			$proceso_print.='document.getElementById(\'divTablaDatosAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>sAjaxWebPart\').style.overflow=\'auto\';';
			
			$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<table><tr><td><input type="button" onclick="'.$proceso_print.'" style="visibility:visible" value="Imprimir" /></td></tr></table>';
		}
		
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</div>';
		
		return $htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
	}	
	
	public function getHtmlTablaAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=null) {	
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal='';
		
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<form id="frmAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>" name="frmAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>">';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<table class="elementos">';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<tr id="tr<%=GetNombreClaseC(TablaBase.ToString())%>AccionesRelaciones" class="elementos" style="display:table-row">';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<td>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<table id="tblAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>" width="50%" align="left">';
		
		/*
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='\r\n<tr>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='\r\n<td style="display:table-cell"><b>LINKS ES</b></b></td>';		
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='\r\n<td><a><img id="imgserviciolinktipoenfermedad" name="imgserviciolinktipoenfermedad" idactualtipoenfermedad="0" src="<?echo(Constantes::$strPathBaseImagenToComplete)?>/Imagenes/serviciolinktipoenfermedads.gif" alt="Seleccionar" border="0" height="15" width="15"></a></td>';		
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='\r\n</tr>';
		*/
		
		<%//=GetHtmlNavegacionTituloSoloTablaFacesTablasClasesRelacionadasC(TablaBase,false,false,true,blnConJQueryCode,"",true)%>
		<%=GetNavegacionTituloTablaFacesTablasClasesRelacionadasC(TablaBase,false,true,true,true,"$this->htmlTabla"+GetNombreClaseC(TablaBase.ToString())+"s",true)%>
		
		/*
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<tr>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='<td colspan="2"><input type="button" id="btnCancelarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>" name="btnCancelarAccionesRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>" value="CERRAR"/></td>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</tr>';
		*/
		
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</table>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</td>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</tr>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</table>';
		$htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal.='</form>';
				
		
		return $htmlTabla<%=GetNombreClaseC(TablaBase.ToString())%>sLocal;
	}		
	<%}%>
	
	public function saveGetSessionControllerAndPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>($bitSaveSession) {								
		$this->activarSession<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		if($bitSaveSession==true) {			
			$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONCONTROLLERNAME,serialize($this));
		} else {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONCONTROLLERNAME));
			
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>==null) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>=$this;
			}
			
			$this->actualizarDesdeSession<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>);
			
			$this->saveGetSessionPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>($bitSaveSession);
		}
	}
	
	public function saveGetSessionPageAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>($bitSaveSession) {						
		if($bitSaveSession==true) {			
			//$this->Session->write(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME,$this);
		} else {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
			
			if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
				$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
			}
			
			$this->set(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME, $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
		}
	}
	
	public function actualizarDesdeSession<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>){
		$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjeto(TablaBase.ToString())%>Actual;
		$this-><%=GetNombreClaseObjeto(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjeto(TablaBase.ToString())%>;
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase;
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados;
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sReporte=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sReporte;
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados;
		$this->arrOrderBy=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->arrOrderBy;
		$this->arrHistoryWebs=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->arrHistoryWebs;
		
		$this->strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTypeOnLoad<%=GetNombreClaseC(TablaBase.ToString())%>;
		$this->strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoPaginaAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>;
		$this->strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoUsuarioAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>;	
		
		$this->bitEsPopup=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitEsPopup;	
		$this->bitEsBusqueda=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitEsBusqueda;	
		$this->strFuncionJs=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strFuncionJs;
		$this->strFuncionJsPadre=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strFuncionJsPadre;
		//$this->strSufijo=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strSufijo;
		$this->bitEsRelaciones=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitEsRelaciones;	
		$this->bitEsRelacionado=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitEsRelacionado;	
		
		$this->strTituloTabla=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTituloTabla;
		$this->strTituloPathPagina=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTituloPathPagina;
		$this->strTituloPathElementoActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTituloPathElementoActual;
		
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
		
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Clase);
		$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic->set<%=GetNombreClaseC(TablaBase.ToString())%>s($this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		
		$this->strTipoView=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoView;		
		$this->bigIdUsuarioSesion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bigIdUsuarioSesion;		
		$this->datosCliente=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->datosCliente;
		$this->strAccionBusqueda=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAccionBusqueda;		
		$this->strNombreOpcionRetorno=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strNombreOpcionRetorno;		
		$this->intNumeroPaginacionPagina=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->intNumeroPaginacionPagina;
		$this->intNumeroPaginacion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->intNumeroPaginacion;
		$this->bitConBusquedaRapida=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitConBusquedaRapida;
		$this->strValorBusquedaRapida=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strValorBusquedaRapida;
		$this->strFuncionBusquedaRapida=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strFuncionBusquedaRapida;

		//PARAMETROS REPORTE
		$this->strGenerarReporte=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strGenerarReporte;		
		$this->bitGenerarReporte=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitGenerarReporte;				
		$this->strTipoReporte=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoReporte;		
		$this->strTipoPaginacion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoPaginacion;
		$this->strTipoAccion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoAccion;
		$this->tiposReportes=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposReportes;
		$this->tiposAcciones=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposAcciones;
		$this->tiposAccionesFormulario=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposAccionesFormulario;
		$this->tiposPaginacion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposPaginacion;
		$this->tiposColumnasSelect=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposColumnasSelect;
		$this->tiposRelaciones=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposRelaciones;		
		$this->tiposRelacionesFormulario=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->tiposRelacionesFormulario;		
		$this->strTipoReporte<%=strDefault%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strTipoReporte<%=strDefault%>;		
		$this->bitConAltoMaximoTabla=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitConAltoMaximoTabla;
		$this->bitGenerarTodos=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitGenerarTodos;		
		//$this->intNumeroRegistros=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->intNumeroRegistros;
		
		$this->bitPostAccionNuevo=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitPostAccionNuevo;
		$this->bitPostAccionSinCerrar=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitPostAccionSinCerrar;
		$this->bitPostAccionSinMensaje=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitPostAccionSinMensaje;
		
		$this->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->bitEsnuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
		
		$this->strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoMostrarTodos<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoMostrarTodos<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strPermisoPopup<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strPermisoPopup<%=GetNombreClase(TablaBase.ToString())%>;
		
		$this->strVisibilidadCeldaNuevo<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strVisibilidadCeldaNuevo<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strVisibilidadCeldaActualizar<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strVisibilidadCeldaActualizar<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strVisibilidadCeldaEliminar<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strVisibilidadCeldaEliminar<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strVisibilidadCeldaCancelar<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strVisibilidadCeldaCancelar<%=GetNombreClase(TablaBase.ToString())%>;		
		$this->strVisibilidadCeldaGuardar<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strVisibilidadCeldaGuardar<%=GetNombreClase(TablaBase.ToString())%>;
		
		$this->strAuxiliarUrlPagina=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarUrlPagina;	
		$this->strAuxiliarTipo=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarTipo;	
		//$this->strAuxiliarMensaje=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarMensaje;	
		$this->strAuxiliarMensaje='';
		$this->strAuxiliarMensajeAlert='';
		$this->strAuxiliarCssMensaje=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarCssMensaje;
	
		$this->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarHtmlReturn1<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarHtmlReturn2<%=GetNombreClase(TablaBase.ToString())%>;
		$this->strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->strAuxiliarHtmlReturn3<%=GetNombreClase(TablaBase.ToString())%>;
		
		/*SESSION*/
		$this->usuarioActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->usuarioActual;	
		$this->parametroGeneralUsuarioActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->parametroGeneralUsuarioActual;	
		$this->parametroGeneralSgActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->parametroGeneralSgActual;	
		$this->resumenUsuarioActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->resumenUsuarioActual;	
		$this->moduloActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->moduloActual;	
		$this->opcionActual=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%><%=strPrefijoJSFSessionFaces%>->opcionActual;	
		/*SESSION*/
		
		
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=unserialize($this->Session->read(<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$STRSESSIONNAME));
				
		if($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		}
		
		$this->strStyleDivArbol=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivArbol;	
		$this->strStyleDivContent=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivContent;
		$this->strStyleDivOpcionesBanner=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivOpcionesBanner;
		$this->strStyleDivExpandirColapsar=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivExpandirColapsar;	
		$this->strStyleDivHeader=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivHeader;	
		$this->strPermiteRecargarInformacion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strPermiteRecargarInformacion;
				
		
		//CON ESTO NO FUNCIONA RECARGA
		/*
		$this->strRecargarFkTipos=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strRecargarFkTipos;
		$this->strRecargarFkTiposNinguno=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strRecargarFkTiposNinguno;
		$this->intRecargarFkIdPadre=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->intRecargarFkIdPadre;
		$this->strRecargarFkColumna=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strRecargarFkColumna;
		$this->strRecargarFkQuery=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strRecargarFkQuery;
		*/
		
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
		<%= GetValueParameterSessionMensajeClase(TablaBase.Columns[i]) %>
		<% } %>
			
		<%=GuardarVariablesSessionArrayForeignKeys()%>
		
		<%=GetActualizarSessionindicesVariablesVisibilidadTablasClases()%>
		
		<%=GetActualizarSessionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase)%>
		
		<%=GetGuardarDesdeSessionindicesVariablesTablasClases()%>
		
		<%=GetActualizarSessionSeguridadCampoVariablesClase(TablaBase)%>
		
		//ACTUALIZA CON PARAMETROS ACTUALES
		$this->cargarParametrosPostAccion();
		
		$this->cargarParametrosReporte();
		//ACTUALIZA CON PARAMETROS ACTUALES
	}
	
	public function actualizarDesdeSessionDivStyleVariables<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>){
		$this->strStyleDivArbol=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivArbol;	
		$this->strStyleDivContent=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivContent;
		$this->strStyleDivOpcionesBanner=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivOpcionesBanner;
		$this->strStyleDivExpandirColapsar=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivExpandirColapsar;	
		$this->strStyleDivHeader=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivHeader;	
		$this->strPermiteRecargarInformacion=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strPermiteRecargarInformacion;
		//$this->strPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>=$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strPermisoReporte;
	}
	
	public function actualizarInvitadoSessionDivStyleVariables<%=GetNombreClaseC(TablaBase.ToString())%>($<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>){
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivArbol='display:none;width:0px;height:0px;visibility:hidden';	
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivHeader='display:none';			
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivContent='width:93%;height:100%';	
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivOpcionesBanner='display:none';	
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strStyleDivExpandirColapsar='display:none';	
		$<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>->strPermisoReporte='none';	
		$this->strPermisoMostrarTodos<%=GetNombreClase(TablaBase.ToString())%>='display:none';	
	}
	
	public function manejarRetornarExcepcion<%=GetNombreClaseC(TablaBase.ToString())%>($e) {
		$this->setCargarDivSeccionesActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false,false,true,false,false,false,false,false,false,false);				
		
		$this->inicializarMensajesTipo<%=GetNombreClaseC(TablaBase.ToString())%>('EXCEPTION',$e);
		
		//SOLO SI ES NECESARIO
		//$this->saveGetSessionControllerAndPageAuxiliarTipoUrl(true);	
			
		Funciones::logShowExceptionMessages($e);
			
		$this->returnAjax<%=GetNombreClaseC(TablaBase.ToString())%>();
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(EsPathImagenDocumentoArchivoColumn(TablaBase.Columns[i])){%>
    <%= GetFuncionDescargarArchivo(TablaBase.Columns[i]) %>
	<% break;} } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(EsPathImagenDocumentoArchivoColumn(TablaBase.Columns[i])){%>
    <%= GetFuncionesGuardarArchivo(TablaBase.Columns[i]) %>
	<% } } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(EsPathImagenDocumentoArchivoColumn(TablaBase.Columns[i])){%>
    <%= GetFuncionesSeleccionarActualArchivo(TablaBase.Columns[i]) %>
	<% } } %>	
}
?>