<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="ConFaces" Type="System.Boolean" Default="false" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="ConRichFaces" Type="System.Boolean" Default="false" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="JQueryUIVersion" Type="System.String" Default="1.8.16" Category="1.1 PHP VERSION" Description="5.2.17,5.3" %>


<script runat="template">
public  string GetFuncionesBusquedaOnCompleteFromForeignKeysColumnsBusqueda() {	
	//SOLAMENTE SI EXISTE BUSQUEDA EN ALGUN FK COLUMNA
	String strCombosBusqueda="";	
	TableSchema tableSchemaForeignKey;
	
	foreach(ColumnSchema column in TablaBase.Columns) {	
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow)) {
				continue;
		}
		
		if(column.IsForeignKeyMember && GetBusquedaForeignKeyColumnFromPropertiesC(column)) {																			
			tableSchemaForeignKey=GetNombreTablaRelacionadaFromColumn(column);
			
			strCombosBusqueda+=""+"this.buscarFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+"sOnComplete=function() {";
			strCombosBusqueda+="\r\n\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.procesarFinalizacionProceso"+GetNombreClaseC(TablaBase.ToString())+"();";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Busqueda\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaNavegacion\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaDatos\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Paginacion\").style.display=\"none\";";			
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"CabeceraBusquedas\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Busquedas\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trRecargarInformacion"+GetNombreClaseC(TablaBase.ToString())+"\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"TablaDatos\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Paginacion\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"ElementosFormulario\").style.display=\"table-row\";";
			
			//strCombosBusqueda+="\r\n\t"+"Richfaces.showModalPanel('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"',{width:"+GetAnchoAuxiliarTableFromPropertiesC(TablaBase)+", top:"+GetTopAuxiliarTableFromPropertiesC(TablaBase)+"});";
			strCombosBusqueda+="\r\n};\r\n\r\n";
			
			
			strCombosBusqueda+=""+"this.abrirBusquedaFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+"sOnClick=function() {";
			//strCombosBusqueda+="\r\n\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.procesarFinalizacionProceso"+GetNombreClaseC(TablaBase.ToString())+"();";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Busqueda\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaNavegacion\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaDatos\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Paginacion\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"CabeceraBusquedas\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Busquedas\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trRecargarInformacion"+GetNombreClaseC(TablaBase.ToString())+"\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"TablaDatos\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Paginacion\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"ElementosFormulario\").style.display=\"none\";";
			
			//strCombosBusqueda+="\r\n\t"+"Richfaces.hideModalPanel('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"');";
			strCombosBusqueda+="\r\n};\r\n\r\n";
			/*
			if(TablaBase.Name!=tableSchemaForeignKey.Name) {
				strCombosBusqueda+="\r\n\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Constante.strRelativePath=\""+GetRelativePathC(TablaBase)+"\";";
			}	
			*/
		}				
	}
		
	return strCombosBusqueda;
}

//ESTO PASO A JQUERYPAGINA
public string GetFuncionesConfigurarFormIFrameArchivoV0(ColumnSchema columnSchema) {
	string strVariables="";
	//NO APLICADO POR EL MOMENTO
	//if(!blnConJQueryCode) {
		strVariables+="\r\n\t//if(document.getElementById('frmArchivo"+columnSchema.Name+"IndexForm')!=null) {";
		strVariables+="\r\n\t//document.getElementById('frmArchivo"+columnSchema.Name+"IndexForm').onsubmit=function() {";
		strVariables+="\r\n\t\t//document.getElementById('frmArchivo"+columnSchema.Name+"IndexForm').target = 'iframeArchivo"+columnSchema.Name+"';";
		strVariables+="\r\n\t\t//document.getElementById(\"iframeArchivo"+columnSchema.Name+"\").onload = finalizarArchivo"+columnSchema.Name +";";
		strVariables+="\r\n\t\t//"+GetNombreClaseObjetoC(columnSchema.Table.ToString())+"FuncionGeneral.seleccionar"+GetNombreClaseC(columnSchema.Table.ToString())+"OnClick();";
		//strVariables+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.cancelarActualArchivo"+columnSchema.Name+"();";	
		strVariables+="\r\n\t//}";
		strVariables+="\r\n\t//}";
		//alert("documento guardao");
	//}
	return strVariables;
}

public string GetFuncionesFinalizarUploadArchivo(ColumnSchema columnSchema) {
	string strVariables="";
	
	//strVariables="\r\n\tfunction guardarArchivo"+columnSchema.Name+"() {";
	//strVariables+="\r\n\t}";
	strVariables="\r\nfunction finalizarArchivo"+columnSchema.Name +"() {";
	strVariables+="\r\n\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"none\";";
	strVariables+="\r\n\t"+GetNombreClaseObjetoC(columnSchema.Table.ToString())+"FuncionGeneral.seleccionar"+GetNombreClaseC(columnSchema.Table.ToString())+"OnComplete();";
	strVariables+="\r\n\talert(\"Archivo "+columnSchema.Name +" Guardado\");";
	strVariables+="\r\n}";
	
	strVariables+="\r\n\r\nfunction seleccionarActualArchivo"+columnSchema.Name +"() {";
	strVariables+="\r\n\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"table-row\";";
	strVariables+="\r\n}";
	
	strVariables+="\r\n\r\nfunction cancelarActualArchivo"+columnSchema.Name +"() {";
	strVariables+="\r\n\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"none\";";
	//strVariables+="\r\n\tthis.resaltarRestaurarDivMantenimiento(true);";
	strVariables+="\r\n}";
	
	return strVariables;
}

public string GetFuncionesSeleccionarCancelarUploadArchivo(ColumnSchema columnSchema) {
	string strVariables="";
	
	//strVariables="\r\n\tfunction guardarArchivo"+columnSchema.Name+"() {";
	//strVariables+="\r\n\t}";
	/*
	strVariables="\r\nfunction finalizarArchivo"+columnSchema.Name +"() {";
	strVariables+="\r\n\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"none\";";
	strVariables+="\r\n\talert(\"Archivo "+columnSchema.Name +" Guardado\");";
	strVariables+="\r\n}";
	*/
	
	strVariables+="\r\n\r\n\tthis.seleccionarActualArchivo"+columnSchema.Name +"=function() {";
	strVariables+="\r\n\t\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"table-row\";";
	strVariables+="\r\n\t}";
	
	strVariables+="\r\n\r\n\tthis.cancelarActualArchivo"+columnSchema.Name +"=function() {";
	strVariables+="\r\n\t\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"none\";";
	strVariables+="\r\n\t\tthis.resaltarRestaurarDivMantenimiento(false);";
	strVariables+="\r\n\t}";
	
	strVariables+="\r\n\r\n\tthis.onLoadIFrameActualArchivo"+columnSchema.Name +"=function() {";
	strVariables+="\r\n\t\tif(document.getElementById('trArchivo"+columnSchema.Name+"').style.display!=\"none\") {";
	strVariables+="\r\n\t\t\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"none\";";
	strVariables+="\r\n\t\t\tthis.resaltarRestaurarDivMantenimiento(false);";
	strVariables+="\r\n\t\t\talert(\"Archivo cargado correctamente, necesita recargar los datos\");";
	strVariables+="\r\n\t\t}";
	strVariables+="\r\n\t}";
	
	return strVariables;
}

public string GetSetFuncionBusquedaControlesVariables(TableSchema tablaBase,ColumnSchema columnSchema) {
	string strVariables="";
	
	strVariables+="\r\n\r\n\tthis.setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(columnSchema)+"=function("+GetNombreColumnaClaseJavaScriptC(columnSchema)+") {";
	strVariables+="\r\n\t\tdocument.getElementById(\""+GetNombreColumnFromProperties(columnSchema)+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
	
	ArrayList arrCombosNamesFkBusquedas=GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		strVariables+="\r\n\t\t}";
	
	}
	
	strVariables+="\r\n\r\n\t};";
	/*	
	strVariables+="\r\n\r\n\tthis.seleccionarActualArchivo"+columnSchema.Name +"=function() {";
	strVariables+="\r\n\t\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"table-row\";";
	strVariables+="\r\n\t}";
	
	strVariables+="\r\n\r\n\tthis.cancelarActualArchivo"+columnSchema.Name +"=function() {";
	strVariables+="\r\n\t\tdocument.getElementById('trArchivo"+columnSchema.Name+"').style.display=\"none\";";
	strVariables+="\r\n\t}";
	*/
	
	return strVariables;
}

public String GetWidthPopup() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			if(!blnEsMaximoTamanioPopup) {
				strTablaClaseRelacionada="window.screen.width*0.75";
			} else {
				strTablaClaseRelacionada="window.screen.width*0.75";
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetHeightPopup() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			if(!blnEsMaximoTamanioPopup) {
				strTablaClaseRelacionada="window.screen.height*0.75";
			} else {
				strTablaClaseRelacionada="window.screen.height*0.75";
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetValidacionControlVariables(ColumnSchema column)
{	
	String strInitFuncion="\r\n\r\nthis.validar"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(column)+"=function() {\r\n\tvar bitValidado=true;";
	String strEndFuncion="\r\n\treturn bitValidado;\r\n};";
	String strValidacionControl="";
	String strControl="";
	String strMensaje="";
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
	{
			return string.Empty;
	}
	else if(column.Name.Equals(strId)||column.DataType==DbType.Boolean||column.DataType==DbType.Binary)
	{
			return string.Empty;
			
	}
	else
	{
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
				strControl+="\r\n\r\n\tvar str"+column.Name+"="+GetFunctionValidationControlHtml(column).Replace("this","jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue()")+ ";";
				strMensaje="\r\n\t\talert(constantes.STRMENSAJEVALIDACIONCAMPO+'"+ GetNombreColumnFromProperties(column)+"',str"+column.Name+");";	
				strControl+="\r\n\r\n\tif(str"+column.Name+"!=\"\") {\t"+strMensaje+"\r\n\t\ttbitValidado= false;\r\n\t}\r\n";
			}
			else
			{
				strControl+="\r\n\r\n\tvar str"+column.Name+"="+GetFunctionValidationControlHtml(column).Replace("this","document.frmMantenimiento"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtml(column))+";";
				strMensaje="\r\n\t\talert(constantes.STRMENSAJEVALIDACIONCAMPO+'"+GetNombreColumnFromProperties(column)+"',str"+column.Name+",document.frmMantenimiento"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtml(column)+");";	
				strControl+="\r\n\r\n\tif(str"+column.Name+"!=\"\") {\t"+strMensaje+"\r\n\t\tbitValidado= false;\r\n\t}\r\n";
									
			}
		}
		else
		{
				strControl+="\r\n\tvar str"+column.Name+"=funcionGeneral.validarCombo("+GetNombreClaseObjeto(TablaBase.ToString())+"Servicio.arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
				strMensaje="\r\n\talert(constantes.STRMENSAJEVALIDACIONCAMPO+'"+ GetNombreClaseRelacionadaFromColumn(column)+"',str"+column.Name+");";	
				strControl+="\r\n\r\n\t\tif(str"+column.Name+"!=\"\") {\r\n\t\t\tbitValidado= false;\r\n\t\t}\r\n";	
	
		}
	
	}
	
	
	strValidacionControl=strInitFuncion+strControl+strEndFuncion;
	
	return strValidacionControl;
}

public  string SetDocumentVariablesHabilitarDeshabilitar()
{
String strSet="";
String strSetHabilitar="";
String strBody="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||column.Name==strVersionRow||column.DataType==DbType.Binary)
	{
	continue;
	}
	
	
	if(!column.IsForeignKeyMember)	
	{		
		if(column.DataType==DbType.Boolean)
		{
		//strSet+="\r\n\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=false;";
			strSet+="\r\n\t\tfuncionGeneral.setDisabledControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",true);";
			
			
			if(!GetNoEditColumnFromPropertiesC(column))
			{
				strSetHabilitar+="\r\n\t\tfuncionGeneral.setDisabledControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",false);";
			}
			else
			{
				strSetHabilitar+="\r\n\t\tfuncionGeneral.setDisabledControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",true);";
			}
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		//strSet+="\r\n\tjmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.datePicker.setDate(new Date());";		
		}
		else
		{
			
				strSet+="\r\n\t\tfuncionGeneral.setReadOnlyControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",true);";
			
			
			if(!GetNoEditColumnFromPropertiesC(column))
			{
				strSetHabilitar+="\r\n\t\tfuncionGeneral.setReadOnlyControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",false);";
			}
			else
			{
				strSetHabilitar+="\r\n\t\tfuncionGeneral.setReadOnlyControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",true);";
			}
			
		}
	}
	else
	{
	//strSet+="\r\n\tjmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.setValue(\"\");";	
	}
}

	strBody="\tif(bitEsHabilitar==true) {"+strSetHabilitar+"\r\n\t} else {"+strSet+"\r\n\t}";
	
	return strBody;
}

public String GetFuncionesTraerDescripcionClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerDescripcionClasesRelacionadasForeigKeys(GetTablaFromNombre(GetNombreClaseRelacionadaFromColumn(columnSchema)),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionTraerDescripcionClasesRelacionadasForeigKeys(TableSchema tableSchema,ColumnSchema column) 
{
String strTraerFuncionTablaClaseRelacionada=string.Empty;

strTraerFuncionTablaClaseRelacionada="function traer"+GetNombreClase(tableSchema.ToString())+"Descripcion(item)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="{\r\nvar description=\"\";\r\n";
  
	
	 for (int i = 0; i < tableSchema.Columns.Count; i++){ 
			strTraerFuncionTablaClaseRelacionada+=" "+GetVariablesFromXml(tableSchema.Columns[i],false,false,false); 	
 		 } 	
		
strTraerFuncionTablaClaseRelacionada+="\r\n description=id;	\r\n";

strTraerFuncionTablaClaseRelacionada+="\r\nreturn description;\r\n}\r\n\r\n";

return strTraerFuncionTablaClaseRelacionada;
}

public  string DefinirVariablesArray()
{
	String strVariablesArray="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="var arrData"+GetNombreClaseRelacionadaFromColumn(column)+"= [];\r\n";
		}	
	}
	return strVariablesArray;
}

public String GetMensajeFunctionValidationControlHtml() 
{
String strCodigo=string.Empty;
String strRetorno=string.Empty;

	foreach(ColumnSchema column in TablaBase.Columns)
	{
			if(column.AllowDBNull)
			{
				strRetorno="bitRetorno= true;";
			}
			else
			{
				strRetorno="bitRetorno= false;";
			}
			
			if(column.DataType==DbType.Boolean|| column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow)||column.DataType==DbType.Binary)
			{
			strCodigo+=string.Empty;
			continue;
			}
			if(!column.IsForeignKeyMember)	
			{
				if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
				{
				strCodigo+="\r\n\t\tif(this.validar"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(column)+"()==false) {\r\n\t\t\tbitRetorno= false;\r\n\t\t}\r\n";
				}
				else
				{
				strCodigo+="\r\n\t\tif(this.validar"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(column)+"()==false) {\r\n\t\t\tbitRetorno= false;\r\n\t\t}\r\n";
				}
				
			}
			else
			{	
				strCodigo+="\r\n\t\tif("+GetNombreClaseObjeto(TablaBase.ToString())+"FuncionGeneral.bit"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"PermitirMantenimiento==true) {";				
				strCodigo+="\r\n\t\t\tif(this.validar"+GetNombreClase(TablaBase.ToString())+GetNombreColumnaClaseC(column)+"()==false)\r\n\t\t\t{\r\n\t\t\t\t"+ strRetorno +";\r\n\t\t\t}";	
				strCodigo+="\r\n\t\t}";
			}
	}						
			return strCodigo; 
}
		
public String GetFuncionesTraerClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerClasesRelacionadasForeigKeys(GetTablaFromNombre(GetNombreClaseRelacionadaFromColumn(columnSchema)),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetFuncionTraerClasesRelacionadasForeigKeys(TableSchema tableSchema,ColumnSchema column) 
{
String strTraerFuncionTablaClaseRelacionada=string.Empty;

strTraerFuncionTablaClaseRelacionada="function traer"+GetNombreClase(tableSchema.ToString())+"s("+GetNombreClaseObjeto(tableSchema.ToString())+"XML)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="{\r\n";

strTraerFuncionTablaClaseRelacionada+="var "+GetNombreClaseObjeto(tableSchema.ToString())+" = "+GetNombreClaseObjeto(tableSchema.ToString())+"XML.getElementsByTagName(\""+GetNombreClaseObjeto(tableSchema.ToString())+"\")[0];\r\n";
strTraerFuncionTablaClaseRelacionada+="var generated ="+ GetNombreClaseObjeto(tableSchema.ToString())+".getAttribute(\"generated\");\r\n";

   
strTraerFuncionTablaClaseRelacionada+="   var items ="+ GetNombreClaseObjeto(tableSchema.ToString())+".getElementsByTagName(\"item\");\r\n";
strTraerFuncionTablaClaseRelacionada+="   var arrData = [];\r\n";

strTraerFuncionTablaClaseRelacionada+="   for (var I = 0 ; I < items.length ; I++)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="   {\r\n";
strTraerFuncionTablaClaseRelacionada+="	 var item = items[I];\r\n";
	
	 for (int i = 0; i < tableSchema.Columns.Count; i++){ 
			strTraerFuncionTablaClaseRelacionada+=" "+GetVariablesFromXml(tableSchema.Columns[i],false,false,false); 	
 		 } 	
		
strTraerFuncionTablaClaseRelacionada+="	arrData.push([traer"+GetNombreClase(tableSchema.ToString())+"Descripcion(item) , id]);\r\n";
strTraerFuncionTablaClaseRelacionada+="	}\r\n";

strTraerFuncionTablaClaseRelacionada+="	arrData"+GetNombreClaseRelacionadaFromColumn(column)+"=arrData;\r\n";

strTraerFuncionTablaClaseRelacionada+="	jmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.dataProvider.setData(arrData);\r\n";
strTraerFuncionTablaClaseRelacionada+=SetDataToCombosBusquedasIndiceTabla(column); 
strTraerFuncionTablaClaseRelacionada+="\r\n}\r\n\r\n";

return strTraerFuncionTablaClaseRelacionada;
}

public TableSchema GetTablaFromNombre(String strTableNombre) 
		{
			TableSchema tableSchemaEncontrada=TablaBase;
			
			tableSchemaEncontrada=GetTablaFromNombreC(strTableNombre,TablaBase);
			
			return tableSchemaEncontrada;
		}
			
public String GetFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String InitFuncion="function cargar";							
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=InitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()\r\n{\r\n";
					strTablaClaseRelacionada+="var req = newXMLHttpRequest();\r\n";
					strTablaClaseRelacionada+="req.onreadystatechange = getReadyStateHandler(req, traer"+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"s);\r\n";
					strTablaClaseRelacionada+="req.open(\"POST\", \""+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"Servlet\", true);\r\n";
					strTablaClaseRelacionada+="req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n";
					strTablaClaseRelacionada+="req.send(\"accionBusqueda=Todos\");\r\n}\r\n\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetCallFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="cargar"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "();\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String ValoresMinimoMaximoPaginacion() 
{
			String strPAginacion="";
			strPAginacion="+\"&inicio=\"+numero"+GetNombreClase(TablaBase.ToString())+"sPaginacionPagina+\"&fin=\"+numero"+GetNombreClase(TablaBase.ToString())+"sPaginacion";
			return strPAginacion;
}

public String GetSendBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\nelse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			strXmlFuncion="\r\n\t\treq.send(\"accionBusqueda=";
							
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strXmlFuncion="\r\n\t\treq.send(\"accionBusqueda=";
					strXmlFuncion+=indexSchema.Name+"&";
					
					if(indexSchema.IsUnique)
					{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\telse if(strAccionBusqueda==\""+indexSchema.Name+"\")\r\n\t\t{\r\n\t\tif(!ValidarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"())\r\n\t\t{\r\n\t\treturn;\r\n\t\t}";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(finalQueryPaginacion,";
						strIfFuncion="\r\n\t\telse if(strAccionBusqueda==\""+indexSchema.Name+"\")\r\n\t\t{\r\n\t\tif(!ValidarFormulario"+indexSchema.Name+"())\r\n\t\t{\r\n\t\treturn;\r\n\t\t}";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\telse if(strAccionBusqueda==\""+indexSchema.Name+"\")\r\n\t\t{\r\n\t\tif(!ValidarFormulario"+indexSchema.Name+"())\r\n\t\t{\r\n\t\treturn;\r\n\t\t}";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
																				
							strDefinicionVariables+="\r\n\t\t"+SetDocumentToVariablesBusqueda(memberColumnSchema.Column,indexSchema.Name);
							strUsoVariables+=SetDocumentToVariablesQueryString(memberColumnSchema.Column);
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
							strUsoVariables+="+\"&";	
							}
							count++;
							}
							strXmlFuncion+=strUsoVariables+ValoresMinimoMaximoPaginacion()+");\r\n";
							
							strXmlFuncion+="parametrosBusqueda"+GetNombreClase(TablaBase.ToString())+"=\"&"+strUsoVariables+";\r\n";
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strXmlFuncion+"\r\n\t\t}\r\n";																																		
					
				}
			}								
			return  strInitFuncion;
		}
		
public String SetDataToCombosBusquedasIndiceTabla(ColumnSchema column) 
	{
			String	strDataToCombos="";		
						
			strDataToCombos=SetDataToCombosBusquedasIndiceTablaC(column,TablaBase);		
						
			return strDataToCombos;	
			
	}

public String GetFuncionesValidarFormularioBusquedasIndiceTabla() 
	{
			String	strValidarFormularios="";		
			
			String	strRetorno="";				
			
			strRetorno="bitRetorno= false;";
			
						
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
				strValidarFormularios+="\r\n\r\nthis.validarFormulario"+GetNombreClase(TablaBase.ToString())+ indexSchema.Name +"=function() {\r\n\tvar bitRetorno =true;\r\n";
				
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								if(!memberColumnSchema.IsForeignKeyMember)	
								{
									if(memberColumnSchema.DataType==DbType.Date||memberColumnSchema.DataType==DbType.DateTime)
									{
										strValidarFormularios+="\r\n\tvar str"+memberColumnSchema.Name+"="+GetFunctionValidationControlHtml(memberColumnSchema).Replace("this","jmaki.attributes.get('"+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name) +"').getValue()")+ ";";
										strValidarFormularios+="\r\n\r\n\tif(str"+memberColumnSchema.Name+"!=\"\") {";
										strValidarFormularios+="\r\n\t\talert(constantes.STRMENSAJEVALIDACIONCAMPO+'"+ GetNombreColumnFromProperties(memberColumnSchema.Column)+"',str"+memberColumnSchema.Name+");";											
										strValidarFormularios+="\r\n\t\tbitRetorno= false;\r\n\t}";
										}
									else
									{
										strValidarFormularios+="\r\n\tvar str"+memberColumnSchema.Name+"="+GetFunctionValidationControlHtml(memberColumnSchema).Replace("this","document.frmBusqueda"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name))+";";
										strValidarFormularios+="\r\n\r\n\tif(str"+memberColumnSchema.Name+"!=\"\") {";
										strValidarFormularios+="\r\n\t\talert(constantes.STRMENSAJEVALIDACIONCAMPO+'"+ GetNombreColumnFromProperties(memberColumnSchema.Column)+"',str"+memberColumnSchema.Name+",document.frmBusqueda"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name)+");";								
										strValidarFormularios+="\r\n\t\tbitRetorno= false;\r\n\t}";
										}									
								}
								else
								{
									
									strValidarFormularios+="\r\n\tvar str"+memberColumnSchema.Name+"=funcionGeneral.validarCombo("+GetNombreClaseObjeto(TablaBase.ToString())+"Servicio.arrData"+GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+",jmaki.attributes.get('"+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name) +"').getValue());";		
									strValidarFormularios+="\r\n\r\n\tif(str"+memberColumnSchema.Name+"!=\"\") {";
									strValidarFormularios+="\r\n\t\talert(constantes.STRMENSAJEVALIDACIONCAMPO+'"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+"',str"+memberColumnSchema.Name+");";									
									strValidarFormularios+="\r\n\t\t"+ strRetorno +";\r\n\t}";	
									}
							}
					strValidarFormularios+="\r\n\r\n\treturn bitRetorno;\r\n};";
				}
				
				
			}								
			return  strValidarFormularios;
	}

public string SetDocumentToVariablesQueryStringBusquedaIndice(ColumnSchema column,String strIndice)
{
	
	return GetNameControlHtmlBusqueda(column,strIndice)+ "=\"+"+GetNombreColumnaClaseMinusculaC(column);
}

public string SetDocumentToVariablesQueryString(ColumnSchema column)
{
	
	return GetNameControlHtml(column)+ "=\"+"+GetNombreColumnaClaseMinusculaC(column);
}

public string SetDocumentToVariables(ColumnSchema column)
{
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
	}
	else
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
	}
	
	return strSet;
}

public string SetDocumentToVariablesBusqueda(ColumnSchema column,String strIndexName)
{
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmBusqueda."+GetNameControlHtmlBusqueda(column,strIndexName) +".checked;";
	}
	else
	{
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
			strSet="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtmlBusqueda(column,strIndexName)+"').wrapper.datePicker.getValue();"; 
		
			}
			else
			{
			strSet="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmBusqueda."+GetNameControlHtmlBusqueda(column,strIndexName) +".value;";
		
			}
		}
		else
		{
			strSet="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=getIdCombo(arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtmlBusqueda(column,strIndexName)+"').wrapper.getValue());"; 
		}
	}
	
	return strSet;
}

public static string VariablesBusquedaPreguntarVacio(ColumnSchema column)
{
	String strSet="";
	
	strSet= "document.frmBusqueda."+GetNameControlHtml(column) +".value=\"\"";
	
	return strSet;
}

public  string SetDocumentVariablesActual()
{
	String strSet="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.Name==strIsActive||column.Name==strIsExpired||column.DataType==DbType.Binary)
		{
		strSet+="";
		continue;
		}
		
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Boolean)
			{
			strSet+="\r\n\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=row"+GetNombreClase(TablaBase.ToString())+"."+ GetNombreColumnaClaseMinusculaC(column)+";";
			}
			else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
			strSet+="\r\n\tjmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.datePicker.setDate(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseMinusculaC(column)+");"; 
			}
			else
			{
				if(!column.IsPrimaryKeyMember)
				{
					strSet+="\r\n\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseMinusculaC(column)+";";
				}
				else
				{
					strSet+="\r\n\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=row"+GetNombreClase(TablaBase.ToString())+".id"+";";
				}
			}
		}
		else
		{
			strSet+="\r\n\tjmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.setValue(CambiarNullAVacio(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseMinusculaC(column)+"Descripcion));"; 
		}	
	}
	
	return strSet;
}

public  string SetDocumentVariablesCancelar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.DataType==DbType.Binary)
	{
	continue;
	}
	
	
	if(!column.IsForeignKeyMember)	
	{		
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\n\t\t funcionGeneral.setCheckControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +",false);";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\n\t\tjmaki.attributes.get('"+GetNameControlHtml(column) +"').setValue(new Date());";		
		}
		else
		{
		strSet+="\r\n\t\tfuncionGeneral.setEmptyControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +");";
		}
	}
	else
	{
		if(!EsClaseRelacionadaUnoAUnoFromColumnC(column))
		{
			strSet+="\r\n\t\tjmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.setValue(\"\");";	
		}
		else
		{
			strSet+="\r\n\t\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=\"\"";
		}
	}
}	
	return strSet;
}

public string SetDocumentToVariablesEliminar()
{
	String strVariable= "";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
		{
		strVariable+="";
		continue;
		}
		else if(column.Name==strId)
		{
		strVariable+=strVariable="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	return strVariable;
}

public string SetDocumentToVariablesNuevo()
{
String strSet="";
foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strId||column.Name==strIsExpired||column.Name==strVersionRow||column.DataType==DbType.Binary)
	{
	strSet+="";
	continue;
	}
	if(!column.IsForeignKeyMember)	
	{	
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\n\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\n\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
		}
		else
		{
		strSet+="\r\n\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	else
	{
	strSet+="\r\n\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseMinusculaC(column)+ "=getIdCombo(arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
	}
}	
	return strSet;
}

public  string SetVariablesToQueryGuardar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||(column.DataType==DbType.Binary&&column.Name!=strVersionRow))
	{
	strSet+="";
	continue;
	}
	
	strSet+="\r\n\t\t\tquery"+GetNombreClase(TablaBase.ToString())+"=query"+GetNombreClase(TablaBase.ToString())+"+";
	
	if(!column.IsForeignKeyMember)	
	{
		if(column.DataType==DbType.Boolean)
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+ "+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";		
		}
		else
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";
		}
	}
	else
	{
		strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";		
	}
}	
	return strSet;
}

public  string SetDocumentToVariablesActualizar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||column.Name==strVersionRow||column.DataType==DbType.Binary)
	{
	strSet+="";
	continue;
	}
	
	if(!column.IsForeignKeyMember)	
	{
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\n\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "!=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked)\r\n\t{";	
		strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
		strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged='true';\r\n\t}\r\n\t";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\n\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "!=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue())\r\n\t{\r\n\t";		
		strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
		strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged='true';\r\n\t}";
		}
		else
		{
		strSet+="\r\n\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "!=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value)\r\n\t{";
		strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged='true';\r\n\t}\r\n\t";
		}
	}
	else
	{
	strSet+="\r\n\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "!=getIdCombo(arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue()))\r\n\t{";		
	strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseMinusculaC(column)+ "=getIdCombo(arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
	strSet+="\r\n\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged='true';\r\n\t}\r\n\t";
	}
}	
	return strSet;
}

public string SetVariablesToDocument(ColumnSchema column)
{
	
if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	return "";
	}
	
	
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +").checked="+ GetNombreColumnaClaseMinusculaC(column);
	}
	else
	{
	strSet="document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +").value="+ GetNombreColumnaClaseMinusculaC(column);
	}
	
	return strSet;
}

public string GetNombreColumnaClaseMinusculasFiltrados(ColumnSchema column)
{
	String strColumna="";
	
if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	return "";
	}
	
	if(column.Name==strId)
	{
	strColumna=GetNombreColumnaClaseMinusculaC(column)+":idNuevo"+GetNombreClase(TablaBase.ToString());
	}
	else
	{
	strColumna=GetNombreColumnaClaseMinusculaC(column)+":'null'";
	}
	
	return strColumna;
}

public static string GetNombreColumnaClaseMinusculaFiltrados(ColumnSchema column,bool conVersionRow)
{
	
	if(!conVersionRow)
	{
		if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
		{
		return "";
		}
	}
	else
	{
		if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired)
		{
		return "";
		}
	}
	return GetNombreColumnaClaseMinusculaC(column);
}

public static string SetVariablesToQueryStringNuevo(ColumnSchema column)
	{
		String strNombre;
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	return "";
	}
	
		
	strNombre="\"&"+GetNameControlHtml(column) +"=\"+" +column.Name.Substring(0, column.Name.Length).ToLower();	
		
	return strNombre;
	}
	
public static string SetVariablesToQueryStringActualizar(ColumnSchema column)
	{
		String strNombre;
	
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	return "";
	}
	
		
	strNombre="\"&"+GetNameControlHtml(column) +"=\"+" +column.Name.Substring(0, column.Name.Length).ToLower();	
		
	return strNombre;
	}
	
public static string GetVariablesFromXml(ColumnSchema column,bool conVersionRow,bool reemplazarForeigKey,bool reemplazarBooleanValue)
	{
		String strNombre= "";
		strNombre = GetVariablesFromXmlC(column,reemplazarForeigKey,reemplazarBooleanValue);
	return strNombre;
	}

public String GetIndicesTablasClasesDeepSave() 
		{
			String strInit="\r\n this.Save("+GetNombreClaseObjeto(TablaBase.ToString())+");\r\n";
						
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada2="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+"deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
			}
			//strTablaClaseRelacionada2+="\r\n}\r\n";					
			//return strTablaClaseRelacionada; 
			
			
			
			String strTablaClaseRelacionada3=string.Empty;
			System.Collections.Hashtable tablasRelacionadas3=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada3="\r\nfor(Class clas:clases)\r\n{\r\nif(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strTablaClaseRelacionada3+="\r\nif(clas.getName().equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n{\r\n";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+",deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada3+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
				strTablaClaseRelacionada3+="\r\n}\r\n";
			}
			strTablaClaseRelacionada3+="\r\n}\r\n}\r\n";
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="TraerTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada0+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada0+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada0+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada0+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");"+"\r\n}\r\n";
				
				}
			}
			
			
			
			strIfFuncion=strInit+strInitIfFuncion+strTablaClaseRelacionada0+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
			return strIfFuncion; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada2="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
			}
			//strTablaClaseRelacionada2+="\r\n}\r\n";					
			//return strTablaClaseRelacionada; 
			
			
			
			String strTablaClaseRelacionada3=string.Empty;
			System.Collections.Hashtable tablasRelacionadas3=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada3="\r\nfor(Class clas:clases)\r\n{\r\nif(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strTablaClaseRelacionada3+="\r\nif(clas.getName().equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n{\r\n";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+",deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada3+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
				strTablaClaseRelacionada3+="\r\n}\r\n";
			}
			strTablaClaseRelacionada3+="\r\n}\r\n}\r\n";
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="setTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\r\n}\r\n"+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			return strIfFuncion; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo) 
		{
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\nParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\nparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\nqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="public "+GetNombreClaseC(TablaBase.ToString())+" "+"Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"=new "+GetNombreClaseC(TablaBase.ToString())+"();\r\ntry\r\n{";
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\nreturn "+GetNombreClaseObjetoC(TablaBase.ToString())+";\r\n}\r\n";
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strInitFuncion+="public "+"ArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						strInitFuncion+="public "+"ArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						strBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new ArrayList<"+GetNombreClaseC(TablaBase.ToString())+">();\r\ntry\r\n{";
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strBodyFuncion+="\r\nqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n";		
						
						}
						else
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\nreturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"s;\r\n}\r\n";
				
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
					strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					
					if(!count.Equals(indexSchema.MemberColumns.Count))
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false);
					}
					else
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true);
					}
					
					if(!indexSchema.MemberColumns.Count.Equals(count))
					{
					
					strParametersFuncion+=",";
					strParametersNameFuncion+=",";	
					}
					count++;
					}
					
					strInitFuncion+=strParametersFuncion+")\r\n{"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  TraerTR_";
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public static string GetSetEntityColumna(ColumnSchema column,String table)
{				
	String strSetEntity=string.Empty;
	
	if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
	{
		return strSetEntity;
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}
</script>
<%=strJSInitialJavaScript%>

<%=GetByDanLicence()%>

/*Empresa:<%=Empresa%>
 *Programador: <%=NombreProgramador%>
 *Descripcion: Clase que contiene todos los Accesos a BDD de tabla <%=TablaBase.ToString().Split('.')[1]%>
 * Fecha Creacion: <%= DateTime.Now.ToLongDateString() %>
 **CAMBIOS***** 
 * Motivo Cambio:
 * Nombre Programador:
 * Fecha Cambio:
 **************
 */

var <%=GetNombreClase(TablaBase.ToString())%>FuncionGeneralBasico= function () {
	this.cambiarAltoMaximoTabla=function(nombreAuxiliarClase,tamanio) {	
		
		if(document.getElementById("ParametrosBusqueda-chbConAltoMaximoTabla").checked) {
			document.getElementById("divTablaDatosAuxiliar"+nombreAuxiliarClase+"AjaxWebPart").style.height="100%";
			
		} else {
			document.getElementById("divTablaDatosAuxiliar"+nombreAuxiliarClase+"AjaxWebPart").style.height=tamanio;	
		}	
	};
	
	this.seleccionarTodos=function() {	
		
		var maxima_fila=document.getElementById("t-maxima_fila").value;
		
		if(document.getElementById("ParametrosBusqueda-chbSelTodos").checked) {		
			
			for (i = 1; i <= maxima_fila; i++) {
				document.getElementById("t-id_"+i).checked=true;
			}
			
		} else {
			for (i = 1; i <= maxima_fila; i++) {
				document.getElementById("t-id_"+i).checked=false;
			}
		}
		
	};
	
	this.manejarAccion=function() {	
		var strAction="generarFpdf";
		var strActionTipo="";
		var strTipoReporte="";
		var strParametrosReporte="pdf";
		
		var strValueGenerarReporte=document.getElementById("ParametrosBusqueda-djcmbGenerarReporte").value;
		var strValueTipoReporte=document.getElementById("ParametrosBusqueda-djcmbTiposReporte").value;
		var strValueAccion=document.getElementById("ParametrosBusqueda-djcmbAcciones").value;
		
		var strFormOrderByQueryString="";
		var strFormTablaQueryString="";
		
		if(strValueAccion=="GENERAR_REPORTE") { //"GENERAR_REPORTE_FORM"
			if(strValueGenerarReporte!="HTML2") {
				var strFormTablaQueryString="";//jQuery("#frmTablaDatos<%=GetNombreClase(TablaBase.ToString())%>").serialize();
				
				if(strValueTipoReporte=="FORMULARIO") {//"GENERAR_REPORTE_FORM"
					strActionTipo="Vertical";
					
				} else if(strValueTipoReporte=="RELACIONES") {//"GENERAR_REPORTE_FORM"
					strActionTipo="Relaciones";
				}
				
				if(strValueGenerarReporte!="PDF") {
					strAction="generarReporteConPhpExcel"+strActionTipo;
					strValueGenerarReporte=strValueGenerarReporte.toLowerCase();			
				}
				
				strParametrosReporte="&action="+strAction+"&tipo_reporte="+strValueGenerarReporte;
				
				strFormQueryString="controller=<%=GetNombreClase(TablaBase.ToString())%>&modulo=<%=GetNombreModuloJsC()%>&sub_modulo="+strParametrosReporte+"&"+strFormOrderByQueryString+"&"+strFormTablaQueryString;
				
				
				if(strValueTipoReporte=="RELACIONES") {
					strFormQueryString=strFormQueryString+"&"+strFormOrderByQueryStringRel;
				}
				
				
				//OJO ES RECURSIVO 1 VEZ				
				//if(jQuery("#ParametrosBusqueda-djcmbAcciones").val() != constantes.STR_ACCIONES) {
				//	jQuery("#ParametrosBusqueda-djcmbAcciones").val(constantes.STR_ACCIONES).trigger("change");
				//}
				
				var existe=true;
					
				/*
				if(strValueTipoReporte=="RELACIONES" || strValueTipoReporte=="FORMULARIO") {
					existe=false;
					
					//REPORTE PUEDE SER MUY EXTENSO, ES OBLIGATORIO SELECCIONAR
					jQuery(".chkb_id").each(function() {
						if(jQuery(this).prop('checked')==true) {
							existe=true;
								
							return false;
						}
					});
				}
				*/
				
				if(existe==true) {
					//alert(constantes.STR_PROTOCOL+'://'+constantes.STRIPSERVIDOR+':'+constantes.STRPUERTOSERVIDOR+'/'+constantes.STRCONTEXTOAPLICACIONSERVICIO+'/'+constantes.STRCONTEXTOAPLICACIONTOCOMPLETESERVICIO+'/'+'GlobalController.php?'+strFormQueryString);
					//REPORTES CON LIBRERIA PHP (PDF,EXCEL,HTML,ETC)
					window.open(constantes.STR_PROTOCOL+'://'+constantes.STRIPSERVIDOR+':'+constantes.STRPUERTOSERVIDOR+'/'+constantes.STRCONTEXTOAPLICACIONSERVICIO+'/'+constantes.STRCONTEXTOAPLICACIONTOCOMPLETESERVICIO+'/'+'GlobalControllerBasico.php?'+strFormQueryString);																
				
				} else {
					/*
					if(jQuery("#ParametrosBusqueda-djcmbAcciones").val() != constantes.STR_ACCIONES) {
						jQuery("#ParametrosBusqueda-djcmbAcciones").val(constantes.STR_ACCIONES).trigger("change");
					}
						
					<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.resaltarRestaurarDivMensaje(true,"ERROR:DEBE SELECCIONAR AL MENOS 1 REGISTRO","ERROR");
					*/	
					
				}
				
			} else if(strValueGenerarReporte=="HTML2"){
				
				if(strValueTipoReporte!="FORMULARIO") {
					var strFormQueryString="controller=<%=GetNombreClase(TablaBase.ToString())%>&modulo=<%=GetNombreModuloJsC()%>&sub_modulo=&action=generarHtmlReporte";
					
					/*
					var strFormBusquedaQueryString=jQuery("#frmBusqueda<%=GetNombreClase(TablaBase.ToString())%>").serialize();
					var strFormTablaQueryString=jQuery("#frmTablaDatos<%=GetNombreClase(TablaBase.ToString())%>").serialize();
					
					strFormQueryString=strFormQueryString+"&"+strFormBusquedaQueryString;
					strFormQueryString=strFormQueryString+"&"+strFormTablaQueryString;
					strFormQueryString=strFormQueryString+"&"+strFormOrderByQueryString;
					*/
					
								//<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.generarHtmlReporte<%=GetNombreClase(TablaBase.ToString())%>OnClick();
					
					//OJO ES RECURSIVO 1 VEZ
					/*
					if(jQuery("#ParametrosBusqueda-djcmbAcciones").val() != constantes.STR_ACCIONES) {
						jQuery("#ParametrosBusqueda-djcmbAcciones").val(constantes.STR_ACCIONES).trigger("change");
					}
					*/
					
					window.open(constantes.STR_PROTOCOL+'://'+constantes.STRIPSERVIDOR+':'+constantes.STRPUERTOSERVIDOR+'/'+constantes.STRCONTEXTOAPLICACIONSERVICIO+'/'+constantes.STRCONTEXTOAPLICACIONTOCOMPLETESERVICIO+'/'+'GlobalControllerBasico.php?'+strFormQueryString);
					
					
				} else {//"GENERAR_REPORTE_FORM"
				
					var strFormQueryString="controller=<%=GetNombreClase(TablaBase.ToString())%>&modulo=<%=GetNombreModuloJsC()%>&sub_modulo=&action=generarHtmlFormReporte";
					
					/*
					var strFormBusquedaQueryString=jQuery("#frmBusqueda<%=GetNombreClase(TablaBase.ToString())%>").serialize();
					var strFormTablaQueryString=jQuery("#frmTablaDatos<%=GetNombreClase(TablaBase.ToString())%>").serialize();
					
					strFormQueryString=strFormQueryString+"&"+strFormBusquedaQueryString;
					strFormQueryString=strFormQueryString+"&"+strFormTablaQueryString;
					strFormQueryString=strFormQueryString+"&"+strFormOrderByQueryString;
					*/
					
					//var existe=false;
					var existe=true;
					
					//REPORTE PUEDE SER MUY EXTENSO, ES OBLIGATORIO SELECCIONAR
					/*
					jQuery(".chkb_id").each(function() {
						if(jQuery(this).prop('checked')==true) {
							existe=true;
							
							return false;
						}
					});
					*/
					
					if(existe==true) {
						
						//<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.generarHtmlReporte<%=GetNombreClase(TablaBase.ToString())%>OnClick();
						
						//OJO ES RECURSIVO 1 VEZ
						/*
						if(jQuery("#ParametrosBusqueda-djcmbAcciones").val() != constantes.STR_ACCIONES) {
							jQuery("#ParametrosBusqueda-djcmbAcciones").val(constantes.STR_ACCIONES).trigger("change");
						}
						*/
														
						window.open(constantes.STR_PROTOCOL+'://'+constantes.STRIPSERVIDOR+':'+constantes.STRPUERTOSERVIDOR+'/'+constantes.STRCONTEXTOAPLICACIONSERVICIO+'/'+constantes.STRCONTEXTOAPLICACIONTOCOMPLETESERVICIO+'/'+'GlobalControllerBasico.php?'+strFormQueryString);
					
						
					} else {
						/*
						if(jQuery("#ParametrosBusqueda-djcmbAcciones").val() != constantes.STR_ACCIONES) {
							jQuery("#ParametrosBusqueda-djcmbAcciones").val(constantes.STR_ACCIONES).trigger("change");
						}
						
						<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.resaltarRestaurarDivMensaje(true,"ERROR:DEBE SELECCIONAR AL MENOS 1 REGISTRO","ERROR");
						*/
						
					}
				}
			} 
			
		}
	};
};

var <%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneralBasico=new <%=GetNombreClase(TablaBase.ToString())%>FuncionGeneralBasico();

<%=strJSEndJavaScript%>

<script runat="template">
/*<%} else {%>
		//DESHABILITAR POPUP DESDE ESTA FUNCION (NO DESDE Parametros)
		if(strTipo!="POPUP") {
			this.procesarFinalizacionProcesoAbrirLinkParametros<%=GetNombreClase(TablaBase.ToString())%>(strTipo,strLink);
		}
		<%}%>
*/
</script>