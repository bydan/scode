<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="ConStoreProcedures" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="ConNamespaces" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>

<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>

<script runat="template">
public string GetFormElementTablaColumn(ColumnSchema column)
{
	string strPrefijo=String.Empty;
	TableSchema tableRelacionada=null;
	
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
		return "";
	}
	
	String strTitulo="";
	String strStyle="";
	
	strPrefijo="echo $this->Form->input('"+GetNombreColumnFromProperties(column)+"');";
	
	if(column.IsForeignKeyMember) {
		tableRelacionada=GetNombreTablaRelacionadaFromColumn(column);	
		
		strPrefijo+="\r\n\t\techo $this->Form->select('"+GetNombreClaseObjetoC(tableRelacionada.ToString())+"s',$"+GetNombreClaseObjetoC(tableRelacionada.ToString())+"s);";
	}
	
	return strPrefijo;
}
		
public string GetFilaTablaColumn(ColumnSchema column)
{
	string strPrefijo=String.Empty;
	TableSchema tableRelacionada=null;
	
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
		return "";
	}
	
	String strTitulo="";
	String strStyle="";
	String strFuncionInit="";
	String strFuncionFin=")";
	
	
	if(!(column.Name.Equals(strId)||column.Name.Equals(strVersionRow))) {
		strTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
	} else {
		if(column.Name.Equals(strId)) {
			strTitulo=strId.ToUpper();
		} else {
			strTitulo=strVersionRow.ToUpper();
			strStyle=" style=\"display:none\" ";
		}
	}
	
	//strPrefijo="<td"+strStyle+"><?php echo $"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+GetNombreColumnFromProperties(column)+"'];?>";
	
	if(!column.Name.Equals(strId)) {
		//strPrefijo+="<?php echo $ajax->link('->', '/"+GetNombreClaseObjetoC(TablaBase.ToString())+"s/seleccionaractual/'.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"'], array('update' => array('div"+GetNombreClaseObjetoC(TablaBase.ToString())+"form'), 'complete' => ''));?>";
		if(EsBitColumn(column)) {
			strFuncionInit="Funciones::getCheckBox(";
			strFuncionFin=")";
		} else {
			strFuncionFin="";	
		}
		
		if(!column.IsForeignKeyMember) {
			strPrefijo="<td"+strStyle+"><?php echo "+strFuncionInit+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+GetNombreColumnFromProperties(column)+"']"+strFuncionFin+";?>";
		} else {
			tableRelacionada=GetNombreTablaRelacionadaFromColumn(column);						
			
			strPrefijo="<td"+strStyle+"><?php $"+GetNombreClaseObjetoC(tableRelacionada.ToString())+"Logic->getEntityWithConnection("+strFuncionInit+"$"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+GetNombreColumnFromProperties(column)+"']"+strFuncionFin+");";
			strPrefijo+="echo "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::getRelationship_"+GetNombreClaseC(tableRelacionada.ToString())+"Descripcion($"+GetNombreClaseObjetoC(tableRelacionada.ToString())+"Logic->get"+GetNombreClaseC(tableRelacionada.ToString())+"());";
			strPrefijo+="?>";
		}	
	} else {
		//<?php echo $this->Html->image('seleccionar.gif', array('alt' => 'Seleccionar'))?>
		strPrefijo+="<td"+strStyle+"><?php echo $ajax->link(''.$"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"'].'', array( 'controller' => '"+GetNombreClaseObjetoC(TablaBase.ToString())+"s', 'action' => 'seleccionaractual', $"+GetNombreClaseObjetoC(TablaBase.ToString())+"['"+GetNombreClaseC(TablaBase.ToString())+"']['"+strId+"'] ),array( 'update' => array('div"+GetNombreClaseObjetoC(TablaBase.ToString())+"form','div"+GetNombreClaseObjetoC(TablaBase.ToString())+"form'), 'complete' => '' )); ?>";
	}
	
	strPrefijo+="</td>";	
		
	return strPrefijo;
}

public string GetCabeceraTablaColumn(ColumnSchema column)
{
	string strPrefijo=String.Empty;
	
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
		return "";
	}
	
	String strTitulo="";
	String strStyle="";
	
	
	if(!(column.Name.Equals(strId)||column.Name.Equals(strVersionRow))) {
		strTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
	} else {
		if(column.Name.Equals(strId)) {
			strTitulo=strId.ToUpper();
		} else {
			strTitulo=strVersionRow.ToUpper();
			strStyle=" style=\"display:none\" ";
		}
	}
	
	strPrefijo="<th"+strStyle+"><?php echo $this->Paginator->sort('"+strTitulo+"');?></th>";
		
	return strPrefijo;
}




public String GetIncludeUseTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion="";
			String strTablaClaseRelacionada=string.Empty;
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
									 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					
					//strTablaClaseRelacionada="\t\treturn $this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
					strFuncion+="\r\ninclude_once('"+Empresa+"\\"+Package+"\\"+strPackageBusiness+"\\"+strPackageEntities+"\\"+	GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".php');";
					strFuncion+="\r\n<%=strPhp53VersionComment%>use "+Empresa+"\\"+Package+"\\"+strPackageBusiness+"\\"+strPackageEntities+"\\"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
					
					}
			}
								
			return strFuncion; 
		}

public void TestExtend() 
		{
			String strExtend=string.Empty;
			/*							 			
			strExtend=TablaBase.Description;
			
			System.Windows.Forms.MessageBox.Show(strExtend);
			
			
			foreach(ExtendedProperty extendedProperty in TablaBase.ExtendedProperties)
			{	
				
					if(extendedProperty.Name.Contains("Me_"))
					{
						System.Windows.Forms.MessageBox.Show(extendedProperty.Name);
				
						System.Windows.Forms.MessageBox.Show(extendedProperty.Value.ToString());
				
					}
			}
			*/
			
			/*
			ArrayList arrAccionExtendsProperty=new ArrayList();
			arrAccionExtendsProperty=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendsProperty)
			{
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			*/
			/*
			ArrayList arrAccionPropertyValues=new ArrayList();
			arrAccionPropertyValues=GetPropertyAccionsTableFromPropertiesC(TablaBase,"NOMBRE");
			
			foreach(String  value in arrAccionPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(value);
				
			}
			*/
			
			ArrayList arrAccionExtendPropertyValues=new ArrayList();
			arrAccionExtendPropertyValues=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(GetPropertyAccionTableFromPropertiesC(meExtendProperty,"NOMBRE"));
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			
			//return strExtend; 
		}
		
public String GetTablasClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\tprivate "+/*GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+*/" $"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasForeigKeysInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					
					if(GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))==GetNombreClaseObjetoC(TablaBase.ToString()))
					{
						continue;
					}
					
					strTablaClaseRelacionada+="\r\n\t\t$"+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"=new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"();";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  function  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception $e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+/*GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+*/"$"+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+") {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t$this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"=$"+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
					strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			
				}
				
			}
						
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion="";
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\tpublic ";// void  getTR[";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					
						strInitFuncion="\r\n\tpublic function";
					
					
						strInitFuncion+=/*GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+*/" get"+GetPrefijoRelacionC()+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(){\r\n";
						strTablaClaseRelacionada="\t\treturn $this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
					
			    		strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
				}
			}
								
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";// void  getTR_";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="\r\n\tpublic function";
			
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strInitFuncion+=/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/" get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"() {";
					strTablaClaseRelacionada="\r\n\t\treturn $this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strInitFuncion+=/*"ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/" get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s() {";
					strTablaClaseRelacionada="\r\n\t\treturn $this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  function  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception $e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/"$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+") {\r\n\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t$this->"+GetPrefijoRelacionC().ToLower()+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"=$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s("+/*"ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+*/"$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s) {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t$this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s=$"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s;";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/ "$"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+/*GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+*/"$"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					continue;
					//strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\t\t$"+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s=array();";//"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetNombreClase(string strTablaBase)
{	
		return GetNombreClaseC(strTablaBase);
}

public string GetCampoTabla(ColumnSchema column)
{
	string strPrefijo = column.Name;
	return strPrefijo;
	}


</script>
<?php
	include_once('<%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageUtils%>/Funciones.php');
	<%=strPhp53VersionComment%>use <%=Empresa%>/<%=strPackageFramework%>/<%= PackageFramework%>/<%=strPackageUtils%>\Funciones;
	
	include_once('<%=Empresa%>/<%=Package%>/<%=strPackageUtils%>/<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.php');	
	<%=strPhp53VersionComment%>use <%=Empresa%>/<%=Package%>/<%=strPackageUtils%>/<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones;	
	
	<%=GetFkIncludeUseC(TablaBase,Empresa,Package,true,"\t",false)%>
?>

<?php echo $ajax->div('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s'); ?>
	<h2><?php __('<%=GetNombreClaseC(TablaBase.ToString())%>s');?> <%=GetNombreClaseC(TablaBase.ToString())%> </h2>
	
	<table cellpadding="0" cellspacing="0">
	<tr>
		<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } //||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow		<th><?php echo $this->Paginator->sort('<%=GetWebNombreTituloColumnFromPropertiesC(TablaBase.Columns[i])%>
		<%=GetCabeceraTablaColumn(TablaBase.Columns[i])%>
		<% } %>
			
		<th style="display:none" class="actions"><?php //__('Acciones');?></th>
	</tr>
	<?php
	$i = 0;
	foreach ($<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s as $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>):
		$class = null;
		if ($i++ % 2 == 0) {
			$class = ' class="altrow"';
		}
	?>
	<tr<?php echo $class;?>>
		<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } //||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow		<td><?php echo $<%=GetNombreClaseObjetoC(TablaBase.ToString())['<%=GetNombreClaseC(TablaBase.ToString())']['=GetNombreColumnFromProperties(TablaBase.Columns[i])'];?></td> %>
		<%=GetFilaTablaColumn(TablaBase.Columns[i])%>
		<% } %>
		
		<td style="display:none" class="actions">
			<?php //echo $this->Html->link(__('Visualizar', true), array('action' => 'view', $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>['<%=GetNombreClaseC(TablaBase.ToString())%>']['<%=strId%>'])); ?>
			<?php //echo $this->Html->link(__('Editar', true), array('action' => 'edit', $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>['<%=GetNombreClaseC(TablaBase.ToString())%>']['<%=strId%>'])); ?>
			<?php //echo $this->Html->link(__('Eliminar', true), array('action' => 'delete', $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>['<%=GetNombreClaseC(TablaBase.ToString())%>']['<%=strId%>']), null, sprintf(__('Esta usted seguro de eliminar # %s?', true), $<%=GetNombreClaseObjetoC(TablaBase.ToString())%>['<%=GetNombreClaseC(TablaBase.ToString())%>']['<%=strId%>'])); ?>
		</td>
	</tr>	
<?php endforeach; ?>
	</table>
	
		<table width="100"  align="center">
			<tr id="tr<%=GetNombreClaseC(TablaBase.ToString())%>Nuevo" height="10">
				<td align="center">
				<?php echo $html->link($html->image("insertar.gif"), array('controller'=>'<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s', 'action' => 'nuevopreparar'), array('escape' => false));?>
				</td>
			</tr>
			<tr>
				<td align="center">
				</td>
				<td align="center">
				</td>
			</tr>				
		</table>
		
	<p>
	<?php
	echo $this->Paginator->counter(array(
	'format' => __('Pagina %page% de %pages%, visualizando %current% filas de %count% en Total, empieza en la fila %start%, y finaliza en %end%', true)
	));
	?>	</p>

	<div class="paging">
		<?php echo $this->Paginator->prev('<< ' . __('previous', true), array(), null, array('class'=>'disabled'));?>
	 | 	<?php echo $this->Paginator->numbers();?>
 |
		<?php echo $this->Paginator->next(__('next', true) . ' >>', array(), null, array('class' => 'disabled'));?>
	</div>
<?php echo $ajax->divEnd('<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s'); ?>

<?php echo $ajax->div('div<%=GetNombreClaseObjetoC(TablaBase.ToString())%>form'); ?>
<?php echo $this->Form->create('<%=GetNombreClaseC(TablaBase.ToString())%>');?>
	<fieldset>
 		<legend><?php __('<%=GetNombreClaseC(TablaBase.ToString())%>'); ?></legend>
	<?php
		<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } //||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow%>
		<%=GetFormElementTablaColumn(TablaBase.Columns[i])%>
		<% } %>
	?>
	</fieldset>
<?php echo $this->Form->end(__('Submit', true));?>
<?php echo $ajax->divEnd('div<%=GetNombreClaseObjetoC(TablaBase.ToString())%>form'); ?>

<div class="actions">
	<h3><?php //__('Actions'); ?></h3>
	<ul>
		<li><?php //echo $this->Html->link(__('Nuevo <%=GetNombreClaseC(TablaBase.ToString())%>', true), array('action' => 'add')); ?></li>
	</ul>
</div>

<script runat="template">
//<div class="<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s index">
</script>