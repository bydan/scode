<%@ Template Language="C#" Debug="true" TargetLanguage="T-SQL" Description="Template de la capa de Acceso a Datos" %>    	
<%@ CodeTemplate Src="CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import NameSpace="System.IO" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic"%>
<%@ Property Name="SourceDataBase" Type="SchemaExplorer.DatabaseSchema" Category="1. General" Description="Database to get the extended properties from." %>
<%@ Property Name="Schema" Type="System.String" Default="_dbo" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="NombreSistema" Type="System.String" Default="SISTEMA" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="NombreUsuario" Type="System.String" Default="Administrador1" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="NombrePerfil" Type="System.String" Default="Administrador" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="ClaveUsuarioDefault" Type="System.String" Default="123456" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="CodigoUsuarioDefault" Type="System.String" Default="1111111111" Category="1. General" Description="Nombre del Programdor" %>

<%@ Property Name="ConStoreProcedures" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="ConNombresMayusculas" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsConUpdateSqlSentence" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>

<%@ Property Name="NoTablasWebConAtras" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="NoTablasEsInterno" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasEsMenu" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesNo" Type="SchemaExplorer.TableSchemaCollection" Category="2. Tabla Obligatorio 1" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiTablasClasesEsRompimiento" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConFinalQuery" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConIndicesNo" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConWebRelacionesNo" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Obligatorio 2" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="NoTablasClasesConAuditoria" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="NoTablasClasesConObjetoOriginal" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConInsertNo" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 1" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiTablasClasesConDelCascade" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiTablasClasesConPrefijoId" Type="SchemaExplorer.TableSchemaCollection" Category="3. Tabla Requerimiento 2" Description="Select a set of tables." Optional="true"%>


<%@ Property Name="SiColumnasTablasWebCombo" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasFKTablasConBusqueda" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 1" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiColumnasTablasConTipo" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConTipoSql" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConJsValidacion" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConEsParaRompimiento" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConTabla" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConWebOrden" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConEsReporte" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Obligatorio 2" Description="Select a set of tables." Optional="true"%>

<%@ Property Name="SiColumnasTablasConEditNo" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Requerimiento 1" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="SiColumnasTablasConNoUpper" Type="SchemaExplorer.ColumnSchemaCollection" Category="4. Columna Requerimiento 1" Description="Select a set of tables." Optional="true"%>

<script runat="template">

public  class MenuNavegacion
{	
	
	int field_Posicion;
	string field_NombreClase;
	string field_Acciones;
	string field_Campos;
	int field_Tipo;
	int field_Nivel;
	string field_MenuNivel;
	
	public  MenuNavegacion()
	{
		this.field_Posicion=-1;
		this.field_NombreClase=string.Empty;
		this.field_Acciones=string.Empty;
		this.field_Campos=string.Empty;
		this.field_Tipo=-1;
		this.field_Nivel=-1;
		this.field_MenuNivel=string.Empty;
		
	}
	
	public int Field_Posicion
	{
		get{return field_Posicion;}		
		set{field_Posicion=value;}
	}
	
	public string Field_NombreClase
	{
		get{return field_NombreClase;}		
		set{field_NombreClase=value;}
	}
	
	public string Field_Acciones
	{
		get{return field_Acciones;}		
		set{field_Acciones=value;}
	}
	
	public string Field_Campos
	{
		get{return field_Campos;}		
		set{field_Campos=value;}
	}
	
	public int Field_Tipo
	{
		get{return field_Tipo;}		
		set{field_Tipo=value;}
	}
	
	public int Field_Nivel
	{
		get{return field_Nivel;}		
		set{field_Nivel=value;}
	}
	
	public string Field_MenuNivel
	{
		get{return field_MenuNivel;}		
		set{field_MenuNivel=value;}
	}
	
}

public String GetSeguridadOptiones() 
{
	Dictionary<int,string> dicUltimoIdNivel=new Dictionary<int,string>();
	
	String strSeguridadOpciones=String.Empty;
	int intIdOpcionPadre=0;
	String strIdOpcionPadre="";
	String strIdOpcionPadreRaiz="";
	String strIdOpcionPadreNivel="";
	
	foreach(MenuNavegacion menuNavegacion in GetArbolMenu())
	{
		strIdOpcionPadreRaiz="";
		
		if(menuNavegacion.Field_Tipo.Equals(1))
		{
			if(menuNavegacion.Field_Nivel.Equals(1))
			{
				strIdOpcionPadreRaiz="\r\nSET intIdOpcionPadre=null;\r\n\r\n";
			}
				
			strIdOpcionPadre="SET intIdOpcionPadre=intIdOpcion;\r\n\r\n";		
			strIdOpcionPadre+="SET intIdOpcionPadreNivel"+menuNavegacion.Field_Nivel+"=intIdOpcion;\r\n\r\n";
			
			//dicUltimoIdNivel.Get(1);
			//dicUltimoIdNivel.Get[1];
		}
		else
		{
			strIdOpcionPadre="";
		}
		
		
		strSeguridadOpciones+=strIdOpcionPadreRaiz;
		
		if(menuNavegacion.Field_Tipo.Equals(1))
		{
			if(menuNavegacion.Field_Nivel>1)
			{
				int intNivelAnterior=0;
				intNivelAnterior=menuNavegacion.Field_Nivel-1;
				
				strIdOpcionPadreNivel="SET intIdOpcionPadre=intIdOpcionPadreNivel"+intNivelAnterior+";\r\n\r\n";
				strSeguridadOpciones+=strIdOpcionPadreNivel;
			}
		}
		
		
		
		strSeguridadOpciones+="\r\nSET intIdOpcion=0;\r\n";
		strSeguridadOpciones+="SET strNombreOpcion='"+menuNavegacion.Field_MenuNivel+"';\r\n\r\n";
		
		strSeguridadOpciones+="SELECT id INTO intIdOpcion FROM seguridadbasico_dbo.opcion WHERE Nombre=strNombreOpcion;\r\n\r\n";
		
		strSeguridadOpciones+="IF intIdOpcion<=0 THEN\r\n\t";
		strSeguridadOpciones+="INSERT INTO seguridadbasico_dbo.opcion(isActive,isExpired,versionRow,idSistema,idOpcion,Codigo,Nombre,EsParaMenu,Posicion,IconName,NombreClase,Paquete,Estado) VALUES(true,false,CURRENT_TIMESTAMP,intIdSistema,intIdOpcionPadre,'"+menuNavegacion.Field_MenuNivel+"','"+menuNavegacion.Field_MenuNivel+"',true,"+menuNavegacion.Field_Posicion+",'ico.gif','"+menuNavegacion.Field_NombreClase+"','"+NombreSistema+"',true);\r\n\t";
		strSeguridadOpciones+="SELECT id INTO intIdOpcion FROM seguridadbasico_dbo.opcion WHERE Nombre=strNombreOpcion;\r\n";
		strSeguridadOpciones+="END IF;\r\n\r\n\r\n";
		
		
		strSeguridadOpciones+="SET intIdPerfilOpcion=0;\r\n\r\n";
		
		strSeguridadOpciones+="SELECT id INTO intIdPerfilOpcion FROM seguridadbasico_dbo.perfilopcion WHERE idPerfil=intIdPerfil AND idOpcion=intIdOpcion;\r\n\r\n";
		
		strSeguridadOpciones+="IF intIdPerfilOpcion<=0 THEN\r\n\t";
		strSeguridadOpciones+="INSERT INTO seguridadbasico_dbo.perfilopcion(isActive,isExpired,versionRow,idPerfil,idOpcion,Todo,Ingreso,Modificacion,Eliminacion,Consulta,Estado) VALUES(true,false,CURRENT_TIMESTAMP,intIdPerfil,intIdOpcion,true,false,false,false,false,true);\r\n\t";
		strSeguridadOpciones+="SELECT id INTO intIdPerfilOpcion FROM seguridadbasico_dbo.perfilopcion WHERE idPerfil=intIdPerfil AND idOpcion=intIdOpcion;\r\n";
		strSeguridadOpciones+="END IF;\r\n\r\n";
		
		strSeguridadOpciones+=strIdOpcionPadre;
	}
	/*
	bool blnExisteArbol=false;
	int intCount=0;
	strSeguridadOpciones="";
	foreach(TableSchema tableSchema in SourceDataBase.Tables)
	{
		
		blnExisteArbol=false;
		
		foreach(MenuNavegacion menuNavegacion in GetArbolMenu())
		{
			if(menuNavegacion.Field_NombreClase.Trim().Equals("Mantenimiento"+GetNombreClaseC(tableSchema.ToString()).Trim()+".jsp"))
			{
				blnExisteArbol=true;
				break;
			}
		}
		
		if(!blnExisteArbol)
		{
			intCount++;
			
			strSeguridadOpciones+="\r\nSET intIdOpcion=0;\r\n";
			strSeguridadOpciones+="SET strNombreOpcion='"+GetNombreClaseC(tableSchema.ToString())+"';\r\n\r\n";
			
			strSeguridadOpciones+="SELECT id INTO intIdOpcion FROM seguridadbasico_dbo.opcion WHERE Nombre=strNombreOpcion;\r\n\r\n";
			
			strSeguridadOpciones+="IF intIdOpcion<=0 THEN\r\n\t";
			strSeguridadOpciones+="INSERT INTO seguridadbasico_dbo.opcion(isActive,isExpired,versionRow,idSistema,idOpcion,Codigo,Nombre,EsParaMenu,Posicion,IconName,NombreClase,Paquete,Estado) VALUES(true,false,CURRENT_TIMESTAMP,intIdSistema,null,'"+GetNombreClaseC(tableSchema.ToString())+"','"+GetNombreClaseC(tableSchema.ToString())+"',false,0,'ico.gif','Mantenimiento"+GetNombreClaseC(tableSchema.ToString()).Trim()+".jsp','"+GetRelativePathNavegacionFromTableFromPropertiesC(tableSchema).Trim()+"',true);\r\n\t";
			strSeguridadOpciones+="SELECT id INTO intIdOpcion FROM seguridadbasico_dbo.opcion WHERE Nombre=strNombreOpcion;\r\n";
			strSeguridadOpciones+="END IF;\r\n\r\n\r\n";
			
			
			strSeguridadOpciones+="SET intIdPerfilOpcion=0;\r\n\r\n";
			
			strSeguridadOpciones+="SELECT id INTO intIdPerfilOpcion FROM seguridadbasico_dbo.perfilopcion WHERE idPerfil=intIdPerfil AND idOpcion=intIdOpcion;\r\n\r\n";
			
			strSeguridadOpciones+="IF intIdPerfilOpcion<=0 THEN\r\n\t";
			strSeguridadOpciones+="INSERT INTO seguridadbasico_dbo.perfilopcion(isActive,isExpired,versionRow,idPerfil,idOpcion,Todo,Ingreso,Modificacion,Eliminacion,Consulta,Estado) VALUES(true,false,CURRENT_TIMESTAMP,intIdPerfil,intIdOpcion,true,false,false,false,false,true);\r\n\t";
			strSeguridadOpciones+="SELECT id INTO intIdPerfilOpcion FROM seguridadbasico_dbo.perfilopcion WHERE idPerfil=intIdPerfil AND idOpcion=intIdOpcion;\r\n";
			strSeguridadOpciones+="END IF;\r\n\r\n";
		}
		
	}
	
	
	Trace.WriteLine("No Tablas: " +intCount.ToString()+" De "+ SourceDataBase.Tables.Count);
	*/
	
	return  strSeguridadOpciones;
}

public List<MenuNavegacion> GetArbolMenu() 
{
	List<MenuNavegacion> arrayListArbolMenu=new List<MenuNavegacion>();
	
	MenuNavegacion menuNavegacion=new MenuNavegacion();	
	menuNavegacion.Field_Posicion=5;
	menuNavegacion.Field_Tipo=1;
	menuNavegacion.Field_Nivel=1;
	menuNavegacion.Field_MenuNivel="Aula Virtual";
	arrayListArbolMenu.Add(menuNavegacion);
	
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=5;
		menuNavegacion.Field_NombreClase="MantenimientoCurso.jsp";
		menuNavegacion.Field_Tipo=2;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Cursos";
		arrayListArbolMenu.Add(menuNavegacion);
		
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=10;
		menuNavegacion.Field_NombreClase="MantenimientoAlumno.jsp";
		menuNavegacion.Field_Tipo=2;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Alumnos";
		arrayListArbolMenu.Add(menuNavegacion);
		
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=15;
		menuNavegacion.Field_NombreClase="MantenimientoTutor.jsp";
		menuNavegacion.Field_Tipo=2;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Tutores";
		arrayListArbolMenu.Add(menuNavegacion);
	
	menuNavegacion=new MenuNavegacion();	
	menuNavegacion.Field_Posicion=10;
	menuNavegacion.Field_Tipo=1;
	menuNavegacion.Field_Nivel=1;
	menuNavegacion.Field_MenuNivel="Informacion General";
	arrayListArbolMenu.Add(menuNavegacion);
	
		menuNavegacion=new MenuNavegacion();
		menuNavegacion.Field_Posicion=5;
		menuNavegacion.Field_NombreClase="MantenimientoAplicacion.jsp";
		menuNavegacion.Field_Tipo=2;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Aplicaciones";
		arrayListArbolMenu.Add(menuNavegacion);
		
		menuNavegacion=new MenuNavegacion();
		menuNavegacion.Field_Posicion=10;
		menuNavegacion.Field_NombreClase="MantenimientoSeccion.jsp";
		menuNavegacion.Field_Tipo=2;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Secciones";
		arrayListArbolMenu.Add(menuNavegacion);
	
	menuNavegacion=new MenuNavegacion();	
	menuNavegacion.Field_Posicion=15;
	menuNavegacion.Field_Tipo=1;
	menuNavegacion.Field_Nivel=1;
	menuNavegacion.Field_MenuNivel="Catalogos";
	arrayListArbolMenu.Add(menuNavegacion);
	
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=5;
		menuNavegacion.Field_Tipo=1;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Proceso Educativo";
		arrayListArbolMenu.Add(menuNavegacion);
	
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=5;
			menuNavegacion.Field_NombreClase="MantenimientoPeriodo.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Periodos";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=10;
			menuNavegacion.Field_NombreClase="MantenimientoTipoCurso.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Curso";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=15;
			menuNavegacion.Field_NombreClase="MantenimientoModalidad.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Modalidades";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=20;
			menuNavegacion.Field_NombreClase="MantenimientoUnidadEducativa.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Unidades Educativas";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=25;
			menuNavegacion.Field_NombreClase="MantenimientoContactoDeUnidadEducativa.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Contactos de Unidades Educativas";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=30;
			menuNavegacion.Field_NombreClase="MantenimientoTipoTest.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Test";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=35;
			menuNavegacion.Field_NombreClase="MantenimientoTipoValorRespuesta.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Valores de Respuestas";
			arrayListArbolMenu.Add(menuNavegacion);
		
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=10;
		menuNavegacion.Field_Tipo=1;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Sitios Web";
		arrayListArbolMenu.Add(menuNavegacion);
		
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=5;
			menuNavegacion.Field_NombreClase="MantenimientoTipoUrl.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Url";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=10;
			menuNavegacion.Field_NombreClase="MantenimientoTipoArchivo.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Archivo";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=15;
			menuNavegacion.Field_NombreClase="MantenimientoTipoParrafo.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Parrafo";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=20;
			menuNavegacion.Field_NombreClase="MantenimientoTipoImagen.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Imagen";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=25;
			menuNavegacion.Field_NombreClase="MantenimientoTipoTitulo.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Titulo";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=30;
			menuNavegacion.Field_NombreClase="MantenimientoControlAjax.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Controles Ajax";
			arrayListArbolMenu.Add(menuNavegacion);
			
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=15;
		menuNavegacion.Field_Tipo=1;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Datos Personales";
		arrayListArbolMenu.Add(menuNavegacion);
		
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=5;
			menuNavegacion.Field_NombreClase="MantenimientoAnio.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Anios";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=10;
			menuNavegacion.Field_NombreClase="MantenimientoIdioma.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Idiomas";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=15;
			menuNavegacion.Field_NombreClase="MantenimientoEstadoCivil.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Estados Civiles";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=20;
			menuNavegacion.Field_NombreClase="MantenimientoGenero.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Generos";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=25;
			menuNavegacion.Field_NombreClase="MantenimientoTipoLugar.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Lugares";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=30;
			menuNavegacion.Field_NombreClase="MantenimientoLugar.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Lugares";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=35;
			menuNavegacion.Field_NombreClase="MantenimientoTipoEmpresa.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Empresas";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=40;
			menuNavegacion.Field_NombreClase="MantenimientoEmpresa.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Empresas";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=45;
			menuNavegacion.Field_NombreClase="MantenimientoTipoTituloEducativo.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Titulos Educativos";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=50;
			menuNavegacion.Field_NombreClase="MantenimientoTituloEducativo.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Titulos Educativos";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=55;
			menuNavegacion.Field_NombreClase="MantenimientoTipoInstitucionEducativa.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Instituciones Educativas";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();
			menuNavegacion.Field_Posicion=60;
			menuNavegacion.Field_NombreClase="MantenimientoInstitucionEducativa.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Instituciones Educativas";
			arrayListArbolMenu.Add(menuNavegacion);
			
		menuNavegacion=new MenuNavegacion();	
		menuNavegacion.Field_Posicion=20;
		menuNavegacion.Field_Tipo=1;
		menuNavegacion.Field_Nivel=2;
		menuNavegacion.Field_MenuNivel="Informacion General";
		arrayListArbolMenu.Add(menuNavegacion);
		
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=5;
			menuNavegacion.Field_NombreClase="MantenimientoTipoMenu.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Menu";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=10;
			menuNavegacion.Field_NombreClase="MantenimientoTipoLink.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Links";
			arrayListArbolMenu.Add(menuNavegacion);
			
			menuNavegacion=new MenuNavegacion();	
			menuNavegacion.Field_Posicion=15;
			menuNavegacion.Field_NombreClase="MantenimientoTipoContenido.jsp";
			menuNavegacion.Field_Tipo=2;
			menuNavegacion.Field_Nivel=3;
			menuNavegacion.Field_MenuNivel="Tipos de Contenido";
			arrayListArbolMenu.Add(menuNavegacion);

			
	return arrayListArbolMenu;
}

public String GetConNoUpperDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConNoUpper!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConNoUpper)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|NOUPPER="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|NOUPPER="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConEditNoDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConEditNo!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConEditNo)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|EDITNO="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|EDITNO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConEsReporteDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConEsReporte!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConEsReporte)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|ESREPORTE="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|ESREPORTE="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConWebOrdenDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConWebOrden!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConWebOrden)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|WEBORDEN="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|WEBORDEN="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConTablaDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConTabla!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConTabla)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|TABLA="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|TABLA="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConEsParaRompimientoDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasConEsParaRompimiento!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConEsParaRompimiento)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|ESPARAROMPIMIENTO="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|ESPARAROMPIMIENTO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConJsValidacionDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConJsValidacion!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConJsValidacion)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|JSVALIDACION="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|JSVALIDACION="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConTipoSqlDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConTipoSql!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConTipoSql)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|TIPOSQL="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|TIPOSQL="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConTipoDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="";
	
	if(SiColumnasTablasConTipo!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasConTipo)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="X";
					strDescritionTabla+="|TIPO="+strEsParaCombo;
				}
			}
		}
	}
	
	//strDescritionTabla+="|TIPO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetConBusquedaDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasFKTablasConBusqueda!=null)
	{
		foreach(ColumnSchema column in SiColumnasFKTablasConBusqueda)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					if(column.IsForeignKeyMember)
					{
						strEsParaCombo="true";
						strDescritionTabla+="|CONBUSQUEDA="+strEsParaCombo;
					}
				}
			}
		}
	}
	
	//strDescritionTabla+="|CONBUSQUEDA="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetWebComboDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsParaCombo="false";
	
	if(SiColumnasTablasWebCombo!=null)
	{
		foreach(ColumnSchema column in SiColumnasTablasWebCombo)
		{
			if(columnSchema.Table.Name==column.Table.Name)
			{
				if(columnSchema.Name==column.Name)
				{
					strEsParaCombo="true";
					strDescritionTabla+="|WEBCOMBO="+strEsParaCombo;
				}
			}
		}
	}
	
	if(strDescritionTabla==string.Empty)
	{
		if(columnSchema.Name.Equals("Codigo"))
		{
			strEsParaCombo="true";
			strDescritionTabla+="|WEBCOMBO="+strEsParaCombo;
		}
		
	}
	//strDescritionTabla+="|WEBCOMBO="+strEsParaCombo;
	
	return strDescritionTabla;
}

public String GetNumeroFilasDescriptionColumn(ColumnSchema column) 
{
	String strDescritionTabla=string.Empty;
	int intNumFilas=1;
	
	if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
	{
		if(column.Size>50)
		{
			intNumFilas=(column.Size/50);
			
			if(intNumFilas<2)
			{
				intNumFilas=2;
			}
			
			if(intNumFilas>15)
			{
				intNumFilas=15;
			}
			
			strDescritionTabla+="|WEBFILAS="+intNumFilas.ToString();
			
		}	
		
		
	}
	
	//strDescritionTabla+="|WEBFILAS="+intNumFilas.ToString();
	
	return strDescritionTabla;
}

public String GetWebNameDescriptionTable(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	
	String strNameTable=string.Empty;
	String strCharNameTable=string.Empty;
	bool esPrimeraVez=true;
	
	if(!columnSchema.IsForeignKeyMember)
	{
		foreach(Char charName in columnSchema.Name.ToCharArray())
		{
			strCharNameTable=charName.ToString();
			
			if(Char.IsUpper(charName))
			{
				if(!esPrimeraVez)
				{
					strCharNameTable=" "+charName.ToString().ToLower();;
				}
				else
				{
					esPrimeraVez=false;
				}
			}
			
			strNameTable+=strCharNameTable;
		}
	}
	else
	{
		
		foreach(Char charName in columnSchema.Name.Replace("id","").ToCharArray())
		{
			strCharNameTable=charName.ToString();
			
			if(Char.IsUpper(charName))
			{
				if(!esPrimeraVez)
				{
					strCharNameTable=" "+charName.ToString().ToLower();;
				}
				else
				{
					esPrimeraVez=false;
				}
			}
			
			strNameTable+=strCharNameTable;
		}
	}
	
	if(ConNombresMayusculas)
	{
		strNameTable=strNameTable.ToUpper();
	}
	
	strDescritionTabla+="|WEBTITULO="+strNameTable;
	
	
	return strDescritionTabla;
}

public String GetNameDescriptionColumn(ColumnSchema columnSchema) 
{
	String strDescritionTabla=string.Empty;
	strDescritionTabla+="NOMBRE="+columnSchema.Name.ToUpper();
	
	return strDescritionTabla;
}

public String GetDescriptionsColumn(ColumnSchema columnSchema) 
{
	String strDescriptionsColumn=string.Empty;
		
	strDescriptionsColumn=GetNameDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetWebNameDescriptionTable(columnSchema);
	strDescriptionsColumn+=GetNumeroFilasDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetWebComboDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConBusquedaDescriptionColumn(columnSchema);
	
	strDescriptionsColumn+=GetConTipoDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConTipoSqlDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConJsValidacionDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConEsParaRompimientoDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConTablaDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConWebOrdenDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConEsReporteDescriptionColumn(columnSchema);
	
	strDescriptionsColumn+=GetConEditNoDescriptionColumn(columnSchema);
	strDescriptionsColumn+=GetConNoUpperDescriptionColumn(columnSchema);

	return strDescriptionsColumn;
}

public String GetDescriptionsColumns() 
{
	String strDescritionTabla=string.Empty;
	String strAddOrUpdate=string.Empty;
	
	strAddOrUpdate="add";
	
	if(EsConUpdateSqlSentence)
	{
		strAddOrUpdate="update";
	}
	
	for (int i = 0; i < SourceDataBase.Tables.Count; i++)
	{
		
		for (int j = 0; j < SourceDataBase.Tables[i].Columns.Count; j++)
		{
			strDescritionTabla+="\r\nEXEC sys.sp_"+strAddOrUpdate+"extendedproperty @name=N'MS_Description', @value=N'"+GetDescriptionsColumn(SourceDataBase.Tables[i].Columns[j])+"' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'"+SourceDataBase.Tables[i].Name+"', @level2type=N'COLUMN', @level2name=N'"+SourceDataBase.Tables[i].Columns[j].Name+"'\r\n";								   
			strDescritionTabla+="GO\r\n";	
		}
		
	}
    							

	return strDescritionTabla; 
}


public String GetConPrefijoIdDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="X.";
					strDescritionTabla+="|PREFIJOID="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|PREFIJOID="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConDelCascadeDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|DELCASCADE="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|DELCASCADE="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConInsertNoDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|INSERTNO="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|INSERTNO="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConObjetoOriginalDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="true";
	
		
	
	
		if(NoTablasClasesConObjetoOriginal!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConObjetoOriginal)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="false";
					strDescritionTabla+="|CONORIG="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|CONORIG="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetConAuditoriaDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="true";
	
		
	
	
		if(NoTablasClasesConAuditoria!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasClasesConAuditoria)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="false";
					strDescritionTabla+="|CONAUD="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|CONAUD="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}


public String GetConStoreProcedures(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(ConStoreProcedures)
		{
			strEsRompimientoTabla="true";
			strDescritionTabla+="|CONSTORE="+strEsRompimientoTabla;
		}
	
	
	//strDescritionTabla+="|CONSTORE="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetWebRelacionesNoDescriptionTable(TableSchema tableSchema) 
{
	Boolean blnConClasesNo=false;
	
	String strDescritionTabla=string.Empty;
	
	String strFuncion=string.Empty;
			
	if(SiTablasClasesConWebRelacionesNo!=null)
	{		
		foreach(TableSchema tableSchemaNo in SiTablasClasesConWebRelacionesNo)
		{
			if(tableSchema.Name==tableSchemaNo.Name)
			{
				blnConClasesNo=true;
			}
		}
	}
	
			
	if(blnConClasesNo)	
	{

			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne|| collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					if(strFuncion!=string.Empty)
					{
						strFuncion+=",";
					}
					
					strFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable);
					
				}
				
				
			
			}
								
		
		strDescritionTabla="|WEBRELACIONESNO="+strFuncion;
	
	}
	
	return strDescritionTabla;
}

public String GetIndicesNoDescriptionTable(TableSchema tableSchema) 
{
	Boolean blnConClasesNo=false;
	
	String strDescritionTabla=string.Empty;
	
	String strFuncion=string.Empty;
			
	if(SiTablasClasesConIndicesNo!=null)
	{		
		foreach(TableSchema tableSchemaNo in SiTablasClasesConIndicesNo)
		{
			if(tableSchema.Name==tableSchemaNo.Name)
			{
				blnConClasesNo=true;
			}
		}
	}
	
			
	if(blnConClasesNo)	
	{

			
										 			
			foreach(IndexSchema indexSchema in tableSchema.Indexes)
			{
				
				
					if(strFuncion!=string.Empty)
					{
						strFuncion+=",";
					}
					
					strFuncion+=indexSchema.Name;
					
				
				
				
			
			}
								
		strDescritionTabla+=" |INDICESNO="+strFuncion;
		
	
	}
	
	return strDescritionTabla;
}


public String GetConFinalQueryDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="";
	
		
	
	
		if(SiTablasClasesConFinalQuery!=null)
		{
			foreach(TableSchema tableSchemaNo in SiTablasClasesConFinalQuery)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="X";
					strDescritionTabla+="|FINALQUERY="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|FINALQUERY="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}


public String GetEsReporteDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsReporteTabla=string.Empty;
	
	strEsReporteTabla="false";
	
		
	
	if(tableSchema.Name.Contains("Reporte"))
	{
		strEsReporteTabla="true";
		strDescritionTabla+="|ESREPORTE="+strEsReporteTabla;
	}
	
	
	
	
	//strDescritionTabla+="|ESREPORTE="+strEsReporteTabla;
	
	return strDescritionTabla;
}

public String GetEsRompimientoDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(SiTablasClasesEsRompimiento!=null)
		{
			foreach(TableSchema tableSchemaNo in SiTablasClasesEsRompimiento)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|ESROMPIMIENTO="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|ESROMPIMIENTO="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}


public String GetClasesNoDescriptionTable(TableSchema tableSchema) 
{
	Boolean blnConClasesNo=false;
	
	String strDescritionTabla=string.Empty;
	
	String strFuncion=string.Empty;
			
	if(SiTablasClasesNo!=null)
	{		
		foreach(TableSchema tableSchemaNo in SiTablasClasesNo)
		{
			if(tableSchema.Name==tableSchemaNo.Name)
			{
				blnConClasesNo=true;
			}
		}
	}
	
			
	if(blnConClasesNo)	
	{

			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					if(strFuncion!=string.Empty)
					{
						strFuncion+=",";
					}
					
					strFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable);
					
				}
				
				
			
			}
								
		
		strDescritionTabla+="|CLASESNO="+strFuncion;
	
	}
	
	return strDescritionTabla;
}

public String GetEsMenuDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strEsRompimientoTabla=string.Empty;
	
	strEsRompimientoTabla="false";
	
		
	
	
		if(SiTablasEsMenu!=null)
		{
			foreach(TableSchema tableSchemaNo in SiTablasEsMenu)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsRompimientoTabla="true";
					strDescritionTabla+="|ESMENU="+strEsRompimientoTabla;
				}
			}
		}
	
	
	//strDescritionTabla+="|ESROMPIMIENTO="+strEsRompimientoTabla;
	
	return strDescritionTabla;
}

public String GetEsInternoDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	
	String strEsInternoTabla=string.Empty;
	
	strEsInternoTabla="true";
	
	Boolean blnEsInterno=false;
	
	foreach(ColumnSchema columnSchema in tableSchema.Columns)
	{
		if(columnSchema.IsForeignKeyMember)
		{
			blnEsInterno=true;
		}
	}
	
	
	if(!blnEsInterno)
	{
		strEsInternoTabla="false";
	}
	
	
	if(blnEsInterno)
	{
		if(NoTablasEsInterno!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasEsInterno)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strEsInternoTabla="false";
					strDescritionTabla+="|ESINTERNO="+strEsInternoTabla;
					
					return strDescritionTabla;
				}
			}
		}
	}
	
	if(blnEsInterno)
	{
		strDescritionTabla+="|ESINTERNO="+strEsInternoTabla;
	}
	
	//strDescritionTabla+="|ESINTERNO="+strEsInternoTabla;
	
	return strDescritionTabla;
}

public String GetWebConAtrasDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strConAtrasTabla=string.Empty;
	
	strConAtrasTabla="true";
	
	Boolean blnConAtras=false;
	
	foreach(ColumnSchema columnSchema in tableSchema.Columns)
	{
		if(columnSchema.IsForeignKeyMember)
		{
			blnConAtras=true;
		}
	}
	
	
	if(!blnConAtras)
	{
		strConAtrasTabla="false";
	}
	
	if(blnConAtras)
	{
		if(NoTablasWebConAtras!=null)
		{
			foreach(TableSchema tableSchemaNo in NoTablasWebConAtras)
			{
				if(tableSchema.Name==tableSchemaNo.Name)
				{
					strConAtrasTabla="false";
					strDescritionTabla+="|WEBCONATRAS="+strConAtrasTabla;
					return strDescritionTabla;
				}
			}
		}
	}
	
	if(blnConAtras)
	{
		strDescritionTabla+="|WEBCONATRAS="+strConAtrasTabla;
	}
	//strDescritionTabla+="|WEBCONATRAS="+strConAtrasTabla;
	
	return strDescritionTabla;
}

public String GetWebPluralDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strPluralTabla=string.Empty;
	Char chrUltimaLetra=Char.MinValue;
	
	strPluralTabla="s";
	
	if(ConNombresMayusculas)
	{
		strPluralTabla="S";
	}
	
	chrUltimaLetra=tableSchema.Name.ToString()[tableSchema.Name.ToCharArray().Length-1];
	
	if(chrUltimaLetra!='a'&&chrUltimaLetra!='e'&&chrUltimaLetra!='i'&&chrUltimaLetra!='o'&&chrUltimaLetra!='u')
	{
		strPluralTabla="es";
	
		if(ConNombresMayusculas)
		{
			strPluralTabla="ES";
		}
	}
	
	strDescritionTabla+="|WEBPLURAL="+strPluralTabla;
	
	return strDescritionTabla;
}

public String GetWebNameDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	
	String strNameTable=string.Empty;
	String strCharNameTable=string.Empty;
	bool esPrimeraVez=true;
	
	foreach(Char charName in tableSchema.Name.ToCharArray())
	{
		strCharNameTable=charName.ToString();
		
		if(Char.IsUpper(charName))
		{
			if(!esPrimeraVez)
			{
				strCharNameTable=" "+charName.ToString().ToLower();;
			}
			else
			{
				esPrimeraVez=false;
			}
		}
		
		strNameTable+=strCharNameTable;
	}
	
	if(ConNombresMayusculas)
	{
		strNameTable=strNameTable.ToUpper();
	}
	
	strDescritionTabla+="|WEBTITULO="+strNameTable;
	
	
	return strDescritionTabla;
}

public String GetNameDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	strDescritionTabla+="NOMBRE="+tableSchema.Name.ToUpper();
	
	return strDescritionTabla;
}

public String GetTableDescriptions(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	strDescritionTabla+=GetNameDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebNameDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebPluralDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebConAtrasDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsInternoDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsMenuDescriptionTable(tableSchema);
	strDescritionTabla+=GetClasesNoDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsRompimientoDescriptionTable(tableSchema);
	strDescritionTabla+=GetEsReporteDescriptionTable(tableSchema);
	strDescritionTabla+=GetConStoreProcedures(tableSchema);
	strDescritionTabla+=GetConFinalQueryDescriptionTable(tableSchema);
	strDescritionTabla+=GetIndicesNoDescriptionTable(tableSchema);
	strDescritionTabla+=GetWebRelacionesNoDescriptionTable(tableSchema);
	
	strDescritionTabla+=GetConAuditoriaDescriptionTable(tableSchema);
	strDescritionTabla+=GetConObjetoOriginalDescriptionTable(tableSchema);
	strDescritionTabla+=GetConInsertNoDescriptionTable(tableSchema);
	strDescritionTabla+=GetConDelCascadeDescriptionTable(tableSchema);
	strDescritionTabla+=GetConPrefijoIdDescriptionTable(tableSchema);
	
	
	return strDescritionTabla;
}

public String GetDescriptionTable(TableSchema tableSchema) 
{
	String strDescritionTabla=string.Empty;
	String strAddOrUpdate=string.Empty;
	
	strAddOrUpdate="add";
	
	if(EsConUpdateSqlSentence)
	{
		strAddOrUpdate="update";
	}
	
	strDescritionTabla+="\r\nEXEC sys.sp_"+strAddOrUpdate+"extendedproperty @name=N'MS_Description', @value=N'"+GetTableDescriptions(tableSchema)+"' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'"+tableSchema.Name+"'\r\n";
    strDescritionTabla+="GO";								

	return strDescritionTabla; 
}

</script>

USE <%=Schema%>


  DECLARE strNombreSistema varchar(100);
  DECLARE strNombreUsuario varchar(50);
  DECLARE strNombrePerfil varchar(50);
  DECLARE strNombreOpcion varchar(50);
  DECLARE strNombreAccion varchar(150);
  DECLARE strNombreCampo varchar(150);

  DECLARE intIdSistema BIGINT(19);
  DECLARE intIdUsuario BIGINT(19);
  DECLARE intIdPerfil BIGINT(19);
  DECLARE intIdPerfilUsuario BIGINT(19);
  DECLARE intIdOpcion BIGINT(19);
  DECLARE intIdOpcionPadre BIGINT(19);
  DECLARE intIdPerfilOpcion BIGINT(19);
  DECLARE intIdAccion BIGINT(19);
  DECLARE intIdPerfilAccion BIGINT(19);
  DECLARE intIdCampo BIGINT(19);
  DECLARE intIdPerfilCampo BIGINT(19);

  DECLARE intIdOpcionPadreNivel1 BIGINT(19);
  DECLARE intIdOpcionPadreNivel2 BIGINT(19);
  DECLARE intIdOpcionPadreNivel3 BIGINT(19);
  DECLARE intIdOpcionPadreNivel4 BIGINT(19);
  DECLARE intIdOpcionPadreNivel5 BIGINT(19);
  DECLARE intIdOpcionPadreNivel6 BIGINT(19);
  DECLARE intIdOpcionPadreNivel7 BIGINT(19);
  DECLARE intIdOpcionPadreNivel8 BIGINT(19);
  DECLARE intIdOpcionPadreNivel9 BIGINT(19);
  DECLARE intIdOpcionPadreNivel10 BIGINT(19);

  SET strNombreSistema='<%=NombreSistema%>';
  SET strNombreUsuario='<%=NombreUsuario%>';
  SET strNombrePerfil='<%=NombrePerfil%>';

  SET intIdSistema=0;
  SET intIdUsuario=0;
  SET intIdPerfil=0;
  SET intIdPerfilUsuario=0;
  SET intIdOpcion=0;
  SET intIdOpcionPadre=null;
  SET intIdPerfilOpcion=0;
  SET intIdAccion=0;
  SET intIdPerfilAccion=0;
  SET intIdCampo=0;
  SET intIdPerfilCampo=0;

  SET intIdOpcionPadreNivel1=null;
  SET intIdOpcionPadreNivel2=null;
  SET intIdOpcionPadreNivel3=null;
  SET intIdOpcionPadreNivel4=null;
  SET intIdOpcionPadreNivel5=null;
  SET intIdOpcionPadreNivel6=null;
  SET intIdOpcionPadreNivel7=null;
  SET intIdOpcionPadreNivel8=null;
  SET intIdOpcionPadreNivel9=null;
  SET intIdOpcionPadreNivel10=null;

  SELECT id INTO intIdSistema FROM <%=Schema%>.sistema WHERE NombrePrincipal=strNombreSistema;

  IF intIdSistema<=0 THEN
     INSERT INTO <%=Schema%>.sistema(isActive,isExpired,versionRow,codigo,NombrePrincipal,NombreSecundario,Estado) VALUES(true,false,CURRENT_TIMESTAMP,strNombreSistema,strNombreSistema,strNombreSistema,true);
     SELECT id INTO intIdSistema FROM <%=Schema%>.sistema WHERE NombrePrincipal=strNombreSistema;
  END IF;




  SELECT id INTO intIdUsuario FROM <%=Schema%>.usuario WHERE UserName=strNombreUsuario;

  IF intIdUsuario<=0 THEN
     INSERT INTO <%=Schema%>.usuario(isActive,isExpired,versionRow,UserName,Clave,Nombre,Estado,codigoAlterno,Tipo) VALUES(true,false,CURRENT_TIMESTAMP,strNombreUsuario,'<%=ClaveUsuarioDefault%>',strNombreUsuario,true,'<%=CodigoUsuarioDefault%>',true);
     SELECT id INTO intIdUsuario FROM <%=Schema%>.usuario WHERE UserName=strNombreUsuario;
  END IF;




  SELECT id INTO intIdPerfil FROM <%=Schema%>.perfil WHERE Codigo=strNombrePerfil;

  IF intIdPerfil<=0 THEN
     INSERT INTO <%=Schema%>.perfil(isActive,isExpired,versionRow,Codigo,Nombre,Nombre2,Estado) VALUES(true,false,CURRENT_TIMESTAMP,strNombrePerfil,strNombrePerfil,strNombrePerfil,true);
     SELECT id INTO intIdPerfil FROM <%=Schema%>.perfil WHERE Codigo=strNombrePerfil;
  END IF;



  SELECT id INTO intIdPerfilUsuario FROM seguridadbasico_dbo.perfilusuario WHERE idPerfil=intIdPerfil AND idUsuario=intIdUsuario;

  IF intIdPerfilUsuario<=0 THEN
     INSERT INTO <%=Schema%>.perfilusuario(isActive,isExpired,versionRow,idPerfil,idUsuario,Estado) VALUES(true,false,CURRENT_TIMESTAMP,intIdPerfil,intIdUsuario,true);
     SELECT id INTO intIdPerfilUsuario FROM <%=Schema%>.perfilusuario WHERE idPerfil=intIdPerfil AND idUsuario=intIdUsuario;
  END IF;

  DELETE FROM <%=Schema%>.perfilopcion WHERE idOpcion in(SELECT id FROM  <%=Schema%>.opcion WHERE idSistema=intIdSistema);

  DELETE FROM <%=Schema%>.opcion WHERE idSistema=intIdSistema;

  
  <%=GetSeguridadOptiones()%>




