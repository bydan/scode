<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" %>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"
	Category="Context"%>


<script runat="template">

public static string GetSetEntityColumna(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	
	if(column.Name.Equals("id")||column.Name.Equals("isActive")||column.Name.Equals("isExpired")||column.Name.Equals("versionRow"))
	{
		return strSetEntity;
	}
	String strEntityInit="entity.set";
	String strEntityMiddle="(rs.get";
	String strEntityFinal="\"));";
	//entity.setNombre(rs.getString("nombre"));	
    strSetEntity=strEntityInit+GetNombreCompletoColumnaClaseC(column)+strEntityMiddle+GetTipoColumnaClaseC(column)+"(\""+GetNombreCampoTablaC(column)+strEntityFinal;
	
	return strSetEntity;
}

public static string GetNombreClase(string strTablaBase)
{				
		return GetNombreClaseC(strTablaBase);
}

</script>

/*Empresa: Sinsemsa
 *Programador: <%=NombreProgramador%>
 *Descripcion: Clase que contiene todos los Accesos a BDD de tabla <%=TablaBase%>
 * Fecha Creacion: <%= DateTime.Now.ToLongDateString() %>
 **CAMBIOS***** 
 * Motivo Cambio:
 * Nombre Programador:
 * Fecha Cambio:
 **************
 */

package Data.Access.<%= Package%>;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import Utils.Framework.Connexion;
import Business.Entities.Framework.GeneralEntity;
import Business.Entities.<%= Package%>.<%=GetNombreClase(TablaBase.ToString())%>;
import Business.Logic.Framework.QueryWhereSelectParameters;
import Data.Access.Framework.DataAccessHelper;


public class <%=GetNombreClase(TablaBase.ToString())%>DataAccess extends DataAccessHelper.GetEntitiesDataAccessHelper<<%=GetNombreClase(TablaBase.ToString())%>> 
{
	public static void Save(GeneralEntity entity,Connexion con)
	{		
		DataAccessHelper.Save(entity, con);
	}
	
	public  <%=GetNombreClase(TablaBase.ToString())%> GetEntity(<%=GetNombreClase(TablaBase.ToString())%> entity,ResultSet rs) 
    {
        try
		{     	  
			 <% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			 <%=  GetSetEntityColumna(TablaBase.Columns[i]) %>	
 			 <% } %>
      	    	    		    	    
      	}
		catch(SQLException ex) 
		{
      	    ;
      	}
          return entity;
      }
	  
	  public  <%=GetNombreClase(TablaBase.ToString())%> GetEntity(Connexion con, int id) 
      {
		  <%=GetNombreClase(TablaBase.ToString())%> entity = new <%=GetNombreClase(TablaBase.ToString())%>();
        try 
		{
      	    Statement stmt = con.getConnection().createStatement();
      	    ResultSet rs = stmt.executeQuery(entity.getQuerySelect()+ " WHERE ID="+id);
      	    
      	    while (rs.next()) 
			{
      	    	entity=super.GetEntity(entity,rs);         	    
      	    	entity=this.GetEntity(entity,rs);     	    	
      	    }

      	    stmt.close();
      	       	 
      	} 
		catch(SQLException ex) 
		{
      	    ;
      	}
          return entity;
      }
	  
	  public  ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> GetEntities(Connexion con,QueryWhereSelectParameters queryWhereSelectParameters) 
      {
		  ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> entities = new  ArrayList<<%=GetNombreClase(TablaBase.ToString())%>>();
		  <%=GetNombreClase(TablaBase.ToString())%> entity = new <%=GetNombreClase(TablaBase.ToString())%>();		  
		  
        try 
		{     	   
        	Statement stmt = con.getConnection().createStatement();
        	ResultSet rs = stmt.executeQuery(entity.getQuerySelect()+queryWhereSelectParameters.getQueryWhereSelectParameters());
        	 
      	    while (rs.next()) 
			{
      	    	entity = new <%=GetNombreClase(TablaBase.ToString())%>();
      	    	entity=super.GetEntity(entity,rs);         		
      	    	entity=GetEntity(entity,rs);
      	    	entities.add(entity);
      	    }

      	    stmt.close();
      	       	 
      	} 
		catch(SQLException ex) 
		{
      	    ;
      	}
          return entities;
      }
}
   

