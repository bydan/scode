<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="ConStoreProcedures" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>

<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>

<script runat="template">
/*
<%=strPackageWeb%>/<%=strPackageJSF%>/<%=strPackageSessionBean%><%=GetEsPaqueteReporteC(TablaBase)%>
*/
public String GetParameterPkActualParaForeigKeySession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			if(blnNoStandardTableFromProperties) {
				foreach(ColumnSchema columnSchemaPK in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					//sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey($this->"+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//sTablaClaseRelacionada+="\r\n\t\t\tprivate "+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey;";
					sTablaClaseRelacionada+=GetParameterClaseC(columnSchemaPK).Replace("private","public") ;						
				}
			}
			return sTablaClaseRelacionada; 
		}

public String GetValueDefaultParameterPkActualParaForeigKeySession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(blnNoStandardTableFromProperties) {		
					foreach(ColumnSchema columnSchemaPK in columnSchemaCollectionPK) {
						sTablaClaseRelacionada+="\r\n\t\t"+GetValueDefaultParameterClaseC(columnSchemaPK) ;					
					} 	
			}
							
			return sTablaClaseRelacionada; 
		}
		
public String GetFuncionesGetSetParameterPkActualParaForeigKeySession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(blnNoStandardTableFromProperties) {					
				foreach(ColumnSchema columnSchemaPK in columnSchemaCollectionPK) {
					//true= $strimula que esta en pk clase para obtener get solamente y directamente sin pasar por pk clase
					sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchemaPK,false) ;
					sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchemaPK) ;					
				} 		
			}
			
				
			return sTablaClaseRelacionada; 
		}
		
public String GetParameterBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{										
						sTablaClaseRelacionada+="\r\n\tpublic $bitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"=null;";							
						
						//MIENTRAS NO SEA AUTOREFERENCIADO, PORQUE SE REPITE						
						if(!GetNombreClaseC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))) {
							sTablaClaseRelacionada+="\r\n\tpublic $big"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual=null;";
							sTablaClaseRelacionada+="\r\n\tpublic $big"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription=null;";
						}
						
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
				
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					//INICIALIZA TABLA
					//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
					
					sTablaClaseRelacionada+="\r\n\tpublic $strBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"=null;";							
					sTablaClaseRelacionada+="\r\n\tpublic $bigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual=null;";	
					
					ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
					for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
						sTablaClaseRelacionada+="";//GetParameterClaseC(columnSchemaCollectionFK[i]) ;					
					} 	
				}
			}
				
			return sTablaClaseRelacionada; 
		}

public String GetValueDefaultParameterBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{										
						sTablaClaseRelacionada+="\r\n\t\t$this->bitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"=false;";							
						sTablaClaseRelacionada+="\r\n\t\t$this->big"+columnSchema.Name+GetNombreClaseRelacionadaFromColumn(columnSchema)+"Actual=0;";
						sTablaClaseRelacionada+="\r\n\t\t$this->big"+columnSchema.Name+GetNombreClaseRelacionadaFromColumn(columnSchema)+"ActualDescription='';";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
				
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					//INICIALIZA TABLA
					//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
					
					sTablaClaseRelacionada+="\r\n\t\t$this->bitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"=false;";							
					sTablaClaseRelacionada+="\r\n\t\t$this->bigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual=0;";	
					
					ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
					for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
						sTablaClaseRelacionada+="\r\n\t\t"+GetValueDefaultParameterClaseC(columnSchemaCollectionFK[i]) ;					
					} 	
				}
			}
				
			return sTablaClaseRelacionada; 
		}
		
public String GetFuncionesGetSetParameterBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{										
						//sTablaClaseRelacionada+="\r\n\t\tisBusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"=false;";							
						//sTablaClaseRelacionada+="\r\n\t\tl"+columnSchema.Name+"Actual=0;";
						
						sTablaClaseRelacionada+="\r\n\tpublic function getbitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"() {";
						sTablaClaseRelacionada+="\r\n\t\treturn $this->bitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic function setbitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(";
						sTablaClaseRelacionada+="\r\n\t\t$bitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+") {";
						sTablaClaseRelacionada+="\r\n\t\t$this->bitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+" = $bitBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						//MIENTRAS NO SEA AUTOREFERENCIADO, PORQUE SE REPITE						
						if(!GetNombreClaseC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))) {
							sTablaClaseRelacionada+="\r\n\r\n\tpublic function getbigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual() {";
							sTablaClaseRelacionada+="\r\n\t\treturn $this->bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual;";
							sTablaClaseRelacionada+="\r\n\t}";
					
							sTablaClaseRelacionada+="\r\n\r\n\tpublic function setbigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual($bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual) {";
							sTablaClaseRelacionada+="\r\n\t\t$this->bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual = $bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual;";
							sTablaClaseRelacionada+="\r\n\t}";
							
							sTablaClaseRelacionada+="\r\n\r\n\tpublic function getbigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription() {";
							sTablaClaseRelacionada+="\r\n\t\treturn $this->bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription;";
							sTablaClaseRelacionada+="\r\n\t}";
					
							sTablaClaseRelacionada+="\r\n\r\n\tpublic function setbigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription($bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription) {";
							sTablaClaseRelacionada+="\r\n\t\t$this->bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription = $bigid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"ActualDescription;";
							sTablaClaseRelacionada+="\r\n\t}";
						}
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						sTablaClaseRelacionada+="\r\n\tpublic function getbitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"() {";
						sTablaClaseRelacionada+="\r\n\t\treturn $this->bitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic function setbitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(";
						sTablaClaseRelacionada+="\r\n\t\t$strBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+") {";
						sTablaClaseRelacionada+="\r\n\t\t$this->bitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+" = $bitBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic function getbigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual() {";
						sTablaClaseRelacionada+="\r\n\t\treturn $this->bigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic void setbigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual($bigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual) {";
						sTablaClaseRelacionada+="\r\n\t\t$this->bigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual = $bigid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";
						sTablaClaseRelacionada+="\r\n\t}";					
						
						ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
						for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
							//true= $strimula que esta en pk clase para obtener get solamente y directamente sin pasar por pk clase
							sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchemaCollectionFK[i],false) ;
							sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchemaCollectionFK[i]) ;					
						} 	
				}
			}
			
				
			return sTablaClaseRelacionada; 
		}
		
		
		
public void TestExtend() 
		{
			String strExtend=string.Empty;
			/*							 			
			strExtend=TablaBase.Description;
			
			System.Windows.Forms.MessageBox.Show(strExtend);
			
			
			foreach(ExtendedProperty extendedProperty in TablaBase.ExtendedProperties)
			{	
				
					if(extendedProperty.Name.Contains("Me_"))
					{
						System.Windows.Forms.MessageBox.Show(extendedProperty.Name);
				
						System.Windows.Forms.MessageBox.Show(extendedProperty.Value.ToString());
				
					}
			}
			*/
			
			/*
			ArrayList arrAccionExtendsProperty=new ArrayList();
			arrAccionExtendsProperty=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendsProperty)
			{
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			*/
			/*
			ArrayList arrAccionPropertyValues=new ArrayList();
			arrAccionPropertyValues=GetPropertyAccionsTableFromPropertiesC(TablaBase,"NOMBRE");
			
			foreach(String  value in arrAccionPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(value);
				
			}
			*/
			
			ArrayList arrAccionExtendPropertyValues=new ArrayList();
			arrAccionExtendPropertyValues=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(GetPropertyAccionTableFromPropertiesC(meExtendProperty,"NOMBRE"));
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			
			//return strExtend; 
		}


		
public String GetTablasClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\tprivate "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasForeigKeysInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					
					if(GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))==GetNombreClaseObjetoC(TablaBase.ToString()))
					{
						continue;
					}
					
					strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"=new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"();";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  void  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
					
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+") {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"="+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
					strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			
				}
				
			}
						
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion="";
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\tpublic ";// void  getTR[";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema)))
					{
					continue;
					}
						strInitFuncion="\r\n\t@ManyToOne(fetch = FetchType.LAZY)";
						strInitFuncion+="\r\n\t@JoinColumn(name = \""+GetNombreColumnFromProperties(columnSchema)+"\", nullable = true,insertable=false, updatable=false)";
						strInitFuncion+="\r\n\tpublic ";
					
					
						strInitFuncion+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" get"+GetPrefijoRelacionC()+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"() {\r\n";
						strTablaClaseRelacionada="\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
					
			    		strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
				}
			}
								
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";// void  getTR_";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strInitFuncion="\r\n\t@OneToOne(fetch = FetchType.LAZY)";//, mappedBy = \""+GetNombreTableFromProperties(TablaBase)+"\")";
					strInitFuncion+="\r\n\tpublic ";	
					strInitFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"() {";
					strTablaClaseRelacionada="\r\n\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
						strInitFuncion="\r\n\t@OneToMany(fetch = FetchType.LAZY, mappedBy = \""+GetPrefijoRelacionC().ToLower()+GetNombreClaseC(TablaBase.ToString())+ "\")";
					} else {
						strInitFuncion="\r\n\t@ManyToMany(fetch = FetchType.LAZY)";//, mappedBy = \""+GetPrefijoRelacionC().ToLower()+GetNombreClaseC(TablaBase.ToString())+ "s\")";
						strInitFuncion+="\r\n\t@JoinTable(";
						strInitFuncion+="\r\n\t\tname=\""+GetNombreTableFromProperties(collectionInfo.JunctionTableSchema)+"\",";
						strInitFuncion+="\r\n\t\tjoinColumns=@JoinColumn(name=\""+strIdDB+GetNombreTableFromProperties(TablaBase)+"\", referencedColumnName=\""+strIdDB+"\"),";
						strInitFuncion+="\r\n\t\tinverseJoinColumns=@JoinColumn(name=\""+strIdDB+GetNombreTableFromProperties(collectionInfo.SecondaryTableSchema)+"\", referencedColumnName=\""+strIdDB+"\")";
						strInitFuncion+="\r\n\t\t)";
					}
					
					strInitFuncion+="\r\n\tpublic ";
					strInitFuncion+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s() {";
					strTablaClaseRelacionada="\r\n\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  void  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+") {\r\n\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t$this->"+GetPrefijoRelacionC().ToLower()+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s("+""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s) {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t$this->"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s;";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					continue;
					//strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s=new "+strTypeNewCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetNombreClase(string strTablaBase)
{	
		return GetNombreClaseC(strTablaBase);
}

public string GetCampoTabla(ColumnSchema column)
{
	string strPrefijo = column.Name;
	return strPrefijo;
	}

</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresa();%>
<?php 
<%=GetByDanLicence()%>
<%=strPhp53VersionComment%>namespace <%=Empresa%>/<%= Package%>/<%= Module%><%=strPackagePresentation%>\session;


if(Constantes::$BIT_CONCARGA_INICIAL_POR_ARCHIVO) {
//include_once(Constantes::$PATH_REL.'<%=Empresa%>/<%= Package%>/<%= Module%><%=strPackageBusiness%>/<%=strPackageEntities%>.*');

include_once(Constantes::$PATH_REL.'<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/Constantes.php');
include_once(Constantes::$PATH_REL.'<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/Funciones.php');
include_once(Constantes::$PATH_REL.'<%=Empresa%>/<%= strPackageFramework%>/<%= PackageFramework%>/<%= strPackageUtils%>/PaqueteTipo.php');

//SIN CARGA INICIAL
/*
include_once(Constantes::$PATH_REL.'<%=Empresa%>/<%=Package%>/<%= Module%><%=strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>/<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.php');
*/

}


class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> extends <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional {
	public $bitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public $strPermiteRecargarInformacion='display:none';
	public $strNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>=null;
	public $bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public $big<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKey=0;	
	public $big<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>Actual=0;	
	<%=GetParameterPkActualParaForeigKeySession()%>
	public $big<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras=0;
	public $bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras=false;
	public $strUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>=null;
	public $strServletGenerarHtmlReporte=null;
	
	public $intNumeroPaginacion=0;
	public $intNumeroPaginacionPagina=0;
	
	public $strPathNavegacionActual='';	
	public $bitPaginaPopup=false;	
	public $strStyleDivHeader='';	
	public $strStyleDivArbol='';	
	public $strStyleDivContent='';
	public $strStyleDivOpcionesBanner='';	
	public $strStyleDivExpandirColapsar='';	
	
	public $strFuncionBusquedaRapida='';
	
	public $conGuardarRelaciones=false;
	public $estaModoGuardarRelaciones=false;
	public $esGuardarRelacionado=false;
	public $estaModoBusqueda=false;
	public $noMantenimiento=false;
	public $strFuncionJsPadre='';
	
	public $<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional;
	
	<%=GetParameterBusquedaFromForeigKeysSession()%>
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } //PARA RELACION UNO A UNO TablaBase.Columns[i].Name==strId||%>
	<%= GetParameterBusquedaClaseC(TablaBase.Columns[i]).Replace("private","public") %>
	<% } %>
	
	<%//for (int i = 0; i < TablaBase.Columns.Count; i++){ break;%>
	<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%//= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% //} %>
					
	<%//= GetTablasClasesRelacionadasForeigKeys() %>
	 	
	<%//= GetTablasClasesRelacionadas() %>
		
	function __construct () {	
		$this->bitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		
		<%if(!GetEsInternoFromPropertiesC(TablaBase)) {%>			
		$this->strPermiteRecargarInformacion='display:table-row';
		<%} else {%>
		$this->strPermiteRecargarInformacion='display:none';
		<%}%>
		
		$this->strNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>='';
		$this->bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		$this->big<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKey=0;
		$this->big<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras=0;
		$this->bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras=false;
		$this->strUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%> ='';
		$this->strServletGenerarHtmlReporte='';
		
		$this->strFuncionBusquedaRapida='';
		
		$this->conGuardarRelaciones=false;
		$this->estaModoGuardarRelaciones=false;
		$this->esGuardarRelacionado=false;
		$this->estaModoBusqueda=false;
		$this->noMantenimiento=false;
		$this->strFuncionJsPadre='';
		
		$this->intNumeroPaginacion=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones::$INTNUMEROPAGINACION;
		$this->intNumeroPaginacionPagina=0;
		$this->strPathNavegacionActual='';
		
		$this->strStyleDivHeader='display:table-row';
		
		<%if(!GetConPopupTableFromProperties(TablaBase)) {%>
		$this->strStyleDivArbol='display:table-row';	
		$this->strStyleDivContent='height:600px';
		$this->strStyleDivOpcionesBanner='display:table-row';
		$this->strStyleDivExpandirColapsar='display:table-row';
		$this->bitPaginaPopup=false;
		<%} else {%>
		$this->strStyleDivArbol='display:none;width:0px;height:0px;visibility:hidden';
		$this->strStyleDivContent='width:93%;height:100%';
		$this->strStyleDivOpcionesBanner='display:none';
		$this->strStyleDivExpandirColapsar='display:none';
		$this->bitPaginaPopup=true;		
		
		//AUTOREFERENCIA INFINITA TALVEZ
		//$this-><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional();
		
		<%}%>
		
		<%=GetValueDefaultParameterBusquedaFromForeigKeysSession()%> 
		
		<%=GetValueDefaultParameterPkActualParaForeigKeySession()%>
		
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } %>
 		<%= GetValueDefaultParameterBusquedaClaseC(TablaBase.Columns[i]) %>
		<% } %>
		
		
		<% //for (int i = 0; i < TablaBase.Columns.Count; i++){break; %>
		<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
 		<%//= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
		<%// } %>
		
		<%//= GetTablasClasesRelacionadasForeigKeysInicializar() %>
		
		<%//= GetTablasClasesRelacionadasInicializar() %>
		
    } 
	
	public function setPaginaPopupVariables($bitPopupVariables) {
		//NO ENTIENDO PORQUE
		if($bitPopupVariables==true) {
			//if($this->bitPaginaPopup==false) {
				$this->strStyleDivArbol='display:none;width:0px;height:0px;visibility:hidden';
				$this->strStyleDivContent='width:93%;height:100%';
				$this->strStyleDivOpcionesBanner='display:none';
				$this->strStyleDivExpandirColapsar='display:none';
				$this->bitPaginaPopup=true;								
			//}
		} else {
			//if($this->bitPaginaPopup==true) {
				$this->strStyleDivArbol='display:table-row';	
				$this->strStyleDivContent='height:600px';
				$this->strStyleDivOpcionesBanner='display:table-row';
				$this->strStyleDivExpandirColapsar='display:table-row';
				$this->bitPaginaPopup=false;				
			//}
		}
	}
	
	public function setPaginaPopupVariablesIFrame() {
		$this->strStyleDivArbol='display:none';
		$this->strStyleDivHeader='display:none';
		$this->strStyleDivContent='width:100%;height:100%';
	}
	
	public function getbitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->bitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setbitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>(
			$bitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->bitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>= $bitPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getstrPermiteRecargarInformacion() {
		return $this->strPermiteRecargarInformacion;
	}

	public function setstrPermiteRecargarInformacion($strPermiteRecargarInformacion) {
		$this->strPermiteRecargarInformacion=$strPermiteRecargarInformacion;
	}
	
	public function getstrNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>($strNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%> = $strNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>(
			$bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>= $bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getbig<%=strIdGetSet%><%=GetNombreClaseC(TablaBase.ToString())%>Actual() {
		return $this->big<%=strIdGetSet%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	}
	
	public function setbig<%=strIdGetSet%><%=GetNombreClaseC(TablaBase.ToString())%>Actual(
			$big<%=strIdGetSet%><%=GetNombreClaseC(TablaBase.ToString())%>Actual) {
		$this->big<%=strIdGetSet%><%=GetNombreClaseC(TablaBase.ToString())%>Actual = $big<%=strIdGetSet%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	}
	
	public function getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey() {
		return $this->bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey;
	}

	public function setbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey(
			$bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey) {
		$this->bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey = $bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey;
	}
				    
	public function getbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras() {
		return $this->bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras;
	}

	public function setbigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras(
			$bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras) {
		$this->bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras = $bigId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras;
	}

	public function getbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras() {
		return $this->bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras;
	}

	public function setbitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras(
			$bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras) {
		$this->bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras = $bitBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras;
	}
	
	public function getstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return $this->strUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public function setstrUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>($strUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>) {
		$this->strUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%> = $strUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public function getstrServletGenerarHtmlReporte() {
		return $this->strServletGenerarHtmlReporte;
	}

	public function setstrServletGenerarHtmlReporte($strServletGenerarHtmlReporte) {
		$this->strServletGenerarHtmlReporte = $strServletGenerarHtmlReporte;
	}
	
	public function getintNumeroPaginacion() {
		return $this->intNumeroPaginacion;
	}

	public function setintNumeroPaginacion($intNumeroPaginacion) {
		$this->intNumeroPaginacion= $intNumeroPaginacion;
	}
	
	public function getintNumeroPaginacionPagina() {
		return $this->intNumeroPaginacionPagina;
	}

	public function setintNumeroPaginacionPagina($intNumeroPaginacionPagina) {
		$this->intNumeroPaginacionPagina= $intNumeroPaginacionPagina;
	}
	
	public function getstrPathNavegacionActual() {
		return $this->strPathNavegacionActual;
	}

	public function setstrPathNavegacionActual($strPathNavegacionActual) {
		$this->strPathNavegacionActual = $strPathNavegacionActual;
	}
	
	public function getbitPaginaPopup() {
		return $this->bitPaginaPopup;
	}

	public function setbitPaginaPopup($bitPaginaPopup) {
		$this->bitPaginaPopup = $bitPaginaPopup;
	}			
	
	public function getstrStyleDivArbol() {
		return $this->strStyleDivArbol;
	}

	public function setstrStyleDivArbol($strStyleDivArbol) {
		$this->strStyleDivArbol = $strStyleDivArbol;
	}
	
	public function getstrStyleDivHeader() {
		return $this->strStyleDivHeader;
	}

	public function setstrStyleDivHeader($strStyleDivHeader) {
		$this->strStyleDivHeader = $strStyleDivHeader;
	}
	
	public function getstrStyleDivContent() {
		return $this->strStyleDivContent;
	}

	public function setstrStyleDivContent($strStyleDivContent) {
		$this->strStyleDivContent = $strStyleDivContent;
	}
	
	public function getstrStyleDivOpcionesBanner() {
		return $this->strStyleDivOpcionesBanner;
	}

	public function setstrStyleDivOpcionesBanner($strStyleDivOpcionesBanner) {
		$this->strStyleDivOpcionesBanner = $strStyleDivOpcionesBanner;
	}	
	
	public function getstrStyleDivExpandirColapsar() {
		return $this->strStyleDivExpandirColapsar;
	}

	public function setstrStyleDivExpandirColapsar($strStyleDivExpandirColapsar) {
		$this->strStyleDivExpandirColapsar = $strStyleDivExpandirColapsar;
	}		
	
	public function getstrFuncionBusquedaRapida() {
		return $this->strFuncionBusquedaRapida;
	}

	public function setstrFuncionBusquedaRapida($strFuncionBusquedaRapida) {
		$this->strFuncionBusquedaRapida = $strFuncionBusquedaRapida;
	}
	
	public function getConGuardarRelaciones() {
		return $this->conGuardarRelaciones;
	}

	public function setConGuardarRelaciones($conGuardarRelaciones) {
		$this->conGuardarRelaciones = $conGuardarRelaciones;
	}	
	
	public function getEstaModoGuardarRelaciones() {
		return $this->estaModoGuardarRelaciones;
	}

	public function setEstaModoGuardarRelaciones($estaModoGuardarRelaciones) {
		$this->estaModoGuardarRelaciones = $estaModoGuardarRelaciones;
	}	
	
	public function getEsGuardarRelacionado() {
		return $this->esGuardarRelacionado;
	}

	public function setEsGuardarRelacionado($esGuardarRelacionado) {
		$this->esGuardarRelacionado = $esGuardarRelacionado;
	}	
	
	public function getEstaModoBusqueda() {
		return $this->estaModoBusqueda;
	}

	public function setEstaModoBusqueda($estaModoBusqueda) {
		$this->estaModoBusqueda = $estaModoBusqueda;
	}
	
	public function getNoMantenimiento() {
		return $this->noMantenimiento;
	}

	public function setNoMantenimiento($noMantenimiento) {
		$this->noMantenimiento = $noMantenimiento;
	}
	
	public function getstrFuncionJsPadre() {
		return $this->strFuncionJsPadre;
	}

	public function setstrFuncionJsPadre($strFuncionJsPadre) {
		$this->strFuncionJsPadre = $strFuncionJsPadre;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } //PUEDE SER R UNO A UNO ||TablaBase.Columns[i].Name==strId%>
    <%= GetParameterBusquedaClaseMethodC(TablaBase.Columns[i],false) %>
		<%if(GetConRangoBusquedasColumnFromPropertiesC(TablaBase.Columns[i])||GetConRangoBusquedasIndicesColumnFromPropertiesC(TablaBase.Columns[i],"TODOS")){ %>
		<%= GetParameterBusquedaClaseMethodC(TablaBase.Columns[i],true) %>
		<% } %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } //PUEDE SER R UNO A UNO ||TablaBase.Columns[i].Name==strId %>
    <%= GetParameterBusquedaClaseSetMethodC(TablaBase.Columns[i],false) %>
		<%if(GetConRangoBusquedasColumnFromPropertiesC(TablaBase.Columns[i])||GetConRangoBusquedasIndicesColumnFromPropertiesC(TablaBase.Columns[i],"TODOS")){ %>
		<%= GetParameterBusquedaClaseSetMethodC(TablaBase.Columns[i],true) %>
		<% } %>
	<% } %>
	
	<%=GetFuncionesGetSetParameterBusquedaFromForeigKeysSession()%>
	
	<%=GetFuncionesGetSetParameterPkActualParaForeigKeySession() %>
	
	<% //for (int i = 0; i < TablaBase.Columns.Count; i++){ break;%>	
	<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%// GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% //} %>
		
	<%// GetFuncionesGetTablasClasesRelacionadasForeigKeys() %>
	
	<%// GetFuncionesGetTablasClasesRelacionadas() %>	
}
?>
<script runat="template">
/*public $strAtributosLinkPopup='';
$this->strAtributosLinkPopup='';

<%if(!blnConJQueryCode){%>
		$this->strAtributosLinkPopup=' class="linkrelacion<%=GetNombreClaseObjetoC(TablaBase.ToString())%>" href="'.Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRNOMBREOPCION.'" title="<%=GetNombreClaseC(TablaBase.ToString())%>" target="_blank" ';
		<%} else {%>
		$this->strAtributosLinkPopup=' class="linkrelacion<%=GetNombreClaseObjetoC(TablaBase.ToString())%>" href="'.Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.str_replace('TOREPLACE',<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCLASSNAME,Constantes::$STRCARPETAPAGINASJQUERYTOREPLACE).'" title="<%=GetNombreClaseC(TablaBase.ToString())%>" target="_blank" ';
		<%}%>

<%if(!blnConJQueryCode){%>
				$this->strAtributosLinkPopup=' class="linkrelacion<%=GetNombreClaseObjetoC(TablaBase.ToString())%>" href="'.Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.Constantes::$STRCARPETAPAGINAS.'/'."+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones::$STRNOMBREOPCION.'" title="<%=GetNombreClaseC(TablaBase.ToString())%>" target="_blank" ';
				<%} else {%>
				$this->strAtributosLinkPopup=' class="linkrelacion<%=GetNombreClaseObjetoC(TablaBase.ToString())%>" href="'.Constantes::$STRHTTPINIT.Constantes::$STRDNSNAMESERVER.':'.Constantes::$STRPORTSERVER.'/'.Constantes::$STRCONTEXTSERVER.'/'.str_replace('TOREPLACE',<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones::$STRCLASSNAME,Constantes::$STRCARPETAPAGINASJQUERYTOREPLACE).'" title="<%=GetNombreClaseC(TablaBase.ToString())%>" target="_blank" ';
				<%}%>
				
				$this->strAtributosLinkPopup='';
				
public function getstrAtributosLinkPopup() {
		return $this->strAtributosLinkPopup;
	}

	public function setstrAtributosLinkPopup($strAtributosLinkPopup) {
		$this->strAtributosLinkPopup = $strAtributosLinkPopup;
	}	
*/
	
</script>