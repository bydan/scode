<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>


<script runat="template">
/*
	SERVICIOS
*/
public  string DefinirVariablesArray()
{
	String strVariablesArray="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\tthis."+ "arrData"+GetNombreClaseRelacionadaFromColumn(column)+"= [];";
		}	
	}
	return strVariablesArray;
}

public  string DefinirVariablesArrayUnico()
{
	String strVariablesArray="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\tthis."+ "intIdUnico"+GetNombreClaseRelacionadaFromColumn(column)+"= 0;";
			strVariablesArray+="\r\n\tthis."+ "strDescripcionUnico"+GetNombreClaseRelacionadaFromColumn(column)+"= \"none\";";
		}	
	}
	return strVariablesArray;
}

public String GetCallFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=String.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.Name==strIsActive||columnSchema.Name==strIsExpired||columnSchema.Name==strVersionRow||!columnSchema.IsForeignKeyMember)
				{
					continue; 
				} 
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					
					if(!EsClaseRelacionadaUnoAUnoFromColumnC(columnSchema))
					{
						strTablaClaseRelacionada+="\r\n\t\tvar arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" = [];\r\n";
						strTablaClaseRelacionada+="\r\n\t\tif(this.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"==0) {";
						strTablaClaseRelacionada+="\r\n\t\t\tthis.cargar"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "();\r\n\r\n";
						strTablaClaseRelacionada+="\t\t} ";
						strTablaClaseRelacionada+="else {\r\n";
						strTablaClaseRelacionada+="\t\t\tarrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" = [];\r\n";
						strTablaClaseRelacionada+="\t\t\tvar data"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"={label:this.strDescripcionUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+",value:this.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"};\r\n";
						strTablaClaseRelacionada+="\t\t\tarrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".push(data"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+");\r\n\r\n";
						strTablaClaseRelacionada+="\t\t\tthis.arrData"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"=arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
						strTablaClaseRelacionada+="\r\n\t\t\tif(jmaki.attributes.get('"+GetNameControlHtml(columnSchema)+"')!=undefined)";
						strTablaClaseRelacionada+=" {\r\n";
						strTablaClaseRelacionada+="\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(columnSchema)+"').setValues(this.arrData"+ GetNombreClaseRelacionadaFromColumn(columnSchema) +");\r\n";
						strTablaClaseRelacionada+="\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(columnSchema)+"').wrapper.setValue(this.strDescripcionUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+");\r\n";
						
						
						strTablaClaseRelacionada+="\t\t\t}\r\n";
						//strTablaClaseRelacionada+=SetDataToCombosBusquedasIndiceSoloFKTablaSeleccionadoC(columnSchema,TablaBase); 
						strTablaClaseRelacionada+="\t\t}\r\n";
					}
					else
					{
						if(!columnSchema.IsForeignKeyMember)
						{
							continue;
						}
						
						strTablaClaseRelacionada+="\r\n\tdocument.frmMantenimiento"+GetNombreClaseC(TablaBase.ToString())+".hdnIdActual.value=this.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+";\r\n";
					}
				}
			}
			return strTablaClaseRelacionada; 
		}

public String GetCargarComboCallFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=String.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.Name==strIsActive||columnSchema.Name==strIsExpired||columnSchema.Name==strVersionRow||!columnSchema.IsForeignKeyMember)
				{
					continue; 
				} 
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					
					if(!EsClaseRelacionadaUnoAUnoFromColumnC(columnSchema))
					{
						
						
						strTablaClaseRelacionada+="\r\n\tthis.cargarCombo"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"=function() ";
						strTablaClaseRelacionada+="{\r\n";
						strTablaClaseRelacionada+="\r\n\t\tvar arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" = [];\r\n";
						strTablaClaseRelacionada+="\r\n\t\tif(this.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"==0) {";
						strTablaClaseRelacionada+="\r\n\t\t\tthis.cargar"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "();\r\n\r\n";
						strTablaClaseRelacionada+="\t\t} ";
						strTablaClaseRelacionada+="else {\r\n";
						strTablaClaseRelacionada+="\t\t\tarrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" = [];\r\n";
						strTablaClaseRelacionada+="\t\t\tvar data"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"={label:this.strDescripcionUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+",value:this.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"};\r\n";
						strTablaClaseRelacionada+="\t\t\tarrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".push(data"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+");\r\n\r\n";
						strTablaClaseRelacionada+="\t\t\tthis.arrData"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"=arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
						strTablaClaseRelacionada+="\r\n\t\t\tif(jmaki.attributes.get('"+GetNameControlHtml(columnSchema)+"')!=undefined) ";
						strTablaClaseRelacionada+="{\r\n";
						strTablaClaseRelacionada+="\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(columnSchema)+"').setValues(this.arrData"+ GetNombreClaseRelacionadaFromColumn(columnSchema) +");\r\n";
						strTablaClaseRelacionada+="\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(columnSchema)+"').wrapper.setValue(this.strDescripcionUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+");\r\n";
						
						
						strTablaClaseRelacionada+="\t\t\t}\r\n";
						//strTablaClaseRelacionada+=SetDataToCombosBusquedasIndiceSoloFKTablaSeleccionadoC(columnSchema,TablaBase); 
						strTablaClaseRelacionada+="\t\t}\r\n";
						
						strTablaClaseRelacionada+="\t\t};\r\n\r\n";
						
					}
					else
					{
						if(!columnSchema.IsForeignKeyMember)
						{
							continue;
						}
						
						strTablaClaseRelacionada+="\r\n\tdocument.frmMantenimiento"+GetNombreClaseC(TablaBase.ToString())+".hdnIdActual.value=this.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+";\r\n";
					}
				}
			}
			return strTablaClaseRelacionada; 
		}

public String GetFuncionesSetClasesRelacionadasForeigKeysUnico() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String InitFuncion="\r\n\tthis.set";							
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=InitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "Unico=function(newId"+GetNombreClaseRelacionadaFromColumn(columnSchema) +"Unico,newStrDescripcion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"Unico) {\r\n";
					strTablaClaseRelacionada+="\t\tthis.intIdUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+ " =newId"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"Unico;\r\n";
					strTablaClaseRelacionada+="\t\tthis.strDescripcionUnico"+GetNombreClaseRelacionadaFromColumn(columnSchema)+ " =newStrDescripcion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"Unico;\r\n";
					strTablaClaseRelacionada+="\t};\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String InitFuncion="\r\n\tthis.cargar";							
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=InitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "=function() {\r\n";
					//strTablaClaseRelacionada+="\tvar arrDataCombos = [];\r\n";
					//strTablaClaseRelacionada+="\tvar rowDataCombo = [];\r\n";
					//strTablaClaseRelacionada+=GetRowsArrayCombosBusquedas();	
					strTablaClaseRelacionada+="\t\tvar "+ GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"Logic=new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"Logic();\r\n";
					strTablaClaseRelacionada+="\t\t"+ GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"Logic.buscar"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"scargarCombos(\"accionBusqueda=Todos\","+/*GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+*/"\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";
					strTablaClaseRelacionada+="\t};\r\n";
				}
			}
			return strTablaClaseRelacionada; 
		}

public String GetFuncionesTraerClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerClasesRelacionadasForeigKeys(GetTablaFromNombreClaseC(GetNombreClaseRelacionadaFromColumn(columnSchema),TablaBase),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetCallFuncionesClasesRelacionadasDondeTablaEsForeigKey() 
		{
			String strTablaClaseRelacionada=String.Empty;
										
				SchemaExplorer.TableSchemaCollection tablasDondeTablaEsForeigKey=GetTablasRelacionadasDondeTablaEsForeignKeyC(TablaBase);
										
			foreach(TableSchema tableSchema in tablasDondeTablaEsForeigKey)
			{	
				strTablaClaseRelacionada+="\r\n\t\tif(strNombrePantallaCombos==\""+GetNombreClase(tableSchema.ToString())+"\") {";
				//strTablaClaseRelacionada+="\r\n\t\tvar "+GetNombreClaseObjeto(tableSchema.ToString())+"Servicio=new "+GetNombreClase(tableSchema.ToString())+"Servicio();";
				strTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjeto(tableSchema.ToString())+"Servicio.cargarCombosPantalla"+GetNombreClase(TablaBase.ToString())+"s("+"arrData"+GetNombreClase(TablaBase.ToString())+"s);";
				strTablaClaseRelacionada+="\r\n\t\t}\r\n";
			}
			return strTablaClaseRelacionada; 
		}
		
/*
	/SERVICIO
*/

public  string SetVariablesToQueryGuardar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||(column.DataType==DbType.Binary&&column.Name!=strVersionRow))
	{
	strSet+="";
	continue;
	}
	
	strSet+="\r\n\t\t\tstrQueryString"+GetNombreClase(TablaBase.ToString())+"=strQueryString"+GetNombreClase(TablaBase.ToString())+"+";
	
	if(!column.IsForeignKeyMember)	
	{
		if(column.DataType==DbType.Boolean)
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+ "+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseJavaScriptFiltradosC(column,true)+ ";";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseJavaScriptFiltradosC(column,true)+ ";";		
		}
		else
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseJavaScriptFiltradosC(column,true)+ ";";
		}
	}
	else
	{
		strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseJavaScriptFiltradosC(column,true)+ ";";		
	}
}	
	return strSet;
}

public String GetFuncionesTraerDescripcionClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerDescripcionClasesRelacionadasForeigKeys(GetTablaFromNombre(GetNombreClaseRelacionadaFromColumn(columnSchema)),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionTraerDescripcionClasesRelacionadasForeigKeys(TableSchema tableSchema,ColumnSchema column) 
{
String strTraerFuncionTablaClaseRelacionada=string.Empty;

strTraerFuncionTablaClaseRelacionada="function traer"+GetNombreClase(tableSchema.ToString())+"Descripcion(item)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="{\r\nvar description=\"\";\r\n";
  
	
	 for (int i = 0; i < tableSchema.Columns.Count; i++){ 
			strTraerFuncionTablaClaseRelacionada+=" "+GetVariablesFromXml(tableSchema.Columns[i],false,false); 	
 		 } 	
		
strTraerFuncionTablaClaseRelacionada+="\r\n description=id;	\r\n";

strTraerFuncionTablaClaseRelacionada+="\r\nreturn description;\r\n}\r\n\r\n";

return strTraerFuncionTablaClaseRelacionada;
}
/*
public  string DefinirVariablesArray()
{
	String strVariablesArray="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="var arrData"+column.Name.Replace(strId,"")+"= [];\r\n";
		}	
	}
	return strVariablesArray;
}
*/

public String GetMensajeFunctionValidationControlHtml() 
{
String strCodigo=string.Empty;
String strRetorno=string.Empty;

	foreach(ColumnSchema column in TablaBase.Columns)
	{
			if(column.AllowDBNull)
			{
			strRetorno="retorno= true;";
			}
			else
			{
			strRetorno="retorno= false;";
			}
			
			if(column.DataType==DbType.Boolean|| column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow))
			{
			strCodigo+=string.Empty;
			continue;
			}
			if(!column.IsForeignKeyMember)	
			{
				if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
				{
				strCodigo+="\r\nvar str"+column.Name+"="+GetFunctionValidationControlHtml(column).Replace("this","jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue()")+ ";";
				strCodigo+="\r\ncreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ column.Name+"',str"+column.Name+");";	
				strCodigo+="\r\nif(str"+column.Name+"!=\"\")\r\n{\r\nretorno= false;\r\n}";
				}
				else
				{
				strCodigo+="\r\nvar str"+column.Name+"="+GetFunctionValidationControlHtml(column).Replace("this","document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column))+";";
				strCodigo+="\r\ncreateSimpleYahooDialogErrorValidacion('Validacion campo:"+ column.Name+"',str"+column.Name+",document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column)+");";	
				strCodigo+="\r\nif(str"+column.Name+"!=\"\")\r\n{\r\nretorno= false;\r\n}";
				}
				
			}
			else
			{
				
				strCodigo+="\r\nvar str"+column.Name+"=ValidarCombo(arrData"+column.Name.Replace(strId,"")+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
				strCodigo+="\r\ncreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ column.Name.Replace(strId,"")+"',str"+column.Name+");";	
				strCodigo+="\r\nif(str"+column.Name+"!=\"\")\r\n{\r\n"+ strRetorno +";\r\n}";	
			}
	}						
			return strCodigo; 
}
/*		
public String GetFuncionesTraerClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerClasesRelacionadasForeigKeys(GetTablaFromNombre(GetNombreClaseRelacionadaFromColumn(columnSchema)),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}
*/

public String GetFuncionTraerClasesRelacionadasForeigKeys(TableSchema tableSchema,ColumnSchema column) 
{
String strTraerFuncionTablaClaseRelacionada=string.Empty;

strTraerFuncionTablaClaseRelacionada="function traer"+GetNombreClase(tableSchema.ToString())+"s("+GetNombreClaseObjeto(tableSchema.ToString())+"XML)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="{\r\n";

strTraerFuncionTablaClaseRelacionada+="var "+GetNombreClaseObjeto(tableSchema.ToString())+" = "+GetNombreClaseObjeto(tableSchema.ToString())+"XML.getElementsByTagName(\""+GetNombreClaseObjeto(tableSchema.ToString())+"\")[0];\r\n";
strTraerFuncionTablaClaseRelacionada+="var generated ="+ GetNombreClaseObjeto(tableSchema.ToString())+".getAttribute(\"generated\");\r\n";

   
strTraerFuncionTablaClaseRelacionada+="   var items ="+ GetNombreClaseObjeto(tableSchema.ToString())+".getElementsByTagName(\"item\");\r\n";
strTraerFuncionTablaClaseRelacionada+="   var arrData = [];\r\n";

strTraerFuncionTablaClaseRelacionada+="   for (var I = 0 ; I < items.length ; I++)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="   {\r\n";
strTraerFuncionTablaClaseRelacionada+="	 var item = items[I];\r\n";
	
	 for (int i = 0; i < tableSchema.Columns.Count; i++){ 
			strTraerFuncionTablaClaseRelacionada+=" "+GetVariablesFromXml(tableSchema.Columns[i],false,false); 	
 		 } 	
		
strTraerFuncionTablaClaseRelacionada+="	arrData.push([traer"+GetNombreClase(tableSchema.ToString())+"Descripcion(item) , id]);\r\n";
strTraerFuncionTablaClaseRelacionada+="	}\r\n";

strTraerFuncionTablaClaseRelacionada+="	arrData"+column.Name.Replace(strId,"")+"=arrData;\r\n";

strTraerFuncionTablaClaseRelacionada+="	jmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.dataProvider.setData(arrData);\r\n";
strTraerFuncionTablaClaseRelacionada+=SetDataToCombosBusquedasIndiceTabla(column); 
strTraerFuncionTablaClaseRelacionada+="\r\n}\r\n\r\n";

return strTraerFuncionTablaClaseRelacionada;
}

public TableSchema GetTablaFromNombre(String strTableNombre) 
		{
			TableSchema tableSchemaEncontrada=TablaBase;
			
			tableSchemaEncontrada=GetTablaFromNombreC(strTableNombre,TablaBase);
			
			return tableSchemaEncontrada;
		}
/*			
public String GetFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String InitFuncion="function cargar";							
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=InitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()\r\n{\r\n";
					strTablaClaseRelacionada+="var req = newXMLHttpRequest();\r\n";
					strTablaClaseRelacionada+="req.onreadystatechange = getReadyStateHandler(req, traer"+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"s);\r\n";
					strTablaClaseRelacionada+="req.open(\"POST\", \""+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"Servlet\", true);\r\n";
					strTablaClaseRelacionada+="req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n";
					strTablaClaseRelacionada+="req.send(\"accionBusqueda=Todos\");\r\n}\r\n\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetCallFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="cargar"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "();\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
*/	
public String ValoresMinimoMaximoPaginacion() 
{
			String strPAginacion="";
			strPAginacion="+\"&inicio=\"+numero"+GetNombreClase(TablaBase.ToString())+"sPaginacionPagina+\"&fin=\"+numero"+GetNombreClase(TablaBase.ToString())+"sPaginacion";
			return strPAginacion;
}

public String GetSendBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\nelse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			strXmlFuncion="\r\n\t\treq.send(";
							
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strXmlFuncion="\r\n\t\treq.send(";
					
					if(indexSchema.IsUnique)
					{
						if( TieneColumnaTipoTexto(indexSchema))
						{
							continue;
						}	
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\telse if(strAccionBusqueda==\""+indexSchema.Name+"\")\r\n\t{\r\n\t\tif(!ValidarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"())\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(finalQueryPaginacion,";
						strIfFuncion="\r\n\telse if(strAccionBusqueda==\""+indexSchema.Name+"\")\r\n\t{\r\n\t\tif(!ValidarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"())\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\telse if(strAccionBusqueda==\""+indexSchema.Name+"\")\r\n\t{\r\n\t\tif(!ValidarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"())\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
																				
							strDefinicionVariables+="\r\n\t\t"+SetDocumentToVariablesBusqueda(memberColumnSchema.Column,indexSchema.Name);
							strUsoVariables+=SetDocumentToVariablesQueryString(memberColumnSchema.Column,indexSchema.Name);
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
							strUsoVariables+="+\"&";	
							}
							count++;
							}
							strXmlFuncion="\r\n\t\tultimaBusqueda"+GetNombreClase(TablaBase.ToString())+"=\"accionBusqueda="+indexSchema.Name+"&"+strUsoVariables+ValoresMinimoMaximoPaginacion()+";"+strXmlFuncion;
							strXmlFuncion+="ultimaBusqueda"+GetNombreClase(TablaBase.ToString())+ ");\r\n";
							
							strXmlFuncion+="\t\tparametrosBusqueda"+GetNombreClase(TablaBase.ToString())+"=\"&"+strUsoVariables+";\r\n";
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strXmlFuncion+"\t}";																																		
					
				}
			}								
			return  strInitFuncion;
		}
		
public String SetDataToCombosBusquedasIndiceTabla(ColumnSchema column) 
	{
			String	strDataToCombos="";		
						
			strDataToCombos=SetDataToCombosBusquedasIndiceTablaC(column,TablaBase);		
						
			return strDataToCombos;	
			
	}

public String GetFuncionesValidarFormularioBusquedasIndiceTabla() 
	{
			String	strValidarFormularios="";		
			
			String	strRetorno="";				
			
			strRetorno="\tretorno= false;";
			
						
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					if( indexSchema.IsUnique&&TieneColumnaTipoTexto(indexSchema))
					{
							continue;
					}
					
				strValidarFormularios+="\r\n\r\nfunction ValidarFormulario"+GetNombreClase(TablaBase.ToString())+ indexSchema.Name +"()\r\n{\r\n\tvar retorno =true;\r\n";
				
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								if(memberColumnSchema.DataType==DbType.Boolean)
								{
									continue;
								}	
								
								if(!memberColumnSchema.IsForeignKeyMember)	
								{
									if(memberColumnSchema.DataType==DbType.Date||memberColumnSchema.DataType==DbType.DateTime)
									{
									strValidarFormularios+="\r\n\tvar str"+memberColumnSchema.Name+"="+GetFunctionValidationControlHtml(memberColumnSchema).Replace("this","jmaki.attributes.get('"+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name) +"').getValue()")+ ";";
									strValidarFormularios+="\r\n\tcreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ memberColumnSchema.Name+"',str"+memberColumnSchema.Name+");";	
									strValidarFormularios+="\r\n\r\n\t\tif(str"+memberColumnSchema.Name+"!=\"\")\r\n\t\t{\r\n\t\t\tretorno= false;\r\n\t\t}\r\n";
									}
									else
									{
									strValidarFormularios+="\r\n\tvar str"+memberColumnSchema.Name+"="+GetFunctionValidationControlHtml(memberColumnSchema).Replace("this","document.frmBusqueda"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name))+";";
									strValidarFormularios+="\r\n\tcreateSimpleYahooDialogErrorValidacion('Validacion campo:"+ memberColumnSchema.Name+"',str"+memberColumnSchema.Name+",document.frmBusqueda"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name)+");";	
									strValidarFormularios+="\r\n\r\n\t\tif(str"+memberColumnSchema.Name+"!=\"\")\r\n\t\t{\r\n\t\t\tretorno= false;\r\n\t\t}\r\n";
									}
									
								}
								else
								{
									
									strValidarFormularios+="\r\n\tvar str"+memberColumnSchema.Name+"=ValidarCombo(arrData"+memberColumnSchema.Name.Replace(strId,"")+",jmaki.attributes.get('"+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name) +"').getValue());";		
									strValidarFormularios+="\r\n\tcreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ memberColumnSchema.Name.Replace(strId,"")+"',str"+memberColumnSchema.Name+");";	
									strValidarFormularios+="\r\n\r\n\t\tif(str"+memberColumnSchema.Name+"!=\"\")\r\n\t\t{\r\n\t\t\t"+ strRetorno +";\r\n\t\t}\r\n";	
								}
							}
					strValidarFormularios+="\r\n\r\n\treturn retorno;\r\n}";
				}
				
				
			}								
			return  strValidarFormularios;
	}

public string SetDocumentToVariablesQueryStringBusquedaIndice(ColumnSchema column,String strIndice)
{
	
	return GetNameControlHtmlBusqueda(column,strIndice)+ "=\"+"+GetNombreColumnaClaseMinusculaC(column);
}

public string SetDocumentToVariablesQueryString(ColumnSchema column,String indexName)
{
	
	return GetNameControlHtml(column)+indexName+ "=\"+"+GetNombreColumnaClaseMinusculaC(column);
}

public string SetDocumentToVariables(ColumnSchema column)
{
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
	}
	else
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
	}
	
	return strSet;
}

public  string SetDocumentToVariablesBusqueda(ColumnSchema column,String strIndexName)
{
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="\r\n\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmBusqueda"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtmlBusqueda(column,strIndexName) +".checked;";
	}
	else
	{
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
			strSet="\r\n\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtmlBusqueda(column,strIndexName)+"').wrapper.datePicker.getValue();"; 
		
			}
			else
			{
			strSet="\r\n\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmBusqueda"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtmlBusqueda(column,strIndexName) +".value;";
		
			}
		}
		else
		{
			strSet="\r\n\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=getIdCombo(arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtmlBusqueda(column,strIndexName)+"').getValue());"; 
		}
	}
	
	return strSet;
}

public  string VariablesBusquedaPreguntarVacio(ColumnSchema column)
{
	String strSet="";
	
	strSet= "document.frmBusqueda"+ GetNombreClase(TablaBase.ToString()) +"."+GetNameControlHtml(column) +".value=\"\"";
	
	return strSet;
}

public  string SetDocumentVariablesActual()
{
	String strSet="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.Name==strIsActive||column.Name==strIsExpired)
		{
		strSet+="";
		continue;
		}
		
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Boolean)
			{
			strSet+="\r\ndocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=CambiarNullAVacio("+GetNombreColumnaClaseMinusculaC(column)+");";
			}
			else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
			strSet+="\r\njmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.datePicker.setDate(CambiarNullAVacio("+GetNombreColumnaClaseMinusculaC(column)+"));"; 
			}
			else
			{
			strSet+="\r\ndocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=CambiarNullAVacio("+GetNombreColumnaClaseMinusculaC(column)+");";
			}
		}
		else
		{
			strSet+="\r\njmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.setValue(CambiarNullAVacio("+GetNombreColumnaClaseMinusculaC(column)+"));"; 
		}	
	}
	
	return strSet;
}

public  string SetDocumentVariablesCancelar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	strSet+="";
	continue;
	}
	
	
	if(!column.IsForeignKeyMember)	
	{		
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\ndocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=false;";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\njmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.datePicker.setDate(new Date());";		
		}
		else
		{
		strSet+="\r\ndocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=\"\";";
		}
	}
	else
	{
	strSet+="\r\njmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.setValue(\"\");";	
	}
}	
	return strSet;
}

public string SetDocumentToVariablesEliminar()
{
	String strVariable= "";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
		{
		strVariable+="";
		continue;
		}
		else if(column.Name==strId)
		{
		strVariable+=strVariable="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	return strVariable;
}

public string SetDocumentToVariablesNuevo()
{
String strSet="";
foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strId||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	strSet+="";
	continue;
	}
	if(!column.IsForeignKeyMember)	
	{	
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
		}
		else
		{
		strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	else
	{
	strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=getIdCombo(arrData"+column.Name.Replace(strId,"")+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
	}
}	
	return strSet;
}

public  string SetDocumentToVariablesActualizar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	strSet+="";
	continue;
	}
	
	if(!column.IsForeignKeyMember)	
	{
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
		}
		else
		{
		strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	else
	{
	strSet+="\r\nvar "+GetNombreColumnaClaseMinusculaC(column)+ "=getIdCombo(arrData"+column.Name.Replace(strId,"")+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
	}
}	
	return strSet;
}

public string SetVariablesToDocument(ColumnSchema column)
{
	
if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	return "";
	}
	
	
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +").checked="+ GetNombreColumnaClaseMinusculaC(column);
	}
	else
	{
	strSet="document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +").value="+ GetNombreColumnaClaseMinusculaC(column);
	}
	
	return strSet;
}

public  string GetNombreColumnaClaseMinusculasFiltradosArrayToTabla(ColumnSchema column)
{
	//CambiarBooleanValueToControl(
	
	String strValor="";
	
if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||column.Name==strVersionRow||(column.DataType==DbType.Binary&&column.Name!=strVersionRow))
	{
	return "";
	}
	
	if(column.DataType!=DbType.Boolean&&!column.IsForeignKeyMember)
	{
	strValor=GetNombreColumnaClaseMinusculaC(column)+":"+ "arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column);
	}
	else if(column.DataType==DbType.Boolean)
	{
	strValor=GetNombreColumnaClaseMinusculaC(column)+":"+ "arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column);
	strValor+=",";
	strValor=GetNombreColumnaClaseMinusculaC(column)+"Control:"+"CambiarBooleanValueToControl(arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+",arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+strId+")";
	}
	else if(column.IsForeignKeyMember)
	{
	strValor=GetNombreColumnaClaseMinusculaC(column)+"Descripcion:"+"arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+"Descripcion";
	strValor+=",";
	strValor+=GetNombreColumnaClaseMinusculaC(column)+":"+"arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column);
	}
	return strValor;
}

public static string SetVariablesToQueryStringNuevo(ColumnSchema column)
	{
		String strNombre;
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	return "";
	}
	
		
	strNombre="\"&"+GetNameControlHtml(column) +"=\"+" +column.Name.Substring(0, column.Name.Length).ToLower();	
		
	return strNombre;
	}
	
public static string SetVariablesToQueryStringActualizar(ColumnSchema column)
	{
		String strNombre;
	
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	return "";
	}
	
		
	strNombre="\"&"+GetNameControlHtml(column) +"=\"+" +column.Name.Substring(0, column.Name.Length).ToLower();	
		
	return strNombre;
	}
	
public static string GetVariablesFromXml(ColumnSchema column,bool reemplazarForeigKey,bool reemplazarBooleanValue)
	{
		String strNombre= "";
		strNombre = GetVariablesFromXmlC(column,reemplazarForeigKey,reemplazarBooleanValue);
	return strNombre;
	}

public  string GetCamposOrdenacionSetArray(ColumnSchema column)
	{
		String strNombre= "";
		strNombre = "arrDataOrdenar"+GetNombreClase(TablaBase.ToString())+"s.push([\""+column.Name.Substring(0,1).ToUpper()+column.Name.Substring(1,column.Name.Length-1).ToLower()+"\",\""+column.Name+"\"]);";
	return strNombre;
	}


public String GetIndicesTablasClasesDeepSave() 
		{
			String strInit="\r\n this.Save("+GetNombreClaseObjeto(TablaBase.ToString())+");\r\n";
						
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada2="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+"deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
			}
			//strTablaClaseRelacionada2+="\r\n}\r\n";					
			//return strTablaClaseRelacionada; 
			
			
			
			String strTablaClaseRelacionada3=string.Empty;
			System.Collections.Hashtable tablasRelacionadas3=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada3="\r\nfor(Class clas:clases)\r\n{\r\nif(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strTablaClaseRelacionada3+="\r\nif(clas.getName().equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n{\r\n";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+",deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada3+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
				strTablaClaseRelacionada3+="\r\n}\r\n";
			}
			strTablaClaseRelacionada3+="\r\n}\r\n}\r\n";
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="TraerTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada0+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada0+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada0+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada0+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");"+"\r\n}\r\n";
				
				}
			}
			
			
			
			strIfFuncion=strInit+strInitIfFuncion+strTablaClaseRelacionada0+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
			return strIfFuncion; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada2="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
			}
			//strTablaClaseRelacionada2+="\r\n}\r\n";					
			//return strTablaClaseRelacionada; 
			
			
			
			String strTablaClaseRelacionada3=string.Empty;
			System.Collections.Hashtable tablasRelacionadas3=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada3="\r\nfor(Class clas:clases)\r\n{\r\nif(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strTablaClaseRelacionada3+="\r\nif(clas.getName().equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n{\r\n";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+",deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada3+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
				strTablaClaseRelacionada3+="\r\n}\r\n";
			}
			strTablaClaseRelacionada3+="\r\n}\r\n}\r\n";
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="setTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\r\n}\r\n"+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			return strIfFuncion; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo) 
		{
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\nParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\nparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\nqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="public "+GetNombreClaseC(TablaBase.ToString())+" "+"Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"=new "+GetNombreClaseC(TablaBase.ToString())+"();\r\ntry\r\n{";
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\nreturn "+GetNombreClaseObjetoC(TablaBase.ToString())+";\r\n}\r\n";
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strInitFuncion+="public "+"ArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						strInitFuncion+="public "+"ArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						strBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new ArrayList<"+GetNombreClaseC(TablaBase.ToString())+">();\r\ntry\r\n{";
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strBodyFuncion+="\r\nqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n";		
						
						}
						else
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\nreturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"s;\r\n}\r\n";
				
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
					strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					
					if(!count.Equals(indexSchema.MemberColumns.Count))
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false);
					}
					else
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true);
					}
					
					if(!indexSchema.MemberColumns.Count.Equals(count))
					{
					
					strParametersFuncion+=",";
					strParametersNameFuncion+=",";	
					}
					count++;
					}
					
					strInitFuncion+=strParametersFuncion+")\r\n{"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  TraerTR_";
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public static string GetSetEntityColumna(ColumnSchema column,String table)
{				
	String strSetEntity=string.Empty;
	
	if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
	{
		return strSetEntity;
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}
</script>
<%=strJSInitialJavaScript%>

/*Empresa: <%=Empresa%>
 *Programador: <%=NombreProgramador%>
 *Descripcion: Clase que contiene todos los Accesos a BDD de tabla <%=TablaBase.ToString().Split('.')[1]%>
 * Fecha Creacion: <%= DateTime.Now.ToLongDateString() %>
 **CAMBIOS***** 
 * Motivo Cambio:
 * Nombre Programador:
 * Fecha Cambio:
 **************
 */

var <%=GetNombreClase(TablaBase.ToString())%>Logic= function () {	
	var arrData<%=GetNombreClase(TablaBase.ToString())%>s= [];
	var <%=GetNombreClaseObjeto(TablaBase.ToString())%>Servicio=new <%=GetNombreClase(TablaBase.ToString())%>Servicio();
	var <%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess=new <%=GetNombreClase(TablaBase.ToString())%>DataAccess();
	
	//FUNCIONES LOGIC DE LAYERCOMMUNICATION
	this.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarTablaAjax=function(strParametrosBusqueda) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.buscar<%=GetNombreClase(TablaBase.ToString())%>s(strParametrosBusqueda,constantes.STRCAPASCARGARTABLAAJAX);
	};
	
	this.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarCombos=function(strParametrosBusqueda,strPantallaNameCombos) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarCombos(strParametrosBusqueda,constantes.STRCAPASCARGARCOMBOS,strPantallaNameCombos);
	};
	
	this.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarDatos=function(strParametrosBusqueda) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.buscar<%=GetNombreClase(TablaBase.ToString())%>s(strParametrosBusqueda,constantes.STRCAPASCARGARDATOS);
	};
	
	this.setArrData<%=GetNombreClase(TablaBase.ToString())%>s=function(arrData<%=GetNombreClase(TablaBase.ToString())%>s) {
		arrData<%=GetNombreClase(TablaBase.ToString())%>s= arrData<%=GetNombreClase(TablaBase.ToString())%>s;
	};
	
	this.getArrData<%=GetNombreClase(TablaBase.ToString())%>s=function() {
		return arrData<%=GetNombreClase(TablaBase.ToString())%>s;
	};
	
	this.guardar<%=GetNombreClase(TablaBase.ToString())%>s=function(arrData<%=GetNombreClase(TablaBase.ToString())%>s,strUltimaBusqueda<%=GetNombreClase(TablaBase.ToString())%>) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.guardar<%=GetNombreClase(TablaBase.ToString())%>s(arrData<%=GetNombreClase(TablaBase.ToString())%>s,strUltimaBusqueda<%=GetNombreClase(TablaBase.ToString())%>);
	};
	
	this.guardar<%=GetNombreClase(TablaBase.ToString())%>Relaciones=function(arrData<%=GetNombreClase(TablaBase.ToString())%>s<%=GetJavaScriptArraysClasesRelacionadasC(TablaBase)%>,strUltimaBusqueda<%=GetNombreClase(TablaBase.ToString())%>) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.guardar<%=GetNombreClase(TablaBase.ToString())%>Relaciones(arrData<%=GetNombreClase(TablaBase.ToString())%>s<%=GetJavaScriptArraysClasesRelacionadasC(TablaBase)%>,strUltimaBusqueda<%=GetNombreClase(TablaBase.ToString())%>);
	};
	
	this.registrarEventoSinRespuesta<%=GetNombreClase(TablaBase.ToString())%>=function(strParametrosEvento,strServlet,strMetodoInvocacion) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.registrarEventoSinRespuesta<%=GetNombreClase(TablaBase.ToString())%>(strParametrosEvento,strServlet,strMetodoInvocacion);
	};
	
	this.registrarEventoIrAPagina<%=GetNombreClase(TablaBase.ToString())%>=function(strParametrosEvento,strServlet,strMetodoInvocacion) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.registrarEventoIrAPagina<%=GetNombreClase(TablaBase.ToString())%>(strParametrosEvento,strServlet,strMetodoInvocacion);
	};
	
	this.registrarEventoIrAPaginaNueva<%=GetNombreClase(TablaBase.ToString())%>=function(strParametrosEvento,strServlet,strMetodoInvocacion) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.registrarEventoIrAPaginaNueva<%=GetNombreClase(TablaBase.ToString())%>(strParametrosEvento,strServlet,strMetodoInvocacion);
	};
	
	this.registrarEventoConRetorno<%=GetNombreClase(TablaBase.ToString())%>=function(strParametrosEvento,strServlet,strMetodoInvocacion,strManejarBusqueda) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.registrarEventoConRetorno<%=GetNombreClase(TablaBase.ToString())%>(strParametrosEvento,strServlet,strMetodoInvocacion,strManejarBusqueda);
	};
	
	//FUNCIONES LOGIC ORIGINAL
	
	this.manejarData<%=GetNombreClase(TablaBase.ToString())%>s=function(arrData<%=GetNombreClase(TablaBase.ToString())%>sDataAccessAdditional,strTipoManejarBusqueda) {
		arrData<%=GetNombreClase(TablaBase.ToString())%>s= [];	
		arrData<%=GetNombreClase(TablaBase.ToString())%>s=arrData<%=GetNombreClase(TablaBase.ToString())%>sDataAccessAdditional;
		
		if(strTipoManejarBusqueda==constantes.STRCAPASCARGARTABLAAJAX) {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>PaginaWebInteraccion.addRows<%=GetNombreClase(TablaBase.ToString())%>sTablaAjax(arrData<%=GetNombreClase(TablaBase.ToString())%>s);
		
		} else if(strTipoManejarBusqueda==constantes.STRCAPASCARGARDATOS) {
			setarrData<%=GetNombreClase(TablaBase.ToString())%>s(arrData<%=GetNombreClase(TablaBase.ToString())%>s);
		}
	};
	
	this.manejarPermisos<%=GetNombreClase(TablaBase.ToString())%>s=function(strTipoManejarBusqueda,strPermisos) {		
		if(strTipoManejarBusqueda==constantes.STRCAPASCARGARPERMISOS) {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>PaginaWebInteraccion.manejarPermisos<%=GetNombreClase(TablaBase.ToString())%>s(strPermisos);
		}	
	};
	
	this.manejarData<%=GetNombreClase(TablaBase.ToString())%>sDesdeSesion=function(strUltimaBusqueda) {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>PaginaWebInteraccion.buscar<%=GetNombreClase(TablaBase.ToString())%>sDesdeSesion(strUltimaBusqueda);	
	};
	
	this.manejarDataCombos<%=GetNombreClase(TablaBase.ToString())%>s=function(arrData<%=GetNombreClase(TablaBase.ToString())%>sDataAccessAdditional,strTipoManejarBusqueda,strNombrePantallaCombos) {
		arrData<%=GetNombreClase(TablaBase.ToString())%>s= [];	
		arrData<%=GetNombreClase(TablaBase.ToString())%>s=arrData<%=GetNombreClase(TablaBase.ToString())%>sDataAccessAdditional;
		
		if(strTipoManejarBusqueda==constantes.STRCAPASCARGARCOMBOS) {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>Servicio.cargarCombos<%=GetNombreClase(TablaBase.ToString())%>s(arrData<%=GetNombreClase(TablaBase.ToString())%>s,strNombrePantallaCombos);
		
		} else if(strTipoManejarBusqueda==constantes.STRCAPASPROCESAR){
			;
		}
	};
	
	this.setArrData<%=GetNombreClase(TablaBase.ToString())%>s=function(arrData<%=GetNombreClase(TablaBase.ToString())%>s) {
		arrData<%=GetNombreClase(TablaBase.ToString())%>s=arrData<%=GetNombreClase(TablaBase.ToString())%>s;
	};
};

//var <%=GetNombreClase(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();

<%=strJSEndJavaScript%>

<script runat="template">
/*Empresa: <%=Empresa%>
 *Programador: <%=NombreProgramador%>
 *Descripcion: Clase que contiene todos los Accesos a BDD de tabla <%=TablaBase.ToString().Split('.')[1]%>
 * Fecha Creacion: <%= DateTime.Now.ToLongDateString() %>
 **CAMBIOS***** 
 * Motivo Cambio:
 * Nombre Programador:
 * Fecha Cambio:
 **************
 */
/*
var <%=GetNombreClase(TablaBase.ToString())%>Servicio= function () {
	<%=DefinirVariablesArray()%>
	<%=DefinirVariablesArrayUnico()%>
	
	this.cargarCombos=function() {	
		<%=GetCallFuncionesClasesRelacionadasForeigKeys()%> 
	};
	
	<%=GetCargarComboCallFuncionesClasesRelacionadasForeigKeys()%> 
	
	<%=GetFuncionesSetClasesRelacionadasForeigKeysUnico()%>
	<%=GetFuncionesClasesRelacionadasForeigKeys()%>
	<%=GetFuncionesTraerClasesRelacionadasForeigKeys()%>
	
	this.cargarCombos<%=GetNombreClase(TablaBase.ToString())%>s=function(arrData<%=GetNombreClase(TablaBase.ToString())%>s,strNombrePantallaCombos) {	
	<%=GetCallFuncionesClasesRelacionadasDondeTablaEsForeigKey()%> 
	};
}

var <%=GetNombreClaseObjeto(TablaBase.ToString())%>Servicio=new <%=GetNombreClase(TablaBase.ToString())%>Servicio();
*/
</script>