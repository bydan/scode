<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Property Name="NombreProgramador" Type="System.string" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.string" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="TablasBaseCompuestoJunction" Type="TableSchema" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="TableSchema" 	Category="Context"%>
<%@ Property Name="GenerarCompuesto" Type="System.Boolean" Default="false" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="Empresa" Type="System.string" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="ConFaces" Type="System.Boolean" Default="false" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="ConRichFaces" Type="System.Boolean" Default="false" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="RichFaces_Version" Type="System.String" Default="4.3" Category="4.3 Versiones" Description="Nombre de la Entidad" %>


<script runat="template">
public  string GetFuncionesBusquedaOnCompleteFromForeignKeysColumnsBusqueda() {	
	//SOLAMENTE SI EXISTE BUSQUEDA EN ALGUN FK COLUMNA
	String strCombosBusqueda="";	
	TableSchema tableSchemaForeignKey;
	
	foreach(ColumnSchema column in TablaBase.Columns) {	
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow)) {
				continue;
		}
		
		if(column.IsForeignKeyMember && GetBusquedaForeignKeyColumnFromPropertiesC(column)) {																			
			tableSchemaForeignKey=GetNombreTablaRelacionadaFromColumn(column);
			
			strCombosBusqueda+=""+"this.buscarFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+"sOnComplete=function() {";
			strCombosBusqueda+="\r\n\t/*";
			strCombosBusqueda+="\r\n\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.procesarFinalizacionProceso"+GetNombreClaseC(TablaBase.ToString())+"();";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Busqueda\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaNavegacion\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaDatos\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Paginacion\").style.display=\"none\";";			
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"CabeceraBusquedas\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Busquedas\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trRecargarInformacion"+GetNombreClaseC(TablaBase.ToString())+"\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"TablaDatos\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Paginacion\").style.display=\"table-row\";";
			
			if(EsVersionRichFaces3C(RichFaces_Version)){
				strCombosBusqueda+="\r\n\t"+"Richfaces.showModalPanel('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"',{width:"+GetAnchoAuxiliarTableFromPropertiesC(TablaBase)+", top:"+GetTopAuxiliarTableFromPropertiesC(TablaBase)+"});";
			} else {
				strCombosBusqueda+="\r\n\t"+"//#{rich:component('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"')}.show();";
				strCombosBusqueda+="\r\n\t"+"RichFaces.$('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"').show();";
			}
			
			strCombosBusqueda+="\r\n\t*/";
			strCombosBusqueda+="\r\n};\r\n\r\n";
			
			
			strCombosBusqueda+=""+"this.abrirBusquedaFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+"sOnClick=function() {";
			//strCombosBusqueda+="\r\n\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.procesarFinalizacionProceso"+GetNombreClaseC(TablaBase.ToString())+"();";
			strCombosBusqueda+="\r\n\t/*";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trFk"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Busqueda\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaNavegacion\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"TablaDatos\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Paginacion\").style.display=\"table-row\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"CabeceraBusquedas\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Busquedas\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"trRecargarInformacion"+GetNombreClaseC(TablaBase.ToString())+"\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"TablaDatos\").style.display=\"none\";";
			strCombosBusqueda+="\r\n\t"+"document.getElementById(\"tr"+GetNombreClaseC(TablaBase.ToString())+"Paginacion\").style.display=\"none\";";
			
			if(EsVersionRichFaces3C(RichFaces_Version)){
				strCombosBusqueda+="\r\n\t"+"Richfaces.hideModalPanel('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"');";
			} else {
				strCombosBusqueda+="\r\n\t"+"//#{rich:component('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"')}.hide();";
				strCombosBusqueda+="\r\n\t"+"RichFaces.$('modalPanel"+GetNombreClaseC(TablaBase.ToString())+"').hide();";
			}
			strCombosBusqueda+="\r\n\t*/";
			
			strCombosBusqueda+="\r\n};\r\n\r\n";
			/*
			if(TablaBase.Name!=tableSchemaForeignKey.Name) {
				strCombosBusqueda+="\r\n\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Constante.strRelativePath=\""+GetRelativePathC(TablaBase)+"\";";
			}	
			*/
		}				
	}
		
	return strCombosBusqueda;
}

public  string GetCargarRelativePathFromForeignKeysColumnsBusqueda()
	{
		
	String strCombosBusqueda="";
	
	
	TableSchema tableSchemaForeignKey;
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
	
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow))
		{
				continue;
		}
		
		if(column.IsForeignKeyMember)
		{
												
			
				
				tableSchemaForeignKey=GetNombreTablaRelacionadaFromColumn(column);
				
				if(TablaBase.Name!=tableSchemaForeignKey.Name)
				{
					strCombosBusqueda+="\r\n\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Constante.strRelativePath=\""+GetRelativePathC(TablaBase)+"\";";
				}
			
		}
		
		
	}
		
	return strCombosBusqueda;
}

public  string GetCargarCombosFromForeignKeysColumnsBusqueda()
	{
		
	String strCombosBusqueda="";
	
	
	TableSchema tableSchemaForeignKey;
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
	
		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow))
		{
				continue;
		}
		
		if(column.IsForeignKeyMember)
		{
												
			if(GetBusquedaForeignKeyColumnFromPropertiesC(column))
			{
				
				tableSchemaForeignKey=GetNombreTablaRelacionadaFromColumn(column);
				
				if(TablaBase.Name!=tableSchemaForeignKey.Name)
				{
					strCombosBusqueda+="\r\n\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Servicio.cargarCombos();";
				}
			}
		}
		
		
	}
		
	return strCombosBusqueda;
}

public String GenerarRegistrarAccionesImagenServlet() 
{
			String strFuncionesAccionesImagen="";	
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{				
				if((columnSchema.NativeType=="image"&&columnSchema.DataType==DbType.Binary&&columnSchema.Name!=strVersionRow)||(columnSchema.DataType==DbType.Binary&&columnSchema.Name!=strVersionRow))
				{
					
					strFuncionesAccionesImagen+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.registrarEventoSinRespuesta"+GetNombreClase(TablaBase.ToString())+"(\"accionMantenimiento="+GetNombreClaseObjeto(TablaBase.ToString())+"ActualCargarImagen"+GetNombreColumnaClaseC(columnSchema)+"&hdnIdActual=\"+row"+GetNombreClase(TablaBase.ToString())+".id,\""+GetNombreClase(TablaBase.ToString())+"Servlet\",\"POST\");";
					
				}
			}
			
	return strFuncionesAccionesImagen;
}

public String GetFuncionesImagenesC() 
		{
			String strFuncionesImagenes="";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{				
				if((columnSchema.NativeType=="image"&&columnSchema.DataType==DbType.Binary&&columnSchema.Name!=strVersionRow)||(columnSchema.DataType==DbType.Binary&&columnSchema.Name!=strVersionRow))
				{
		
					strFuncionesImagenes+="\r\n\tthis.Mostrar"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnaClaseC(columnSchema)+"=function(id)";
					strFuncionesImagenes+=" {";    
					strFuncionesImagenes+="\r\n\t\tvar "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClase(TablaBase.ToString())+"Logic();";
					strFuncionesImagenes+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.registrarEventoIrAPaginaNueva"+GetNombreClaseC(TablaBase.ToString())+"(\"accionMantenimiento="+GetNombreClaseObjeto(TablaBase.ToString())+"ActualMostrarImagen"+GetNombreColumnaClaseC(columnSchema)+"&hdnIdActual=\"+id,\""+GetNombreClaseC(TablaBase.ToString())+"Servlet\",\"POST\");";
					strFuncionesImagenes+="\r\n\t};";
					
					strFuncionesImagenes+="\r\n\r\n\tthis.actualizar"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnaClaseC(columnSchema)+"=function(id)"; 
					strFuncionesImagenes+=" {";    
					strFuncionesImagenes+="\r\n\t\tvar "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClase(TablaBase.ToString())+"Logic();";
					strFuncionesImagenes+="\r\n\t\tvar strTemp=strUltimaBusqueda.replace(\"&\", \"()\");";  

					strFuncionesImagenes+="\r\n\r\n\t\twhile(strTemp.indexOf(\"&\")!=-1)";  
					strFuncionesImagenes+="\r\n\t\t{";  
					strFuncionesImagenes+="\r\n\t\t\tstrTemp=strTemp.replace(\"&\", \"()\");";  
					strFuncionesImagenes+="\r\n\t\t}";  
					
					strFuncionesImagenes+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.registrarEventoIrAPagina"+GetNombreClaseC(TablaBase.ToString())+"(\"accionMantenimiento="+GetNombreClaseObjeto(TablaBase.ToString())+"ActualCargarImagen"+GetNombreColumnaClaseC(columnSchema)+"&ultimaBusqueda=\"+strTemp+\"&hdnIdActual=\"+id,\""+GetNombreClaseC(TablaBase.ToString())+"Servlet\",\"POST\");";					
					strFuncionesImagenes+="\r\n\t};";
				}
			}
			return strFuncionesImagenes;
		
		}

		
public String GetFuncionesNavegacionTablasClasesRelacionadasC() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String strClasesNoRelacionadas=string.Empty;
			String[] strClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				strClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase);
				
				strClases=strClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String strClase in strClases)
				{						
					if(strClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					if(tableSchema.Equals(tablaRelacionadaObjetivo))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
					strTablaClaseRelacionada+="\r\n\tthis.actualizar"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPlural.ToLower()+"Relacionadas=function(id)\r\n\t{";
					strTablaClaseRelacionada+="\r\n\tfuncionGeneral.mostrarOcultarProcesando(true);";
					strTablaClaseRelacionada+="\r\n\t\tvar "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic=new "+GetNombreClase(TablaBase.ToString())+"Logic();";
					strTablaClaseRelacionada+="\r\n\t\tvar strTemp=strUltimaBusqueda.replace(\"&\", \"()\");";	
					strTablaClaseRelacionada+="\r\n\r\n\t\twhile(strTemp.indexOf(\"&\")!=-1)";
					strTablaClaseRelacionada+="\r\n\t\t{";
					strTablaClaseRelacionada+="\r\n\t\t\tstrTemp=strTemp.replace(\"&\", \"()\");";
					strTablaClaseRelacionada+="\r\n\t\t}\r\n";
					
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.registrarEventoIrAPagina"+GetNombreClaseC(TablaBase.ToString())+"(\"accionMantenimiento=RegistrarSesion"+GetNombreClaseC(TablaBase.ToString())+"Para"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPlural.ToLower()+"&"+strId+GetNombreClaseC(TablaBase.ToString())+"Actual=\"+id+\"&ultimaBusqueda=\"+strTemp,\""+GetNombreClaseC(TablaBase.ToString())+"Servlet\",\"POST\");\r\n\t};";
				}	
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetVariablesForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="\r\n\tthis.bit"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"PermitirMantenimiento=true;";
					strTablaClaseRelacionada+="\r\n\tthis.bit"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"UtilizaBusqueda=false;";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesTraerDescripcionClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerDescripcionClasesRelacionadasForeigKeys(GetTablaFromNombre(GetNombreClaseRelacionadaFromColumn(columnSchema)),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionTraerDescripcionClasesRelacionadasForeigKeys(TableSchema tableSchema,ColumnSchema column) 
{
String strTraerFuncionTablaClaseRelacionada=string.Empty;

strTraerFuncionTablaClaseRelacionada="function traer"+GetNombreClase(tableSchema.ToString())+"Descripcion(item)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="{\r\nvar description=\"\";\r\n";
  
	
	 for (int i = 0; i < tableSchema.Columns.Count; i++){ 
			strTraerFuncionTablaClaseRelacionada+=" "+GetVariablesFromXml(tableSchema.Columns[i],false,false,false); 	
 		 } 	
		
strTraerFuncionTablaClaseRelacionada+="\r\n description=id;	\r\n";

strTraerFuncionTablaClaseRelacionada+="\r\nreturn description;\r\n}\r\n\r\n";

return strTraerFuncionTablaClaseRelacionada;
}

public  string DefinirVariablesArray()
{
	String strVariablesArray="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="var arrData"+GetNombreClaseRelacionadaFromColumn(column)+"= [];\r\n";
		}	
	}
	return strVariablesArray;
}

public String GetMensajeFunctionValidationControlHtml() 
{
String strCodigo=string.Empty;
String strRetorno=string.Empty;

	foreach(ColumnSchema column in TablaBase.Columns)
	{
			if(column.AllowDBNull)
			{
			strRetorno="retorno= true;";
			}
			else
			{
			strRetorno="retorno= false;";
			}
			
			if(column.DataType==DbType.Boolean|| column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow)||column.DataType==DbType.Binary)
			{
			strCodigo+=string.Empty;
			continue;
			}
			if(!column.IsForeignKeyMember)	
			{
				if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
				{
				strCodigo+="\r\n\tvar str"+column.Name+"="+GetFunctionValidationControlHtml(column).Replace("this","jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue()")+ ";";
				strCodigo+="\r\n\tcreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ column.Name+"',str"+column.Name+");";	
				strCodigo+="\r\n\r\n\t\tif(str"+column.Name+"!=\"\")\r\n\t\t{\r\n\t\t\tretorno= false;\r\n\t\t}\r\n";
				}
				else
				{
				strCodigo+="\r\n\tvar str"+column.Name+"="+GetFunctionValidationControlHtml(column).Replace("this","document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column))+";";
				strCodigo+="\r\n\tcreateSimpleYahooDialogErrorValidacion('Validacion campo:"+ column.Name+"',str"+column.Name+",document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column)+");";	
				strCodigo+="\r\n\r\n\t\tif(str"+column.Name+"!=\"\")\r\n\t\t{\r\n\t\t\tretorno= false;\r\n\t\t}\r\n";
				}
				
			}
			else
			{
				
				strCodigo+="\r\n\tvar str"+column.Name+"=ValidarCombo(arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
				strCodigo+="\r\n\tcreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ GetNombreClaseRelacionadaFromColumn(column)+"',str"+column.Name+");";	
				strCodigo+="\r\n\r\n\t\tif(str"+column.Name+"!=\"\")\r\n\t\t{\r\n\t\t\t"+ strRetorno +";\r\n\t\t}\r\n";	
			}
	}						
			return strCodigo; 
}
		
public String GetFuncionesTraerClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=GetFuncionTraerClasesRelacionadasForeigKeys(GetTablaFromNombre(GetNombreClaseRelacionadaFromColumn(columnSchema)),columnSchema);
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetFuncionTraerClasesRelacionadasForeigKeys(TableSchema tableSchema,ColumnSchema column) 
{
String strTraerFuncionTablaClaseRelacionada=string.Empty;

strTraerFuncionTablaClaseRelacionada="function traer"+GetNombreClase(tableSchema.ToString())+"s("+GetNombreClaseObjeto(tableSchema.ToString())+"XML)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="{\r\n";

strTraerFuncionTablaClaseRelacionada+="var "+GetNombreClaseObjeto(tableSchema.ToString())+" = "+GetNombreClaseObjeto(tableSchema.ToString())+"XML.getElementsByTagName(\""+GetNombreClaseObjeto(tableSchema.ToString())+"\")[0];\r\n";
strTraerFuncionTablaClaseRelacionada+="var generated ="+ GetNombreClaseObjeto(tableSchema.ToString())+".getAttribute(\"generated\");\r\n";

   
strTraerFuncionTablaClaseRelacionada+="   var items ="+ GetNombreClaseObjeto(tableSchema.ToString())+".getElementsByTagName(\"item\");\r\n";
strTraerFuncionTablaClaseRelacionada+="   var arrData = [];\r\n";

strTraerFuncionTablaClaseRelacionada+="   for (var I = 0 ; I < items.length ; I++)\r\n"; 
strTraerFuncionTablaClaseRelacionada+="   {\r\n";
strTraerFuncionTablaClaseRelacionada+="	 var item = items[I];\r\n";
	
	 for (int i = 0; i < tableSchema.Columns.Count; i++){ 
			strTraerFuncionTablaClaseRelacionada+=" "+GetVariablesFromXml(tableSchema.Columns[i],false,false,false); 	
 		 } 	
		
strTraerFuncionTablaClaseRelacionada+="	arrData.push([traer"+GetNombreClase(tableSchema.ToString())+"Descripcion(item) , id]);\r\n";
strTraerFuncionTablaClaseRelacionada+="	}\r\n";

strTraerFuncionTablaClaseRelacionada+="	arrData"+GetNombreClaseRelacionadaFromColumn(column)+"=arrData;\r\n";

strTraerFuncionTablaClaseRelacionada+="	jmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.dataProvider.setData(arrData);\r\n";
strTraerFuncionTablaClaseRelacionada+=SetDataToCombosBusquedasIndiceTabla(column); 
strTraerFuncionTablaClaseRelacionada+="\r\n}\r\n\r\n";

return strTraerFuncionTablaClaseRelacionada;
}

public TableSchema GetTablaFromNombre(String strTableNombre) 
		{
			TableSchema tableSchemaEncontrada=TablaBase;
			
			tableSchemaEncontrada=GetTablaFromNombreC(strTableNombre,TablaBase);
			
			return tableSchemaEncontrada;
		}
			
public String GetFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String InitFuncion="function cargar";							
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+=InitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()\r\n{\r\n";
					strTablaClaseRelacionada+="var req = newXMLHttpRequest();\r\n";
					strTablaClaseRelacionada+="req.onreadystatechange = getReadyStateHandler(req, traer"+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"s);\r\n";
					strTablaClaseRelacionada+="req.open(\"POST\", \""+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)) +"Servlet\", true);\r\n";
					strTablaClaseRelacionada+="req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n";
					strTablaClaseRelacionada+="req.send(\"accionBusqueda=Todos\");\r\n}\r\n\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetCallFuncionesClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="cargar"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "();\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String ValoresMinimoMaximoPaginacion() 
{
			String strPAginacion="";
			strPAginacion="+\"&inicio=\"+"+"intNumero"+"PaginacionPagina+\"&fin=\"+"+"intNumero"+"Paginacion";
			return strPAginacion;
}

public String GetSendBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\t\t\t\telse if(strTipoBusqueda==\"{0}\") {";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			String strXmlFuncionUltimaBusqueda=string.Empty;
			
			strXmlFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.buscar"+GetNombreClaseC(TablaBase.ToString())+"sCargarTablaAjax(\"accionBusqueda=";
			strXmlFuncionUltimaBusqueda="\r\n\r\n\t\t\t\tstrUltimaBusqueda=constantes.STRCAPASQUERYDEFAULTTABLE+\"&accionBusqueda=";
							
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strXmlFuncion="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.buscar"+GetNombreClaseC(TablaBase.ToString())+"sCargarTablaAjax(strUltimaBusqueda);";//"accionBusqueda=";
					//strXmlFuncion+=/*strClaseAuxiliar+GetNombreClase(TablaBase.ToString())+*/indexSchema.Name+"&";
					strXmlFuncionUltimaBusqueda="\r\n\r\n\t\t\t\tstrUltimaBusqueda=constantes.STRCAPASQUERYDEFAULTTABLE+\"&accionBusqueda=";
					strXmlFuncionUltimaBusqueda+=indexSchema.Name+"&";
			
					if(indexSchema.IsUnique)
					{
						strFuncionBusqueda="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion=" else if(strTipoBusqueda==\""+indexSchema.Name+"\") {\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.validarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strFuncionBusqueda="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(finalQueryPaginacion,";
						strIfFuncion=" else if(strTipoBusqueda==\""+indexSchema.Name+"\") {\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.validarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion=" else if(strTipoBusqueda==\""+indexSchema.Name+"\") {\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.validarFormulario"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
																				
							strDefinicionVariables+="\r\n\t\t\t"+SetDocumentToVariablesBusqueda(memberColumnSchema.Column,indexSchema.Name,TablaBase);
							strUsoVariables+=SetDocumentToVariablesQueryString(memberColumnSchema.Column,indexSchema.Name);
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
							strUsoVariables+="+\"&";	
							}
							count++;
							}
							//strXmlFuncion+=strUsoVariables+ValoresMinimoMaximoPaginacion()+");\r\n";
							strXmlFuncionUltimaBusqueda+=strUsoVariables+ValoresMinimoMaximoPaginacion()+"+\"&generarReporte=\"+strOpcionReporte;\r\n";
							strXmlFuncion=strXmlFuncionUltimaBusqueda+strXmlFuncion;
							
							strXmlFuncion+="\r\n\t\t\t\tstrParametrosBusqueda"+"=\"&"+strUsoVariables+"+\"&generarReporte=\"+strOpcionReporte;\r\n";
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strXmlFuncion+"\r\n\t\t\t}";																																		
					
				}
			}								
			return  strInitFuncion;
		}

		public String GetSendBusquedasIndicesTablas(TableSchema tableSchema) 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="else if(strTipoBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			String strIdParametroPadre=strIdGetSet+GetNombreClaseC(TablasBaseCompuestoJunction.ToString())+"=\"+"+strIdRelationshipGetSet+GetNombreClase(TablasBaseCompuestoJunction.ToString());
			
			strInitFuncion="\r\n\t\t else if(strTipoBusqueda==\""+strClaseAuxiliar+GetNombreClase(TablaBase.ToString())+"Todos\")";
			strInitFuncion+="\r\n\t\t{\r\n\t\t\tstrUltimaBusqueda=constantes.STRCAPASQUERYDEFAULTTABLE+\"&accionBusqueda="+strClaseAuxiliar+GetNombreClase(TablaBase.ToString())+"Todos&"+strIdParametroPadre+ValoresMinimoMaximoPaginacion()+";";
			strInitFuncion+="\r\n\t\t\tstrParametrosBusqueda=\"&"+strIdParametroPadre+";";
			strInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Logic.buscar"+GetNombreClase(TablaBase.ToString())+"sCargarTablaAjax(strUltimaBusqueda);\r\n\t\t}\r\n"; 
			
			strXmlFuncion="\r\n\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.buscar"+GetNombreClaseC(TablaBase.ToString())+"sCargarTablaAjax(\"accionBusqueda=";
							
			
			foreach(IndexSchema indexSchema in tableSchema.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strXmlFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.buscar"+GetNombreClaseC(TablaBase.ToString())+"sCargarTablaAjax(\"accionBusqueda=";
					strXmlFuncion+=indexSchema.Name+"&";
					strXmlFuncion+=strIdParametroPadre+"+\"&";
					
					if(indexSchema.IsUnique)
					{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\t\telse if(strTipoBusqueda==\""+indexSchema.Name+"\")\r\n\t\t{\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle.ToString())+"FuncionGeneral.validarFormulario"+GetNombreClaseC(TablasBaseCompuestoDetalle.ToString())+indexSchema.Name+"())\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(finalQueryPaginacion,";
						strIfFuncion="\t\telse if(strTipoBusqueda==\""+strClaseAuxiliar+GetNombreClase(TablaBase.ToString())+indexSchema.Name+"\")\r\n\t\t{\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle.ToString())+"FuncionGeneral.validarFormulario"+GetNombreClaseC(TablasBaseCompuestoDetalle.ToString())+indexSchema.Name+"())\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\t\telse if(strTipoBusqueda==\""+strClaseAuxiliar+GetNombreClase(TablaBase.ToString())+indexSchema.Name+"\")\r\n\t\t{\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle.ToString())+"FuncionGeneral.validarFormulario"+GetNombreClaseC(TablasBaseCompuestoDetalle.ToString())+indexSchema.Name+"())\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
																				
							strDefinicionVariables+="\r\n\t\t"+SetDocumentToVariablesBusqueda(memberColumnSchema.Column,indexSchema.Name,tableSchema);
							strUsoVariables+=SetDocumentToVariablesQueryString(memberColumnSchema.Column,indexSchema.Name);
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
							strUsoVariables+="+\"&";	
							}
							count++;
							}
							strXmlFuncion+=strUsoVariables+ValoresMinimoMaximoPaginacion()+");\r\n";
							
							strXmlFuncion+="\r\n\t\t\tstrParametrosBusqueda"+"=\"&"+strIdParametroPadre+"+\"&"+strUsoVariables+";\r\n";
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strXmlFuncion+"\r\n\t\t}\r\n";																																		
					
				}
			}								
			return  strInitFuncion;
		}
		
public String SetDataToCombosBusquedasIndiceTabla(ColumnSchema column) 
	{
			String	strDataToCombos="";		
						
			strDataToCombos=SetDataToCombosBusquedasIndiceTablaC(column,TablaBase);		
						
			return strDataToCombos;	
			
	}

public String GetFuncionesValidarFormularioBusquedasIndiceTabla() 
	{
			String	strValidarFormularios="";		
			
			String	strRetorno="";				
			
			strRetorno="retorno= false;";
			
						
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
				strValidarFormularios+="\r\n\r\nfunction ValidarFormulario"+GetNombreClase(TablaBase.ToString())+ indexSchema.Name +"()\r\n{\r\nvar retorno =true;\r\n";
				
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								if(!memberColumnSchema.IsForeignKeyMember)	
								{
									if(memberColumnSchema.DataType==DbType.Date||memberColumnSchema.DataType==DbType.DateTime)
									{
									strValidarFormularios+="\r\nvar str"+memberColumnSchema.Name+"="+GetFunctionValidationControlHtml(memberColumnSchema).Replace("this","jmaki.attributes.get('"+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name) +"').getValue()")+ ";";
									strValidarFormularios+="\r\ncreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ memberColumnSchema.Name+"',str"+memberColumnSchema.Name+");";	
									strValidarFormularios+="\r\nif(str"+memberColumnSchema.Name+"!=\"\")\r\n{\r\nretorno= false;\r\n}";
									}
									else
									{
									strValidarFormularios+="\r\nvar str"+memberColumnSchema.Name+"="+GetFunctionValidationControlHtml(memberColumnSchema).Replace("this","document.frmBusqueda."+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name))+";";
									strValidarFormularios+="\r\ncreateSimpleYahooDialogErrorValidacion('Validacion campo:"+ memberColumnSchema.Name+"',str"+memberColumnSchema.Name+",document.frmBusqueda."+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name)+");";	
									strValidarFormularios+="\r\nif(str"+memberColumnSchema.Name+"!=\"\")\r\n{\r\nretorno= false;\r\n}";
									}
									
								}
								else
								{
									
									strValidarFormularios+="\r\nvar str"+memberColumnSchema.Name+"=ValidarCombo(arrData"+GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+",jmaki.attributes.get('"+GetNameControlHtmlBusqueda(memberColumnSchema,indexSchema.Name) +"').getValue());";		
									strValidarFormularios+="\r\ncreateSimpleYahooDialogErrorValidacionMensajes('Validacion campo:"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+"',str"+memberColumnSchema.Name+");";	
									strValidarFormularios+="\r\nif(str"+memberColumnSchema.Name+"!=\"\")\r\n{\r\n"+ strRetorno +";\r\n}";	
								}
							}
					strValidarFormularios+="\r\nreturn retorno;\r\n}";
				}
				
				
			}								
			return  strValidarFormularios;
	}

public string SetDocumentToVariablesQueryStringBusquedaIndice(ColumnSchema column,String strIndice)
{
	
	return GetNameControlHtmlBusqueda(column,strIndice)+ "=\"+"+GetNombreColumnaClaseMinusculaC(column);
}

public string SetDocumentToVariablesQueryString(ColumnSchema column,String strIndexName)
{
	
	return GetNameControlHtmlBusqueda(column,strIndexName)+ "=\"+"+GetNombreColumnaClaseMinusculaC(column);
}

public string SetDocumentToVariables(ColumnSchema column)
{
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
	}
	else
	{
	strSet="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
	}
	
	return strSet;
}

public  string SetDocumentToVariablesBusqueda(ColumnSchema column,String strIndexName,TableSchema tableSchema)
{
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="\r\n\t\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmBusqueda"+GetNombreClase(tableSchema.ToString())+"."+GetNameControlHtmlBusqueda(column,strIndexName) +".checked;";
	}
	else
	{
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
			strSet="\r\n\t\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=jmaki.attributes.get('"+GetNameControlHtmlBusqueda(column,strIndexName)+"').wrapper.datePicker.getValue();"; 
		
			}
			else
			{
			strSet="\r\n\t\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmBusqueda"+GetNombreClase(tableSchema.ToString())+"."+GetNameControlHtmlBusqueda(column,strIndexName) +".value;";
		
			}
		}
		else
		{
			strSet="\r\n\t\t\tvar "+GetNombreColumnaClaseMinusculaC(column)+ "=funcionGeneral.getIdCombo("+GetNombreClaseObjeto(tableSchema.ToString())+"Servicio.arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtmlBusqueda(column,strIndexName)+"').getValue());"; 
		}
	}
	
	return strSet;
}

public static string VariablesBusquedaPreguntarVacio(ColumnSchema column)
{
	String strSet="";
	
	strSet= "document.frmBusqueda."+GetNameControlHtml(column) +".value=\"\"";
	
	return strSet;
}

public  string SetDocumentVariablesActual()
{
	String strSet="";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.Name==strIsActive||column.Name==strIsExpired||column.DataType==DbType.Binary)
		{
		strSet+="";
		continue;
		}
		
		if(!column.IsForeignKeyMember)
		{
			if(column.DataType==DbType.Boolean)
			{
			strSet+="\r\n\r\n\tif(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+"==\"true\"||row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+"==true)";
			strSet+="\r\n\t{";
			strSet+="\r\n\t\t\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=true;";
			strSet+="\r\n\t}";
			strSet+="\r\n\telse\r\n\t{";
			strSet+="\r\n\t\t\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=false;";
			strSet+="\r\n\t}\r\n";
			}
			else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{
			strSet+="\r\n\t\tjmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.datePicker.setDate(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+");"; 
			}
			else
			{
				if(!column.IsPrimaryKeyMember)
				{
					strSet+="\r\n\t\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+";";
				}
				else
				{
					strSet+="\r\n\t\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=row"+GetNombreClase(TablaBase.ToString())+".id"+";";
				}
			}
		}
		else
		{
			if(!EsClaseRelacionadaUnoAUnoFromColumnC(column))
			{
				strSet+="\r\n\t\tif(this.bit"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"PermitirMantenimiento==true)\r\n\t\t{";				
				strSet+="\r\n\t\t\tif(this.bit"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"UtilizaBusqueda==false)\r\n\t\t\t{";				
				strSet+="\r\n\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.setValue(funcionGeneral.cambiarNullAVacio(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+"Descripcion));"; 				
				strSet+="\r\n\t\t\t}";
				strSet+="\r\n\t\t\telse\r\n\t\t\t{\r\n";
				strSet+="\t\t\t\tvar arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+" = [];\r\n";
				strSet+="\t\t\t\tvar data"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"={label:funcionGeneral.cambiarNullAVacio(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+"Descripcion),value:funcionGeneral.cambiarNullAVacio(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+")};\r\n";
				strSet+="\t\t\t\tarrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+".push(data"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+");\r\n";
				strSet+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Servicio.arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"=arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+";\r\n";
				strSet+="\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(column)+"').setValues(arrData"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+");\r\n";
				strSet+="\r\n\t\t\t\tjmaki.attributes.get('"+GetNameControlHtml(column)+"').wrapper.setValue(funcionGeneral.cambiarNullAVacio(row"+GetNombreClase(TablaBase.ToString())+"."+GetNombreColumnaClaseJavaScriptC(column)+"Descripcion));"; 
				strSet+="\r\n\t\t\t}";
				strSet+="\r\n\t\t}";
				
			}
			else
			{
				strSet+="\r\n\t\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=row"+GetNombreClase(TablaBase.ToString())+".id"+";";
			}
		}	
	}
	
	return strSet;
}

public  string SetDocumentVariablesCancelar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.DataType==DbType.Binary)
	{
	continue;
	}
	
	
	if(!column.IsForeignKeyMember)	
	{		
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\n\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked=false;";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\n\tjmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.datePicker.setDate(new Date());";		
		}
		else
		{
		strSet+="\r\n\tdocument.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value=\"\";";
		}
	}
	else
	{
	strSet+="\r\n\tjmaki.attributes.get('"+GetNameControlHtml(column) +"').wrapper.setValue(\"\");";	
	}
}	
	return strSet;
}

public string SetDocumentToVariableseliminar()
{
	String strVariable= "";
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
		{
		strVariable+="";
		continue;
		}
		else if(column.Name==strId)
		{
		strVariable+=strVariable="var "+GetNombreColumnaClaseMinusculaC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	return strVariable;
}

public string SetDocumentToVariablesNuevo()
{
String strSet="";
foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strId||column.Name==strIsExpired||column.Name==strVersionRow||column.DataType==DbType.Binary)
	{
	strSet+="";
	continue;
	}
	if(!column.IsForeignKeyMember)	
	{	
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\n\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseJavaScriptC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\n\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseJavaScriptC(column)+ "=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
		}
		else
		{
		strSet+="\r\n\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseJavaScriptC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		}
	}
	else
	{
		strSet+="\r\n\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseJavaScriptC(column)+ "=funcionGeneral.getIdCombo("+GetNombreClaseObjeto(TablaBase.ToString())+"Servicio.arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
		strSet+="\r\n\t\t"+GetNombreClaseObjeto(TablaBase.ToString())+"Datos."+GetNombreColumnaClaseJavaScriptC(column)+ "Descripcion=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
	}
}	
	return strSet;
}

public  string SetVariablesToQueryGuardar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||(column.DataType==DbType.Binary&&column.Name!=strVersionRow))
	{
	strSet+="";
	continue;
	}
	
	strSet+="\r\n\t\t\tquery"+GetNombreClase(TablaBase.ToString())+"=query"+GetNombreClase(TablaBase.ToString())+"+";
	
	if(!column.IsForeignKeyMember)	
	{
		if(column.DataType==DbType.Boolean)
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+ "+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";		
		}
		else
		{
			strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";
		}
	}
	else
	{
		strSet+="'&"+ column.Name +GetNombreClase(TablaBase.ToString())+"'+contadorFinal+'='"+"+arrData"+GetNombreClase(TablaBase.ToString())+"s[i]."+GetNombreColumnaClaseMinusculaC(column)+ ";";		
	}
}	
	return strSet;
}

public  string SetDocumentToVariablesActualizar()
{
String strSet="";

foreach(ColumnSchema column in TablaBase.Columns)
{
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strId||column.Name==strVersionRow||column.DataType==DbType.Binary)
	{
	strSet+="";
	continue;
	}
	
	if(!column.IsForeignKeyMember)	
	{
		if(column.DataType==DbType.Boolean)
		{
		strSet+="\r\n\t\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "!=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked) {";	
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked;";
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "Control=funcionGeneral.cambiarBooleanValueToControl(document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".checked,row"+GetNombreClase(TablaBase.ToString())+"Actual.id);";
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged=true;\r\n\t\t}\r\n\t";
		}
		else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
		{
		strSet+="\r\n\t\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "!=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue()) {\r\n\t";		
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged=true;\r\n\t\t}";
		}
		else
		{
		strSet+="\r\n\t\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "!=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value) {";
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "=document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +".value;";
		strSet+="\r\n\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged=true;\r\n\t\t}\r\n\t";
		}
	}
	else
	{
	strSet+="\r\n\r\n\t\tif(this.bit"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"PermitirMantenimiento==true) {";				
	strSet+="\r\n\t\t\tif(row"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "!=funcionGeneral.getIdCombo("+GetNombreClaseObjeto(TablaBase.ToString())+"Servicio.arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue())) {";		
	strSet+="\r\n\t\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "=funcionGeneral.getIdCombo("+GetNombreClaseObjeto(TablaBase.ToString())+"Servicio.arrData"+GetNombreClaseRelacionadaFromColumn(column)+",jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue());";		
	strSet+="\r\n\t\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual."+GetNombreColumnaClaseJavaScriptC(column)+ "Descripcion=jmaki.attributes.get('"+GetNameControlHtml(column) +"').getValue();";		
	strSet+="\r\n\t\t\t\trow"+GetNombreClase(TablaBase.ToString())+"Actual.isChanged=true;\r\n\t\t\t}";
	strSet+="\r\n\t\t}";
	}
}	
	return strSet;
}

public string SetVariablesToDocument(ColumnSchema column)
{
	
if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	return "";
	}
	
	
	String strSet="";
	
	if(column.DataType==DbType.Boolean)
	{
	strSet="document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +").checked="+ GetNombreColumnaClaseMinusculaC(column);
	}
	else
	{
	strSet="document.frmMantenimiento"+GetNombreClase(TablaBase.ToString())+"."+GetNameControlHtml(column) +").value="+ GetNombreColumnaClaseMinusculaC(column);
	}
	
	return strSet;
}

public string GetNombreColumnaClaseMinusculasFiltrados(ColumnSchema column)
{
	String strColumna="";
	
if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	return "";
	}
	
	if(column.Name==strId)
	{
	strColumna=GetNombreColumnaClaseMinusculaC(column)+":idNuevo"+GetNombreClase(TablaBase.ToString());
	}
	else
	{
	strColumna=GetNombreColumnaClaseMinusculaC(column)+":'null'";
	}
	
	return strColumna;
}

public static string GetNombreColumnaClaseMinusculaFiltrados(ColumnSchema column,bool conVersionRow)
{
	
	if(!conVersionRow)
	{
		if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
		{
		return "";
		}
	}
	else
	{
		if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired)
		{
		return "";
		}
	}
	return GetNombreColumnaClaseMinusculaC(column);
}

public static string SetVariablesToQueryStringNuevo(ColumnSchema column)
	{
		String strNombre;
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
	return "";
	}
	
		
	strNombre="\"&"+GetNameControlHtml(column) +"=\"+" +column.Name.Substring(0, column.Name.Length).ToLower();	
		
	return strNombre;
	}
	
public static string SetVariablesToQueryStringActualizar(ColumnSchema column)
	{
		String strNombre;
	
	if(column.Name==strIsActive||column.Name==strIsExpired)
	{
	return "";
	}
	
		
	strNombre="\"&"+GetNameControlHtml(column) +"=\"+" +column.Name.Substring(0, column.Name.Length).ToLower();	
		
	return strNombre;
	}
	
public static string GetVariablesFromXml(ColumnSchema column,bool conVersionRow,bool reemplazarForeigKey,bool reemplazarBooleanValue)
	{
		String strNombre= "";
		strNombre = GetVariablesFromXmlC(column,reemplazarForeigKey,reemplazarBooleanValue);
	return strNombre;
	}

public String GetIndicesTablasClasesDeepSave() 
		{
			String strInit="\r\n this.Save("+GetNombreClaseObjeto(TablaBase.ToString())+");\r\n";
						
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada2="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+"deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
			}
			//strTablaClaseRelacionada2+="\r\n}\r\n";					
			//return strTablaClaseRelacionada; 
			
			
			
			String strTablaClaseRelacionada3=string.Empty;
			System.Collections.Hashtable tablasRelacionadas3=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada3="\r\nfor(Class clas:clases)\r\n{\r\nif(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strTablaClaseRelacionada3+="\r\nif(clas.getName().equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n{\r\n";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+",deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada3+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
				strTablaClaseRelacionada3+="\r\n}\r\n";
			}
			strTablaClaseRelacionada3+="\r\n}\r\n}\r\n";
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="TraerTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada0+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada0+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada0+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada0+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");"+"\r\n}\r\n";
				
				}
			}
			
			
			
			strIfFuncion=strInit+strInitIfFuncion+strTablaClaseRelacionada0+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
			return strIfFuncion; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada2="\r\nif(deepLoadType.equals(DeepLoadType.NONE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada2+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada2+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
			}
			//strTablaClaseRelacionada2+="\r\n}\r\n";					
			//return strTablaClaseRelacionada; 
			
			
			
			String strTablaClaseRelacionada3=string.Empty;
			System.Collections.Hashtable tablasRelacionadas3=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada3="\r\nfor(Class clas:clases)\r\n{\r\nif(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n{\r\n";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strTablaClaseRelacionada3+="\r\nif(clas.getName().equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n{\r\n";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+="\r\n"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+",deep,deepLoadType,clases);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada3+="\r\nfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n{\r\n";
					strTablaClaseRelacionada3+=GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n";
					strTablaClaseRelacionada3+=GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n}\r\n";
				
				}
				strTablaClaseRelacionada3+="\r\n}\r\n";
			}
			strTablaClaseRelacionada3+="\r\n}\r\n}\r\n";
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="setTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\r\n}\r\n"+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			return strIfFuncion; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo) 
		{
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\nParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\nparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\nqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="public "+GetNombreClaseC(TablaBase.ToString())+" "+"Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"=new "+GetNombreClaseC(TablaBase.ToString())+"();\r\ntry\r\n{";
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\nreturn "+GetNombreClaseObjetoC(TablaBase.ToString())+";\r\n}\r\n";
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strInitFuncion+="public "+"ArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						strInitFuncion+="public "+"ArrayList<"+GetNombreClaseC(TablaBase.ToString())+"> "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						strBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new ArrayList<"+GetNombreClaseC(TablaBase.ToString())+">();\r\ntry\r\n{";
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strBodyFuncion+="\r\nqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n";		
						
						}
						else
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\nreturn "+GetNombreClaseObjetoC(TablaBase.ToString())+"s;\r\n}\r\n";
				
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
					strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					
					if(!count.Equals(indexSchema.MemberColumns.Count))
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false);
					}
					else
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true);
					}
					
					if(!indexSchema.MemberColumns.Count.Equals(count))
					{
					
					strParametersFuncion+=",";
					strParametersNameFuncion+=",";	
					}
					count++;
					}
					
					strInitFuncion+=strParametersFuncion+")\r\n{"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  TraerTR_";
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public static string GetSetEntityColumna(ColumnSchema column,String table)
{				
	String strSetEntity=string.Empty;
	
	if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
	{
		return strSetEntity;
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}
</script>
//<%=strJSInitialJavaScript%>
<%=strJavaScriptCDataInit%>
/*Empresa:<%=Empresa%>
 *Programador: <%=NombreProgramador%>
 *Descripcion: Clase que contiene todos los Accesos a BDD de tabla <%=TablaBase.ToString().Split('.')[1]%>
 * Fecha Creacion: <%= DateTime.Now.ToLongDateString() %>
 **CAMBIOS***** 
 * Motivo Cambio:
 * Nombre Programador:
 * Fecha Cambio:
 **************
 */
var <%=GetNombreClase(TablaBase.ToString())%>PaginaWebInteraccion= function () {
	
<%if(!ConRichFaces){%>


	var int<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>=-1;
	var row<%=GetNombreClase(TablaBase.ToString())%>Actual=undefined;
	this.bitEsNuevo<%=GetNombreClase(TablaBase.ToString())%>=false;
	<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitGuardarCambiosEnLote=false;
	var arrData<%=GetNombreClase(TablaBase.ToString())%>sEliminados=[];
	var strPermisos="";
	var strTipoBusqueda="";
	var strUltimaBusqueda="";
	var strParametrosBusqueda="";
	var intNumeroPaginacionPagina= 0;
	var intNumeroPaginacion= 10;
	this.bitEsMantenimientoRelaciones=false;
	this.bitEsMantenimientoRelacionesRelacionadoUnico=false;
	this.bitEsPaginacionDinamica=false;
	this.bitEstaEnModoEdicion=false;
	this.objetoServicio=null;
	
	<%=GetVariablesForeigKeys()%>
	
	this.cargarPagina=function(strBusqueda) {
		var head= document.getElementsByTagName('head')[0];
		var script= document.createElement('script');
		script.type= 'text/javascript';
		script.src= '<%=GetRelativePathC(TablaBase)%>resources/wfactory.js';
		head.appendChild(script);

		script= document.createElement('script');
		script.type= 'text/javascript';
		script.src= '<%=GetRelativePathC(TablaBase)%>resources/jmaki/widgetFactory/extension-min.js';
		head.appendChild(script);
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Constante.factory = jmaki.getExtension("widgetFactory");
		constantes.factory=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Constante.factory;
		constantes.strRelativePath="<%=GetRelativePathC(TablaBase)%>";
		
		//INICIALMENTE FUNCIONABA LUEGO HUBO PROBLEMAS CON WIDGETS DECLARATIVOS (dojo.dijit0
		//ajaxFuncionGeneral.cargarDojoDijitTree(constantes.strRelativePath);
		
		<%=strGlobalSeguridadComment%>var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		<%=strGlobalSeguridadComment%><%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.registrarEventoConRetorno<%=GetNombreClase(TablaBase.ToString())%>(constantes.STRCAPASACCIONADICIONAL+"="+constantes.STRCAPASTRAERPERMISOSPAGINA+"&sPagina=Mantenimiento<%=GetNombreClase(TablaBase.ToString())%>.jsp&idSistema="+funcionGeneral.traerIdSistema(),constantes.STRCAPASSISTEMASERVLET,constantes.STRPOST,constantes.STRCAPASCARGARPERMISOS);
		<%=strGlobalSeguridadCommentNo%>document.getElementById("imgNuevo<%=GetNombreClase(TablaBase.ToString())%>").style.visibility="visible";
		
		//LOS REPORTES AHORA LO CARGA DESDE FUNCIONESSERVLET
		//ajaxFuncionGeneral.cargarComboReporte(constantes.STRCAPASCONTROLCOMBOREPORTE);
		
		funcionGeneral.mostrarOcultarProcesando(true);
		funcionGeneral.mostrarOcultarPaginaAnterior(<%=GetConAtrasTableFromPropertiesC(TablaBase)%>);
		
		<%if(GetEsRompimientoFromPropertiesC(TablaBase)){%>
		//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitGuardarCambiosEnLote=true;
		<%}%>
		
		
		<%if(ContieneImagenesC(TablaBase)){%>
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitContieneImagenes=true;
		<%}%>
		
		if(this.bitEsMantenimientoRelaciones==false) {
			//DESCOMENTAR CUANDO NO SE USA SEGURIDAD
			<%=strGlobalSeguridadCommentNo%>strPermisos="TODO";
			<%=strGlobalSeguridadCommentNo%><%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("n",strPermisos);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(false);
		}
		
		if(this.bitEsPaginacionDinamica==true) {
			funcionGeneral.importJavaScript("JavaScript/Library/Validacion/Num.js");
			funcionGeneral.mostrarOcultarFila(document.getElementById("tblParametrosBusquedaNumeroRegistros<%=GetNombreClase(TablaBase.ToString())%>").rows["trParametrosBusquedaNumeroRegistros<%=GetNombreClase(TablaBase.ToString())%>"],true);
		}
		
		<%=GetCargarRelativePathFromForeignKeysColumnsBusqueda()%>
		
		<%=GetSetUnicoComboFromForeignKeysC(TablaBase)%>
		
		<%=GetCargarCombosFromForeignKeysColumnsBusqueda()%>
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Servicio.cargarCombos();
		
		var strTipoBusqueda=strBusqueda.split("-")[0];
		
		//UtilsVerificarPermisosPagina("<%=GetNombreClase(TablaBase.ToString())%>.jsp");
		
		if(strTipoBusqueda==constantes.STRTODOS) {
			<%if(!GetEsReporteFromPropertiesC(TablaBase)){%>
			this.buscar<%=GetNombreClase(TablaBase.ToString())%>s(constantes.STRTODOS,constantes.STRTRUE);
			<%}else{%>
			;
			<%}%>			
		}	
	};
	
	<%if(GenerarCompuesto){%>
	this.agregarQuitar<%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>=function(<%=strId%><%=GetNombreClase(TablaBase.ToString())%>,<%=strId%><%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>,chcActual) {
		
		var strSeleccionado="";
		var arrData<%=GetNombreClase(TablaBase.ToString())%>s = jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').getValue().rows;
		var row<%=GetNombreClase(TablaBase.ToString())%>Actual=undefined; 
		
		for (var j = 0 ; j < arrData<%=GetNombreClase(TablaBase.ToString())%>s.length ; j++) {
			
			if(arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].id==<%=strId%><%=GetNombreClase(TablaBase.ToString())%>) {
				
				row<%=GetNombreClase(TablaBase.ToString())%>Actual=arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].src;
					
				if(chcActual.checked==true)	{
					row<%=GetNombreClase(TablaBase.ToString())%>Actual.<%=strIdRelationshipGetSet%><%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>=<%=strId%><%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>;
					row<%=GetNombreClase(TablaBase.ToString())%>Actual.<%=strIdRelationshipGetSet%><%=GetNombreClase(TablasBaseCompuestoJunction.ToString())%>=<%=GetNombreClaseObjeto(TablasBaseCompuestoJunction.ToString())%>PaginaWebInteraccionRelacion.row<%=GetNombreClase(TablasBaseCompuestoJunction.ToString())%>ActualRelaciones.id;
					
					row<%=GetNombreClase(TablaBase.ToString())%>Actual.SELECCION=funcionGeneral.cambiarBooleanValueToControlHabilitadoCompuesto(true,row<%=GetNombreClase(TablaBase.ToString())%>Actual.id,row<%=GetNombreClase(TablaBase.ToString())%>Actual.<%=strIdRelationshipGetSet%><%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>,"<%=GetNombreClaseObjeto(TablaBase.ToString())%>PaginaWebInteraccion","<%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>");
					row<%=GetNombreClase(TablaBase.ToString())%>Actual.isNew=true;
				} else {
					row<%=GetNombreClase(TablaBase.ToString())%>Actual.SELECCION=funcionGeneral.cambiarBooleanValueToControlHabilitadoCompuesto(false,row<%=GetNombreClase(TablaBase.ToString())%>Actual.id,row<%=GetNombreClase(TablaBase.ToString())%>Actual.<%=strIdRelationshipGetSet%><%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>,"<%=GetNombreClaseObjeto(TablaBase.ToString())%>PaginaWebInteraccion","<%=GetNombreClase(TablasBaseCompuestoDetalle.ToString())%>");
					row<%=GetNombreClase(TablaBase.ToString())%>Actual.isDeleted=true;			
				}
			}		
		}
		
		jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').updateRow(row<%=GetNombreClase(TablaBase.ToString())%>Actual.id,row<%=GetNombreClase(TablaBase.ToString())%>Actual);			
	};
	<%}%>
	
	this.verificarBuscar<%=GetNombreClase(TablaBase.ToString())%>s=function(strTipoBusqueda,strEsCargarPagina) {	
		if(verificarCambios<%=GetNombreClase(TablaBase.ToString())%>Interno()==true) {      
			this.createSimpleYahooDialogVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>s(strTipoBusqueda);
		} else {
			this.buscar<%=GetNombreClase(TablaBase.ToString())%>s(strTipoBusqueda,strEsCargarPagina);
		}
	};
	
	this.buscar<%=GetNombreClase(TablaBase.ToString())%>s=function(strTipoBusquedaParam,strEsCargarPagina) {
		var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		if((strEsCargarPagina==constantes.STRFALSE||strEsCargarPagina==undefined)&&funcionGeneral.exitePermisoConsulta(strPermisos)==false)	{
			ajaxFuncionGeneral.createSimpleYahooDialogInfo(constantes.STRMENSAJETITULOBUSQUEDAS,constantes.STRMENSAJENOTIENEPERMISOSPARABUSQUEDAS,YAHOO.widget.SimpleDialog.ICON_BLOCK);
			return;
		}
		
		var strOpcionReporte="";
		
			
		if(document.getElementById(constantes.STRCAPASCONTROLCHECKBOXREPORTE).checked==true) {
			
			strOpcionReporte=jmaki.attributes.get(constantes.STRCAPASCONTROLCOMBOREPORTE).getValue();
		
			if(strOpcionReporte!=constantes.STRHTML&&strOpcionReporte!=constantes.STRPDF&&strOpcionReporte!=constantes.STRWORD&&strOpcionReporte!=constantes.STREXCEL) {
				//NO VALIDAR SINO TOCARIA MANUALMENTE ADICIONAR O QUITAR LOS ELEMENTOS EN JAVASCRIPT
				//ajaxFuncionGeneral.createSimpleYahooDialogInfo(constantes.STRMENSAJETITULOREPORTE,constantes.STRMENSAJESELECCIONETIPOREPORTE,YAHOO.widget.SimpleDialog.ICON_BLOCK);
				//return;
			} else {
				if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitEsMantenimientoRelaciones==true)	{
					strOpcionReporte=strOpcionReporte+"&esReporteRelaciones=true";
				}
			}
		}
		
		if(document.getElementById(constantes.STRCAPASCONTROLCHECKBOXGENERARTODOS).checked==true) {
			strOpcionReporte=strOpcionReporte+"&blnMostrarTodosResultadosReporte=true";
		} else {
			strOpcionReporte=strOpcionReporte+"&blnMostrarTodosResultadosReporte=false";
		}
			
		funcionGeneral.mostrarOcultarProcesando(true);
		
		<%if(GenerarCompuesto){%>
		<%=strIdRelationshipGetSet%><%=GetNombreClase(TablasBaseCompuestoJunction.ToString())%>=<%=GetNombreClaseObjeto(TablasBaseCompuestoJunction.ToString())%>PaginaWebInteraccionRelacion.row<%=GetNombreClase(TablasBaseCompuestoJunction.ToString())%>ActualRelaciones.id;
		<%}%>
		
		intNumeroPaginacionPagina= 0;
		
		if(this.bitEsPaginacionDinamica==true) 	{
			if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.validarFormularioParametrosNumeroRegistros<%=GetNombreClase(TablaBase.ToString())%>()==false) {
				funcionGeneral.mostrarOcultarProcesando(false);
				return;
			}
			
			intNumeroPaginacion=parseInt(document.frmParametrosBusqueda<%=GetNombreClase(TablaBase.ToString())%>.txtNumeroRegistros<%=GetNombreClase(TablaBase.ToString())%>.value);
		}
		
		strTipoBusqueda=strTipoBusquedaParam;
		
			if(strTipoBusqueda==constantes.STRCAPASACCIONTODOS) {
				strUltimaBusqueda=constantes.STRCAPASACCIONBUSQUEDATODOS+"&"+constantes.STRCAPASQUERYDEFAULTTABLE<%=ValoresMinimoMaximoPaginacion()%>+"&generarReporte="+strOpcionReporte+"&esCargarPagina="+strEsCargarPagina;
				
				<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarTablaAjax(strUltimaBusqueda);
			
			}  else if(strTipoBusqueda=="Por<%=strIdGetSet%>") {
				strUltimaBusqueda=constantes.STRCAPASACCIONBUSQUEDA+"=Por<%=strIdGetSet%>&<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>="+document.frmMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>.hdnIdActual.value+"&"+constantes.STRCAPASQUERYDEFAULTTABLE+"&generarReporte="+strOpcionReporte+"&esCargarPagina="+strEsCargarPagina;
				
				<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarTablaAjax(strUltimaBusqueda);
			} 
			
	<%=GetSendBusquedasIndicesTablas()%> 
	<%if(GenerarCompuesto){%>
	<%=GetSendBusquedasIndicesTablas(TablasBaseCompuestoDetalle)%> 
	<%}%>
	};
	
	this.buscar<%=GetNombreClase(TablaBase.ToString())%>sDesdeSesion=function(strUltimaBusqueda) {
		var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		<%=strGlobalSeguridadComment%><%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.registrarEventoConRetorno<%=GetNombreClase(TablaBase.ToString())%>(constantes.STRCAPASACCIONADICIONAL+"="+constantes.STRCAPASTRAERPERMISOSPAGINA+"&sPagina=Mantenimiento<%=GetNombreClase(TablaBase.ToString())%>.jsp&idSistema="+funcionGeneral.traerIdSistema(),constantes.STRCAPASSISTEMASERVLET,constantes.STRPOST,constantes.STRCAPASCARGARPERMISOS);
									  							  
		strUltimaBusqueda=strUltimaBusqueda;
		
		strTipoBusqueda=strUltimaBusqueda.substring(strUltimaBusqueda.indexOf("=",0)+1,strUltimaBusqueda.indexOf("&",15));
		strParametrosBusqueda="&"+strUltimaBusqueda.substring(strUltimaBusqueda.indexOf("&",15)+1,strUltimaBusqueda.indexOf("&inicio",15));
		intNumeroPaginacionPagina=constantes.STRCAPASPAGINACIONPAGINADEFAULT;
		intNumeroPaginacion=constantes.STRCAPASPAGINACIONDEFAULT;
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarTablaAjax(strUltimaBusqueda);
	};
	
	this.manejarPermisos<%=GetNombreClase(TablaBase.ToString())%>s=function(strPermisosParam) {
		strPermisos=strPermisosParam;
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("n",strPermisos);
		
		/*
		if(funcionGeneral.exitePermisoNuevo(strPermisos)) {
			document.getElementById("tdbtnNuevoPreparar<%=GetNombreClase(TablaBase.ToString())%>").style.visibility=constantes.STRVISIBLE;
		}
		*/
		
		if(funcionGeneral.exitePermisoBusqueda(strPermisos)) {
			document.getElementById("tr<%=GetNombreClase(TablaBase.ToString())%>CabeceraBusquedas").style.display=constantes.STRTABLEROW;
		}
	};
	
	this.addRows<%=GetNombreClase(TablaBase.ToString())%>sTablaAjax=function(arrData<%=GetNombreClase(TablaBase.ToString())%>s) {
		
		var table = document.getElementById("htmlTableCell<%=GetNombreClaseC(TablaBase.ToString())%>");
		
		
			var strResourcesRootAnterior=jmaki.resourcesRoot;
			jmaki.resourcesRoot=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Constante.strRelativePath+"resources"; 
			
			jmaki.removeWidget(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>');
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Constante.factory.loadWidget({
				widget : arrData<%=GetNombreClase(TablaBase.ToString())%>s,
				container :table
			});
			jmaki.resourcesRoot=strResourcesRootAnterior; 
			
			if(document.getElementById(constantes.STRCAPASCONTROLCHECKBOXREPORTE).checked==true) {
				ajaxFuncionGeneral.mostrarReporte(jmaki.attributes.get(constantes.STRCAPASCONTROLCOMBOREPORTE).getValue(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Constante.strRelativePath);
			}
	
		funcionGeneral.mostrarOcultarProcesando(false);
	};
	
	this.siguientes<%=GetNombreClase(TablaBase.ToString())%>s=function() {		
		var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		if(verificarCambios<%=GetNombreClase(TablaBase.ToString())%>Interno()==true) {      
			ajaxFuncionGeneral.createSimpleYahooDialogErrorValidacionMensajes('<%=GetNombreClase(TablaBase.ToString())%>',constantes.STRMENSAJEEXISTECAMBIOSDATOS);
			return;
		}
		
		funcionGeneral.mostrarOcultarProcesando(true);
		
		var arrData<%=GetNombreClase(TablaBase.ToString())%>s = jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').getValue().rows;
		
		if(arrData<%=GetNombreClase(TablaBase.ToString())%>s.length>0) {
			intNumeroPaginacionPagina=intNumeroPaginacionPagina+intNumeroPaginacion;		
		}
			
		strUltimaBusqueda=constantes.STRCAPASACCIONBUSQUEDA+"="+strTipoBusqueda+strParametrosBusqueda+"&"+constantes.STRCAPASQUERYDEFAULTTABLE+"&"+constantes.STRCAPASINICIO+"="+intNumeroPaginacionPagina+"&"+constantes.STRCAPASFIN+"="+intNumeroPaginacion;	
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarTablaAjax(strUltimaBusqueda);
	};
	
	this.anteriores<%=GetNombreClase(TablaBase.ToString())%>s=function() {
		var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		if(verificarCambios<%=GetNombreClase(TablaBase.ToString())%>Interno()==true) {      
			ajaxFuncionGeneral.createSimpleYahooDialogErrorValidacionMensajes('<%=GetNombreClase(TablaBase.ToString())%>',constantes.STRMENSAJEEXISTECAMBIOSDATOS);
			return;
		}
		
		funcionGeneral.mostrarOcultarProcesando(true);
		
		if(intNumeroPaginacionPagina<=intNumeroPaginacion) {
			intNumeroPaginacionPagina=0;
		
		} else {
			intNumeroPaginacionPagina=intNumeroPaginacionPagina-intNumeroPaginacion;
		}
	
		strUltimaBusqueda=constantes.STRCAPASACCIONBUSQUEDA+"="+strTipoBusqueda+strParametrosBusqueda+"&"+constantes.STRCAPASQUERYDEFAULTTABLE+ "&"+constantes.STRCAPASINICIO+"="+intNumeroPaginacionPagina+"&"+constantes.STRCAPASFIN+"="+intNumeroPaginacion;	
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.buscar<%=GetNombreClase(TablaBase.ToString())%>sCargarTablaAjax(strUltimaBusqueda);
	};
	
	this.seleccionarSolamente<%=GetNombreClase(TablaBase.ToString())%>=function(row<%=GetNombreClase(TablaBase.ToString())%>) {		
		//CAMBIO SIN ES MODO EDICION
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(true);		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(false);
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitContieneImagenes==true) {
			<%=GenerarRegistrarAccionesImagenServlet() %>
			//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.registrarEventoSinRespuesta<%=GetNombreClase(TablaBase.ToString())%>("accionMantenimiento=<%=GetNombreClaseObjeto(TablaBase.ToString())%>ActualCargarImagen&hdnIdActual="+row<%=GetNombreClase(TablaBase.ToString())%>.id,"<%=GetNombreClase(TablaBase.ToString())%>Servlet","POST");
		}
		
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitEsMantenimientoRelacionado==false) {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("s",strPermisos);
		
		} else {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("s2",strPermisos);
		}
		
		
		row<%=GetNombreClase(TablaBase.ToString())%>Actual=row<%=GetNombreClase(TablaBase.ToString())%>;
		this.addRow<%=GetNombreClase(TablaBase.ToString())%>Actual(row<%=GetNombreClase(TablaBase.ToString())%>); 
	};
	
	this.seleccionar<%=GetNombreClase(TablaBase.ToString())%>=function() {
		var row<%=GetNombreClase(TablaBase.ToString())%>=row<%=GetNombreClase(TablaBase.ToString())%>Actual;
		
		var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		//CAMBIO SIN ES MODO EDICION
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(true);
		
		if(row<%=GetNombreClase(TablaBase.ToString())%>.id<0) {
			/*
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(false);
			ajaxFuncionGeneral.createSimpleYahooDialogErrorValidacionMensajes('<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>','Registro no existente');
			return;
			*/
		}
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitContieneImagenes==true) {
			<%=GenerarRegistrarAccionesImagenServlet() %>
			//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.registrarEventoSinRespuesta<%=GetNombreClase(TablaBase.ToString())%>("accionMantenimiento=<%=GetNombreClaseObjeto(TablaBase.ToString())%>ActualCargarImagen&hdnIdActual="+row<%=GetNombreClase(TablaBase.ToString())%>.id,"<%=GetNombreClase(TablaBase.ToString())%>Servlet","POST");
		}
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(true);
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitEsMantenimientoRelacionado==false) {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("ae",strPermisos);
		
		} else {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("ae2",strPermisos);
		}
		
		
		//row<%=GetNombreClase(TablaBase.ToString())%>Actual=row<%=GetNombreClase(TablaBase.ToString())%>;
		this.addRow<%=GetNombreClase(TablaBase.ToString())%>Actual(row<%=GetNombreClase(TablaBase.ToString())%>); 
	};
	
	this.addRow<%=GetNombreClase(TablaBase.ToString())%>Actual=function(row<%=GetNombreClase(TablaBase.ToString())%>) {
			<%=SetDocumentVariablesActual() %>					
	};
	
	this.nuevo<%=GetNombreClase(TablaBase.ToString())%>Mostrar=function() {
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(true);
		this.nuevo<%=GetNombreClase(TablaBase.ToString())%>Preparar();
	};
	
	this.nuevo<%=GetNombreClase(TablaBase.ToString())%>Preparar=function() {
		
		if(this.bitEsMantenimientoRelacionesRelacionadoUnico==true) {
			var arrData<%=GetNombreClase(TablaBase.ToString())%>s = jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').getValue().rows;
			
			if(arrData<%=GetNombreClase(TablaBase.ToString())%>s.length>0) {
				alert(constantes.STRMENSAJENOPUEDEINGRESAR+"<%=GetNombreClase(TablaBase.ToString())%>");
			}
		} else {
			this.bitEsNuevo<%=GetNombreClase(TablaBase.ToString())%>=true;
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("a",strPermisos);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.cancelarControles();
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(true);
		}
	};
	
	this.nuevo<%=GetNombreClase(TablaBase.ToString())%>=function() {
		
		if(!<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.validarFormulario<%=GetNombreClase(TablaBase.ToString())%>())	{
			return;
		} else {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("n",strPermisos);
		}
		
		var <%=GetNombreClaseObjeto(TablaBase.ToString())%>Datos = {EDICION: "x",SELECCIONAR: "x",isNew:true,isChanged:false,isDeleted:false,<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetNombreColumnaClaseDefaultJavaScriptFiltradosC(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&TablaBase.Columns[i].Name!=strIsActive&&TablaBase.Columns[i].Name!=strIsExpired){%>,<% } %><% } %>};
	
		int<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>=int<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>-1;			
		<%=SetDocumentToVariablesNuevo() %>	
	
		jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').addRow(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Datos);
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitGuardarCambiosEnLote==false) {
			guardar<%=GetNombreClase(TablaBase.ToString())%>();
		}
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.cancelarControles();
	};
	
	this.actualizar<%=GetNombreClase(TablaBase.ToString())%>Decidir=function() {		
		if(this.bitEsNuevo<%=GetNombreClase(TablaBase.ToString())%>==true) {
			this.bitEsNuevo<%=GetNombreClase(TablaBase.ToString())%>=false;
			this.nuevo<%=GetNombreClase(TablaBase.ToString())%>();
		
		} else {
			this.actualizar<%=GetNombreClase(TablaBase.ToString())%>();
		}	
	};
	
	this.actualizar<%=GetNombreClase(TablaBase.ToString())%>DesdeRelaciones=function(row<%=GetNombreClase(TablaBase.ToString())%>ActualRelacion) {
	 	row<%=GetNombreClase(TablaBase.ToString())%>Actual=row<%=GetNombreClase(TablaBase.ToString())%>ActualRelacion;
		this.actualizar<%=GetNombreClase(TablaBase.ToString())%>();
	};
	
	this.actualizar<%=GetNombreClase(TablaBase.ToString())%>=function() {					
		
		if(!<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.validarFormulario<%=GetNombreClase(TablaBase.ToString())%>()) {
			return;
		} else {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("n",strPermisos);
		}
	<%=SetDocumentToVariablesActualizar() %>	 
		if(row<%=GetNombreClase(TablaBase.ToString())%>Actual.isChanged==true) {
			jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').updateRow(row<%=GetNombreClase(TablaBase.ToString())%>Actual.id,row<%=GetNombreClase(TablaBase.ToString())%>Actual);		
			//addRowsTabla<%=GetNombreClase(TablaBase.ToString())%>();
		}
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitGuardarCambiosEnLote==false) {
			guardar<%=GetNombreClase(TablaBase.ToString())%>();
		}
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.cancelarControles();
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(false);
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitEsMantenimientoRelacionado==true) {
			cancelarControles();
		}
	};
	
	this.cancelarControles=function() {
		cancelarControles();
	};
	
	function cancelarControles() {
		this.bitEsNuevo<%=GetNombreClase(TablaBase.ToString())%>=false;
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("n",strPermisos);
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.cancelarControles();	
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(false);
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(false);
	};
	
	this.eliminar<%=GetNombreClase(TablaBase.ToString())%>DesdeRelaciones=function(row<%=GetNombreClase(TablaBase.ToString())%>ActualRelacion) {
	 	row<%=GetNombreClase(TablaBase.ToString())%>Actual=row<%=GetNombreClase(TablaBase.ToString())%>ActualRelacion;
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitGuardarCambiosEnLote=true;
		eliminar<%=GetNombreClase(TablaBase.ToString())%>();
	};
	
	this.eliminar<%=GetNombreClase(TablaBase.ToString())%>Publico=function() {
		eliminar<%=GetNombreClase(TablaBase.ToString())%>();
	};
	
	function eliminar<%=GetNombreClase(TablaBase.ToString())%>() {
		
		if(!<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.validarFormulario<%=GetNombreClase(TablaBase.ToString())%>()||!ajaxFuncionGeneral.validarFormularioSeleccionado("<%=GetNombreClase(TablaBase.ToString())%>",document.frmMantenimiento<%=GetNombreClase(TablaBase.ToString())%>.<%for(int i = 0; i <TablaBase.Columns.Count; i++){%><%if(TablaBase.Columns[i].IsPrimaryKeyMember){%><%=GetNameControlHtml(TablaBase.Columns[i])%><%}%><%}%>)) {
			return;
		} else {
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.actualizarEstadoBotones<%=GetNombreClase(TablaBase.ToString())%>("n",strPermisos);
		}
		
		row<%=GetNombreClase(TablaBase.ToString())%>Actual.isDeleted=true;
	
		jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').removeRow(row<%=GetNombreClase(TablaBase.ToString())%>Actual.id);
		
		if(row<%=GetNombreClase(TablaBase.ToString())%>Actual.id>0) {
			arrData<%=GetNombreClase(TablaBase.ToString())%>sEliminados.push(row<%=GetNombreClase(TablaBase.ToString())%>Actual);
		}
		
		if(<%=GetNombreClaseObjeto(TablaBase.ToString())%>Constante.bitGuardarCambiosEnLote==false) {
			guardar<%=GetNombreClase(TablaBase.ToString())%>();
		}
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.cancelarControles();
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.habilitarDeshabilitarControles(false);
	};
	
	this.createSimpleYahooDialogEliminacion<%=GetNombreClase(TablaBase.ToString())%>=function() {
		jmaki.removeWidget(constantes.STRCAPASCONTROLDIALOGPREFIJO+"Eliminar<%=GetNombreClase(TablaBase.ToString())%>");	
		ajaxFuncionGeneral.crearMensajeGeneralControl("Eliminar <%=GetNombreClase(TablaBase.ToString())%>","Desea eliminar el registro seleccionado?",true,"WARN","SINO",true,constantes.STRCAPASCONTROLDIALOGPREFIJO+"Eliminar<%=GetNombreClase(TablaBase.ToString())%>");
	};
	
	this.guardar<%=GetNombreClase(TablaBase.ToString())%>=function() {
		guardar<%=GetNombreClase(TablaBase.ToString())%>();
	};
	
	function guardar<%=GetNombreClase(TablaBase.ToString())%>() {
		var <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
		
		if(verificarCambios<%=GetNombreClase(TablaBase.ToString())%>Interno()==false) {      
			ajaxFuncionGeneral.createSimpleYahooDialogInfo('<%=GetNombreClase(TablaBase.ToString())%>',constantes.STRMENSAJEEXISTECAMBIOSDATOS);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(false);		
			return;
		}
			
		funcionGeneral.mostrarOcultarProcesando(true);
		
		var arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados=[];
		
		arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados=arrayGuardar<%=GetNombreClase(TablaBase.ToString())%>();
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.guardar<%=GetNombreClase(TablaBase.ToString())%>s(arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados,strUltimaBusqueda);
		
		arrData<%=GetNombreClase(TablaBase.ToString())%>sEliminados=[];
		
		<%=GetNombreClaseObjeto(TablaBase.ToString())%>FuncionGeneral.mostrarOcultarControlesMantenimiento(false);		
	};
	
	this.arrayGuardar<%=GetNombreClase(TablaBase.ToString())%>ParaRelaciones=function() {
		return arrayGuardar<%=GetNombreClase(TablaBase.ToString())%>();
	};
	
	function arrayGuardar<%=GetNombreClase(TablaBase.ToString())%>() {
		
		var arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados=[];
		
		var arrData<%=GetNombreClase(TablaBase.ToString())%>s = jmaki.attributes.get('djtbl<%=GetNombreClase(TablaBase.ToString())%>').getValue().rows;
		
		for (var j = 0 ; j < arrData<%=GetNombreClase(TablaBase.ToString())%>s.length ; j++) {
			if(arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isNew==true||arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isChanged==true||arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isDeleted==true) {
				arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados.push(arrData<%=GetNombreClase(TablaBase.ToString())%>s[j]);
			}		
		}
		
		for (var k = 0 ; k < arrData<%=GetNombreClase(TablaBase.ToString())%>sEliminados.length ; k++) {
			arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados.push(arrData<%=GetNombreClase(TablaBase.ToString())%>sEliminados[k]);
		}
		
		return arrData<%=GetNombreClase(TablaBase.ToString())%>sResultados;
	};
	
	this.verificarCambios<%=GetNombreClase(TablaBase.ToString())%>=function() {
		return verificarCambios<%=GetNombreClase(TablaBase.ToString())%>Interno();
	};
	
	function verificarCambios<%=GetNombreClase(TablaBase.ToString())%>Interno() {
		var bitExisteCambio<%=GetNombreClase(TablaBase.ToString())%>=false;
			
		var arrData<%=GetNombreClase(TablaBase.ToString())%>s = jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').getValue().rows;
		
		for (var j = 0 ; j < arrData<%=GetNombreClase(TablaBase.ToString())%>s.length ; j++) {
			if(arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isNew==true||arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isChanged==true||arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isDeleted==true) {
				bitExisteCambio<%=GetNombreClase(TablaBase.ToString())%>=true;
			}		
		}
		
		for (var k = 0 ; k < arrData<%=GetNombreClase(TablaBase.ToString())%>sEliminados.length ; k++) {
			bitExisteCambio<%=GetNombreClase(TablaBase.ToString())%>=true;
			break;
		}
		
		return bitExisteCambio<%=GetNombreClase(TablaBase.ToString())%>;
	};
	
	this.verificarNoEliminados<%=GetNombreClase(TablaBase.ToString())%>=function() {
		return verificarNoEliminados<%=GetNombreClase(TablaBase.ToString())%>Interno();
	};
	
	function verificarNoEliminados<%=GetNombreClase(TablaBase.ToString())%>Interno() {
		var bitExisteNoEliminado<%=GetNombreClase(TablaBase.ToString())%>=false;
			
		var arrData<%=GetNombreClase(TablaBase.ToString())%>s = jmaki.attributes.get(constantes.STRCAPASCONTROLPREFIJOTABLA+'<%=GetNombreClase(TablaBase.ToString())%>').getValue().rows;
			
		if(arrData<%=GetNombreClase(TablaBase.ToString())%>s.length>0) {
			for (var j = 0 ; j < arrData<%=GetNombreClase(TablaBase.ToString())%>s.length ; j++) {
				if(arrData<%=GetNombreClase(TablaBase.ToString())%>s[j].isDeleted==false) {
					bitExisteNoEliminado<%=GetNombreClase(TablaBase.ToString())%>=true;
				}		
			}
		}
			
		return bitExisteNoEliminado<%=GetNombreClase(TablaBase.ToString())%>;
	};
	
	this.getUltimaBusqueda=function() {
		return strUltimaBusqueda;
	};
	
	this.createSimpleYahooDialogVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>s=function(strTipoBusqueda) {
		strTipoBusqueda=strTipoBusqueda;
		
		var cfg = {
			width: "300px",
			fixedcenter: true,
			header: "Busqueda",
			text: constantes.STRMENSAJEEXISTECAMBIOSDATOSDESEACANCELARLOS,
			draggable: true,
			close: true,
			visible: true,
			modal: true,
			icon: YAHOO.widget.SimpleDialog.ICON_ALARM,
			constraintoviewport: true,
			buttons: [ 
			{ label:"Yes" },
			{ label:'No', isDefault:true }
			]
		};
		
		cfg.buttons = createDialogTempButtonsVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>();
		var dlg =  new YAHOO.widget.SimpleDialog("dialogTempEliminacion" , cfg);
		
		dlg.setHeader(cfg.header);
		dlg.render(document.body); 
		dlg.show(); 
	};
	
	function createDialogTempButtonsVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>() {
		var ybs = [];	 
		var yb = {};
			
		yb.text = 'SI';
		yb.handler = onClickDialogTempYesVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>;            
		ybs.push(yb);
			
		var ybn = {};
			
		ybn.text = 'NO';
		ybn.handler = onClickDialogTempNoVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>;            
		ybs.push(ybn);
			
		return ybs;
	};
	
	function onClickDialogTempYesVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>(evt) {      
		this.hide();
		this.buscar<%=GetNombreClase(TablaBase.ToString())%>s(strTipoBusqueda);
	};
	
	function onClickDialogTempNoVerificarBuscar<%=GetNombreClase(TablaBase.ToString())%>(evt) {      
		this.hide();
	};
	
	<%=GetFuncionesNavegacionTablasClasesRelacionadasC() %>
	
	<%if(ContieneImagenesC(TablaBase)){%>
	<%=GetFuncionesImagenesC()%>
	<%}%>
	
	this.seleccionarParaCombos<%=GetNombreClase(TablaBase.ToString())%>=function(id,strDetalle) {      
		this.objetoServicio.set<%=GetNombreClase(TablaBase.ToString())%>Unico(id,strDetalle);
		this.objetoServicio.cargarCombo<%=GetNombreClase(TablaBase.ToString())%>();
	};

<%} else {%>
//CUANDO TIENE RICHFACES

this.buscar<%=GetNombreClaseC(TablaBase.ToString())%>sOnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.buscar<%=GetNombreClase(TablaBase.ToString())%>sOnComplete=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.buscarFk<%=GetNombreClaseC(TablaBase.ToString())%>sOnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
};

<%=GetFuncionesBusquedaOnCompleteFromForeignKeysColumnsBusqueda()%>

this.siguientes<%=GetNombreClase(TablaBase.ToString())%>sOnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.siguientes<%=GetNombreClase(TablaBase.ToString())%>sOnComplete=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.anteriores<%=GetNombreClase(TablaBase.ToString())%>sOnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.anteriores<%=GetNombreClase(TablaBase.ToString())%>sOnComplete=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.seleccionar<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {

};

this.seleccionar<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
	Richfaces.showModalPanel('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>',{width:<%=GetAnchoAuxiliarTableFromPropertiesC(TablaBase)%>, top:<%=GetTopAuxiliarTableFromPropertiesC(TablaBase)%>});
	<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
	//#{rich:component('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>')}.show();
	RichFaces.$('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>').show();
	<%}%>	
};

this.nuevoPreparar<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {
	//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
	<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
	Richfaces.showModalPanel('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>',{width:<%=GetAnchoAuxiliarTableFromPropertiesC(TablaBase)%>, top:<%=GetTopAuxiliarTableFromPropertiesC(TablaBase)%>});
	<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
	
	<%}%>		
};

this.nuevoPreparar<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
	<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
	
	<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
	//#{rich:component('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>')}.show();
	RichFaces.$('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>').show();
	<%}%>	
};

this.nuevo<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {

};

this.nuevo<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	
};

this.actualizar<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.actualizar<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
	
	<%if(true/*blnTieneIdentityColumn*/){%>if(document.getElementById("frmMantenimiento<%=GetNombreClase(TablaBase.ToString())%>:maximumSeverity<%=GetNombreClase(TablaBase.ToString())%>").value!=-1 && document.getElementById("frmMantenimiento<%=GetNombreClase(TablaBase.ToString())%>:maximumSeverity<%=GetNombreClase(TablaBase.ToString())%>").value!=2) {<%}%>
		<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
		Richfaces.hideModalPanel('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>');
		<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
		//#{rich:component('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>')}.hide();
		RichFaces.$('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>').hide();
		<%}%>	
	<%if(true/*blnTieneIdentityColumn*/){%>}<%}%>
};

this.eliminar<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.eliminar<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
	
	<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
	Richfaces.hideModalPanel('mondalPanelEliminarConfirmacion<%=GetNombreClaseC(TablaBase.ToString())%>');
	Richfaces.hideModalPanel('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>');
	<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
	//#{rich:component('mondalPanelEliminarConfirmacion<%=GetNombreClaseC(TablaBase.ToString())%>')}.hide();
	//#{rich:component('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>')}.hide();
	
	RichFaces.$('mondalPanelEliminarConfirmacion<%=GetNombreClaseC(TablaBase.ToString())%>').hide();
	RichFaces.$('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>').hide();
	<%}%>
};

this.guardarCambios<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.guardarCambios<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
	
	<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
	Richfaces.hideModalPanel('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>');
	<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
	//#{rich:component('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>')}.hide();
	RichFaces.$('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>').hide();
	<%}%>
};

this.cancelar<%=GetNombreClase(TablaBase.ToString())%>OnClick=function() {
	//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarInicioProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
};

this.cancelar<%=GetNombreClase(TablaBase.ToString())%>OnComplete=function() {
	//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FuncionGeneral.procesarFinalizacionProceso<%=GetNombreClaseC(TablaBase.ToString())%>();
		
	<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
	Richfaces.hideModalPanel('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>');
	<%} else if(EsVersionRichFaces4C(RichFaces_Version)) {%>
	//#{rich:component('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>')}.hide();
	RichFaces.$('modalPanel<%=GetNombreClaseC(TablaBase.ToString())%>').hide();
	<%}%>
};

<%}%>
};

var <%=GetNombreClaseObjeto(TablaBase.ToString())%>PaginaWebInteraccion=new <%=GetNombreClase(TablaBase.ToString())%>PaginaWebInteraccion();

<%=strJavaScriptCDataEnd%>
//<%=strJSEndJavaScript%>