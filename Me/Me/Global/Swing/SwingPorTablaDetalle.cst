<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="True" %>
<%@ CodeTemplate Src="..\CommonCode\CommonCodeProyecto.cs" Inherits="Me.CommonCodeProyecto" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="ConEjb" Type="System.Boolean" Default="false" Category="Options" Description="json or xml" %>
<%@ Property Name="ConGroupLayout" Type="System.Boolean" Default="false" Category="Options" Description="json or xml" %>
<%@ Property Name="GenerarMe" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="GeneracionPorModuloUnico" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ConSwingFocusTraversalPolicy" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>

<script runat="template">
public int intPosicionYPanelsRelaciones=1;

public String GetIGridRelaciones(bool conAcumulador) {
	String sReturn="iGridyRelaciones";//iGridyRelaciones++
	
	if(!blnConForzarUbicarPanelesManualmente) {
		if(conAcumulador) {
			sReturn+="++";
		}
	} else {
		sReturn=iGridyRelaciones.ToString();
		iGridyRelaciones++;
		
	}
	
	//iGridyRelaciones
	
	return sReturn;
}

public String GetPanelesFinRelaciones(String strTipoAccion) {
	String strPaneles="";
	bool conPanel=false;
	bool existe=false;
	
	if(arrayPanelesRelacionesFin.Count>0) {
		existe=true;
	}
	
	if(strTipoAccion.Equals("DEFINIR")) {
		//protected JPanel<%=strSwtMe%> jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>; 		
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {			
			if(conPanel) {
				strPaneles+="\r\n\tprotected JPanel"+strSwtMe+" jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			}
			strPaneles+="\r\n\tprotected JTabbedPane"+strSwtMe+" jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			strPaneles+="\r\n\tprotected JButton"+strSwtMe+" jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
		}
		
		if(existe) {
			strPaneles+="\r\n\tprotected JPanel"+strSwtMe+" jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+";";
			strPaneles+="\r\n\tprotected JButton"+strSwtMe+" jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+";";
			strPaneles+="\r\n\tInteger iPosXAccionesRelacionesFin=0;";
		}
	} else if(strTipoAccion.Equals("INICIALIZAR")) {
		//this.jPanelRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {
			if(conPanel) {
				strPaneles+="\r\n\t\tthis.jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+" = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);";
			}
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"=new JTabbedPane"+strSwtMe+"();";
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".add(\"\",new JPanel());";
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"=new JButtonMe();";
		}
		
		if(existe) {
			strPaneles+="\r\n\t\tthis.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+" = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);";
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"=new JButtonMe();";
		}
	} else if(strTipoAccion.Equals("PARAMETROS")) {
		//this.jPanelRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strRelacionesOcultos%>"));
        //this.jPanelRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setName("jPanelRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%>"); 
		String strPanelFinLabel="";
		
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {
			if(!blnEsGuardarRelaciones){
				if(conPanel) {
					strPaneles+="\r\n\t\tthis.jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setBorder(javax.swing.BorderFactory.createTitledBorder(\""+strPanelFin+"\"));";
				}
				strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setBorder(javax.swing.BorderFactory.createTitledBorder(\""+strPanelFin+"\"));";
			} else {
				if(conPanel) {
					strPaneles+="\r\n\t\tthis.jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));";
				}
				strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));";
			}
			
			if(conPanel) {
        		strPaneles+="\r\n\t\tthis.jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setName(\"jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\");";
			}
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setName(\"jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\");";
			
			strPanelFinLabel=GetPanelFinNombreReversaTableFromPropertiesC(strPanelFin);
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setText(\""+strPanelFinLabel+"\");";
			strPaneles+="\r\n\t\tFuncionesSwing.addImagenButtonGeneral(this.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+",\"relaciones_fin_button\",\""+strPanelFinLabel+"\",true);";
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setToolTipText(\""+strPanelFinLabel+"\");\r\n";
		}
		
		if(existe) {
			strPaneles+="\r\n\t\tthis.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));";
			strPaneles+="\r\n\t\tthis.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+".setName(\"jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+"\");";
			
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+".setText(\"NORMAL\");";
			strPaneles+="\r\n\t\tFuncionesSwing.addImagenButtonGeneral(this.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+",\"relaciones_fin_button\",\"NORMAL\",true);";
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+".setToolTipText(\"NORMAL\");";
		}
	} else if(strTipoAccion.Equals("PARAMETROS2")) {
		//this.jPanelRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%>);	
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {
			if(conPanel) {
				strPaneles+="\r\n\t\tGridBagLayout gridaBagLayoutRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"= new GridBagLayout();";
				strPaneles+="\r\n\t\tthis.jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setLayout(gridaBagLayoutRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+");";
			}
			
			//TABBEDPANE
			//ESTA EN BEAN PADRE			
			/*
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setMinimumSize(new Dimension(this.getWidth(),"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES "+GetAltoTablaRelacionesSwingExtraC(GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES",TablaBase)+"));";
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setMaximumSize(new Dimension(this.getWidth(),"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES "+GetAltoTablaRelacionesSwingExtraC(GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES",TablaBase)+"));";
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setPreferredSize(new Dimension(this.getWidth(),"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES "+GetAltoTablaRelacionesSwingExtraC(GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES",TablaBase)+"));";
			*/
			
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setMinimumSize(new Dimension(this.getWidth(),"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES));";
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setMaximumSize(new Dimension(this.getWidth(),"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES));";
			strPaneles+="\r\n\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setPreferredSize(new Dimension(this.getWidth(),"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.ALTO_TABPANE_RELACIONES));";
			
		}
		
		if(existe) {
			strPaneles+="\r\n\t\tGridBagLayout gridaBagLayoutAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+"= new GridBagLayout();";
			strPaneles+="\r\n\t\tthis.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+".setLayout(gridaBagLayoutAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+");";
		}
	} else if(strTipoAccion.Equals("UBICAR")) {
		/*this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyRelaciones++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
					
		this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jPanelRelacionesOcultos<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);		
		*/
		
		//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.WEST;
		
		//AGREGA TABBEDPANE
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
			strPaneles+="\r\n\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".fill=GridBagConstraints.NONE;";
			strPaneles+="\r\n\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".anchor = GridBagConstraints.WEST;";		
			
			strPaneles+="\r\n\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = "+GetIGridRelaciones(true)+";";		
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
					
			strPaneles+="\r\n\r\n\t\t\t\tthis.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(this.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+", gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
			strPaneles+="\r\n\r\n\t\t\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setVisible(false);\r\n";
		}
		
		
		
		//AGREGA BOTONES		
		
		//AGREGA BOTON NORMAL
		if(existe) {
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = 0;";
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = iPosXAccionesRelacionesFin++;";
			
			strPaneles+="\r\n\t\t\t\tthis.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+".add(this.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+", this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
		}
		
		//AGREGA DEMAS BOTONES
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {						
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = 0;";
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = iPosXAccionesRelacionesFin++;";
		
			strPaneles+="\r\n\t\t\t\tthis.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+".add(this.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+", this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";

		}
	} else if(strTipoAccion.Equals("UBICAR_BOTONES")) {
		if(existe) {
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
			strPaneles+="\r\n\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".fill=GridBagConstraints.NONE;";
			strPaneles+="\r\n\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".anchor = GridBagConstraints.WEST;";		
			
			strPaneles+="\r\n\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = "+GetIGridRelaciones(true)+";";		
			strPaneles+="\r\n\t\t\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
					
			strPaneles+="\r\n\r\n\t\t\t\tthis.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(this.jPanelAccionesRelacionesFin"+GetNombreClaseC(TablaBase.ToString())+", gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
		}
	
	} else if(strTipoAccion.Equals("REGISTRAR_EVENTOS")) {
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {					
			strPaneles+="\r\n\r\n\t\t\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".addChangeListener(new TabbedPaneChangeListener(this,\"RelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\"));";
		}
	}
	
	//Trace.WriteLine(strPaneles);
	
	return strPaneles;
}

public String GetPaneles(String strTipoAccion,bool esSoloPanelesFin) {
	String strPaneles="";
	String strPanelInicioTitulo="";
	String strPanelFinTitulo="";
	
	if(strTipoAccion.Equals("DEFINIR")) {
		//PANELES FIN
		//protected JPanel<%=strSwtMe%> jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>; 		
		foreach(String strPanelFin in arrayPanelesFin) {
			strPaneles+="\r\n\r\n\tprotected JPanel"+strSwtMe+" jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			strPaneles+="\r\n\tprotected Integer iXPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"=0;";
			strPaneles+="\r\n\tprotected Integer iYPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"=0;";
		}
		
		//PANELES INICIO
		foreach(String strPanelInicio in arrayPanelesInicio) {
			strPaneles+="\r\n\r\n\tprotected JPanel"+strSwtMe+" jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+";";
			strPaneles+="\r\n\tprotected Integer iXPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+"=0;";
			strPaneles+="\r\n\tprotected Integer iYPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+"=0;";
		}
	} else if(strTipoAccion.Equals("INICIALIZAR")) {
		//PANELES FIN
		//this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);
		foreach(String strPanelFin in arrayPanelesFin) {
			strPaneles+="\r\n\t\tthis.jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+" = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);";
		}
		
		//PANELES INICIO
		foreach(String strPanelInicio in arrayPanelesInicio) {
			strPaneles+="\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+" = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);";
		}
	} else if(strTipoAccion.Equals("PARAMETROS")) {
		//PANELES FIN
		//this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strCamposOcultos%>"));
        //this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setName("jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>"); 
		foreach(String strPanelFin in arrayPanelesFin) {
			if(!blnEsGuardarRelaciones){
				strPanelFinTitulo=GetPanelFinNombreReversaTableFromPropertiesC(strPanelFin);
				strPaneles+="\r\n\r\n\t\tthis.jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setBorder(javax.swing.BorderFactory.createTitledBorder(\""+strPanelFinTitulo+"\"));";
			} else {
				strPaneles+="\r\n\r\n\t\tthis.jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));";
			}
        	strPaneles+="\r\n\t\tthis.jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setName(\"jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\");";
			strPaneles+="\r\n\t\tFuncionesSwing.setBoldPanel(this.jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+", STIPO_TAMANIO_GENERAL,false,false,this);";
		}
		
		//PANELES INICIO
		String strTipoBorde="";
		
		foreach(String strPanelInicio in arrayPanelesInicio) {
			//if(!blnEsGuardarRelaciones){
				strPanelInicioTitulo=strPanelInicio.Replace("_"," ").ToUpper();				
				strPanelInicioTitulo=GetNombreConMixedCaseC(strPanelInicioTitulo,true);
				
				//Trace.WriteLine(strPanelInicioTitulo);
				//strPanelInicioTitulo=GetPanelFinNombreReversaTableFromPropertiesC(strPanelInicio);
				
				strTipoBorde=GetValorPanelNumeroColumnasTableFromPropertiesC(TablaBase,strPanelInicio,3);
				
				//Trace.WriteLine(strTipoBorde);
				
				if(!GetPanelSinTitulosTableFromPropertiesC(TablaBase) && !strTipoBorde.Equals("NINGUNO") && !strTipoBorde.Equals("VACIO")) {
					strPaneles+="\r\n\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+".setBorder(javax.swing.BorderFactory.createTitledBorder(\""+strPanelInicioTitulo+"\"));";
				} else {
					if(strTipoBorde.Equals("NINGUNO")) {
						strPaneles+="\r\n\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createLineBorder(Color.GRAY));";
					
					} else if(strTipoBorde.Equals("VACIO")) {
						strPaneles+="\r\n\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createEmptyBorder(0,0,0,0));";
					}
				}
			/*
			} else {
				strPaneles+="\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+".setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));";
			}
			*/
			
        	strPaneles+="\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+".setName(\"jPanelCamposFin"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+"\");";
			strPaneles+="\r\n\t\tFuncionesSwing.setBoldPanel(this.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+", STIPO_TAMANIO_GENERAL,false,false,this);";
		}
	} else if(strTipoAccion.Equals("PARAMETROS2")) {
		//PANELES FIN
		//this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>);	
		foreach(String strPanelFin in arrayPanelesFin) {
			strPaneles+="\r\n\r\n\t\tGridBagLayout gridaBagLayoutCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"= new GridBagLayout();";
			strPaneles+="\r\n\t\tthis.jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setLayout(gridaBagLayoutCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+");";
		}
		
		//PANELES INICIO
		foreach(String strPanelInicio in arrayPanelesInicio) {
			strPaneles+="\r\n\r\n\t\tGridBagLayout gridaBagLayoutCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+"= new GridBagLayout();";
			strPaneles+="\r\n\t\tthis.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+".setLayout(gridaBagLayoutCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+");";
		}
	} else if(strTipoAccion.Equals("UBICAR")) {
		/*this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyRelaciones++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
					
		this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);		
		*/
		
		//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.WEST;
		
		//PANELES FIN
		
		if(esSoloPanelesFin) {
			foreach(String strPanelFin in arrayPanelesFin) {
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".fill=GridBagConstraints.NONE;";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".anchor = GridBagConstraints.WEST;";		
				
				strPaneles+="\r\n\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = "+GetIGridRelaciones(true)+";";		
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
						
				strPaneles+="\r\n\r\n\t\tthis.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+", gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
			}
		} else {
			//PANELES INICIO
			String strAlignSubPanel="WEST";
			
			String strYPanel="";//GetIGridRelaciones(true);
			String strXPanel="0";
			String strColSpanPanel="0";
			String strRowSpanPanel="0";
			bool conUbicacion=false;
			
			conUbicacion=GetPanelConUbicacionTableFromPropertiesC(TablaBase);
			
			foreach(String strPanelInicio in arrayPanelesInicio) {
				strAlignSubPanel=GetValorPanelNumeroColumnasTableFromPropertiesC(TablaBase,strPanelInicio,2);
				
				if(strAlignSubPanel.Equals("")) {
					strAlignSubPanel="WEST";
				}
				
				//UBICACION
				strYPanel=""+GetIGridRelaciones(true)+"";
				strXPanel="0";
				strColSpanPanel="0";
				strRowSpanPanel="0";
			
				//Trace.WriteLine(strAlignSubPanel);
				
				strPaneles+="\r\n\r\n\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".fill=GridBagConstraints.NONE;";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".anchor = GridBagConstraints."+strAlignSubPanel+";";//WEST
				
				
				if(conUbicacion) {
					strYPanel=GetValorPanelNumeroColumnasTableFromPropertiesC(TablaBase,strPanelInicio,4);
					strXPanel=GetValorPanelNumeroColumnasTableFromPropertiesC(TablaBase,strPanelInicio,5);
					strColSpanPanel=GetValorPanelNumeroColumnasTableFromPropertiesC(TablaBase,strPanelInicio,6);
					strRowSpanPanel=GetValorPanelNumeroColumnasTableFromPropertiesC(TablaBase,strPanelInicio,7);
					
					//SI NO EXISTE, PONER DEFECTO
					if(strYPanel.Equals("0") || strYPanel.Equals("") || strYPanel==null) {
						strYPanel=""+GetIGridRelaciones(true)+"";
					}
										
					if(strXPanel.Equals("") || strXPanel==null) {
						strXPanel="0";
					}
					
					if(strColSpanPanel.Equals("") || strColSpanPanel==null) {
						strColSpanPanel="0";
					}
					
					if(strRowSpanPanel.Equals("") || strRowSpanPanel==null) {
						strRowSpanPanel="0";
					}
				}
				
				
				strPaneles+="\r\n\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = "+strYPanel+";";		
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = "+strXPanel+";";
				
				
				if(conUbicacion) {
					if(!strColSpanPanel.Equals("0")) {
						strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridwidth = "+strColSpanPanel+";";
					}
					
					if(!strRowSpanPanel.Equals("0")) {
						strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridheight = "+strRowSpanPanel+";";
					}
					
					if(!strYPanel.Equals("0")) {
						strPaneles+="\r\n\t\tiGridyRelaciones = "+strYPanel+";";
						strPaneles+="\r\n\t\tiGridyRelaciones++;";
					}
				}
				
				strPaneles+="\r\n\r\n\t\tthis.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+", gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
			}
		}
		
	}  else if(strTipoAccion.Equals("UBICAR_TAB")) {
		/*this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyRelaciones++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
					
		this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);		
		*/
		
		//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.WEST;
		
		//PANELES FIN
		
		if(esSoloPanelesFin) {
			Trace.WriteLine("ERROR->ERROR->ERROR->SwingPorTabla.cst ERROR: FALTA IMPLEMENTAR TAB EN PANELESFIN ERROR->ERROR->ERROR->");
			/*
			foreach(String strPanelFin in arrayPanelesFin) {
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".fill=GridBagConstraints.NONE;";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".anchor = GridBagConstraints.WEST;";		
				
				strPaneles+="\r\n\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = iGridyRelaciones++;";		
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
						
				strPaneles+="\r\n\r\n\t\tthis.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(jPanelCamposFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+", gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
			}
			*/
		} else {
			//PANELES INICIO
			
			foreach(String strPanelInicio in arrayPanelesInicio) {							
				//Trace.WriteLine(strAlignSubPanel);
				
				strPanelInicioTitulo=strPanelInicio.Replace("_"," ").ToUpper();				
				strPanelInicioTitulo=GetNombreConMixedCaseC(strPanelInicioTitulo,true);
				
				strPaneles+="\r\n\t\tthis.jTabbedPaneCampos"+GetNombreClaseC(TablaBase.ToString())+".add(\""+strPanelInicioTitulo+"\",this.jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+");";
				
				/*
				strPaneles+="\r\n\r\n\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".fill=GridBagConstraints.NONE;";
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".anchor = GridBagConstraints."+strAlignSubPanel+";";//WEST
				
				strPaneles+="\r\n\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = "+strYPanel+";";		
				strPaneles+="\r\n\t\tthis.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = "+strXPanel+";";
				
				strPaneles+="\r\n\r\n\t\tthis.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(jPanelCamposInicio"+strPanelInicio+GetNombreClaseC(TablaBase.ToString())+", gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
				*/
			}
		}
	}
	
	//Trace.WriteLine(strPaneles);
	
	return strPaneles;
}

//GetTotalAnchoTabla()
//VENTANA
public int GetTotalAnchoVentana() {
	int iTotal=0;
	//int iTotalFilas=0;
		
	int iNumeroCampos=GetNumeroCamposFinalTablaColumnas();
	
	iTotal=iNumeroCampos * INTintTamColumnaTablaSwing;
	
	//Trace.WriteLine(iTotal);		
	
	//ACCIONES
	iTotal+=(INTSWING_WIDTH_CONTROL*1);//2);
	
	if(iTotal<SWING_WIDTH_MIN_VENTANA) {
		iTotal=SWING_WIDTH_MIN_VENTANA;
	}
	
	//Trace.WriteLine(iTotal);
	
	return iTotal;
}

public int GetTotalAltoVentana() {
	int iTotal=0;
	int iTotalFilas=0;
	
	/*
	int iNumeroCampos=GetNumeroCamposFinalTablaColumnas();
	
	iTotal=iNumeroCampos * intTamColumnaTablaSwing;
	
	if(iTotal<SWING_WIDTH_MIN_VENTANA) {
		iTotal=SWING_WIDTH_MIN_VENTANA;
	}
	*/
	
	//BUSQUEDAS
	if(blnTieneBusquedas) {
		iTotal+=200;
	}
	
	//PARAMETROS BUSQUEDA
	iTotal+=(INTSWING_HEIGHT_CONTROL*2);
	
	//TABLA
	iTotal+=350;
	
	//ACCIONES
	iTotal+=(INTSWING_HEIGHT_CONTROL*3);//2);
	
	//RELACIONES
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(TablaBase,false);
	
	
	if(tablasRelacionadasEncontradas.Count>0) {
		iTotal+=INTSWING_HEIGHT_TABPANE_RELACIONES;
	}
	
	if(iTotal<SWING_HEIGHT_MIN_VENTANA) {
		iTotal=SWING_HEIGHT_MIN_VENTANA;
	}
	
	return iTotal;
}

//VENTANA

//FORMULARIO
public int GetTotalAnchoFormulario() {
	int iTotal=0;
	
	int iTotalPorBusquedaArbol=65;
	int iAutoReferenciada=0;
	
	int iNumeroColumnas=GetAlignVerticalFormNumeroColumnasTableC(TablaBase);
	
	iTotal=iNumeroColumnas * (INTSWING_WIDTH_CONTROL*2)+INTSWING_WIDTH_CONTROL;
	
	if(blnEsAutoReferenciada) {
		iAutoReferenciada+=iTotalPorBusquedaArbol;
	}		
	//AUTOREFERENCIADA
	iTotal+=iAutoReferenciada;
	
	//AUTOREFERENCIADA FK
	int iNumeroAutoreferenciada=NumeroBusquedasFkArbolC(TablaBase);
	
	if(iNumeroAutoreferenciada>2) {
		iNumeroAutoreferenciada=2;	
	}
	
	//AUTOREFERENCIADA POR FK
	iAutoReferenciada=(iNumeroAutoreferenciada*iTotalPorBusquedaArbol);
	iTotal+=iAutoReferenciada;
	
	return iTotal;
}

public int GetTotalAltoFormulario() {
	int iTotal=0;
	//int iTotalFilas=0;
	
	int iNumeroColumnas=GetAlignVerticalFormNumeroColumnasTableC(TablaBase);
	int iNumeroCampos=GetNumeroCamposFinalTablaColumnas();
	
	/*
	iTotalFilas=iNumeroCampos / iNumeroColumnas;
	
	iTotal=iTotalFilas * SWING_HEIGHT_CONTROL;
	*/
	
	int iTotalHeightColumnas=GetHeightCamposFinalTablaColumnas();
	
	iTotal=iTotalHeightColumnas / iNumeroColumnas;
	
	//ACCIONES
	iTotal+=INTSWING_HEIGHT_CONTROL * 5;//* 3;
	
	//Trace.WriteLine(iNumeroCampos+"-"+iNumeroColumnas+"-"+SWING_HEIGHT_CONTROL);
	
	return iTotal;
}

public int GetHeightCamposFinalTablaColumnas() {
	int iTotal=0;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow){continue; } 
		
		if(!(EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			|| EsColumnaVariableModuloGlobalC(TablaBase.Columns[i])
			|| GetNoInsertEditColumnFromPropertiesC(TablaBase.Columns[i]))
			
			|| EsColumnaVariableGlobalMostrarDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			
		) {
			
			iTotal+=GetHeightSwingFormularioColumnaClaseC(TablaBase.Columns[i]);
		}
	}		
	
	
	return iTotal;
}
//FORMULARIO

public int GetNumeroCamposFinalTablaColumnas() {
	int iTotal=0;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow){continue; } 
		
		if(!(EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			|| EsColumnaVariableModuloGlobalC(TablaBase.Columns[i])
			|| GetNoInsertEditColumnFromPropertiesC(TablaBase.Columns[i]))
			
			|| EsColumnaVariableGlobalMostrarDataBaseFromPropertiesC(TablaBase.Columns[i]) 
		) {
			iTotal++;
		}
	}		
	
	
	return iTotal;
}

public int GetTotalAnchoTabla() {
	int iTotal=0;
	
	//SIMPLES
	iTotal+=GetAnchoTablaColumnas();
	
	//OCULTAS
	iTotal+=GetAnchoTablaColumnasOcultas();
	
	//RELACIONES
	iTotal+=GetAnchoTablaColumnasRelaciones();
	
	return iTotal;
}

public int GetAnchoTablaColumnas() {
	int iTotal=0;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow){continue; } 
		
		if((!(EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			|| EsColumnaVariableModuloGlobalC(TablaBase.Columns[i])
			|| GetNoInsertEditColumnFromPropertiesC(TablaBase.Columns[i])
			)
			
			&& !GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])
			&& GetShowTableColumnFromPropertiesC(TablaBase.Columns[i])
			)
			
			|| EsColumnaVariableGlobalMostrarDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			
		) {
				
			iTotal+=INTintTamColumnaTablaSwing;
		}
	}		
	
	//POR COLUMNA EDITAR
	if(GetPermiteEditarFromPropertiesC(TablaBase)) {
		iTotal+=INTintTamColumnaTablaSwing;
	}
	
	if(blnConSeleccionar) {
		iTotal+=INTintTamColumnaSeleccionarTablaSwing;
	}
	
	return iTotal;
}

public int GetAnchoTablaColumnasOcultas() {
	int iTotal=0;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow){continue; } 
		
		if(((EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			|| EsColumnaVariableModuloGlobalC(TablaBase.Columns[i])
			|| GetNoInsertEditColumnFromPropertiesC(TablaBase.Columns[i])
			)
			
			&& !GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])
			&& GetShowTableColumnFromPropertiesC(TablaBase.Columns[i])
			)
			
			|| !EsColumnaVariableGlobalMostrarDataBaseFromPropertiesC(TablaBase.Columns[i]) 
			
		) {
				
			iTotal+=INTintTamColumnaTablaSwing;
		}
	}		
		
	return iTotal;
}

public int GetAnchoTablaColumnasRelaciones() {
	int iTotal=0;
	int iNumeroRelaciones=0;
	
	//POR TABLAS RELACIONADAS
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(TablaBase,false);
	
	/*
	Trace.WriteLine(tablasRelacionadasEncontradas.Count);
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		Trace.WriteLine(tableSchema.Name);	
	}
	*/
	
	foreach(TableSchema tablaRelacionadaObjetivo in tablasRelacionadasEncontradas) {
		if(GetPermitePorOcultoClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)) {
			iNumeroRelaciones++;
		}
	}
	
	//tablasRelacionadasEncontradas.Count
	
	iTotal+=(iNumeroRelaciones * INTintTamColumnaTablaSwing);
	
	return iTotal;
}

public String GetConMaximoRelaciones(TableSchema table) {
	String sTablaClaseRelacionada="true";
	
	/*
	if(GetNumeroClasesRelacionadasFinalC(table) >5 && GetNombresClasesNoNavegacionFromTableFromPropertiesC(table).Equals("")) {
		 sTablaClaseRelacionada="false";
	}
	*/
	
	if(!blnCumpleMaximoRelacionesMantenimiento) {
		sTablaClaseRelacionada="false";
	}
	
	return sTablaClaseRelacionada;
}

public String GetRecargarInformacionProcesar() {
	String sTablaClaseRelacionada=strRecargarInformacion;
	
	if(blnEsReporte || blnEsProceso) {
		sTablaClaseRelacionada=GetRecargarInformacionBuscarC(true,TablaBase);
	}
	
	/*
	if(blnEsReporte){
		sTablaClaseRelacionada=strBuscar;
	}
	*/
	
	return sTablaClaseRelacionada;
}

public String GetCargarPanelsRelacionadas(TableSchema table,bool soloSessionInicializar,bool soloLlamarFuncion,bool conCargarPorParte) {
	String sTablaClaseRelacionada=String.Empty;
	String sCommentAutoRelacionado="";
	String sTab="";
	String sTabBase="";
	String sConGuardarRelaciones="false";
	String sConCargarRelaciones="false";
	String sEsSoloSession="";
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false,true);
	
	sEsSoloSession="false";
	
	if(soloSessionInicializar) {
		sEsSoloSession="true";	
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		//sTablaClaseRelacionada+="\r\n\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,intSelectedRow,false,true);";
		sCommentAutoRelacionado="";
		
		if(!soloSessionInicializar) {
			sEsSoloSession="this.puedeCargarPorParte"+GetNombreClaseC(tableSchema.ToString());	
		}
		
		if(!soloLlamarFuncion && !conCargarPorParte) {
			//if(soloSessionInicializar) {
			//sTab="\t";
			//}
			sTabBase="\t\t";//"\t\t\t\t";
			
			sTablaClaseRelacionada+="\r\n\r\n\t"+sTab+"public void cargarSessionConBeanSwingJInternalFrame"+GetNombreClaseC(tableSchema.ToString())+"(Boolean soloSession,Boolean actualizarTab,Integer iIndexTab) throws Exception {";
			sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+""+sTab+"//SOLO INICIALIZA SESSION (YA NO, CONSUME MUCHA MEMORIA)";
			sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"();";
			
			if(GetEsGuardarRelacionesFromPropertiesC(tableSchema)) {
				sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(true);";
				sConGuardarRelaciones="true";
				sConCargarRelaciones="true";
			} else {
				sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);";
				sConGuardarRelaciones="false";
				sConCargarRelaciones="false";
			}
			
			if(tableSchema.Name.Equals(TablaBase.Name)) {
				sCommentAutoRelacionado="//";
			}
			
			sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+sCommentAutoRelacionado+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
			
			sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+""+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,true,false);";
			
			//if(!soloSessionInicializar) {
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"if(!soloSession) {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,true);";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.jInternalFrameParent=this;";
				
				//"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."
				sTablaClaseRelacionada+="\r\n\r\n\r\n"+sTabBase+"\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {";
				
				//ESTA EN BEAN
				/*
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\t"+GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MAXIMO_TABLADATOSREL= "+GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MAXIMO_TABLADATOSREL "+GetAltoTablaRelacionesSwingExtraC(GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MAXIMO_TABLADATOSREL",TablaBase)+";";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t"+GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MINIMO_TABLADATOSREL= "+GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MINIMO_TABLADATOSREL "+GetAltoTablaRelacionesSwingExtraC(GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MINIMO_TABLADATOSREL",TablaBase)+";";
				*/
				
				//sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\t"+GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MAXIMO_TABLADATOSREL= "+GetNombreClaseC(TablaBase.ToString())+strClaseBean+".TAMANIO_ALTO_MAXIMO_TABLADATOSREL;";
				//sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t"+GetNombreClaseC(tableSchema.ToString())+strClaseBean+".TAMANIO_ALTO_MINIMO_TABLADATOSREL= "+GetNombreClaseC(TablaBase.ToString())+strClaseBean+".TAMANIO_ALTO_MINIMO_TABLADATOSREL;";
				
				if(!tableSchema.Name.Equals(TablaBase.Name)) {
					sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\t"+GetNombreClaseC(tableSchema.ToString())+strPrefijoSwingInternalFrame+".STIPO_TAMANIO_GENERAL="+GetNombreClaseC(TablaBase.ToString())+strPrefijoSwingInternalFrame+".STIPO_TAMANIO_GENERAL;";
				}
				
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t"+GetNombreClaseC(tableSchema.ToString())+strPrefijoSwingInternalFrame+".STIPO_TAMANIO_GENERAL_TABLA="+GetNombreClaseC(TablaBase.ToString())+strPrefijoSwingInternalFrame+".STIPO_TAMANIO_GENERAL;";
				
				//<%=GetAltoTablaRelacionesSwingExtraC(GetNombreClaseC(TablaBase.ToString())+strClaseBean+".ALTO_TABPANE_RELACIONES",TablaBase)%>
				
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
				
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,"+sConGuardarRelaciones+",true,"+sConCargarRelaciones+",false);//false->4";//false
				
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.setJInternalFrameParent(this);";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+");";
				
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = "+GetIGridRelaciones(true)+";";//+intPosicionYPanelsRelaciones+";";		
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t//this.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane(), this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
				
				String strNombrePanelFin=GetPanelFinNombreTableFromPropertiesC(tableSchema,true);
				
				if(!strNombrePanelFin.Equals("")) {
					strNombrePanelFin="Fin"+strNombrePanelFin;
				}
				
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\tif(!actualizarTab) {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t\tthis.jTabbedPaneRelaciones"+strNombrePanelFin+GetNombreClaseC(TablaBase.ToString())+".add(\""+GetTituloNombreTableFromPropertiesC(tableSchema)+GetPluralTituloNombreTableFromPropertiesC(tableSchema)+"\",this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane());";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t} else {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t\tthis.jTabbedPaneRelaciones"+strNombrePanelFin+GetNombreClaseC(TablaBase.ToString())+".setComponentAt(iIndexTab,this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane());";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t}";
				
				sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\t//"+GetNombreClaseC(tableSchema.ToString())+"JInternalFrame.ESTA_CARGADO_PORPARTE=true;";
				//<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.ESTA_CARGADO_PORPARTE
				
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t} else {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,false);";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t}";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"} else {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tif(this.puedeCargarPorParte"+GetNombreClaseC(tableSchema.ToString())+") {";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t\tthis.jTabbedPaneRelaciones"+strNombrePanelFin+GetNombreClaseC(TablaBase.ToString())+".add(\""+GetTituloNombreTableFromPropertiesC(tableSchema)+GetPluralTituloNombreTableFromPropertiesC(tableSchema)+"\",new JPanel());";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t}";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"\t}";
				sTablaClaseRelacionada+="\r\n"+sTabBase+"}";
			//}
			
			sTablaClaseRelacionada+="\r\n\t}";
			
		} else if(soloLlamarFuncion){
			sTab="\t";
			sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this.cargarSessionConBeanSwingJInternalFrame"+GetNombreClaseC(tableSchema.ToString())+"("+sEsSoloSession+",false,-1);";
		
		} else if(conCargarPorParte){
			if(GetConCargarPorParteTableFromPropertiesC(tableSchema)) {
				sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseC(tableSchema.ToString())+strSufijoVersion+strPrefijoSwingInternalFrame+".ESTA_CARGADO_PORPARTE) {";
				sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.puedeCargarPorParte"+GetNombreClaseC(tableSchema.ToString())+"=true;";
				sTablaClaseRelacionada+="\r\n\t\t\t\t}";
			}
		}
		
		intPosicionYPanelsRelaciones++;
			
	}
	
	return sTablaClaseRelacionada;
}

public String GetCargarNavegacionTablesRelacionadasClasesRelacionadas(TableSchema table) {
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			//String[] sClases;
			//bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
												
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{										
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetCargarTablesRelacionadas(tablaRelacionadaObjetivo,collectionInfo);
				}				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}

public String GetCargarTablesRelacionadas(TableSchema tablaRelacionada,CollectionInfo collectionInfo) 
{
	String sNombrePakage=GetPackageTableFromProperties(tablaRelacionada);
	
	String sColumna="";
	
	String strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
						
	sColumna+="\r\n\t\tpublic void cargar"+GetNombreClaseC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame("+strTypeCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s,"+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+","+GetNombreClaseC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+ GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame,/*Boolean conInicializar,*/Boolean conGuardarRelaciones,Boolean esGuardarRelacionado) throws Exception \r\n";
	sColumna+="\t\t{\r\n";   
		sColumna+="\t\t\ttry\r\n";
		sColumna+="\t\t\t{\r\n";
		sColumna+="\t\t\t\tif(true/*conInicializar*/) {\r\n";
		sColumna+="\t\t\t\t\t//GETCONTENTPANE SOLO UN PAPA, SE PIERDE PANEL, POR LO QUE SE CREA NUEVO POR CADA PANTALLA\r\n";
			sColumna+="\t\t\t\t\t//"+/*GetNombreClaseC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+*/GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,conGuardarRelaciones,esGuardarRelacionado);\r\n\r\n";
		sColumna+="\t\t\t\t}\r\n";	
			//sColumna+="\t\t\t\tint intSelectedRow =rowIndex;";// this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
			
			String strComentarioParaEjb="";
					strComentarioParaEjb+="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
			}
			
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			
			//String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
			
			/*
			sColumna+=strFuncionBusquedaEjbInit;
			sColumna+="\r\n\t\t\t\t"+ strComentarioParaEjb+"this."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sColumna+=strFuncionBusquedaEjbMiddle;
			sColumna+="\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sColumna+=strFuncionBusquedaEjbEnd;
			*/
			
			//sColumna+="\r\n\t\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+") {";
			//sColumna+="\r\n\t\t\t\t\t"+/*strTypeCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+"> "+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
			//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n\r\n";
			
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.get"+GetNombreClaseC(tablaRelacionada.ToString())+"Logic().setConnexion(this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getConnexion());\r\n\r\n";
			
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(TablaBase.ToString())+strNombreAdicional.ToLower()+"sForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(TablaBase.ToString())+strNombreAdicional.ToLower()+"ForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
			
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setlid"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
			
			sColumna+="\t\t\t\t\t//NO VOLVER A RECARGAR FK, TALVEZ INICIALIZAR FK DEPENDENTES\r\n";
			sColumna+="\t\t\t\t\t//Hijos Independientes, No carga Fk al inicializar, Hay que setisBusquedaDesdeForeignKeySesion(true), luego cargar todos los Fks necesarios\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombos"+strForeignKey+GetNombreClaseC(tablaRelacionada.ToString())+"("+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.isCargarCombosDependencia);\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisibilidadBusquedasPara"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);\r\n";
			//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombosFrame"+strForeignKey+GetNombreClaseC(tablaRelacionada.ToString())+"();\r\n";
			
			//Trace.WriteLine("here");
			if(!GetEsAuxiliarFromPropertiesC(TablaBase) && !blnNoStandardTableFromProperties){
				if(TieneIndiceClaseRelacionadaForeignKeyC(tablaRelacionada,TablaBase)) {
					sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetParameterClaseDeepRelacionadoC(collectionInfo)/*strIdGetSet+GetNombreClaseC(TablaBase.ToString())*/+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
					sColumna+="\r\n\t\t\t\t\tif(!this.conCargarFormDetalle) {\r\n";
					sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.inicializarFormDetalle();\r\n";
					sColumna+="\t\t\t\t\t}\r\n\r\n";
					sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setSelectedItemCombosFrame"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"ForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+",1,false,true,true);\r\n";
				}
			} else if(blnNoStandardTableFromProperties) {
				TableKeySchema tableKeySchema=collectionInfo.TableKey;	
				
				//Trace.WriteLine("PK:"+tableKeySchema.PrimaryKeyTable.Name);
				//Trace.WriteLine("FK:"+tableKeySchema.ForeignKeyTable.Name);
				
				MemberColumnSchema memberColumnSchemaPK=null;
				MemberColumnSchema memberColumnSchemaFK=null;
				string strPrefijoTipo = "";
				string strNombre = "";
				
				if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
					System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
				}
				
				for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
					memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
					memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
					
					strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
					strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
	
					sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
				}
			}
			
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setiNumeroPaginacion(Funciones2.getPaginacionDefecto(\"RELACIONADO\"));\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.procesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setsAccionBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";			
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.inicializarActualizarBindingTabla"+GetNombreClaseC(tablaRelacionada.ToString())+"(true);\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.actualizarEstadoCeldasBotones"+GetNombreClaseC(tablaRelacionada.ToString())+"(\"n\","+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.isGuardarCambiosEnLote, "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.isEsMantenimientoRelacionado);\r\n";
			
			if(EsTablaUnoAUnoFk(tablaRelacionada)) {
				sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.inicializarActualizarBinding"+GetNombreClaseC(tablaRelacionada.ToString())+"(false);\r\n";
			}
			
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
			sColumna+="\t\t\t\t\tif(esGuardarRelacionado) {\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreClaseC(tablaRelacionada.ToString())+"(\"relacionado\");\r\n\t\t\t\t\t} ";
			sColumna+="else {\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreClaseC(tablaRelacionada.ToString())+"(\"no_relacionado\");\r\n\t\t\t\t\t}\r\n\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.getjButtonRecargarInformacion"+GetNombreClaseC(tablaRelacionada.ToString())+"().setVisible(false);\r\n\r\n";
	        
			/*
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));\r\n\r\n";
	        
			sColumna+="\t\t\t\t\tif(!Constantes.CON_VARIAS_VENTANAS) {\r\n";
			sColumna+="\t\t\t\t\t\tMainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n";
			sColumna+="\t\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\t\tthis.jDesktopPane.add(this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n\r\n";
	        
	        sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setSelected(true);\r\n";
			
			sColumna+="\r\n\t\t\t\t} else {\r\n";//if
			sColumna+="\t\t\t\t\tJOptionPane.showMessageDialog(this,\"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE "+GetTituloNombreTableFromPropertiesC(TablaBase)+"\",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);\r\n";
			sColumna+="\t\t\t\t}\r\n";			
			*/
			
		sColumna+="\t\t\t}\r\n";
		sColumna+="\t\t\tcatch(Exception e)\r\n";
		sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tthrow e;\r\n";
		sColumna+="\t\t\t}\r\n";
	sColumna+="\t\t}\r\n";
	
	return sColumna;
}





public  String DefinirVariablesControllerSessionForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				//Trace.WriteLine(TablaBase.Name+"-"+tableSchema.Name);
				//GetNombreCompletoClaseRelacionadaFromColumn
				
				//if(!TablaBase.Name.Equals(tableSchema.Name)) {
				if(!GetNombreClaseObjetoC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())) {
					sVariablesArray+="\r\n\tpublic "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()/*GetNombreClaseObjetoC(tableSchema.ToString())*/+strPrefijoJSFSessionFaces+";";
					
					if(blnConVariableClaseControllerActualizarFk) {
						sVariablesArray+="\r\n\tpublic "+GetNombreClaseC(tableSchema.ToString())+strPrefijoBeanSwing+"JInternalFrame "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()/*GetNombreClaseObjetoC(tableSchema.ToString())*/+strPrefijoBeanSwing+"JInternalFrame;";
					}
				}
				
				//sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
				/*
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
			sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseC(tableSchemaForeignKey.ToString())+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> get"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";
	
			sVariablesArray+="\tpublic void set"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";									
		}
		*/
	}
			
	return sVariablesArray;
}

public  String GetCargarControllersForeignKeys(bool soloSessionInicializar,bool soloLlamarFuncion)
{
	String sVariablesArray="";
	String sNombrePakage="";
	String sTabBase="";
	TableSchema tableSchema=null;
	String strNombrePanelFin="";
	String sTablaClaseRelacionada="";
	String sTab="";
	String sConGuardarRelaciones="";
	String sConCargarRelaciones="";
	String sEsSoloSession="";
	
	if(blnConVariableClaseControllerActualizarFk) {
		
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				if(!GetNombreClaseObjetoC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())) {
					//sVariablesArray+="\r\n\tpublic "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()/*GetNombreClaseObjetoC(tableSchema.ToString())*/+strPrefijoJSFSessionFaces+";";
					//sVariablesArray+="\r\n\tpublic "+GetNombreClaseC(tableSchema.ToString())+strPrefijoBeanSwing+"JInternalFrame "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()/*GetNombreClaseObjetoC(tableSchema.ToString())*/+strPrefijoBeanSwing+"JInternalFrame;";
				
					if(!soloLlamarFuncion) {
						
					sTabBase="\t\t";//"\t\t\t\t";
					
					sTablaClaseRelacionada+="\r\n\r\n\t"+sTab+"public void cargarSessionConBeanSwingJInternalFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(Boolean soloSession) throws Exception {";
					sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+""+sTab+"//SOLO INICIALIZA SESSION (YA NO, CONSUME MUCHA MEMORIA)";
					sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"();";
					
					//FALSE GUARDAR RELACIONES
					sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);";
					sConGuardarRelaciones="false";
					sConCargarRelaciones="false";
					
					
					sTablaClaseRelacionada+="\r\n"+sTabBase+""+sTab+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);";
					
					sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+""+sTab+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,true,false);";
					
					//if(!soloSessionInicializar) {
						sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"if(!soloSession) {";
						/*
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,true);";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.jInternalFrameParent=this;";
						*/
						
						//sTablaClaseRelacionada+="\r\n\r\n\r\n"+sTabBase+"\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {";
						//sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
						
						sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,"+sConGuardarRelaciones+",true,"+sConCargarRelaciones+",false);//false->4";//false
						
						sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setJInternalFrameParent(this);";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+");";
						
						/*
						sTablaClaseRelacionada+="\r\n\r\n"+sTabBase+"\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = iGridyRelaciones++;";//+intPosicionYPanelsRelaciones+";";		
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\t//this.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane(), this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
						*/						
												
						
						//sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis.jTabbedPaneRelaciones"+strNombrePanelFin+GetNombreClaseC(TablaBase.ToString())+".add(\""+GetTituloNombreTableFromPropertiesC(tableSchema)+GetPluralTituloNombreTableFromPropertiesC(tableSchema)+"\",this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane());";
						
						/*
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t} else {";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,false);";
						sTablaClaseRelacionada+="\r\n"+sTabBase+"\t}";
						*/
						
						sTablaClaseRelacionada+="\r\n"+sTabBase+"}";
					//}
					
					sTablaClaseRelacionada+="\r\n\t}";
				} else {
					sTab="\t";
					sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this.cargarSessionConBeanSwingJInternalFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"("+sEsSoloSession+");";
				}
					
					
					
				}//FINAL								
			}	
		}
	} else {
		
	}
		
	}
	
	return sTablaClaseRelacionada;
}

public String GetCargarControllersTablesForeignKeys()//CollectionInfo collectionInfo 
{
	String sNombrePakage="";//GetPackageTableFromProperties(tablaRelacionada);
	
	String sColumna="";
	TableSchema tableSchema=null;
	String strNombreAdicional="";//GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
	
	if(blnConVariableClaseControllerActualizarFk) {
		
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				
				if(!GetNombreClaseObjetoC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())) {
				
					sColumna+="\r\n\t\tpublic void cargar"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"BeanSwingJInternalFrame("+strTypeCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s,"+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+","+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame,/*Boolean conInicializar,*/Boolean conGuardarRelaciones,Boolean esGuardarRelacionado) throws Exception \r\n";
					sColumna+="\t\t{\r\n";   
						sColumna+="\t\t\ttry\r\n";
						sColumna+="\t\t\t{\r\n";
						sColumna+="\t\t\t\tif(true/*conInicializar*/) {\r\n";
						sColumna+="\t\t\t\t\t//GETCONTENTPANE SOLO UN PAPA, SE PIERDE PANEL, POR LO QUE SE CREA NUEVO POR CADA PANTALLA\r\n";
							sColumna+="\t\t\t\t\t//"+/*GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame "+*/GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,conGuardarRelaciones,esGuardarRelacionado);\r\n\r\n";
						sColumna+="\t\t\t\t}\r\n";	
							//sColumna+="\t\t\t\tint intSelectedRow =rowIndex;";// this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
							
							String strComentarioParaEjb="";
									strComentarioParaEjb+="";
							
							if(ConEjb){
								strComentarioParaEjb="//";
							}
							
							String strFuncionBusquedaEjbInit="\r\n\t\t\t\t//ARCHITECTURE";
								strFuncionBusquedaEjbInit+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
							
							//String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
							
							String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
								strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
							
								
							//sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(TablaBase.ToString())+strNombreAdicional.ToLower()+"sForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";							
							//sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);\r\n";
							//sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setlid"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
							
							//sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.cargarCombos"+strForeignKey+GetNombreCompletoClaseRelacionadaFromColumn(column)+"("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.isCargarCombosDependencia);\r\n";
							sColumna+="\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setVisibilidadBusquedasPara"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);\r\n";
							//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.cargarCombosFrame"+strForeignKey+GetNombreClaseC(tableSchema.ToString())+"();\r\n";
							
							//Trace.WriteLine("here");							
							//if(!GetEsAuxiliarFromPropertiesC(TablaBase) && !blnNoStandardTableFromProperties){
							//	if(TieneIndiceClaseRelacionadaForeignKeyC(tableSchema,TablaBase)) {
									//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+GetParameterClaseDeepRelacionadoC(collectionInfo)/*strIdGetSet+GetNombreClaseC(TablaBase.ToString())*/+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
									//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.setSelectedItemCombosFrame"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"ForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+",1,false,true,true);\r\n";
							//	}
							//} else if(blnNoStandardTableFromProperties) {
							/*
								TableKeySchema tableKeySchema=collectionInfo.TableKey;	
								
								//Trace.WriteLine("PK:"+tableKeySchema.PrimaryKeyTable.Name);
								//Trace.WriteLine("FK:"+tableKeySchema.ForeignKeyTable.Name);
								
								MemberColumnSchema memberColumnSchemaPK=null;
								MemberColumnSchema memberColumnSchemaFK=null;
								string strPrefijoTipo = "";
								string strNombre = "";
								
								if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
									System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
								}
								
								for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
									memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
									memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
									
									strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
									strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
					
									sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
								}
								*/
							//}
							
							sColumna+="\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.procesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";
							sColumna+="\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setsAccionBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";			
							sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.inicializarActualizarBindingTabla"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"();\r\n";
							sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.actualizarEstadoCeldasBotones"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(\"n\","+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.isGuardarCambiosEnLote, "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.isEsMantenimientoRelacionado);\r\n";
							
							if(EsTablaUnoAUnoFk(tableSchema)) {
								sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.inicializarActualizarBinding"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(false);\r\n";
							}
							
							sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
							sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
							
							//sColumna+="\t\t\t\t\tif(esGuardarRelacionado) {\r\n\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(\"relacionado\");\r\n\t\t\t\t\t} ";
							//sColumna+="else {\r\n\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(\"no_relacionado\");\r\n\t\t\t\t\t}\r\n\r\n";							
							//sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.getjButtonRecargarInformacion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"().setVisible(false);\r\n\r\n";
							
							
							
							
						sColumna+="\t\t\t}\r\n";
						sColumna+="\t\t\tcatch(Exception e)\r\n";
						sColumna+="\t\t\t{\r\n";
							sColumna+="\t\t\t\tthrow e;\r\n";
						sColumna+="\t\t\t}\r\n";
					sColumna+="\t\t}\r\n";
	
	
	}//FINAL								
			}	
		}
	} else {
		
	}
	}
	
	
	return sColumna;
}

public String GetFillIndicesVariablesTablasClasesC(TableSchema TablaBase) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sFinalFuncion="";
				sFinalFuncion+="";
			String sControlBinding=String.Empty;
			String sPropertyControlBinding=String.Empty;
			
			int intNumeroBusquedas=0;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {
					if(indexSchema.IsUnique){
						continue;
					} else {									
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							intNumeroBusquedas++;
						} else {
							;
						}
					}	
					//int count=1;
																																						
				}
			}
			
			//System.Windows.Forms.MessageBox.Show(intNumeroBusquedas.ToString());
			
			if(intNumeroBusquedas>=4) {
				sInitFuncion="BOTH";
			} else {
				sInitFuncion="VERTICAL";
			}
			
			return sInitFuncion; 
		}
		
public  string DefinirFuncionesListItemsArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			
			strVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"ListSelectItem() \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\tList<SelectItem> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList=new ArrayList<SelectItem>();\r\n\r\n";
			strVariablesArray+="\t\tSelectItem item;\r\n\r\n";
		
			strVariablesArray+="\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+")\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\titem=new SelectItem();\r\n";
			strVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column))+");\r\n";
			strVariablesArray+="\t\t\titem.setValue("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
				
			strVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList.add(item);\r\n";
			strVariablesArray+="\t\t}\r\n\r\n";
		
			strVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList;\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			
		}	
	}
	return strVariablesArray;
}

public  string FuncionesForeignKeys()
{
	String strVariablesArray="";
	
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\tpublic void CargarCombos"+GetNombreClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"()throws Exception\r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\ttry\r\n\t\t{\r\n";
			strVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
			strVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
			strVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.GetTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"s(\"\");\r\n\r\n";
			strVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();\r\n\r\n";
			strVariablesArray+="\t\t}\r\n";
			strVariablesArray+="\t\tcatch(Exception ex)\r\n";
			strVariablesArray+="\t\t{\r\n";
			strVariablesArray+="\t\t\tthrow ex;\r\n";
			strVariablesArray+="\t\t}\r\n";
			strVariablesArray+="\t}\r\n";
		}	
	}
	return strVariablesArray;
}


public  string ConstructorVariablesArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\t\t\tthis.CargarCombos"+GetNombreClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"();";
		}	
	}
	return strVariablesArray;
}

public  string DefinirVariablesArrayForeignKeys()
{
	String strVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			strVariablesArray+="\r\n\tprivate ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";
			
			strVariablesArray+="\tpublic ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"() \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n\r\n";

			strVariablesArray+="\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"(ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") \r\n";
			strVariablesArray+="\t{\r\n";
			strVariablesArray+="\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			strVariablesArray+="\t}\r\n";
		}	
	}
	return strVariablesArray;
}

public String GetBusquedaFromForeigKeysSession() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
										
					strTablaClaseRelacionada+="\r\n\t\t\telse if(session.getAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\")!=null)";
					strTablaClaseRelacionada+="\r\n\t\t\t{";
							
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(session.getAttribute(\""+columnSchema.Name+"Actual\")!=null)";
					strTablaClaseRelacionada+="\r\n\t\t\t\t{";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\tstrAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\";";						
					strTablaClaseRelacionada+="\r\n\t\t\t\t}";
								
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tstrUltimaBusqueda=\"accionBusqueda=\"+strAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",strUltimaBusqueda,MensajeGrupo.NONE);";
									
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
					
					strTablaClaseRelacionada+="\r\n\t\t\t}";
						
					
			
				}
			}
			
				
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			String strFuncionBusqueda2="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			
			String strFuncionLogic="";
				strFuncionLogic+="";
			
			//strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"s();";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";	
			strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\tif(strGenerarReporte!=\"\"&&strGenerarReporte!=null)\r\n\t\t\t\t{";
			
			
			strXmlFuncion+="\r\n\t\t\t\t\tif(blnMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			strXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s();";						
			strXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			strXmlFuncion+="\r\n\t\t\t\t\t}";			
			
			strXmlFuncion+="\r\n\t\t\t\t\tGenerarReporte"+GetNombreClaseC(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s());";
			
			strXmlFuncion+="\r\n\r\n\t\t\t\t\tif(blnMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			strXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.set"+GetNombreClaseC(TablaBase.ToString())+"s("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			strXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t}";	
			
			//strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			//strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
			
			String strXmlFuncionObjeto=string.Empty;
			
			strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
			//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClaseC(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			strXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
			
						
			//strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
			//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			//strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
			//strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
				
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					strFuncionBusqueda2="\r\n\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique)
					{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
						
						}
						else
						{
						strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";	
						}
					}
					
					int count=1;
					strDefinicionVariables="";
					strUsoVariables="";							
					//strFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{								
									//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									//strDefinicionVariables+="\r\n\r\n\t\t\t\tif(request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									//strDefinicionVariables+="\r\n\t\t\t\t{";
									//strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";										
									//strDefinicionVariables+="\r\n\t\t\t\t}";
										
									
									if(indexSchema.Name.Contains(strFK+"_"))
									{
										strDefinicionVariables+="\r\n\r\n\t\t\t\tif(session.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\")!=null)";
										strDefinicionVariables+="\r\n\t\t\t\t{";
										strDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=("+GetTipoColumnaClaseC(memberColumnSchema.Column)+")session.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
										strDefinicionVariables+="\r\n\t\t\t\t\tsession.removeAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
										
										strDefinicionVariables+="\r\n\t\t\t\t}";
									}
									
									strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 
									
									if(!indexSchema.MemberColumns.Count.Equals(count))
									{
										strUsoVariables+=",";	
									}
								}
								else
								{
									if(!indexSchema.Name.Contains("BusquedaRango"))
									{
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									}
									else
									{
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name; 									
										
										strUsoVariables+=",";	
										
										//strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name; 									
									}
									
								
								}
								count++;
							}
							
							strFuncionBusqueda2+=strUsoVariables+");\r\n";
							strFuncionBusqueda+=strUsoVariables+");";
							
					if(indexSchema.IsUnique)
					{
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					}
					else
					{
							
							strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strFuncionBusqueda2+strXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",strFuncionBusqueda.Replace("finalQueryPaginacion","\"\"").Replace("\r\n\r\n","\r\n\t\t"))+"\r\n\r\n\t\t\t}";																																		
					}
				}
			}								
			return  strInitFuncion;
		}
		
		
		public String GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\telse if(strAccionBusqueda==\"{0}\")\r\n{";
			
			String strFuncionBusqueda="";
			
			String strDefinicionVariables="";
			String strUsoVariables="";
			
			String strXmlFuncion=string.Empty;
			
			String strParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong(request.getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";

			String strFuncionTodos=string.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strFuncionTodos="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					strFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+strParametroPadre+"\r\n\t\t\t\t";					
					strFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					//strFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					strFuncionTodos+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					strFuncionTodos+="\r\n\t\t\t\t{";
					//strFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					strFuncionTodos+="\r\n\t\t\t\t}";
					
					//strFuncionTodos+="\r\n\r\n\t\t\t\tresponse.setContentType(\"text/xml\");";
					//strFuncionTodos+="\r\n\t\t\t\tresponse.getWriter().write(xml);";
					strFuncionTodos+="\r\n\t\t\t}";
					
					
					
					//strXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					strXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					//strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					strXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
					
					//strXmlFuncion+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					//strXmlFuncion+="\r\n\t\t\tresponse.getWriter().write(xml);";
					
					String strXmlFuncionObjeto=string.Empty;
					
					strXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					
					//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					//strXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClaseC(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					strXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
					
					
					
					//strXmlFuncionObjeto+="\r\n\r\n\t\t\tresponse.setContentType(\"text/xml\");";
					//strXmlFuncionObjeto+="\r\n\t\t\tresponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								strFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								strIfFuncion="\r\n\t\t\telse if(strAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							strIfFuncion+=strParametroPadre;
							
							int count=1;
							strDefinicionVariables="";
							strUsoVariables="";							
							//strFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{								
											strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
											strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												strUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												strUsoVariables+=",";	
												
												strDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"request.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									strFuncionBusqueda+=strUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									strInitFuncion+=strIfFuncion+strDefinicionVariables+strFuncionBusqueda+strXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
					}
					
					strInitFuncion=strFuncionTodos+strInitFuncion;
				}
			}
			
			return  strInitFuncion;
		}
		
public String GetVariablesTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;\r\n\r\n";
					
					strTablaClaseRelacionada+="\tpublic "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic()\r\n"; 
					strTablaClaseRelacionada+="\t{\r\n";		
					strTablaClaseRelacionada+="\t\treturn "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
					strTablaClaseRelacionada+="\t}\r\n\r\n";
				
					strTablaClaseRelacionada+="\tpublic void set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic)\r\n"; 
					strTablaClaseRelacionada+="\t{\r\n";
					strTablaClaseRelacionada+="\t\tthis."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic = "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
					strTablaClaseRelacionada+="\t}\r\n";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetVariablesTablasInicializarClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n\r\n";
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="\t\tclasses.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String strFuncion=string.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			strFuncion+="\r\n\r\n\tpublic String toXml"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()throws Exception";
			strFuncion+="\r\n\t{";
			strFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			strFuncion+="\r\n\t\tArrayList<Class> classes=new ArrayList<Class>();\r\n";
			strFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			strFuncion+="\r\n\t\t"+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t"+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			strFuncion+="\r\n\t\ttry"; 
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			strFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\\r\n\");";
			strFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\\r\n\");";	    
				
			strFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			strFuncion+="\r\n\t\t\t\t{";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.DeepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				strFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			strFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\\r\n\");";			
			strFuncion+="\r\n\t\t\t\t}\r\n";
					
			strFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\\r\n\");";
					
			strFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			strFuncion+="\r\n\t\t}"; 
			strFuncion+="\r\n\t\tcatch(Exception ex)"; 
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();";
			strFuncion+="\r\n\t\t\tthrow ex;";
			strFuncion+="\r\n\t\t}";
			strFuncion+="\r\n\t\tfinally";
			strFuncion+="\r\n\t\t{";
			strFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			strFuncion+="\r\n\t\t}";
				
			strFuncion+="\r\n\t\t\treturn Funciones.ValidarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getStrTableName());";
				
			strFuncion+="\r\n\t}";
		}
	}
	
	return strFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				strInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new ArrayList<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">();" ;																
																																																		
				}													
			}
								
			return strInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strInitFuncion+="\r\n\t"+"ArrayList<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
																																								
					strInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+="\r\n\t{";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s)"; 
					strInitFuncion+="\r\n\t{";	
					strInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return strInitFuncion; 
		}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strParametroCompuesto="";
			String strParametroCompuesto2="";
			String strParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClaseC(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
							//strParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClaseC(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							//strParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClaseC(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClaseC(TablaBase.ToString())+".toString(),"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClaseC(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							//strParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClaseC(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							//strParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClaseC(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClaseC(TablaBase.ToString())+".toString(),"+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClaseC(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							//strParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClaseC(TablaBase.ToString())+");";

							strInitFuncion+="\r\n\tpublic  String  Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String strFinalQuery,Long "+strId+GetNombreClaseC(TablaBase.ToString())+")throws SQLException,Exception"; 
							strInitFuncion+="\r\n\t{\r\n\t\tString strMensaje=\"\";\r\n\t\t";
							strInitFuncion+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							strInitFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(strFinalQuery,"+strId+GetNombreClaseC(TablaBase.ToString())+");";
						
							//strInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							//strInitFuncion+=strParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//strInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n\t\t\t";
							//strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.GetEntities" +strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							strInitFuncion+="\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException ex)\r\n\t\t{\r\n\t\t\t";//connexion.getConnection().commit();//connexion.getConnection().rollback();
							
							strInitFuncion+="\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t";	//connexion.getConnection().rollback();	//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();
							strInitFuncion+="\r\n\r\n\t\treturn strMensaje;\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						
						

						
						if(!indexSchema.IsPrimaryKey)
						{
							
						
							strParametersFuncion="";
							strParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
								strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String strFinalQuery,Long "+strId+GetNombreClaseC(TablaBase.ToString())+",";									
									strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(strFinalQuery,"+strId+GetNombreClaseC(TablaBase.ToString())+",";
								}
								else
								{
									strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
									strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);";	
									
									//strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
											
								}
								else
								{
									//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									
									//strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									strBodyFuncion+="\r\n\r\n\t\t\t"+strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
								}
								
								//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities"+strClaseAuxiliar+GetNombreClaseC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
							
							}	
							int count=1;	
							strParametersFuncion="";
							strParametersNameFuncion="";	
							strParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
											
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							strInitFuncion+=strParametersFuncion+")throws Exception\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
						}
					}
				}													
			}
								
			return strInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionadaNombre="";
				strTablaClaseRelacionadaNombre+="";
			String strTablaClaseRelacionada3="";
			
			String strFuncionInit="\r\n\tpublic String Save"+GetNombreClaseC(TablaBase.ToString())+"Relaciones(Long idUsuario,String strUsuarioPC,String strNamePC,String strIPPC,"+GetNombreClaseC(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString());
			String strFuncionMiddle=")throws SQLException,Exception\r\n\t{\r\n\t\tString strMensaje=\"\";\r\n";//Mensaje.getMensajeGeneralDeepSave(\"\")
			strFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\t";//this.getNewConnexionToDeep();
			
			strFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Save"+GetNombreClaseC(TablaBase.ToString())+"Relaciones(idUsuario,strUsuarioPC,strNamePC,strIPPC,"+" "+GetNombreClaseObjetoC(TablaBase.ToString());
			
			String strFuncionEnd="\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException ex)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\r\n\treturn strMensaje;\r\n\r\n\t}";
			
			//connexion.getConnection().commit();
			//connexion.getConnection().rollback();
			//connexion.getConnection().rollback();
			//finally\r\n\t\t{\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=",ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			//strTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()"+")";
			//strTablaClaseRelacionada2+="\r\n\t\t\t{";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,strUsuarioPC,strNamePC,strIPPC"+strTablaClaseRelacionada3+");";
			//strTablaClaseRelacionada2+="\r\n\t\t\t}";
			//strTablaClaseRelacionada2+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted())";
			//strTablaClaseRelacionada2+="\r\n\t\t\t{";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,strUsuarioPC,strNamePC,strIPPC"+strTablaClaseRelacionada3+");";
			//strTablaClaseRelacionada2+="\r\n\t\t\t\tthis.Save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
			//strTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada3+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionadaNombre="";
			String strFuncionInit="\r\n\tpublic void Save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(Long idUsuario,String strUsuarioPC,String strNamePC,String strIPPC";
			String strFuncionMiddle=")throws Exception\r\n\t{\r\n";
			strFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";
			
			strFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.Save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,strUsuarioPC,strNamePC,strIPPC";
			
			String strFuncionEnd="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					strTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					strTablaClaseRelacionada+=",ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
					strTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String strTablaClaseRelacionada2="";
			//strTablaClaseRelacionada2+="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();";
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null)\r\n\t\t\t{";										
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.Save"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					//strTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s())\r\n\t\t\t{";					
					//strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".setField_"+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//strTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//strTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.Save"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,strUsuarioPC,strNamePC,strIPPC);";
				}
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionadaNombre+");"+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ strTablaClaseRelacionadaSave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;						
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ strTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strTablaClaseRelacionadaLogic=string.Empty;
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();	
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="classes.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String strInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.Save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
            strTablaClaseRelacionada2="\r\nelse\r\n{"+strInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			strFuncionInclude="";
			strFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
			
			
			}
			
				strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			// parte del no if deep
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion=strInit+"\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0=strInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionInclude+="\r\n\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					strFuncionExclude+="\r\n\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{";
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						strTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						strTablaClaseRelacionada0+="\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			
			strIfFuncion=strInitIfFuncion+strTablaClaseRelacionada0+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
            strTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;		
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";
				
			}
			
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			
			//Parte del no if del deep
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			strFuncion=string.Empty;
			
			strTablaClaseRelacionada=string.Empty;
			strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			strFuncion=strInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			strFuncionInclude="";
			strFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			strFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String strParaBusquedaString=""; 
			String strParaBusquedaCompuesto=""; 
			
			if(esCompuesto)
			{
				strParaBusquedaCompuesto="Constantes.getStrSchema()+\".\"+"+GetNombreClaseC(column.Table.ToString())+".getStrTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				if(!esUnico)	
				{
				strParaBusquedaString="+\"%\"";
				}
			}
			
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+strParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String strIndexName) 
		{
			String strParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				strParaBusquedaString="+\"%\"";
			}
			
			String strParameterSelection=String.Empty;
			
			if(!strIndexName.Contains("BusquedaRango"))
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(strIndexName.Contains("BusquedaMayorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMayor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				strParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				strParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return strParameterSelection;
		}

		public String GetIndicesTablasFacesClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						
						
						strBodyFuncion+="\r\n\r\n\t\t\tstrAccionBusqueda=\""+indexSchema.Name+"\";";
						strBodyFuncion+="\r\n\r\n\t\t\tthis.ProcesarBusqueda(strAccionBusqueda";
						
						//strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\r\n\t\t\tstrAccionBusqueda=\""+indexSchema.Name+"\";";
							strBodyFuncion+="\r\n\r\n\t\t\tthis.ProcesarBusqueda(strAccionBusqueda";
						
							//strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(strFinalQuery,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							
							strBodyFuncion+="\r\n\r\n\t\t\tstrAccionBusqueda=\""+indexSchema.Name+"\";";
							strBodyFuncion+="\r\n\r\n\t\t\tthis.ProcesarBusqueda(strAccionBusqueda";
						
							//strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);";			
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					/*
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					*/
					strInitFuncion+=strParametersFuncion+")throws Exception\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
							
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();					
							strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(strFinalQuery,";
						}
						else
						{
							strInitFuncion+="\r\n\tpublic void "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							strBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(strFinalQuery);";			
						}
						else
						{
							//strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						//strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception\r\n\t{"+strBodyFuncion+strParametersNameFuncion+");"+/*strParameterSelection+*/strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public  string GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	

	strSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	strSetEntity+="\t\t\t\tauditoria.setField_strCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	
	strSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegistrarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),"+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ","+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );";
	strSetEntity+="\r\n\t\t\t}";
	
	return strSetEntity;
}

public static string GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String strSetEntity=string.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return strSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return strSetEntity;
		}
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroUsoFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetParametroUsoFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=strId;			
		}
		return strParamtro;
}


public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}

public String GetClassesSetAddTablasRelacionadas() 
{
			String strTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\t\t\tclasses.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class);";									
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetDelete() 
{
			String strTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						strTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return strTablaClaseRelacionada; 
}


		
public string GetSetVariablesTablaToBean(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this.set"+strIdGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "this.set"+strVersionRowGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  "this.setField_"+strPrefijo+ strColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+strPrefijo+ strColumna+"());";
}		

public string GetSetVariableToVariableLocal(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strIdGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strVersionRowGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.setField_"+strPrefijo+ strColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+strPrefijo+ strColumna+"());";
}	

public string GetSetVariablesBeanToTable(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strIdGetSet+"(this.get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strVersionRowGetSet+"(this.get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().setField_"+strPrefijo+ strColumna +"(this.getField_"+strPrefijo+ strColumna+"());";
}	

public string SetVariablesTablaToCancelar(ColumnSchema column)
{
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String strValor="";
	
	switch(column.Name)
	{
		case strIsActive:
		strValor="";
		break;
		
		case strIsExpired:
		strValor="";
		break;
		
		case strVersionRow:
		strValor="";
		break;
		
		default:
		strValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this.set"+strIdGetSet+"("+strValor+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "";//"this.set"+strVersionRowGetSet+"(\"\");";
	}
	return  "this.setField_"+strPrefijo+ strColumna +"("+strValor+");";
}

public String GetLabelBotonProcesar() {
	String strFuncion=strProcesar;
	
	if(!GetTituloNombreBotonTableFromPropertiesC(TablaBase).Equals(String.Empty)) {
		strFuncion=GetTituloNombreBotonTableFromPropertiesC(TablaBase);
	}
	
	return strFuncion;
}

public String GetIndicesVariablesTablasClases(TableSchema TablaBase) {
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			bool blnExisteBusqueda=false;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			String strTabPanel=string.Empty;
			String strPanelesBusquedas=string.Empty;
			String strPanelBusqueda=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			String strControlPanelesBusquedas=string.Empty;
			
			//SIEMPRE DECLARAR PANE BUSQUEDA
			strTabPanel="\r\n\tpublic JTabbedPane"+strSwtMe+" jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
			
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				blnExisteBusquedaFkVariableGlobal=false;
				strPanelBusqueda="";
				
				if(!indexSchema.IsPrimaryKey) {
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {						
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {						
						if(!blnExisteBusqueda) {
							blnExisteBusqueda=true;
							//strTabPanel="\r\n\tprotected JTabbedPane<%=strSwtMe%> jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							strPanelBusqueda="\tpublic JPanel"+strSwtMe+" jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							strPanelBusqueda+="\tpublic JButton"+strSwtMe+" jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							
							//strPanelesBusquedas+="\tprotected JPanel<%=strSwtMe%> jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strPanelesBusquedas+="\tprotected JButton<%=strSwtMe%> jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
									//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						} else {
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					strControlPanelesBusquedas="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {																		
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							strControlPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember,true)+"\r\n"; 
										
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								strControlPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,strSufijoRangoFinal,memberColumnSchema.IsForeignKeyMember,true)+"\r\n"; 
							}
							
							if(GetBusquedaForeignKeyColumnFromPropertiesC(memberColumnSchema.Column)) {
								strControlPanelesBusquedas+="\tpublic JButton"+strSwtMe+" jButtonBuscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+";\r\n";						
							}
							
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//strInitFuncion+=";\r\n";	
							}
						} else {
							if(!indexSchema.Name.Contains("BusquedaRango")) {
								strControlPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember,true)+"\r\n"; 																
							} else {
								strControlPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial",memberColumnSchema.IsForeignKeyMember,true)+"\r\n";								
								
								//strInitFuncion+=",";
								strControlPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final",memberColumnSchema.IsForeignKeyMember,true)+"\r\n"; 																
								break;
							}
						}
						count++;
					}
					
					
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
					
					//strInitFuncion+=")throws Exception;";																																			
					
					strPanelesBusquedas+=strPanelBusqueda;
					strControlesPanelesBusquedas+=strControlPanelesBusquedas;
					
				}
				
			}
			
			strInitFuncion=strTabPanel+strPanelesBusquedas+strControlesPanelesBusquedas;	
			
			return strInitFuncion; 
	}

public bool GetExisteBusquedaIndicesTablasClases(TableSchema TablaBase) 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
				strInitFuncion+="";
			bool blnExisteBusqueda=false;
			
			String strTabPanel=string.Empty;
			String strPanelesBusquedas=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						
						if(!blnExisteBusqueda)
						{
							blnExisteBusqueda=true;
							//strTabPanel="\r\n\tprotected JTabbedPane<%=strSwtMe%> jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
						}
					}
				}
			}
			
			return blnExisteBusqueda;
		}
</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresa();%>
<%=GetByDanLicence()%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackagePresentation%>.<%= strPackageSwing%>.<%= strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>;

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageSwing+"."+strPackageJInternalFrames+".*;")%>

import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%>.*;//<%=GetEsPaqueteReporteC(TablaBase)%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%>.auxiliar<%=GetEsPaqueteReporteC(TablaBase)%>.*;
<% if(blnEsReporte){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;
<%}%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean+".*;")%>

//import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageReporte%>.<%=strPackageSource%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;

<%//=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageReporte+"."+strPackageSource+".*;")%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Reporte;

<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Modulo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Opcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ResumenUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;

import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaParameterReturnGeneral;

<%} else {%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Modulo;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Opcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ResumenUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;

import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaParameterReturnGeneral;
<%}%>

<%if(false/*!blnSinUsoDatos*/){%>import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackagePresentation%>.<%= strPackageReporte%>.<%= strPackageSource%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClaseC(TablaBase.ToString())%><%=strClaseBean%>;<%}%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%><%=GetEsPaqueteReporteC(TablaBase)%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones;

<%if(ConEjb){%>//<%}%>import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageLogic%><%=GetEsPaqueteReporteC(TablaBase)%>.*;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.OrderBy;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageBusiness%>.<%= strPackageEntities%>.Mensajes;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageBusiness%>.<%= strPackageLogic%>.*;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateConverter;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateConverterFromDate;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.FuncionesSwing;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.JInternalFrameBase;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.*;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageUtils%>.*;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.sql.*;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;


import javax.swing.*;
import java.awt.*;
import javax.swing.border.EtchedBorder;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.table.TableColumn;
<%if(!CON_OPTIMIZE_V0){%>
import org.jdesktop.beansbinding.*;
import org.jdesktop.swingbinding.*;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
<%}%>

import com.toedter.calendar.JDateChooser;

<%if(ContieneImagenesC(TablaBase)){%>
	<%=GetFuncionesImagenesC(TablaBase)%>
	<%}%>

@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%> extends <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional {	
	private static final long serialVersionUID = 1L;
	
	<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
	public JToolBar<%=strSwtMe%> jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	protected JMenuBar<%=strSwtMe%> jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	protected JMenu<%=strSwtMe%> jmenuDetalle<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenu<%=strSwtMe%> jmenuDetalleArchivo<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenu<%=strSwtMe%> jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenu<%=strSwtMe%> jmenuDetalleDatos<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
	
	protected JPanel<%=strSwtMe%> jContentPane = null;
	protected JPanel<%=strSwtMe%> jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);//new JPanel();	
	
	protected GridBagLayout gridaBagLayout<%=GetNombreClaseC(TablaBase.ToString())%>;	
	protected GridBagConstraints gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>;	
		
	//protected JInternalFrameBase jInternalFrameParent; //ESTA EN BASE
	//protected <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>;		
	
	<%if(blnEsAutoReferenciada) {%>
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameTree jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>;	
	<%} %>
	
	//VENTANAS PARA ACTUALIZAR Y BUSCAR FK
	<%=GetDeclararVentanasForeignKeysTablaClaseC(TablaBase,false)%>
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>;
	
	<%=GetNavegacionTablasRelacionadasClasesRelacionadasControllerC(TablaBase,false,ConEjb,GeneracionPorModuloUnico)%>
	
	<%=DefinirVariablesControllerSessionForeignKeys()%>	
	
	<%if(!blnEsReporte){%>
	<%if(ConEjb){%>//<%}%>public <%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	<%} else {%>
	<%if(ConEjb){%>//<%}%>public <%=GetTablaModuloReporteC(TablaBase)%>Logic<%=GetAdditionalTablaModuloReporteC(TablaBase)%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	<%} %>
	
	public JScrollPane<%=strSwtMe%> jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JScrollPane<%=strSwtMe%> jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JScrollPane<%=strSwtMe%> jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	protected JPanel<%=strSwtMe%> jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>;    
	protected JPanel<%=strSwtMe%> jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>;    	
	protected JPanel<%=strSwtMe%> jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JPanel<%=strSwtMe%> jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
    
	<%=GetSetDefinicionControlesPanelVariablesSwingParametrosC(TablaBase,ConGroupLayout,false)%>
	
	<%if(GetPanelConTabTableFromPropertiesC(TablaBase)) {%>
	protected JTabbedPane<%=strSwtMe%> jTabbedPaneCampos<%=GetNombreClaseC(TablaBase.ToString())%>;	
	<%}%>
	protected Integer iXPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>=0;
	protected Integer iYPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>=0;
	
	protected Integer iXPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>=0;
	protected Integer iYPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>=0;
	
	<%=GetPaneles("DEFINIR",false)%>;
	<%=GetPanelesFinRelaciones("DEFINIR")%>;
	
		
	//ELEMENTOS TABLAS PARAMETOS	
	<%=GetDefinicionGeneralSwingTablaClaseParametrosC(TablaBase)%>	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	public JButton<%=strSwtMe%> jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JButton<%=strSwtMe%> jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JButton<%=strSwtMe%> jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
    public JButton<%=strSwtMe%> jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JButton<%=strSwtMe%> jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
    public JButton<%=strSwtMe%> jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JButton<%=strSwtMe%> jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	<%=strCommentMinCodigoWebIni%>
	protected JButton<%=strSwtMe%> jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>;
	<%=strCommentMinCodigoWebFin%>
	
	protected JCheckBox<%=strSwtMe%> jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JCheckBox<%=strSwtMe%> jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JCheckBox<%=strSwtMe%> jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	//TOOLBAR
	<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
	
	protected JButton<%=strSwtMe%> jButtonNuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
    protected JButton<%=strSwtMe%> jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
    protected JButton<%=strSwtMe%> jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonGuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonMostrarOcultarTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JButton<%=strSwtMe%> jButtonCerrarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	protected JButton<%=strSwtMe%> jButtonProcesarInformacionToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
	//TOOLBAR
	
	
	//MENU
	<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
	
	protected JMenuItem<%=strSwtMe%> jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
    protected JMenuItem<%=strSwtMe%> jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
    protected JMenuItem<%=strSwtMe%> jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	protected JMenuItem<%=strSwtMe%> jMenuItemProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected JMenuItem<%=strSwtMe%> jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
	//MENU
	
	<%if(blnEsAutoReferenciada) {%>
	protected JButton<%=strSwtMe%> jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>;	
	<%} %>
	
	protected JLabel<%=strSwtMe%> jLabelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>;	
		
	<%=strCommentMinCodigoWebIni%>
	@SuppressWarnings("rawtypes")
	protected JComboBox<%=strSwtMe%> jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	@SuppressWarnings("rawtypes")
	protected JComboBox<%=strSwtMe%> jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	<%=strCommentMinCodigoWebFin%>
	
	@SuppressWarnings("rawtypes")
	public JComboBox<%=strSwtMe%> jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	<%=strCommentMinCodigoWebIni%>	
	
	<%=sCoWebExpIni%>
	
	
	<%=sCoWebExpFin%>
	<%=strCommentMinCodigoWebFin%>
	
	protected Boolean conMaximoRelaciones=true;
	protected Boolean conFuncionalidadRelaciones=true;
	public Boolean conCargarMinimo=false;
	public Boolean conMostrarAccionesCampo=false;
	public Boolean permiteRecargarForm=false;//PARA NUEVO PREPARAR Y MANEJO DE EVENTOS, EVITAR QUE SE EJECUTE AL CARGAR VENTANA O LOAD
	public Boolean conCargarFormDetalle=false;
	
	<%=GetDefinicionElementosSwingTablaClaseC(TablaBase)%>
	<%//Trace.WriteLine("INICIO");%>
	<%=GetDefinicionElementosSwingForeignKeysTablaClaseC(TablaBase)%>
	
	
	
	//ELEMENTOS TABLAS PARAMETOS
	<%=GetDefinicionElementosSwingTablaClaseParametrosC(TablaBase)%>
	
	<%=GetDefinicionElementosSwingForeignKeysTablaClaseParametrosC(TablaBase)%>
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	protected JTabbedPane<%=strSwtMe%> jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	
	public static int openFrameCount = 0;
    public static final int xOffset = 10, yOffset = 35;
	
	//LOS DATOS DE NUEVO Y EDICION ACTUAL APARECEN EN OTRA VENTANA(true) O NO(false)
	public static Boolean CON_DATOS_FRAME=true;
	
	public static Boolean ISBINDING_MANUAL=true;
	public static Boolean ISLOAD_FKLOTE=<%if(!blnEsReporte){%>true<%}else{%>false<%}%>;
	public static Boolean ISBINDING_MANUAL_TABLA=true;
	public static Boolean CON_CARGAR_MEMORIA_INICIAL=true;
	
	//Al final no se utilizan, se inicializan desde JInternalFrameBase, desde ParametroGeneralUsuario
	public static String STIPO_TAMANIO_GENERAL="<%=GetPanelTamanioGlobalTableFromPropertiesC(TablaBase)%>";
	public static String STIPO_TAMANIO_GENERAL_TABLA="<%=GetPanelTamanioTablaGlobalTableFromPropertiesC(TablaBase)%>";
	public static Boolean CONTIPO_TAMANIO_MANUAL=false;
	public static Boolean CON_LLAMADA_SIMPLE=true;
	public static Boolean CON_LLAMADA_SIMPLE_TOTAL=true;
	public static Boolean ESTA_CARGADO_PORPARTE=false;
	
	public int iWidthScroll=0;//(screenSize.width-screenSize.width/2)+(250*<%=GetAlignVerticalFormNumeroColumnasTableC(TablaBase)- 1%>);
	public int iHeightScroll=0;//(screenSize.height-screenSize.height/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ALTO);
		
	public int iWidthFormulario=<%=GetTotalAnchoFormulario()%>;//(screenSize.width-screenSize.width/2)+(250*<%=GetAlignVerticalFormNumeroColumnasTableC(TablaBase)- 1%>);
	public int iHeightFormulario=<%=GetTotalAltoFormulario()%>;//(screenSize.height-screenSize.height/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ALTO);
				
	public int iHeightFormularioMaximo=0;
	public int iWidthFormularioMaximo=0;
	public int iWidthTableDefinicion=0;
	
	public double dStart = 0; 
	public double dEnd = 0; 
	public double dDif = 0; 
			
	public SistemaParameterReturnGeneral sistemaReturnGeneral;
	public List<Opcion> opcionsRelacionadas=new ArrayList<Opcion>();
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>(String sTipo) throws Exception {
		super(PaginaTipo.FORMULARIO);
       
		try {
			
	  		if(sTipo.equals("MINIMO")) {
				/*
				this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>=new JPanel();
				this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>=new JPanel();
				this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>=new JMenuBar();
				this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>=new JToolBar<%=strSwtMe%>();
				*/
	  		}
	  		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e, null);
		}
    }
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>(PaginaTipo paginaTipo) throws Exception {
		super(paginaTipo); 
		
		//super("<%=GetNombreClaseC(TablaBase.ToString())%> No " + (++openFrameCount),true, /*resizable*/true, /*closable*/true, /*maximizable*/true);//iconifiable
	  	try {
			Boolean cargarRelaciones=false;
			
			this.initialize(null,false,false,cargarRelaciones,null,null,null,null,null,null,PaginaTipo.PRINCIPAL);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e, null);
		}
    }
	
	//ES AUXILIAR PARA WINDOWS FORMS
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>() throws Exception {
		super(PaginaTipo.FORMULARIO);
        //super("<%=GetNombreClaseC(TablaBase.ToString())%> No " + (++openFrameCount),true, /*resizable*/true, /*closable*/true, /*maximizable*/true);//iconifiable
	  	try {
			Boolean cargarRelaciones=false;
			
			this.initialize(null,false,false,cargarRelaciones,null,null,null,null,null,null,PaginaTipo.PRINCIPAL);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e, null);
		}
    }
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(paginaTipo);
        //super("<%=GetNombreClaseC(TablaBase.ToString())%> No " + (++openFrameCount),true, /*resizable*/true, /*closable*/true, /*maximizable*/true);//iconifiable
	  	try {
			this.initialize(null,false,false,cargarRelaciones,null,null,null,null,null,null,paginaTipo);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e, null);
		}
    }
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(paginaTipo);
        //super("<%=GetNombreClaseC(TablaBase.ToString())%> No " + (++openFrameCount),true, /*resizable*/true, /*closable*/true, /*maximizable*/true);//iconifiable
	  	try {
			this.initialize(null,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,null,null,null,null,null,null,paginaTipo);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e, null);
		}
    }
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>(JDesktopPane<%=strSwtMe%> jdesktopPane,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo) throws Exception {
		super(paginaTipo);//,jdesktopPane
		
		this.jDesktopPane=jdesktopPane;
		
		this.dStart=(double)System.currentTimeMillis();
		
        //super("<%=GetNombreClaseC(TablaBase.ToString())%> No " + (++openFrameCount),true, /*resizable*/true, /*closable*/true, /*maximizable*/true);//iconifiable
	  	try {
			<%if(blnEsGuardarRelaciones){%>
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			<%}%>
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}

			this.initialize(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Clase Padre Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e, null);
		}
    }		

	public JInternalFrameBase getJInternalFrameParent() {
		return jInternalFrameParent;
	}

	public void setJInternalFrameParent(JInternalFrameBase internalFrameParent)	{
		jInternalFrameParent = internalFrameParent;
	}
	
	<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
	public JButton<%=strSwtMe%> getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public JButton<%=strSwtMe%> getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public JButton<%=strSwtMe%> getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}		
	
	public JButton<%=strSwtMe%> getjButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public void setjButtonProcesarInformacion(JButton<%=strSwtMe%> jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>)	{
		this.jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%> = jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
	
	<%if(blnEsAutoReferenciada) {%>
	public JButton<%=strSwtMe%> getjButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public void setjButtonArbol(JButton<%=strSwtMe%> jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>)	{
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%> = jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	<%} %>		
	

	
	
	<%=strCommentMinCodigoWebIni%>
	@SuppressWarnings("rawtypes")
	public JComboBox<%=strSwtMe%> getjComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	@SuppressWarnings("rawtypes")
	public void setjComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>(
			JComboBox<%=strSwtMe%> jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%> = jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	@SuppressWarnings("rawtypes")
	public void setjComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>(
			JComboBox<%=strSwtMe%> jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%> = jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	}		
	
	<%=strCommentMinCodigoWebFin%>		
	
	@SuppressWarnings("rawtypes")
	public JComboBox<%=strSwtMe%> getjComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
	}				
	
	@SuppressWarnings("rawtypes")
	public void setjComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(
			JComboBox<%=strSwtMe%> jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%> = jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	private void initialize(JDesktopPane<%=strSwtMe%> jdesktopPane,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo) throws Exception {
		<%//if(!blnEsReporte) {%>
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setConGuardarRelaciones(conGuardarRelaciones);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEsGuardarRelacionado(esGuardarRelacionado);
		
		<%//}%>
		
		this.conCargarMinimo=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado();				
		
		<%if(!GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
		this.conMostrarAccionesCampo=parametroGeneralUsuario.getcon_mostrar_acciones_campo_general() || opcionActual.getcon_mostrar_acciones_campo();
		
		<%} else {%>
		this.conMostrarAccionesCampo=opcionActual.getcon_mostrar_acciones_campo();
		
		if(!this.conMostrarAccionesCampo) {
			this.conMostrarAccionesCampo=parametroGeneralUsuario.getcon_mostrar_acciones_campo_relaciones();
		}
		<%}%>
		
<%=sCommentUbicarMan%>		if(!this.conCargarMinimo) {
		<%=GetNavegacionTablasRelacionadasClasesRelacionadasControllerC(TablaBase,true,ConEjb,GeneracionPorModuloUnico)%>
<%=sCommentUbicarMan%>		}
		
			
		this.sTipoTamanioGeneral=FuncionesSwing.getTipoTamanioGeneral(this,parametroGeneralUsuario,conGuardarRelaciones,esGuardarRelacionado);
		this.sTipoTamanioGeneralTabla=FuncionesSwing.getTipoTamanioGeneralTabla(this,parametroGeneralUsuario,conGuardarRelaciones,esGuardarRelacionado);
		this.conTipoTamanioManual=FuncionesSwing.getConTipoTamanioManual(this,parametroGeneralUsuario,conGuardarRelaciones,esGuardarRelacionado);		
		this.conTipoTamanioTodo=FuncionesSwing.getConTipoTamanioTodo(this,parametroGeneralUsuario,conGuardarRelaciones,esGuardarRelacionado);		
				
		
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.STIPO_TAMANIO_GENERAL=this.sTipoTamanioGeneral;
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.STIPO_TAMANIO_GENERAL_TABLA=this.sTipoTamanioGeneralTabla;
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.CONTIPO_TAMANIO_MANUAL=this.conTipoTamanioManual;
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		
		int iWidth=(screenSize.width-screenSize.width/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ANCHO);
		int iHeight=(screenSize.height-screenSize.height/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ALTO);
		
		//this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.opcionActual,this.usuarioActual,"<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> MANTENIMIENTO"));
		
		<%if(GetAnchoAltoAuxiliarTableFromPropertiesC(TablaBase).Equals("")) {%>
		
		if(iWidth > <%=GetTotalAnchoVentana()%>) {
			iWidth=<%=GetTotalAnchoVentana()%>;
		}
		
		if(iHeight > <%=GetTotalAltoVentana()%>) {
			iHeight=<%=GetTotalAltoVentana()%>;
		}
		
		this.setSize(iWidth,iHeight);
		<%}else {%>
		this.setSize(<%=GetAnchoAuxiliarTableFromPropertiesC(TablaBase)%>,<%=GetAltoAuxiliarTableFromPropertiesC(TablaBase)%>);
		<%}%>
		
		this.setFrameIcon(new ImageIcon(FuncionesSwing.getImagenBackground(Constantes2.S_ICON_IMAGE)));
		
	   	this.setContentPane(this.getJContentPane(iWidth,iHeight,jdesktopPane,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo));
		
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			this.setResizable(true);
			this.setClosable(true);
			this.setMaximizable(true);
			this.iconable=true;
			
			setLocation(xOffset*openFrameCount, yOffset*openFrameCount);
			
			if(Constantes.CON_VARIAS_VENTANAS) {
				openFrameCount++;
				
				if(openFrameCount==Constantes.INUM_MAX_VENTANAS) {
					openFrameCount=0;
				}
			}
		}				
	
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.ESTA_CARGADO_PORPARTE=true;
		
    }
		
		
	<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
	public void inicializarToolBar() {
		this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>= new JToolBar<%=strSwtMe%>("MENU DATOS");		
		
		//TOOLBAR
		//PRINCIPAL				
				this.jButtonProcesarInformacionToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe();
				this.jButtonModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe();							
		//PRINCIPAL
		
		//DETALLE
		this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=FuncionesSwing.getButtonToolBarGeneral(this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,
							"actualizar","actualizar","<%=strActualizar%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("ACTUALIZAR"),"<%=strActualizar%>",<%=blnConForzarUbicarPanelesManualmente.ToString().ToLower()%>);
		
		<%if(blnConForzarUbicarPanelesManualmente) {%>
		this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe("ACT");
		this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>);
		<%}%>
		
		
		
		this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=FuncionesSwing.getButtonToolBarGeneral(this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,
							"eliminar","eliminar","<%=strEliminar%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("ELIMINAR"),"<%=strEliminar%>",<%=blnConForzarUbicarPanelesManualmente.ToString().ToLower()%>);
		
		<%if(blnConForzarUbicarPanelesManualmente) {%>
		this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe("ELI");
		this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>);
		<%}%>
		
		
		
		this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=FuncionesSwing.getButtonToolBarGeneral(this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,
							"cancelar","cancelar","<%=strCancelar%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("CANCELAR"),"<%=strCancelar%>",<%=blnConForzarUbicarPanelesManualmente.ToString().ToLower()%>);
		
		<%if(blnConForzarUbicarPanelesManualmente) {%>
		this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe("CAN");
		this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>);
		<%}%>
		
		
		
		this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=FuncionesSwing.getButtonToolBarGeneral(this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,
							"guardarcambios","guardarcambios","<%=strGuardarCambios%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("GUARDAR_CAMBIOS"),"<%=strGuardarCambios%>",<%=blnConForzarUbicarPanelesManualmente.ToString().ToLower()%>);
		
		<%if(blnConForzarUbicarPanelesManualmente) {%>
		this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe("GUA");
		this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>);
		<%}%>
		
		
		
		FuncionesSwing.setBoldButtonToolBar(this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,STIPO_TAMANIO_GENERAL,false,false,this);
		FuncionesSwing.setBoldButtonToolBar(this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,STIPO_TAMANIO_GENERAL,false,false,this);
		FuncionesSwing.setBoldButtonToolBar(this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>,STIPO_TAMANIO_GENERAL,false,false,this);
	}
	<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
	
	<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
	public void cargarMenus() {		
		
		this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>=new JMenuBarMe();
		
		//DETALLE
		this.jmenuDetalle<%=GetNombreClaseC(TablaBase.ToString())%>=new JMenuMe("<%=strRelaciones%>");
		this.jmenuDetalleArchivo<%=GetNombreClaseC(TablaBase.ToString())%>=new JMenuMe("<%=strArchivo%>");
		this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>=new JMenuMe("<%=strAcciones%>");
		this.jmenuDetalleDatos<%=GetNombreClaseC(TablaBase.ToString())%>=new JMenuMe("<%=strDatos%>");
		//DETALLE_FIN
				
		
		
		this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strNuevo%>" + FuncionesSwing.getKeyMensaje("NUEVO"));
		this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strNuevo%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,"nuevo_button","<%=strNuevo%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strEditar%>" + FuncionesSwing.getKeyMensaje("MODIFICAR"));
		this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strEditar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>,"modificar_button","<%=strEditar%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strActualizar%>" + FuncionesSwing.getKeyMensaje("ACTUALIZAR"));
		this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strActualizar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>,"actualizar_button","<%=strActualizar%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strEliminar%>" + FuncionesSwing.getKeyMensaje("ELIMINAR"));
		this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strEliminar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>,"eliminar_button","<%=strEliminar%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strCancelar%>" + FuncionesSwing.getKeyMensaje("CANCELAR"));
		this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strCancelar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>,"cancelar_button","<%=strCancelar%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strGuardarCambios%>" + FuncionesSwing.getKeyMensaje("GUARDAR_CAMBIOS"));
		this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strGuardarCambios%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>,"guardarcambios_button","<%=strGuardarCambios%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strSalir%>" + FuncionesSwing.getKeyMensaje("CERRAR"));
		this.jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strCerrar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>,"cerrar_button","<%=strSalir%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strSalir%>" + FuncionesSwing.getKeyMensaje("CERRAR"));
		this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strCerrar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>,"cerrar_button","<%=strSalir%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strMostrarOcultar%>" + FuncionesSwing.getKeyMensaje("MOSTRAR_OCULTAR"));
		this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strMostrarOcultar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>,"mostrar_ocultar_button","<%=strMostrarOcultar%>");
		FuncionesSwing.setBoldMenuItem(this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		this.jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>= new JMenuItem<%=strSwtMe%>("<%=strMostrarOcultar%>" + FuncionesSwing.getKeyMensaje("MOSTRAR_OCULTAR"));
		this.jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.setActionCommand("<%=strMostrarOcultar%>");
		FuncionesSwing.addImagenMenuItemGeneral(this.jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>,"mostrar_ocultar_button","<%=strMostrarOcultar%>");			
		FuncionesSwing.setBoldMenuItem(this.jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);			
		
		//DETALLE
		this.jmenuDetalleArchivo<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>);		
		
		//this.jmenuDetalleDatos<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemDetalleAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>);				
		this.jmenuDetalleDatos<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>);				
				
		//this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>);		
		//DETALLE_FIN	
		
		//RELACIONES		
		//RELACIONES				
		
		//DETALLE
		FuncionesSwing.setBoldMenu(this.jmenuDetalleArchivo<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		FuncionesSwing.setBoldMenu(this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		FuncionesSwing.setBoldMenu(this.jmenuDetalleDatos<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
			
		this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jmenuDetalleArchivo<%=GetNombreClaseC(TablaBase.ToString())%>);		
		this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jmenuDetalleAcciones<%=GetNombreClaseC(TablaBase.ToString())%>);		
		this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jmenuDetalleDatos<%=GetNombreClaseC(TablaBase.ToString())%>);		
		
		<%if(blnTieneRelacionesGlobal){%>
		//MENU RELACIONES
<%=sCommentUbicarMan%>		if(!this.conCargarMinimo) {
			FuncionesSwing.setBoldMenu(this.jmenuDetalle<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
			
			this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jmenuDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);		
<%=sCommentUbicarMan%>		}
		<%}%>	
		//DETALLE_FIN
		
		
		//AGREGA MENU DETALLE A PANTALLA
		<%if(!GetPanelSinMenuTableFromPropertiesC(TablaBase)) {%>
		this.setJMenuBar(this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);				
		<%}%>
	}
	<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
	
	<%if(!CON_OPTIMIZE_V0){%>									
	@SuppressWarnings({"unchecked" })	
	<%}%>
	public void inicializarElementosCampos<%=GetNombreClaseC(TablaBase.ToString())%>() {
		String sKeyStrokeName="";
		KeyStroke<%=strSwtMe%> keyStrokeControl=null;
		
		<%=GetElementosSwingTablaClaseC(TablaBase)%>
	}
	
	public void inicializarElementosCamposForeigKeys<%=GetNombreClaseC(TablaBase.ToString())%>() {
		String sKeyStrokeName="";
		KeyStroke<%=strSwtMe%> keyStrokeControl=null;
		
		<%=GetElementosSwingTablaClaseForeigKeysC(TablaBase,false)%>
	}
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) {
		//System.out.println("TRANSFIERE EL MANEJO AL PADRE O FORM PRINCIPAL");
		
		jInternalFrameParent.jButtonActionPerformedTecladoGeneral(sTipo,evt);
	}
	
	//JPanel
	//@SuppressWarnings({"unchecked" })//"rawtypes"
	public JScrollPane<%=strSwtMe%> getJContentPane(int iWidth,int iHeight,JDesktopPane<%=strSwtMe%> jDesktopPane,Boolean cargarRelaciones,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo) throws Exception {	
		//PARA TABLA PARAMETROS
		String sKeyStrokeName="";
		KeyStroke<%=strSwtMe%> keyStrokeControl=null;
		
		this.jContentPane = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);//new JPanel();
				
		this.usuarioActual=usuarioActual;
		this.resumenUsuarioActual=resumenUsuarioActual;
		this.opcionActual=opcionActual;
		
		this.moduloActual=moduloActual;		
		this.parametroGeneralSg=parametroGeneralSg;		
		this.parametroGeneralUsuario=parametroGeneralUsuario;	
		
		this.jDesktopPane=jDesktopPane;
				
		this.conFuncionalidadRelaciones=parametroGeneralUsuario.getcon_guardar_relaciones();
		
		<%if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
		//INDEPENDIENTE DEL PARAMETRO TIENE LA FUNCIONALIDAD DE GUARDAR RELACIONES
		this.conFuncionalidadRelaciones=true;	
		<%}%>
		
		int iGridyPrincipal=0;
		
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		this.inicializarToolBar();		
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
		//CARGAR MENUS
		//this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional(paginaTipo);//JInternalFrameBase("<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> DATOS");
		
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		this.cargarMenus();		
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
		this.gridaBagLayout<%=GetNombreClaseC(TablaBase.ToString())%>= new GridBagLayout();
		

		
		String sToolTip<%=GetNombreClaseC(TablaBase.ToString())%>="";
		sToolTip<%=GetNombreClaseC(TablaBase.ToString())%>=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO;
		
		if(Constantes.ISDEVELOPING) {
			sToolTip<%=GetNombreClaseC(TablaBase.ToString())%>+="(<%=TablaBase.Owner%>.<%=TablaBase.Name%>)";
		}
		
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()) {
			sToolTip<%=GetNombreClaseC(TablaBase.ToString())%>+="_"+this.opcionActual.getId();
		}
								
		
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
        this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
        this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
        this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
        this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
		
		this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%> = new JScrollPane<%=strSwtMe%>();   
        this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%> = new JScrollPane<%=strSwtMe%>();
		this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%> = new JScrollPane<%=strSwtMe%>();
		<%if(blnConTotales){%>//this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales = new JScrollPane<%=strSwtMe%>();<%}%>		
		
		
		this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);
		this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);
        this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);               
		this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);               
		
		<%if(GetPanelConTabTableFromPropertiesC(TablaBase)) {%>
		this.jTabbedPaneCampos<%=GetNombreClaseC(TablaBase.ToString())%>=new JTabbedPane<%=strSwtMe%>();
		
		<%if(!GetPanelTab_TabAlignTableFromPropertiesC(TablaBase).Equals("")) {%>
		this.jTabbedPaneCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setTabPlacement(JTabbedPane.<%=GetPanelTab_TabAlignTableFromPropertiesC(TablaBase)%>);
		<%}%>
		
		this.jTabbedPaneCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createEmptyBorder());//javax.swing.BorderFactory.createTitledBorder("<%=strCampos%>")
		
		FuncionesSwing.setBoldTabbedPane(this.jTabbedPaneCampos<%=GetNombreClaseC(TablaBase.ToString())%>,STIPO_TAMANIO_GENERAL,false,false,this);
		
		<%}%>
		
		//if(!this.conCargarMinimo) {
		<%=GetPaneles("INICIALIZAR",false)%>;
		<%=GetPanelesFinRelaciones("INICIALIZAR")%>;
		//}
		
		this.sPath=" <---> <%=strAcceso%>: <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>";
		
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()) {
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strDatos%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)+GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>" + this.sPath));
		} else {
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
		}
		
		this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strEdicionDatos%>"));
		this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strEdicionDatos%>"));
		<%if(blnConTotales){%>//this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strTotales%>"));<%}%>
		
			
		<%if(!blnEsGuardarRelaciones){%>
        this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strCampos%>"));
		<%}else{%>
		this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
		<%}%>
        this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setName("jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>"); 

		this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strCamposOcultos%>"));
        this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setName("jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>"); 

        this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strAcciones%>"));
        this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strAcciones%>");
        this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setName("<%=strAcciones%>"); 

		this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strAcciones%> <%=strExtraPost%>"));
        this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strAcciones%>");
        this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setName("<%=strAcciones%>"); 
		
		
		FuncionesSwing.setBoldScrollPanel(this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
		FuncionesSwing.setBoldScrollPanel(this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
		FuncionesSwing.setBoldScrollPanel(this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);		
		FuncionesSwing.setBoldPanel(this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
        FuncionesSwing.setBoldPanel(this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
        FuncionesSwing.setBoldPanel(this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
		
		
		//if(!this.conCargarMinimo) {
		<%=GetPaneles("PARAMETROS",false)%>;
		<%=GetPanelesFinRelaciones("PARAMETROS")%>;
		//}
		
		//ELEMENTOS TABLAS PARAMETOS
<%=sCommentUbicarMan%>		if(!this.conCargarMinimo) {
		<%=GetInicializarGeneralSwingTablaClaseParametrosC(TablaBase)%>
<%=sCommentUbicarMan%>		}
		//ELEMENTOS TABLAS PARAMETOS_FIN
		
		
		
        this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strNuevo%>");
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strEditar%>");
        this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strActualizar%>");
        this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strEliminar%>");
        this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strCancelar%>");
        this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strGuardarCambios%>");
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strGuardarCambios%>");
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strSalir%>");
		
		FuncionesSwing.addImagenButtonGeneral(this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,"nuevo_button","<%=strNuevo%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
		FuncionesSwing.addImagenButtonGeneral(this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>,"modificar_button","<%=strEditar%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
       	FuncionesSwing.addImagenButtonGeneral(this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>,"actualizar_button","<%=strActualizar%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
        FuncionesSwing.addImagenButtonGeneral(this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>,"eliminar_button","<%=strEliminar%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
        FuncionesSwing.addImagenButtonGeneral(this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>,"cancelar_button","<%=strCancelar%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
        FuncionesSwing.addImagenButtonGeneral(this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>,"guardarcambios_button","<%=strGuardarCambios%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
		FuncionesSwing.addImagenButtonGeneral(this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>,"guardarcambiostabla_button","<%=strGuardarCambios%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
		FuncionesSwing.addImagenButtonGeneral(this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>,"cerrar_button","<%=strSalir%>",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado());
		
		FuncionesSwing.setBoldButton(this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		FuncionesSwing.setBoldButton(this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		FuncionesSwing.setBoldButton(this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		FuncionesSwing.setBoldButton(this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		FuncionesSwing.setBoldButton(this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);
		
		FuncionesSwing.setBoldButton(this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
		FuncionesSwing.setBoldButton(this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
		FuncionesSwing.setBoldButton(this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
		
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strNuevo%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("NUEVO"));
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strEditar%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO+"");// + FuncionesSwing.getKeyMensaje("MODIFICAR"))
        this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strActualizar%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("ACTUALIZAR"));
        this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strEliminar%>)"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("ELIMINAR"));
        this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strCancelar%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("CANCELAR"));
        this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strGuardarCambios%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("GUARDAR_CAMBIOS"));
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strGuardarCambios%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("GUARDAR_CAMBIOS"));
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strSalir%>"+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO + FuncionesSwing.getKeyMensaje("CERRAR"));
		
		//HOT KEYS
		/*
		N->Nuevo
		N->Alt + Nuevo Relaciones (ANTES R)
		A->Actualizar
		E->Eliminar
		S->Cerrar
		C->->Mayus + Cancelar (ANTES Q->Quit)
		G->Guardar Cambios
		D->Duplicar
		C->Alt + Cop?ar
		O->Orden
		N->Nuevo Tabla
		R->Recargar Informacion Inicial (ANTES I)
		Alt + Pag.Down->Siguientes
		Alt + Pag.Up->Anteriores
		
		NO UTILIZADOS
		M->Modificar
		
		*/
		String sMapKey = "";
		InputMap<%=strSwtMe%> inputMap =null;
		
		//NUEVO
		sMapKey = "Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(FuncionesSwing.getTipoFocusedKeyEvent("NORMAL"));
		inputMap.put(KeyStroke<%=strSwtMe%>.getKeyStroke(FuncionesSwing.getKeyEvent("NUEVO") , FuncionesSwing.getMaskKey("NUEVO")), sMapKey);
	
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new ButtonAbstractAction(this,"Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		//ACTUALIZAR
		sMapKey = "Actualizar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(FuncionesSwing.getTipoFocusedKeyEvent("NORMAL"));
		inputMap.put(KeyStroke<%=strSwtMe%>.getKeyStroke(FuncionesSwing.getKeyEvent("ACTUALIZAR") , FuncionesSwing.getMaskKey("ACTUALIZAR")), sMapKey);
		
		this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey,new ButtonAbstractAction(this,"Actualizar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		//ELIMINAR
		sMapKey = "Eliminar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(FuncionesSwing.getTipoFocusedKeyEvent("NORMAL"));
		inputMap.put(KeyStroke<%=strSwtMe%>.getKeyStroke(FuncionesSwing.getKeyEvent("ELIMINAR") , FuncionesSwing.getMaskKey("ELIMINAR")), sMapKey);
		
		this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey,new ButtonAbstractAction(this,"Eliminar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		//CANCELAR	
		sMapKey = "Cancelar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(FuncionesSwing.getTipoFocusedKeyEvent("NORMAL"));
		inputMap.put(KeyStroke<%=strSwtMe%>.getKeyStroke(FuncionesSwing.getKeyEvent("CANCELAR") , FuncionesSwing.getMaskKey("CANCELAR")), sMapKey);
		
		this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey,new ButtonAbstractAction(this,"Cancelar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		//CERRAR		
		sMapKey = "Cerrar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(FuncionesSwing.getTipoFocusedKeyEvent("NORMAL"));
		inputMap.put(KeyStroke<%=strSwtMe%>.getKeyStroke(FuncionesSwing.getKeyEvent("CERRAR") , FuncionesSwing.getMaskKey("CERRAR")), sMapKey);
				
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey,new ButtonAbstractAction(this,"Cerrar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		//GUARDAR CAMBIOS
		sMapKey = "GuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(FuncionesSwing.getTipoFocusedKeyEvent("NORMAL"));
		inputMap.put(KeyStroke<%=strSwtMe%>.getKeyStroke(FuncionesSwing.getKeyEvent("GUARDAR_CAMBIOS") , FuncionesSwing.getMaskKey("GUARDAR_CAMBIOS")), sMapKey);
		
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey,new ButtonAbstractAction(this,"GuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		//HOT KEYS
		
		this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = new JCheckBoxMe();
		this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strNuevo%>");
		this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strNuevo%> <%=GetNombreClaseC(TablaBase.ToString())%>");				
		
		FuncionesSwing.setBoldCheckBox(this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
       
	
		this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%> = new JCheckBoxMe();
		this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strSin%> <%=strCerrar%>");
		this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strSin%> <%=strCerrar%> <%=strVentana%> <%=GetNombreClaseC(TablaBase.ToString())%>");				
		
		FuncionesSwing.setBoldCheckBox(this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);
       
	
		this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%> = new JCheckBoxMe();
		this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strSin%> <%=strMensaje%>");
		this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strSin%> <%=strMensaje%> <%=strConfirmacion%>");				
				
		FuncionesSwing.setBoldCheckBox(this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);       	
       
		<%if(blnEsAutoReferenciada) {%>
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%> = new JButtonMe();
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strArbol%>");		
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strBuscar%> <%=strPor%> <%=strArbol%>");
		<%}%>
				
		
		<%=strCommentMinCodigoWebIni%>	
			
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%> = new JComboBoxMe();
		//this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strAccion%>");
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strTiposAcciones%>");
							
		<%=strCommentMinCodigoWebFin%>

		this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%> = new JComboBoxMe();
		//this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strAccion%>");				
    	this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("<%=strTiposAcciones%>");
	
		this.jLabelAcciones<%=GetNombreClaseC(TablaBase.ToString())%> = new JLabelMe();
		
		this.jLabelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setText("<%=strAcciones%>");		
		this.jLabelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(Constantes.ISWING_ANCHO_CONTROL,Constantes.ISWING_ALTO_CONTROL));
		this.jLabelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(Constantes.ISWING_ANCHO_CONTROL,Constantes.ISWING_ALTO_CONTROL));
		this.jLabelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(Constantes.ISWING_ANCHO_CONTROL,Constantes.ISWING_ALTO_CONTROL));
		
		
        //HOT KEYS2
		
		/*
		T->Nuevo Tabla
		*/
		//NUEVO GUARDAR CAMBIOS O NUEVO TABLA
		<%//=strCommentMinCodigoWebFin%>
		//HOT KEYS2
		
		//ELEMENTOS
		this.inicializarElementosCampos<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		//ELEMENTOS FK
		this.inicializarElementosCamposForeigKeys<%=GetNombreClaseC(TablaBase.ToString())%>();
				
		
		//ELEMENTOS TABLAS PARAMETOS
<%=sCommentUbicarMan%>		if(!this.conCargarMinimo) {			
			<%=GetElementosSwingTablaClaseParametrosC(TablaBase)%>
			
			<%=GetElementosSwingTablaClaseForeigKeysParametrosC(TablaBase)%>				
<%=sCommentUbicarMan%>		}
		//ELEMENTOS TABLAS PARAMETOS_FIN
				
		
				
		//ELEMENTOS TABLAS PARAMETOS_FIN
		
		this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=new JTabbedPane<%=strSwtMe%>();
		<%if(!blnEsGuardarRelaciones){%>
		this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("<%=strRelaciones%>"));
		<%} else {%>
		this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
		<%}%>
		
		//ESTA EN BEAN

		
		FuncionesSwing.setBoldTabbedPane(this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>,STIPO_TAMANIO_GENERAL,false,false,this);
		
		
		int iPosXAccionPaginacion=0;
		
		
		<%if(blnEsAutoReferenciada) {%>
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(80,25));
        this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(80,25));
        this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(80,25));
		
		FuncionesSwing.setBoldButton(this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);;
		
		<%} %>
		
				
		<%=strCommentMinCodigoWebIni%>
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(145,20));
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(145,20));
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(145,20));
			
		FuncionesSwing.setBoldComboBox(this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,true,this);;
			
		<%=strCommentMinCodigoWebFin%>
		
		this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(145,20));
        this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(145,20));
        this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(145,20));
		
		FuncionesSwing.setBoldComboBox(this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>, STIPO_TAMANIO_GENERAL,false,false,this);				
		
		<%if(!ConGroupLayout){%>
		GridBagLayout gridaBagLayoutCampos<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagLayout();
		GridBagLayout gridaBagLayoutCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagLayout();
		
		this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutCampos<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		<%=GetPaneles("PARAMETROS2",false)%>;
		<%=GetPanelesFinRelaciones("PARAMETROS2")%>;
		
		<%} else {%>
		ConGroupLayout jPanelCamposLayout<%=GetNombreClaseC(TablaBase.ToString())%> = new ConGroupLayout(jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>);
        jPanelCamposLayout<%=GetNombreClaseC(TablaBase.ToString())%>.setAutoCreateContainerGaps(true);
        jPanelCamposLayout<%=GetNombreClaseC(TablaBase.ToString())%>.setAutoCreateGaps(true);
         
        jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(jPanelCamposLayout<%=GetNombreClaseC(TablaBase.ToString())%>);
			
		<%}%>
		
		//SUBPANELES SIMPLES
		//SUBPANELES POR CAMPO
        <%=GetSetControlesPanelVariablesPanelSwingC(TablaBase,ConGroupLayout)%>
        <%//Debugger.Break();%>	
		//SUBPANELES SIMPLES
		
		//SUBPANELES EN PANEL
		//SUBPANELES EN PANEL CAMPOS NORMAL				
		<%=GetSetControlesPanelVariablesSwingC(TablaBase,ConGroupLayout,true,false,false,false)%>
		
		//SUBPANELES EN PANEL CAMPOS OCULTOS				
		<%=GetSetControlesPanelVariablesSwingC(TablaBase,ConGroupLayout,false,true,false,false)%>
		
		//SUBPANELES EN PANEL CAMPOS INICIO				
		<%=GetSetControlesPanelVariablesSwingC(TablaBase,ConGroupLayout,false,false,false,true)%>
		
		//SUBPANELES EN PANEL CAMPOS FIN				
		<%=GetSetControlesPanelVariablesSwingC(TablaBase,ConGroupLayout,false,false,true,false)%>
				
		//SUBPANELES EN PANEL
		
		//ELEMENTOS TABLAS PARAMETOS
			//SUBPANELES POR CAMPO
<%=sCommentUbicarMan%>		if(!this.conCargarMinimo) {
			<%=GetSetControlesPanelVariablesPanelSwingParametrosC(TablaBase,ConGroupLayout)%>
			//SUBPANELES EN PANEL CAMPOS				
			<%=GetSetControlesPanelVariablesSwingParametrosC(TablaBase,ConGroupLayout,false)%>
<%=sCommentUbicarMan%>		}
		//ELEMENTOS TABLAS PARAMETOS_FIN
		
		
		<%if(!ConGroupLayout){%>
			 		
			
		
		
		<%} else {%>
		this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setViewportView(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>);
		<%}%>
		
		
		
		<%if(!ConGroupLayout){%>
		Integer iGridXParametrosAccionesFormulario=0;
		Integer iGridYParametrosAccionesFormulario=0;
			
		GridBagLayout gridaBagLayoutAcciones<%=GetNombreClaseC(TablaBase.ToString())%>= new GridBagLayout();
		this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutAcciones<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		GridBagLayout gridaBagLayoutAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>= new GridBagLayout();
		this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridYParametrosAccionesFormulario;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iGridXParametrosAccionesFormulario++;
			
		this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);

		<%if(!blnEsReporte && !blnEstablaModulo) { %>
			<%if(!blnEsTablaUnoAUnoFk) { %>
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridYParametrosAccionesFormulario;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iGridXParametrosAccionesFormulario++;
			
		this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
			<%}%>
			
		//DEBE CERRARSE Y ACTUALIZARSE TODO NUEVAMENTE, SI ES RELACIONADO PUEDE FUNCIONAR
		//if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {		
		//SE ARRIESGA
		//if(!this.conFuncionalidadRelaciones) {		
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridYParametrosAccionesFormulario;		
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iGridXParametrosAccionesFormulario++;
				
			this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		//}
		
		
		//NO TIENE MENSAJE POR DEFINICION, O ES MUY COMPLEJO LA PANTALLA PARA HACERLO MAS COMPLICADO
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()
			){				
			//&& !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {
							
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridYParametrosAccionesFormulario;		
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iGridXParametrosAccionesFormulario++;
				
			this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		}
		<%}%>
		
		
		int iPosXAccion=0;
		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill = GridBagConstraints.VERTICAL;
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = 0;
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iPosXAccion++;
			
		this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);							

		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill = GridBagConstraints.VERTICAL;
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = 0;
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx =iPosXAccion++;
			
		this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		
			
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = 0;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iPosXAccion++;
		
		this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);


		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = 0;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = iPosXAccion++;
		
		this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);	
		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = 0;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx =iPosXAccion++;
		
		this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		<%} else {%>
		
		<%}%>				
			
			
		<%if(!ConGroupLayout){%>
		//this.setJProgressBarToJPanel();
		
		GridBagLayout gridaBagLayout<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagLayout();
		
		this.jContentPane.setLayout(gridaBagLayout<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		if(this.parametroGeneralUsuario.getcon_botones_tool_bar() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {			
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>									
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();						
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyPrincipal++;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;		
			//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill =GridBagConstraints.VERTICAL;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.CENTER;//.CENTER;NORTH
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.ipadx = 100;
				
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		}
		
		//PROCESANDO EN OTRA PANTALLA
		
		
		int iGridxBusquedasParametros=0;
		
	
		
		//PARAMETROS TABLAS PARAMETROS		
<%=sCommentUbicarMan%>		if(!this.conCargarMinimo) {
			//NO BUSQUEDA
			<%//=GetSetPanelesGeneralSwingTablaClaseParametrosC(TablaBase)%>
<%=sCommentUbicarMan%>		}
		//PARAMETROS TABLAS PARAMETROS_FIN
		
		
		//PARAMETROS REPORTES
		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy =iGridyPrincipal++;
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx =0;
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill = GridBagConstraints.BOTH;		
		//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.ipady =150;
		
		this.jContentPane.add(this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
				
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		
		iWidthScroll=(screenSize.width-screenSize.width/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ANCHO_RELSCROLL)+(250*<%=GetAlignVerticalFormNumeroColumnasTableC(TablaBase)- 1%>);
		iHeightScroll=(screenSize.height-screenSize.height/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ALTO_RELSCROLL);

		
		<%if(blnEsAutoReferenciada) {%>
		int iWidthTree=(screenSize.width-screenSize.width/3);
		int iHeightTree=(screenSize.height-screenSize.height/2);
		
		this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%> = new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameTree(PaginaTipo.BUSQUEDA);
		
		this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);//WindowConstants.DO_NOTHING_ON_CLOSE);
	    this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setjInternalFrameParent(this);
	        
	    //this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setTitle("<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> ARBOL");
		this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> <%=strFormulario%>",PaginaTipo.BUSQUEDA,paginaTipo));
	    this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setSize(iWidthTree,iHeightTree);        
		   				
		this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_DET_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_DET_Y));
			
	    this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setResizable(true);
	    this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setClosable(true);
	    this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximizable(true);
			
		<%}%>						
			
		//if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {				
			//this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional();//JInternalFrameBase("<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> DATOS");
			
			this.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
	        //this.setjInternalFrameParent(this);
	        
			iHeightFormularioMaximo=(screenSize.height-screenSize.height/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ALTO);
	        
	        if(iHeightFormulario>iHeightFormularioMaximo) {
	        	iHeightFormulario=iHeightFormularioMaximo;
	        }
			
			iWidthFormularioMaximo=(screenSize.width-screenSize.width/Constantes.ISWING_RESTOPARTE_DIFERENCIA_ANCHO);
	        
			if(iWidthFormulario>iWidthFormularioMaximo) {
	        	iWidthFormulario=iWidthFormularioMaximo;
	        }
			
	        //this.setTitle("[FOR] - <%=GetTituloNombreTableFromPropertiesC(TablaBase)%> DATOS");
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> <%=strFormulario%>",PaginaTipo.FORMULARIO,paginaTipo));			
	        this.setSize(iWidthFormulario,iHeightFormulario);        
		   				
			this.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_DET_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_DET_Y));
			
	        this.setResizable(true);
	        this.setClosable(true);
	        this.setMaximizable(true);
		    
			<%if(ConSwingFocusTraversalPolicy) {%>
			
			<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>FocusTraversalPolicy <%=GetNombreClaseObjetoC(TablaBase.ToString())%>FocusTraversalPolicy=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>FocusTraversalPolicy(this);
			
			//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FocusTraversalPolicy.set<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame(this);
			
			this.setFocusTraversalPolicy(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FocusTraversalPolicy);
			
			<%} else {%>
			<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>Model <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Model=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>Model(this);
			
			//SI USARA CLASE INTERNA
			//<%=GetNombreClaseC(TablaBase.ToString())%>Model.<%=GetNombreClaseC(TablaBase.ToString())%>FocusTraversalPolicy <%=GetNombreClaseObjetoC(TablaBase.ToString())%>FocusTraversalPolicy = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Model.new <%=GetNombreClaseC(TablaBase.ToString())%>FocusTraversalPolicy(this);
			
			//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>FocusTraversalPolicy.set<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame(this);
			
			this.setFocusTraversalPolicy(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Model);
			
			<%}%>
			
			this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);//new JPanel();
			
			int iGridyRelaciones=0;
			
			GridBagLayout gridaBagLayoutDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagLayout();	
			this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			GridBagLayout gridaBagLayoutBusquedasParametros<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagLayout();
			
			
<%=sCommentUbicarMan%>if(this.parametroGeneralUsuario.getcon_botones_tool_bar()) {				
				<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
				//AGREGA TOOLBAR DETALLE A PANTALLA
				<%if(!GetPanelSinToolBarTableFromPropertiesC(TablaBase)) {%>
				
				this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
				this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(true)%>;		
				this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
					
				<%if(!GetPanelColSpanGlobalTableFromPropertiesC(TablaBase).Equals("")) {%>
				this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridwidth=<%=GetPanelColSpanGlobalTableFromPropertiesC(TablaBase)%>;
				<%}%>
				
				this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);								
				<%}%>
				<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
<%=sCommentUbicarMan%>}
			
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>=   new JScrollPane<%=strSwtMe%>(jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(iWidthScroll,iHeightScroll));
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(iWidthScroll,iHeightScroll));
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(iWidthScroll,iHeightScroll));
			
			this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>=   new JScrollPane<%=strSwtMe%>(jContentPane,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			
			this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(iWidthScroll,iHeightScroll));
			this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(iWidthScroll,iHeightScroll));
			this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(iWidthScroll,iHeightScroll));
				
			
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			<%if(blnEsGuardarRelaciones){%>
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill=GridBagConstraints.NONE;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.WEST;
			<%}%>
			
			<% if(!GetPanelSinBasicoTableFromPropertiesC(TablaBase)){%>
			
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(true)%>;		
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
	        
			this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			<%}%>
			
			
			<%if(GetPanelConTabTableFromPropertiesC(TablaBase)) {%>
			
			<%=GetPaneles("UBICAR_TAB",false)%>
			
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
						
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(true)%>;		
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
	        
			this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jTabbedPaneCampos<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			<%}%>
			
			//if(!this.conCargarMinimo) {
			<%if(!GetPanelConTabTableFromPropertiesC(TablaBase)) {%>			
			<%=GetPaneles("UBICAR",false)%>
			<%}%>
			
			<%=GetPanelesFinRelaciones("UBICAR_BOTONES")%>;
			//}
						
			this.conMaximoRelaciones=<%=GetConMaximoRelaciones(TablaBase)%>;
			
			if(this.parametroGeneralUsuario.getcon_cargar_por_parte()) {
				<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>				
				<%=GetCargarPanelsRelacionadas(TablaBase,false,false,true)%>
				<%}%>
			}									
			
			//CARGA O NO CARGA RELACIONADOS(MAESTRO DETALLE)
									  // ABAJO VIENE DE PARAMETRO GENERAL USUARIO
			if(conMaximoRelaciones) { // && this.conFuncionalidadRelaciones) {
				if(!this.conCargarMinimo) {
					if(cargarRelaciones 
						<%=strCommentReporte%>&& <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()
						) {
					<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
					//paraCargarPorParte es false por defecto(y ejecuta funcion normal cargando detalle en tab panel), si se utiliza funcionalidad es true y carga tab panel auxiliar temporal
					<%=GetCargarPanelsRelacionadas(TablaBase,false,true,false)%>
					<%}%>
					
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
						<%//if(!conFormDetalle){%>
						this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>= new GridBagConstraints();
						this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(true)%>;
						this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
						this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
						<%//}%>
					}
					
					//RELACIONES OTROS AGRUPADOS
					<%=GetPanelesFinRelaciones("UBICAR")%>;
					
					} else {
						//this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
						<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
						<%=GetCargarPanelsRelacionadas(TablaBase,true,true,false)%>
						<%}%>
					}
				}
			}
			
			Boolean tieneColumnasOcultas=false;
			
			<%if(intNumeroColumnasPrincipalOcultas>0){%>
			tieneColumnasOcultas=true;
			<%}%>	
		
			<%=GetPaneles("UBICAR",true)%>			
			
			if(!Constantes.ISDEVELOPING) {
	       		this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			} else {
				if(tieneColumnasOcultas) {
					this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
					this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill=GridBagConstraints.NONE;
					this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.WEST;
					
					this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(true)%>;		
					this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
					
					<%if(!GetPanelColSpanGlobalTableFromPropertiesC(TablaBase).Equals("")) {%>
					this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridwidth=<%=GetPanelColSpanGlobalTableFromPropertiesC(TablaBase)%>;
					<%}%>
				
					this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>, gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
				
					this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
				}
			}					
			
			
			
			<%if(!GetPanelSinAccionesFormularioTableFromPropertiesC(TablaBase)){%>
			
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(true)%>;//<%=intPosicionYPanelsRelaciones%>;		
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.CENTER;//WEST;
			
			<%if(!GetPanelColSpanGlobalTableFromPropertiesC(TablaBase).Equals("")) {%>
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridwidth=<%=GetPanelColSpanGlobalTableFromPropertiesC(TablaBase)%>;
			<%}%>
			
			
			this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);							
			<%}%>
			
			
			
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			<%if(blnEsGuardarRelaciones){%>
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill=GridBagConstraints.NONE;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.CENTER;//WEST;
			<%}%>
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = <%=GetIGridRelaciones(false)%>;//<%=intPosicionYPanelsRelaciones%>;		
	        this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
	        
			<%if(!GetPanelColSpanGlobalTableFromPropertiesC(TablaBase).Equals("")) {%>
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridwidth=<%=GetPanelColSpanGlobalTableFromPropertiesC(TablaBase)%>;
			<%}%>
			
			this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);							
			
	        //this.setContentPane(jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>);
			
		//} else {
			//DISENO_DETALLE COMENTAR Y
			//DISENO_DETALLE(Solo Descomentar Seccion Inferior)
			//NOTA-DISENO_DETALLE(Si cambia lo de abajo, cambiar lo comentado, Al final no es lo mismo)
			
			/*
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>=   new JScrollPane<%=strSwtMe%>(this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(iWidthScroll,iHeightScroll));
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(iWidthScroll,iHeightScroll));
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(iWidthScroll,iHeightScroll));
			
			
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyPrincipal++;		
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill = GridBagConstraints.BOTH;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.ipady = this.getSize().height-yOffset*3;
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor = GridBagConstraints.WEST;
			
			this.jContentPane.add(this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			//ACCIONES FORMULARIO
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy =iGridyPrincipal++;		
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
			
			this.jContentPane.add(this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);			
			
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy =iGridyPrincipal++;		
			this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
			
			this.jContentPane.add(this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);									
			*/
		//}								
			
		//DISENO_DETALLE-(Descomentar)
		/*
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyPrincipal++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
							
		this.jContentPane.add(this.jPanelCampos<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyPrincipal++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
							
		this.jContentPane.add(this.jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		
			
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy =iGridyPrincipal++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx =0;
			
		this.jContentPane.add(this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		*/
		
		<%} else {%>
        
		<%}%>
			
     	//pack();
		
		<%if(!blnTieneColumnasReporte || GetSinUsoFuncionalidadDatosTableFromPropertiesC(TablaBase)) {%>
		
		this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
		

		<%=strCommentMinCodigoWebIni%>    	
		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
		//this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
		//this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);		
		<%=strCommentMinCodigoWebFin%>
		
		
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		//this.jTtoolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			
		this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
		
		<%if(!blnEsProceso) {%>
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		this.jMenuItemDetalleMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);		
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		<%}%>
		<%}%>				
		
		//return this.jScrollPanelDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>;//jContentPane;
		
		return jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>;
    } 
	
	<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
		<%=GetCargarPanelsRelacionadas(TablaBase,true,false,false)%>
	<%}%>
	
	<%=GetCargarControllersForeignKeys(true,false)%>
	
	<%=GetCargarNavegacionTablesRelacionadasClasesRelacionadas(TablaBase)%>
	
	<%=GetCargarControllersTablesForeignKeys()%>
	
	<%//Trace.WriteLine("FIN");%>
	
	/*
	case "CONTROL_BUSQUEDA":
		sKeyName="F3";
	case "CONTROL_BUSCAR":
		sKeyName="F4";
	case "CONTROL_ARBOL":
		sKeyName="F5";
	case "CONTROL_ACTUALIZAR":
		sKeyName="F6";
	sKeyName="N";					
	*/
}
