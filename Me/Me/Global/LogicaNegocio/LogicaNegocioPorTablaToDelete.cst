<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="TablasBaseForReporte" Type="SchemaExplorer.TableSchemaCollection" Category="Context" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="TiposGeneracion" Type="System.String" Default=" " Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="GenerarMe" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>

<script runat="template">
public String GetSetCamposEntityImportacion() {
	String sUtil="";
	
	//sUtil+="\r\n\t"+Tabs+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strIdGetSet+"(1L);";						
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){ 
		if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired
			//||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow
			|| GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])){continue; }
			
 			sUtil+="\r\n\t\t\t\t"+GetValueDefaultParameterClaseC(TablaBase.Columns[i],"","this."+GetNombreClaseObjetoC(TablaBase.ToString()),true,true,false);
	}
	
	return sUtil;
}



public string GetExtendClase()
{
	String strExtendClase="";
	
	strExtendClase+=" extends GeneralEntityLogic";
	
	/*
	if(blnConAdditional) {
		strExtendClase+=" extends "+GetNombreClase(TablaBase.ToString())+"LogicAdditional";	
	} else {
		strExtendClase+=" extends GeneralEntityLogic";	
	}
	*/
	
	
	return strExtendClase;
}

public  String GetFuncionesCargarCombosFuncionestrForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;

	bool blnVerificarDeshabilitarFk=false;
	String strVerificarDeshabilitarFk="";
	bool blnNoLoadFk=false;
	String strComentarioNoLoadFk="";
	String strCommentForeingKeyData="";
	
	if(!blnNoStandardTableFromProperties) {	
		
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				strCommentForeingKeyData="";
				strComentarioNoLoadFk="";
				blnNoLoadFk=GetConNoLoadForeignKeyColumnFromPropertiesC(column);
				
				if(blnNoLoadFk) {
					strComentarioNoLoadFk="//";	
				}
				//SI FUNCIONA PERO NO SIEMPRE				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				//FUNCIONA SIEMPRE
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
		
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				//SI EXISTE COINCIDENCIA Y AL QUERER CARGAR TODOS LOS FK SE DESHABILITA Y SE OCULTA
				blnVerificarDeshabilitarFk=VerificarClaseFkBusquedaTablaC(TablaBase,GetNombreCompletoClaseRelacionadaFromColumn(column) );
				
				if(blnVerificarDeshabilitarFk) {
					strVerificarDeshabilitarFk="";
				} else {
					strVerificarDeshabilitarFk="//";	
				}
				
				//sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(String sFinalQuery)throws Exception\r\n";
				//sVariablesArray+="\t{\r\n";
				//sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				sVariablesArray+="\r\n\r\n\t\t\t"+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">();\r\n";
				
				//NULO
				if(column.AllowDBNull) {
					//sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo = new "+GetNombreClaseRelacionadaFromColumn(column)+"();\r\n";
					//sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo.set"+strField_+"sCodigo(Constantes.SCAMPONONE);\r\n";
				}				
			
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n";
				sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.setConnexion(this.connexion);\r\n";
				
				if(GetConCargarTodoFkColumnFromPropertiesC(column) || EsColumnaVariableGlobalDataBaseFromPropertiesC(column,true,false) 
					|| TieneColumnaEsDefectoC(tableSchema)) {
						
					strCommentForeingKeyData="//";					
				}
				
				sVariablesArray+="\t\t\t"+strCommentForeingKeyData+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(true);\r\n";
				
				String strQueryStringValoresLista="sFinalQuery";
				
				if(VerificarColumnaCatalogoGeneralC(column)) {
					sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"=\"\";\r\n";
					sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"="+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+column.Name.ToUpper()+"CODIGO);\r\n\r\n";
					
					strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString());
				}
				
				/*
				sVariablesArray+="\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				*/
				
				//if busqueda session
				//sVariablesArray+="\r\n\r\n\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
				
				//sVariablesArray+="\t\t\t\t//ARCHITECTURE";
				//sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+"if(!finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +".equals(\"NONE\")) {\r\n";
				sVariablesArray+="\t\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"s(finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +",new Pagination());\r\n";
				sVariablesArray+="\t\t\t\t"+strComentarioParaEjb+""+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();\r\n";				
				sVariablesArray+="\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+"}\r\n\r\n";
				
				//NULO
				if(column.AllowDBNull) {
					//sVariablesArray+="\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add(0, "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo);\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+""+GetNombreClaseObjetoC(TablaBase.ToString())+strForeignKey+".set"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+");\r\n";
				/*
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				
				sVariablesArray+="\r\n\t\t\t\t}\r\n\r\n";
				*/
				
				
				//sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				
				if(!blnVerificarDeshabilitarFk) {
					/*
					sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
					sVariablesArray+="\r\n\r\n\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(false);";		
					sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
					*/
				}
				
				//if busqueda session
				/*
				sVariablesArray+="\r\n\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE\r\n";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.getEntityWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"());";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
				
				//end else
				sVariablesArray+="\r\n\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		bool blnAdmiteNulos=false;
		int cont=0;
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				cont++;
				blnAdmiteNulos=false;
				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				//SI EXISTE COINCIDENCIA Y AL QUERER CARGAR TODOS LOS FK SE DESHABILITA Y SE OCULTA
				blnVerificarDeshabilitarFk=VerificarClaseFkBusquedaTablaC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()) );
				
				if(blnVerificarDeshabilitarFk) {
					strVerificarDeshabilitarFk="";
				} else {
					strVerificarDeshabilitarFk="//";	
				}
				
				sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString()) +"s"+strForeignKey+"Lista()throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				sVariablesArray+="\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">();\r\n\r\n";
				
				if(blnAdmiteNulos) {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Nulo = new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic = new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic();\r\n\r\n";
				
				String strQueryStringValoresLista="\"\"";			
				if(VerificarTablaValorCatalogoGeneralC(tableSchemaForeignKey)) {
					sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"=\"\";\r\n";
					sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"="+GetNombreClase(tableSchemaForeignKey.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+cont.ToString()+"CODIGO);\r\n\r\n";
					
					strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString());
				}
				
				sVariablesArray+="\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
				
				
				sVariablesArray+="\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"()) {\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.getTodos"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.get"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"s();";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				
				sVariablesArray+="\r\n\t\t\t\t}";
				
				if(blnAdmiteNulos) {
					sVariablesArray+="\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()  +"s"+strForeignKey+".add(0, "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Nulo);\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				
				if(!blnVerificarDeshabilitarFk) {
					sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
					sVariablesArray+="\r\n\r\n\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(false);";		
					sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
				}
				
				String strParametrosNoStandardSession="";//GetParametrosCargarCombosFuncionestrForeignKeys(tableSchemaForeignKey);
				//if busqueda session
				sVariablesArray+="\r\n\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE\r\n";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				//GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.getEntityWithConnection("+strParametrosNoStandardSession+");\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.get"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"());";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				
				
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
				
				//end else
				sVariablesArray+="\r\n\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";									
		}
	}
	
	return sVariablesArray;
}

public String GetCommentVersionRow() 
	{
		String strCommentVersionRow=string.Empty;
			
		strCommentVersionRow=strGlobalTablaNoStandardComment;
			
		if(GetNoVersionRowTableFromPropertiesC(TablaBase)||GetNoStandardTableFromPropertiesC(TablaBase)) {
			strCommentVersionRow="//";
		}
		
		return strCommentVersionRow;
	}
	
public String GetDefinicionVariableClasesReportesGetSet() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
			strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
			strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
			strEndFuncion+="";
			strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{
				strFuncion+="\r\n\r\n\tpublic "+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> get"+GetNombreClase(TablasBaseForReporte[i].ToString())+"s() throws Exception {";		
					strFuncion+="\r\n\t\t//this.quitar"+GetNombreClase(TablasBaseForReporte[i].ToString())+"sNulos();";
					
					strFuncion+="\r\n\r\n\t\t//"+GetNombreClase(TablaBase.ToString())+"LogicAdditional.check"+GetNombreClase(TablasBaseForReporte[i].ToString())+"ToGets("+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s,this.datosCliente,this.arrDatoGeneral);";
					
					strFuncion+="\r\n\r\n\t\t//for ("+GetNombreClase(TablasBaseForReporte[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"Local: "+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s ) {";
						strFuncion+="\r\n\t\t\t//"+GetNombreClase(TablaBase.ToString())+"LogicAdditional.update"+GetNombreClase(TablasBaseForReporte[i].ToString())+"ToGet("+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"Local,this.arrDatoGeneral);";
					strFuncion+="\r\n\t\t//}";
					
					strFuncion+="\r\n\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s;";
				strFuncion+="\r\n\t}";
				
				strFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseForReporte[i].ToString())+"s("+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> new"+GetNombreClase(TablasBaseForReporte[i].ToString())+"s) {";
					strFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s = new"+GetNombreClase(TablasBaseForReporte[i].ToString())+"s;";
				strFuncion+="\r\n\t}";
				
				//strFuncion+="\r\n\t\t\tthis."+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s= new "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+">"+strTypeNewCollectionEnd+";";
								
				//strFuncion+="\r\n\r\n\tvoid getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";
				//strFuncion+="\r\n\tvoid getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";			 			
			}
								
			return strFuncion; 
	}
	
public String GetInicializacionVariableClasesReportes() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
				strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
				strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
				strEndFuncion+="";
			strFuncion+="\r\n\r\n\t\t\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{
				strFuncion+="\r\n\t\t\tthis."+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s= new "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+">"+strTypeNewCollectionEnd+";";
				
				//strFuncion+="\r\n\tprotected "+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> "+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s;";
				
				//strFuncion+="\r\n\r\n\tvoid getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";
				//strFuncion+="\r\n\tvoid getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";			 			
			}
								
			return strFuncion; 
	}
	
public String GetDefinicionVariableClasesReportes() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
				strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
				strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
				strEndFuncion+="";
			strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{
				strFuncion+="\r\n\tprotected "+strTypeCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+"> "+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s;";

				//strFuncion+="\r\n\r\n\tvoid getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";
				//strFuncion+="\r\n\tvoid getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";			 			
			}
								
			return strFuncion; 
	}
		
		
public String GetFuncionesTablasClasesReportes() 
{
	String strFuncion=string.Empty;
	String strTablaClaseRelacionada=string.Empty;
	String strInitFuncion="public ";
		strInitFuncion+="";
	String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
		strInit2Funcion+="";
	String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
		strEndFuncion+="";		
	strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
	for(int i=0;i<TablasBaseForReporte.Count;i++)
	{
		strFuncion+="\r\n\r\n\tpublic  void getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {";	
		strFuncion+="\r\n\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s = new  "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+">"+strTypeNewCollectionEnd+";";
					
		strFuncion+="\r\n\r\n\t\ttry {";
		strFuncion+="\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";			
				
		strFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(connexion,sQuerySelect, queryWhereSelectParameters);";    	       	 
				
		strFuncion+="\r\n\r\n\t\t\tconnexion.commit();";
				
		strFuncion+="\r\n\r\n\t\t} catch(Exception e) {";
		strFuncion+="\r\n\t\t\tconnexion.rollback();";
				
		strFuncion+="\r\n\r\n\t\t\tFunciones.manageException(logger,e);";
		strFuncion+="\r\n\t\t\tthrow e;";
				
		strFuncion+="\r\n\r\n\t\t} finally {";
		strFuncion+="\r\n\t\t\tconnexion.close();";				
		strFuncion+="\r\n\t\t}";
		strFuncion+="\r\n\t}";
	
		//SIN CONNECTION
		strFuncion+="\r\n\r\n\tpublic  void getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {";	
		strFuncion+="\r\n\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s = new  "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+">"+strTypeNewCollectionEnd+";";
					
		strFuncion+="\r\n\r\n\t\ttry {";
		strFuncion+="\r\n\t\t\t//connexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";			
				
		strFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(connexion,sQuerySelect, queryWhereSelectParameters);";    	       	 
				
		strFuncion+="\r\n\r\n\t\t\t//connexion.commit();";
				
		strFuncion+="\r\n\r\n\t\t} catch(Exception e) {";
		strFuncion+="\r\n\t\t\t//connexion.rollback();";
				
		strFuncion+="\r\n\r\n\t\t\tFunciones.manageException(logger,e);";
		strFuncion+="\r\n\t\t\tthrow e;";
				
		strFuncion+="\r\n\r\n\t\t} finally {";
		strFuncion+="\r\n\t\t\t//connexion.close();";				
		strFuncion+="\r\n\t\t}";
		strFuncion+="\r\n\t}";
		
	
	
		strFuncion+="\r\n\r\n\tpublic  void getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {";	
		strFuncion+="\r\n\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s = new  "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+">"+strTypeNewCollectionEnd+";";
				
		strFuncion+="\r\n\r\n\t\ttry {";
		strFuncion+="\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";			
				
		strFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(connexion,sQuerySelect, queryWhereSelectParameters);";    	       	 
				
		strFuncion+="\r\n\r\n\t\t\tconnexion.commit();";
				
		strFuncion+="\r\n\r\n\t\t} catch(Exception e) {";
		strFuncion+="\r\n\t\t\tconnexion.rollback();";
				
		strFuncion+="\r\n\r\n\t\t\tFunciones.manageException(logger,e);";
		strFuncion+="\r\n\t\t\tthrow e;";
				
		strFuncion+="\r\n\r\n\t\t} finally {";
		strFuncion+="\r\n\t\t\tconnexion.close();";				
		strFuncion+="\r\n\t\t}";
		strFuncion+="\r\n\t}";
		
		//SIN CONNECTION
		strFuncion+="\r\n\r\n\tpublic  void getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {";	
		strFuncion+="\r\n\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s = new  "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseForReporte[i].ToString())+">"+strTypeNewCollectionEnd+";";
				
		strFuncion+="\r\n\r\n\t\ttry {";
		strFuncion+="\r\n\t\t\t//connexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";			
				
		strFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseForReporte[i].ToString())+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(connexion,sQuerySelect, queryWhereSelectParameters);";    	       	 
				
		strFuncion+="\r\n\r\n\t\t\t//connexion.commit();";
				
		strFuncion+="\r\n\r\n\t\t} catch(Exception e) {";
		strFuncion+="\r\n\t\t\t//connexion.rollback();";
				
		strFuncion+="\r\n\r\n\t\t\tFunciones.manageException(logger,e);";
		strFuncion+="\r\n\t\t\tthrow e;";
				
		strFuncion+="\r\n\r\n\t\t} finally {";
		strFuncion+="\r\n\t\t\t//connexion.close();";				
		strFuncion+="\r\n\t\t}";
		strFuncion+="\r\n\t}";
		
		//strFuncion+="\r\n\r\n\tvoid getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";
		//strFuncion+="\r\n\tvoid getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";			 			
	}
								
	return strFuncion; 
}
	
public bool TieneComentarioAuditoria(TableSchema tableSchema) {
	bool blnTieneComentarioAuditoria=false;
	
	if(strGlobalAuditoriaComment=="//"||GetAuditoriaCommentTableFromProperties(tableSchema)=="//") {
		blnTieneComentarioAuditoria=true;
	}
	
	return blnTieneComentarioAuditoria;
}
		
public String GetAddClassesRelacionadas() 
		{
			String strTablaClaseRelacionada=GetAddClassesRelacionadasC(TablaBase);
			
			/*
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			bool useClasesSiNo=GetUseClasesSiNoPropertyFromPropertiesC(TablaBase);
			TableSchema tablaRelacionadaObjetivo=null;
			
			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {
				
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
										
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					} else {
						tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
					}
						
					if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
						continue;					
					}
				
				
					strTablaClaseRelacionada+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ ".class));";
									
					
				}
			}
			*/
			
			return strTablaClaseRelacionada; 
		}

public String GetAddClassesRelacionadasInclude() 
		{
			String strTablaClaseRelacionada=GetAddClassesRelacionadasIncludeC(TablaBase);
			
			/*
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			
			bool useClasesSiNo=GetUseClasesSiNoPropertyFromPropertiesC(TablaBase);			
			TableSchema tablaRelacionadaObjetivo=null;
			
			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {														
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					} else {
						tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
					}
						
					if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
						continue;					
					}
					
					//strTablaClaseRelacionada+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ ".class));";
					
					strTablaClaseRelacionada+="\r\n\t\t\t\tfor(Classe clas:classesP)";
					strTablaClaseRelacionada+=" {\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))";
					strTablaClaseRelacionada+=" {\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));";
					strTablaClaseRelacionada+="\r\n\t\t\t\t\t}\r\n";
					strTablaClaseRelacionada+="\t\t\t\t}\r\n";
					
				}
			}		
			*/
			
			return strTablaClaseRelacionada; 
		}

public String GetAddClassesRelacionadasExclude() 
		{
			String strTablaClaseRelacionada=GetAddClassesRelacionadasExcludeC(TablaBase);
			
			/*
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			bool blnExiste=false;
			
			
			bool useClasesSiNo=GetUseClasesSiNoPropertyFromPropertiesC(TablaBase);
			TableSchema tablaRelacionadaObjetivo=null;

			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
				{
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					} else {
						tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
					}
						
					if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
						continue;					
					}
					
					//strTablaClaseRelacionada+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ ".class));";
					if(!blnExiste)
					{
						blnExiste=true;
					}
					
					strTablaClaseRelacionada+="\r\n\t\t\t\texiste=false;\r\n";		
					strTablaClaseRelacionada+="\r\n\t\t\t\tfor(Classe clas:classesP)";
					strTablaClaseRelacionada+=" {\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))";
					strTablaClaseRelacionada+=" {\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t\texiste=true;\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t\tbreak;\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t}\r\n";
					strTablaClaseRelacionada+="\t\t\t\t}\r\n";
							
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(!existe)";
					strTablaClaseRelacionada+=" {\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));";
					strTablaClaseRelacionada+="\r\n\t\t\t\t}\r\n";
				}
				
				if(blnExiste)
				{
					strTablaClaseRelacionada="\r\n\t\t\t\tBoolean existe=false;\r\n"+strTablaClaseRelacionada;			
				}
			}
			*/
			
			return strTablaClaseRelacionada; 
		}
		
public String GetAddClassesForeignKey()
	{
		String strClassesForeignKey=GetAddClassesForeignKeyC(TablaBase);
		/*
		TableSchema	tableSchema;
		
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
										
					if(columnSchema.IsForeignKeyMember)
					{
						tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
						strClassesForeignKey+="\r\n\t\t\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchema.ToString())+".class));";
					}
				}
		*/
		
		return strClassesForeignKey;
	}

public String GetAddClassesForeignKeyInclude()
	{
		String strClassesForeignKey=GetAddClassesForeignKeyIncludeC(TablaBase);
		/*
		TableSchema	tableSchema;
		
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
										
					if(columnSchema.IsForeignKeyMember)
					{
						tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
						
						strClassesForeignKey+="\r\n\t\t\t\tfor(Classe clas:classesP)";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchema.ToString())+".class))";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchema.ToString())+".class));";
						strClassesForeignKey+="\r\n\t\t\t\t\t}\r\n";
						strClassesForeignKey+="\t\t\t\t}\r\n";
					}
				}
		*/
		
		return strClassesForeignKey;
	}

public String GetAddClassesForeignKeyExclude()
	{
		String strClassesForeignKey=GetAddClassesForeignKeyExcludeC(TablaBase);
		
		/*
		TableSchema	tableSchema;
		bool blnExiste=false;
		
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
										
					if(columnSchema.IsForeignKeyMember)
					{
						if(!blnExiste)
						{
							blnExiste=true;
						}
						
						tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
						
						strClassesForeignKey+="\r\n\t\t\t\texiste=false;\r\n";
						strClassesForeignKey+="\r\n\t\t\t\tfor(Classe clas:classesP)";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchema.ToString())+".class))";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\t\texiste=true;\r\n";
						strClassesForeignKey+="\t\t\t\t\t\tbreak;\r\n";
						strClassesForeignKey+="\t\t\t\t\t}\r\n";
						strClassesForeignKey+="\t\t\t\t}\r\n";
						
						strClassesForeignKey+="\r\n\t\t\t\tif(!existe)";
						strClassesForeignKey+=" {\r\n";
						strClassesForeignKey+="\t\t\t\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchema.ToString())+".class));";
						strClassesForeignKey+="\r\n\t\t\t\t}\r\n";
					}
				}
		
		if(blnExiste)
		{
			strClassesForeignKey="\r\n\t\t\t\tBoolean existe=false;\r\n"+strClassesForeignKey;			
		}
		*/
		
		return strClassesForeignKey;
	}
	
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String strFuncion=string.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			strFuncion+="\r\n\r\n\tpublic String getXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()throws Exception";
			strFuncion+=" {";
			strFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			strFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			strFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			strFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			strFuncion+="\r\n\t\ttry"; 
			strFuncion+=" {";
			strFuncion+="\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";
			
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			strFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			strFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\");";
			strFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\");";	    
				
			strFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			strFuncion+=" {";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			strFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.deepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				strFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					strFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			strFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\");";			
			strFuncion+="\r\n\t\t\t\t}\r\n";
					
			strFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\");";
					
			strFuncion+="\r\n\t\t\tconnexion.commit();";
			strFuncion+="\r\n\t\t}"; 
			strFuncion+=" catch(Exception e)"; 
			strFuncion+=" {";
			strFuncion+="\r\n\t\t\tconnexion.rollback();\r\n\t\t\tFunciones.manageException(logger,e);";
			strFuncion+="\r\n\t\t\tthrow e;";
			strFuncion+="\r\n\t\t}";
			strFuncion+=" finally";
			strFuncion+=" {";
			strFuncion+="\r\n\t\t\tconnexion.close();";
			strFuncion+="\r\n\t\t}";
				
			strFuncion+="\r\n\t\t\treturn Funciones.validarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.TABLENAME);";
				
			strFuncion+="\r\n\t}";
		}
	}
	
	return strFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				strInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new "+strTypeNewCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">"+strTypeNewCollectionEnd+";" ;																
																																																		
				}													
			}
								
			return strInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					strInitFuncion+="\r\n\tprivate "+""+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
					/*																																			
					strInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
					*/					
				}													
			}
								
			return strInitFuncion; 
		}

public String GetDefinicionVariableClasesCompuestosGetSet() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					/*
					strInitFuncion+="\r\n\tprivate "+"ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
					*/																																			
					strInitFuncion+="\r\n\r\n\tpublic "+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";	
					
					strInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s("+strTypeCollection+"<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					strInitFuncion+=" {";	
					strInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					strInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return strInitFuncion; 
	}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			String strParametroCompuesto="";
			String strParametroCompuesto2="";
			String strParametroCompuestoFinal2="\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
							strParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							strParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"DataAccess.getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							strParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							strParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"DataAccess.getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							strParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";

							strInitFuncion+="\r\n\tpublic  void  get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws SQLException,Exception"; 
							strInitFuncion+="\r\n\t{\r\n\t\t";
							strInitFuncion+="\r\n\t\ttry {\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";		
							strInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							strInitFuncion+=strParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							strInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);\r\n\t\t\t";
							strInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntities" +strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							strInitFuncion+="\r\n\t\t\tconnexion.commit();\r\n\t\t} catch(SQLException e) {\r\n\t\t\tconnexion.rollback();";
							strInitFuncion+="\r\n\t\t\tthrow e;\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tconnexion.rollback();\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tconnexion.close();";	
							strInitFuncion+="\r\n\t\t}\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						
						

						
						if(!indexSchema.IsPrimaryKey)
						{
							
						
							strParametersFuncion="";
							strParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								strInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();\r\n";
								strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
								strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.commit();";
								strEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									strInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									strInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();\r\n";
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
									
									strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
											
								}
								else
								{
									strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									strBodyFuncion+=strParametroCompuesto;
									
									strBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									strBodyFuncion+="\r\n\r\n\t\t\t"+strParametroCompuesto2;
									strBodyFuncion+=strParametroCompuestoFinal2;
								}
								
								strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.commit();";
								strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tconnexion.close();\r\n\t\t}\r\n\t}\r\n";
							
							}	
							int count=1;	
							strParametersFuncion="";
							strParametersNameFuncion="";	
							strParameterSelection="";
							
							bool esUnico=false;
							bool esRanges=false;
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									esRanges=true;
								} else {
									esRanges=false;
								}
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true,false,esRanges,false);
										}
										else
										{
											strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true,false,esRanges,false);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											strParametersFuncion+=",";
											strParametersNameFuncion+=",";	
											
											strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+" ";																																			
						}
					}
				}													
			}
								
			return strInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			String strTablaClaseRelacionada3="";
			String strTablaClaseRelacionada4="";
			
			String strFuncionInit="\r\n\tpublic void save"+GetNombreClase(TablaBase.ToString())+"RelacionesWithConnection("+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString());
			String strFuncionMiddle=")throws SQLException,Exception {";
			strFuncionMiddle+="\r\n\t\ttry {\r\n\t\t\tthis.getNewConnexionToDeep();\r\n\t";
			String strFuncionEnd="\r\n\r\n\t\t\tconnexion.commit();\r\n\r\n\t\t} catch(SQLException e) {\r\n\t\t\tconnexion.rollback();\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tconnexion.rollback();\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\r\n\t\t} finally {\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}\r\n\t}";
			
			//HERE=true;
			Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);			
			//HERE=false;
			
			//Trace.WriteLine(TablaBase.Owner+"-"+TablaBase.Name);
			
			/*
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
				Trace.WriteLine(collectionInfo.SecondaryTable);
			}
			*/
		
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			TableSchema tablaRelacionadaObjetivo;
			
			if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {								
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					
					//NO FUNCIONA EN DESORDEN RELACIONES
					/*
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
						//continue;
					} else {
						strNombreAdicional="";
						arrayListRelaciones.Add(collectionInfo.SecondaryTable);
					}
					*/
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
						strTablaClaseRelacionada4+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
						
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
						//Trace.WriteLine(collectionInfo.SecondaryTable);
						strTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
						strTablaClaseRelacionada4+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString()) +".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional + "s);";
					}
				}
			}
			
			bool blnEsPrimero=true;
			
			arrayListRelaciones=new ArrayList();
			strNombreAdicional="";
			
			if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
				{
					
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
					//NO FUNCIONA EN DESORDEN RELACIONES
					/*
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
						//continue;
					} else {
						strNombreAdicional="";
						arrayListRelaciones.Add(collectionInfo.SecondaryTable);
					}
					*/
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
					{
						if(!blnEsPrimero) {
						strTablaClaseRelacionada3+=",";
						}
						
						blnEsPrimero=false;
						
						strTablaClaseRelacionada3+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					}
					else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						if(!blnEsPrimero) {
						strTablaClaseRelacionada3+=",";
						}
						
						blnEsPrimero=false;
						
						strTablaClaseRelacionada3+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
					}/*
					else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
					{
						if(!blnEsPrimero) {
						strTablaClaseRelacionada3+=",";
						}
						
						blnEsPrimero=false;
						
						strTablaClaseRelacionada3+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
					}*/
				}
			}
			
			String strTablaClaseRelacionada2="";
			
			strTablaClaseRelacionada2+=strTablaClaseRelacionada4;
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.validarSaveRelaciones("+GetNombreClaseObjetoC(TablaBase.ToString()) +",this)) {";
			
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()"+")";
			strTablaClaseRelacionada2+=" {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"();";
			strTablaClaseRelacionada2+="\r\n\t\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles("+strTablaClaseRelacionada3+");";
			strTablaClaseRelacionada2+="\r\n\r\n\t\t\t\t}";
			strTablaClaseRelacionada2+=" else if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted())";
			strTablaClaseRelacionada2+=" {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles("+strTablaClaseRelacionada3+");";
			strTablaClaseRelacionada2+="\r\n\t\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"();";
			strTablaClaseRelacionada2+="\r\n\t\t\t\t}";
			
			strTablaClaseRelacionada2+="\r\n\t\t\t} else {";
			strTablaClaseRelacionada2+="\r\n\t\t\t\tthrow new Exception(\"LOS DATOS SON INVALIDOS\");";
			strTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada2+strFuncionEnd;
			return strTablaClaseRelacionada; 
		}
		
	public String GetMaintenanceTablasClasesRelacionadasDetalles(TableSchema tableSchema,bool esClasePrincipal,String sTablAcumulado) {
			String strTablaClaseRelacionada="";
			String strFuncionInit="\r\n\tprivate void save"+GetNombreClase(tableSchema.ToString())+"RelacionesDetalles(";
			String strFuncionMiddle=")throws Exception {\r\n";
			strFuncionMiddle+="\t\ttry {\r\n\t";
			String strFuncionEnd="\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(tableSchema,false);
			System.Collections.Hashtable tablasRelacionadasHijo=new Hashtable();
			
			bool blnEsPrimero=true;
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			TableSchema tablaRelacionadaObjetivo;
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			if(!esClasePrincipal) {
				strFuncionInit="";
				strFuncionMiddle="";
				strFuncionEnd="";
			}
			
			if(esClasePrincipal) {
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					} else {
						tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
					}
									
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					//NO FUNCIONA EN DESORDEN RELACIONES
					/*
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
						//continue;
					} else {
						strNombreAdicional="";
						arrayListRelaciones.Add(collectionInfo.SecondaryTable);
					}
					*/
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						if(!blnEsPrimero) {
						strTablaClaseRelacionada+=",";
						}
						
						blnEsPrimero=false;
						
						strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
						
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
						if(!blnEsPrimero) {
						strTablaClaseRelacionada+=",";
						}
						
						blnEsPrimero=false;
						strTablaClaseRelacionada+=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
					}
				}
			}
			
			String strTablaClaseRelacionada2="";
			
			bool blnExisteDetalles=false;
			
			arrayListRelaciones=new ArrayList();
			strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
												
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				//NO FUNCIONA EN DESORDEN RELACIONES
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					//continue;
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					blnExisteDetalles=true;
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+sTablAcumulado+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strNombreAdicional+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+sTablAcumulado+"if("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null) {";										
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(tableSchema.ToString())+"Actual);";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+"}\r\n";
					
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setDatosCliente(this.datosCliente);";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"();";
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
					blnExisteDetalles=true;
					tablasRelacionadas=GetTablasRelacionadas(collectionInfo.SecondaryTableSchema,false);
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+sTablAcumulado+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strNombreAdicional+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					if(esClasePrincipal) {
						strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s);";
					} else {
						strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+sTablAcumulado+"if("+GetNombreClaseObjetoC(tableSchema.ToString())+".get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s()==null){";
						strTablaClaseRelacionada2+="\r\n\t\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC(tableSchema.ToString())+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s(new ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">());";
						strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+"}\r\n";
						
						strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC(tableSchema.ToString())+".get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s());";		
					}
					
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.setConnexion(this.getConnexion());";
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.setDatosCliente(this.datosCliente);";
						
					strTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+sTablAcumulado+"for("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s()) {";					
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetParameterClaseDeepRelacionadoC(collectionInfo)+"(id"+GetNombreClaseC(tableSchema.ToString())+"Actual);";																			
					if(tablasRelacionadas.Count>0) {
						strTablaClaseRelacionada2+="\r\n\r\n\t\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.set"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
						strTablaClaseRelacionada2+="\r\n\t\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"();";
						
						//PARA NIETOS
						Trace.WriteLine(collectionInfo.SecondaryTableSchema.Name);
						
						if(!collectionInfo.SecondaryTableSchema.Name.Equals(tableSchema.Name)) {
							strTablaClaseRelacionada2+=GetMaintenanceTablasClasesRelacionadasDetalles(collectionInfo.SecondaryTableSchema,false,sTablAcumulado+"\t");
						}
					}				
					strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+"}\r\n";
					
					if(tablasRelacionadas.Count<=0) {
						strTablaClaseRelacionada2+="\r\n\t\t\t"+sTablAcumulado+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s();";
					}
				}
			}
			
			if(blnExisteDetalles){
				if(esClasePrincipal) {
					strTablaClaseRelacionada2="\r\n\r\n\t\t\t"+sTablAcumulado+"Long id"+GetNombreClaseC(tableSchema.ToString())+"Actual=this.get"+GetNombreClaseC(tableSchema.ToString())+"().get"+strIdGetSet+"();"+strTablaClaseRelacionada2;
				} else {
					strTablaClaseRelacionada2="\r\n\r\n\t\t\t"+sTablAcumulado+"Long id"+GetNombreClaseC(tableSchema.ToString())+"Actual="+GetNombreClaseObjetoC(tableSchema.ToString())+".get"+strIdGetSet+"();"+strTablaClaseRelacionada2;
				}
			}
			
			strTablaClaseRelacionada=strFuncionInit+strTablaClaseRelacionada+strFuncionMiddle+strTablaClaseRelacionada2+strFuncionEnd;
			
			return strTablaClaseRelacionada; 
	}
		
public String SetClasesRelacionadasForeigKeysisDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
						
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",connexion);\r\n";											
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysisDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;							
			String strInitFuncion="get"+GetPrefijoRelacionC();
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadasave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
						strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {"+ strTablaClaseRelacionadasave+"\t\t\t\tcontinue;\r\n\t\t\t}\r\n";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					strTablaClaseRelacionadasave="\r\n\t\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchemaForeignKey.ToString())+".class)) {"+ strTablaClaseRelacionadasave+"\t\t\t}\r\n";
										
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysisDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;						
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Classe clas:clases)\r\n\t\t{";
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadasave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
						strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor;
						strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {"+ strTablaClaseRelacionadasave+"\t\t}\r\n";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					
					strTablaClaseRelacionadasave="\r\n\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchemaForeignKey.ToString())+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {"+ strTablaClaseRelacionadasave+"\t\t}\r\n";										
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			if(!blnNoStandardTableFromProperties) {
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
						strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
						strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
					
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic= new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";											
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;							
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();					
			
			if(!blnNoStandardTableFromProperties) {
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadasave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
						
						strTablaClaseRelacionadaLogicisDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
						strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\t\t\t\t";
					
						strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {"+ strTablaClaseRelacionadasave+strTablaClaseRelacionadaLogicisDeepSave+"\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					strTablaClaseRelacionadasave="\r\n\t\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",connexion);\r\n";
						
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic= new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",isDeep,deepLoadType,clases);"+"\t\t\t\t";
					
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchemaForeignKey.ToString())+".class)) {"+ strTablaClaseRelacionadasave+strTablaClaseRelacionadaLogicisDeepSave+"\r\n\t\t\t}\r\n";
										
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoisDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadasave=string.Empty;	
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			String strTablaClaseRelacionadaLogic=string.Empty;
			String strInitFuncion="get"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();	
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadasave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
						
						strTablaClaseRelacionadaLogicisDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
						strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
					
						strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor+"\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {"+ strTablaClaseRelacionadasave+strTablaClaseRelacionadaLogicisDeepSave+"\t\t}";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					
					strTablaClaseRelacionadasave="\r\n\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",connexion);\r\n";
						
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic= new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
					
					strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor+"\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchemaForeignKey.ToString())+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {"+ strTablaClaseRelacionadasave+strTablaClaseRelacionadaLogicisDeepSave+"\t\t}";										
				}
			}
			
			return strTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysisDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
			
			if(!blnNoStandardTableFromProperties) {						
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";						
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC(tableSchemaForeignKey.ToString())+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";							
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysisDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t\tcontinue;\r\n\t\t\t}\r\n";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC(tableSchemaForeignKey.ToString())+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseC(tableSchemaForeignKey.ToString()))+".class)) {\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t}\r\n";							
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysisDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor;
						strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n"+ strTablaClaseRelacionadaReturn+"\t\t}";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					
					strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC(tableSchemaForeignKey.ToString())+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\texiste=false;\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchemaForeignKey.ToString())+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n"+ strTablaClaseRelacionadaReturn+"\t\t}";										
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						strTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
						strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
					
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC(tableSchemaForeignKey.ToString())+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic= new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";												
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoisDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();		
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						
						strTablaClaseRelacionadaLogicisDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
						strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\t\t\t\t";
					
						strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicisDeepSave+"\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey)) {
						continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC(tableSchemaForeignKey.ToString())+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						
					strTablaClaseRelacionadaLogicisDeepSave="\t\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic= new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",isDeep,deepLoadType,clases);"+"\t\t\t\t";
					
					strTablaClaseRelacionada+="\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC(tableSchemaForeignKey.ToString())+".class)) {\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicisDeepSave+"\r\n\t\t\t}\r\n";										
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoisDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicisDeepSave=string.Empty;
			String strInitFuncion="set"+GetPrefijoRelacionC();
			String strInitFuncionGet="get"+GetPrefijoRelacionC();
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			
			if(!blnNoStandardTableFromProperties) {
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
						strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						strTablaClaseRelacionadaLogicisDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
						strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
					
						strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicisDeepSave+"\t\t}";
			
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey))
						{
						continue;
						}
						strTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
						strTablaClaseRelacionadaReturn+=GetNombreClaseC(tableSchemaForeignKey.ToString())+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
						strTablaClaseRelacionadaLogicisDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseC(tableSchemaForeignKey.ToString()))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseC(tableSchemaForeignKey.ToString()))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseC(tableSchemaForeignKey.ToString()))+"Logic(connexion);\r\n";
						strTablaClaseRelacionadaLogicisDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseC(tableSchemaForeignKey.ToString()))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "()"+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
					
						strTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseC(tableSchemaForeignKey.ToString()))+".class)) {\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicisDeepSave+"\t\t}";
										
				}
			}
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
			ArrayList arrayListRelaciones=new ArrayList();
										
			if(!blnNoStandardTableFromProperties) {								
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)))) {
							continue;
						} else {
							arrayListRelaciones.Add(GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)));
						}
						
						strTablaClaseRelacionada+="classes.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));\r\n";
					
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,GetNombreClaseC(tableSchemaForeignKey.ToString()))) {
						continue;
					} else {
						arrayListRelaciones.Add(GetNombreClaseC(tableSchemaForeignKey.ToString()));
					}
						
					strTablaClaseRelacionada+="classes.add(new Classe("+GetNombreClaseC(tableSchemaForeignKey.ToString())+ ".class));\r\n";												
				}
			}
			
			return strTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesisDeepSave() 
		{
			String strSufijoRelacionRecursivo="";
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			String strNombreExtraRelacion="";
			
			String strInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE)) {\r\n";
			String strInitInclude="\tif(deepLoadType.equals(DeepLoadType.INCLUDE)) {\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE)) {\r\n";
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			String strInitIfClass="\r\n\t\t\tif(clas.clas.equals(";
			
			String strFuncionNone=string.Empty;
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
           
			strFuncionInclude="";
			strFuncionExclude="";
			TableSchema tablaRelacionadaObjetivo;
			
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			bool useClasesSiNo=GetUseClasesSiNoPropertyFromPropertiesC(TablaBase);
			
			
			if(GenerarMe) {
				strInitInclude="\t else "+strInitInclude;
				strFuncionNone="\r\nelse {"+strInitNone +SetClasesRelacionadasForeigKeysNoisDeepSaveBeep();
			
			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {			
				//Trace.WriteLine("here="+useClasesSiNo);
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
					
				if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
					continue;					
				}
				
				strFuncionInclude+="\r\n"+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strFuncionNone+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
					if(!blnNoStandardTableFromProperties) {		
						strFuncionNone+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					}					
					strFuncionNone+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					strFuncionNone+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
					if(!blnNoStandardTableFromProperties) {	
						strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					}					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n\t\t\t\tcontinue;\r\n";
					
					strFuncionExclude+="\t\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
					if(!blnNoStandardTableFromProperties) {	
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					}
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					strNombreExtraRelacion=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					if(TablaBase.Name!=collectionInfo.SecondaryTable){ strSufijoRelacionRecursivo=""; }
					else {strSufijoRelacionRecursivo="Recursivo";}
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strFuncionNone+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
						strFuncionNone+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";								
						if(!blnNoStandardTableFromProperties) {	
							strFuncionNone+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strSufijoRelacionRecursivo+".set"+GetPrefijoTablaC()+GetParameterClaseDeepRelacionadoC(collectionInfo)+/*strNombreExtraRelacion+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						}
						strFuncionNone+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n";				
						strFuncionNone+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						if(!blnNoStandardTableFromProperties) {	
							strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strSufijoRelacionRecursivo+".set"+GetPrefijoTablaC()+GetParameterClaseDeepRelacionadoC(collectionInfo)+/*strNombreExtraRelacion+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						}						
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						if(!blnNoStandardTableFromProperties) {	
							strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strSufijoRelacionRecursivo+".set"+GetPrefijoTablaC()+GetParameterClaseDeepRelacionadoC(collectionInfo)+/*strNombreExtraRelacion+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						}
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						strFuncionNone+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionNone+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						strFuncionNone+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n";				
						strFuncionNone+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n";								
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n";												
						strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t}";						
			}
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoisDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoisDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
								
			strTablaClaseRelacionada2=strFuncionNone+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			}
			
						
			// parte del no if isDeep
			String strIfFuncion=string.Empty;
							
			String strInitIfFuncion=string.Empty;			
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			
			strInitIfFuncion=strInit+"\r\nif(!isDeep) {\r\n";
			strInitElseFuncion="\r\n}\r\nelse {\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
					
				if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
					continue;					
				}
				
				strInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			}
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strFuncionNone=strInitNone+ SetClasesRelacionadasForeigKeysisDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {	
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
					
				if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
					continue;					
				}
				
				strFuncionInclude+="\r\n"+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(!blnNoStandardTableFromProperties) {	
						strFuncionNone+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					}
					strFuncionNone+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					if(!blnNoStandardTableFromProperties) {	
						strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					}
					strFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n\t\t\t\tcontinue;\r\n";
					
					strFuncionExclude+="\t\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
					if(!blnNoStandardTableFromProperties) {	
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					}
					strFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					strNombreExtraRelacion=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					if(TablaBase.Name!=collectionInfo.SecondaryTable){ strSufijoRelacionRecursivo=""; }
					else {strSufijoRelacionRecursivo="Recursivo";}
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strFuncionNone+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {";
						if(!blnNoStandardTableFromProperties) {	
							strFuncionNone+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strSufijoRelacionRecursivo+".set"+GetPrefijoTablaC()+GetParameterClaseDeepRelacionadoC(collectionInfo)+/*strNombreExtraRelacion+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						}
						strFuncionNone+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
						if(!blnNoStandardTableFromProperties) {	
							strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strSufijoRelacionRecursivo+".set"+GetPrefijoTablaC()+GetParameterClaseDeepRelacionadoC(collectionInfo)+/*strNombreExtraRelacion+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						}
						strFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
						if(!blnNoStandardTableFromProperties) {	
							strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +strSufijoRelacionRecursivo+".set"+GetPrefijoTablaC()+GetParameterClaseDeepRelacionadoC(collectionInfo)+/*strNombreExtraRelacion+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						}
						strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						strFuncionNone+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionNone+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n\t\t}\r\n";
					
						strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n";
						
						strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
						strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()) {\r\n";
						strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysisDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			
			if(GenerarMe) {
				strFuncionInclude+="";
			}
			
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysisDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			if(GenerarMe) {
				strIfFuncion=strInitIfFuncion+strFuncionNone+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
			} else {
				String strToComplete="\r\n\t\t};";
				
				strIfFuncion=strInitIfFuncion+/*strFuncionNone+"\t}\r\n"+*/strFuncionInclude+strToComplete;//+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";
			}
			
			
						
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesisDeepLoad() 
		{
			String strNombreExtraRelacion="";
			String strSufijoRelacionRecursivo="";
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE)) {\r\n\r\n";
			String strInitInclude="\tif(deepLoadType.equals(DeepLoadType.INCLUDE)) {\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE)) {\r\n";
			String strInitFor="\r\n\t\tfor(Classe clas:clases) {";
			String strInitIfClass="\r\n\t\t\tif(clas.clas.equals(";
			String strFuncionNone=string.Empty;
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
           
			String strInitFuncion=" get"+GetPrefijoRelacionC();
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			TableSchema tablaRelacionadaObjetivo;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			bool useClasesSiNo=GetUseClasesSiNoPropertyFromPropertiesC(TablaBase);
			
			if(GenerarMe) {
			strInitInclude="\t else "+strInitInclude;
			
			strFuncionNone="\r\nelse {\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoisDeepLoadBeep();
			
			
			if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
																	
				if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
					continue;
				}
				
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
				strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
				strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";
				
				strInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strFuncionNone+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strFuncionNone+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionNone+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),isDeep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n\t\t\t\tcontinue;\r\n";
					
					strFuncionExclude+="\t\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),isDeep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					strNombreExtraRelacion=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					if(TablaBase.Name!=collectionInfo.SecondaryTable){ strSufijoRelacionRecursivo=""; }
					else {strSufijoRelacionRecursivo="Recursivo";}
					
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+ "s("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strFuncionNone+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;		
					strFuncionNone+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
					strFuncionNone+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionNone+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+ "s("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+ "s("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";
					strFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s()) {\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strSufijoRelacionRecursivo+",isDeep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}\r\n";
				strFuncionExclude+="\t\t}";
				
			}
			}
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoisDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoisDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strFuncionNone+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			}
			
			
			String strIfFuncion=string.Empty;
			
						
				//Parte del no if del isDeep
				
				String strInitIfFuncion=string.Empty;				
				String strInitElseFuncion=string.Empty;
				String strElseFuncion=string.Empty;
				
				strFuncion=string.Empty;
				
				strTablaClaseRelacionada=string.Empty;
				strInitFuncion=" get"+GetPrefijoRelacionC();
				
				strInitIfFuncion="\r\nif(!isDeep) {\r\n";
				strInitElseFuncion="\r\nelse {\r\n";
				
				
				System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
				
				strFuncionNone=strInitNone+ SetClasesRelacionadasForeigKeysisDeepLoadBeep();
				strFuncionInclude="";
				strFuncionExclude="";
			
				if((!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO) && !GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) || useClasesSiNo) {
				foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
						
					} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
						tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					} else {
						tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
					}
						
					if(useClasesSiNo && !GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)){
						continue;					
					}
					
					strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
					strFuncionInclude+="\t\t\t\tclas.blnActivo=false;\r\n";
					strFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)&&clas.blnActivo) {\r\n";
					strFuncionExclude+="\t\t\t\tclas.blnActivo=false;\r\n";
					strFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe) {\r\n";
					
					strInitFuncion="set"+GetPrefijoRelacionC();
					
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
					{
						strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
					}
					else
					{
						strNombreExtraRelacion=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
							
						strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+ "s("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreExtraRelacion+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
						//if(collectionInfo.SecondaryTable.Equals("Cliente")) {
							
							/*
							foreach(ColumnSchema cs in collectionInfo.TableKey.ForeignKeyMemberColumns) {
								sd+=cs.Name+",";
							}
							System.Windows.Forms.MessageBox.Show(collectionInfo.TableKey.PrimaryKeyTable.Name+":"+sd);
							*/
							//System.Windows.Forms.MessageBox.Show(sd);
						//}
					}
					
				strFuncionNone+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n";
				strFuncionExclude+="\t\t\t"+"clases.add(new Classe("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class));\r\n";					
				strFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t}";
				
				}
				}
				
				strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysisDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
				
				if(GenerarMe) {
					strFuncionInclude+="";
				}
				
				strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysisDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
				
			if(GenerarMe) {
				strIfFuncion=strInitIfFuncion+strFuncionNone+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			} else {
				String strToComplete="\r\n\t\t};";
				
				strIfFuncion=strInitIfFuncion+/*strFuncionNone+"\t}\r\n"+*/strFuncionInclude+strToComplete;//+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			}			
	
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto,bool esNative,bool esRanges,bool esRangesFinal) 
		{
			String strParameterSelection=GetParameterSelectionC(column,esUltimo,esUnico,esCompuesto,esNative,esRanges,esRangesFinal);
			/*
			String strParaBusquedaString=""; 
			String strParaBusquedaCompuesto=""; 
			String strEqualsLike="Equal";
			
			String strSufijoRangesFinal="";
			String strSufijoRangesFinalName="";
						
			//SETEO LOS PARAMETROS DEACUERDO SI ES RANGO
			
			if(esRanges) {
				if(esRangesFinal) {
					esUltimo=true;
					strEqualsLike="MenorIgual";
					strSufijoRangesFinal=strSufijoRangoFinal;
					strSufijoRangesFinalName=",\""+strSufijoRangoFinal+"\"";	
				} else {
					esUltimo=false;
					strEqualsLike="MayorIgual";
				}
			}
						
			
			
			if(esCompuesto)
			{
				strParaBusquedaCompuesto="Constantes.SCHEMA+\".\"+"+GetNombreClase(column.Table.ToString())+"DataAccess.TABLENAME+\".\"+";
										  
			}
			
			if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{  //column.DataType==DbType.DateTime ||
				if(!esUnico)	
				{
					strEqualsLike="Like";
					strParaBusquedaString="+\"%\"";
				}
			}
			
			String strConNative="";
			
			if(esNative) {
				strConNative=strNative;
			}
			
			String strColumnName="";
			
			if(column.Name!=strId) {
				strColumnName=column.Name;
			} else {
				strColumnName=strIdGetSet;
			}
			
			bool blnEsPKCompuestoTabla=EsPKCompuestoTabla(column.Table);
			String  strPalabraclaveEsPKCompuestoTabla="";
			
			if(blnEsPKCompuestoTabla&&column.IsPrimaryKeyMember) {
				strPalabraclaveEsPKCompuestoTabla="Constantes.IDCOMPOSEKEY+";
			}
			
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+strSufijoRangesFinal+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+strSufijoRangesFinal+".setParameterSelectionGeneral"+strEqualsLike+"(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+strSufijoRangesFinal+ strParaBusquedaString +","+strParaBusquedaCompuesto+strPalabraclaveEsPKCompuestoTabla+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+strConNative+strColumnName+"()"+strSufijoRangesFinalName+",";
			
			//GetTipoColumnaToString(column)+
			if(esUltimo) {
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+strSufijoRangesFinal+");";
			*/
		
			return strParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String strIndexName) 
		{
			String strParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				strParaBusquedaString="+\"%\"";
			}
			
			String strParameterSelection=String.Empty;
			
			if(!strIndexName.Contains("BusquedaRango"))
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(strIndexName.Contains("BusquedaMayorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+/* GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMayor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenorIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(strIndexName.Contains("BusquedaMenor"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				strParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				strParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				strParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(strIndexName.Contains("BusquedaRangoIgual"))
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					strParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ /*GetTipoColumnaToString(column)+*/strParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+"DataAccess.getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				strParameterSelection+="ParameterTypeOperator.NONE);";	
				
				strParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return strParameterSelection;
		}
		
public String GetIndicesTablasClases() {
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			String strFunctions=String.Empty;
			String strFunctionsWithConnection=String.Empty;
			String strFunctionsNoConnection=String.Empty;
			String strFunctionsBodyWithConnection=String.Empty;
			String strFunctionsBodyNoConnection=String.Empty;
			String strFunctionsProcesoBusqueda=String.Empty;
			
			String strWithConnectionGetNew="\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";
			String strWithConnectionCommit="\r\n\r\n\t\t\tconnexion.commit();";
			String strWithConnectionClose="\r\n\t\t\tconnexion.close();";
			
			bool blnEsReporteLocal= GetEsReporteFromPropertiesC(TablaBase);
			
			String strParametroReporte="";
			
			if(blnEsReporteLocal) {
				strParametroReporte="ParametroGeneralUsuario parametroGeneralUsuario,Modulo moduloActual,";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {
					strParametersFuncion="";
					strParametersNameFuncion="";
					strFunctionsProcesoBusqueda="";
					
					if(indexSchema.IsUnique) {
						//strInitFuncion+="\r\n\tprivate void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"Internal(";
							strFunctionsWithConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(";
							//strFunctionsBodyWithConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"Internal(true,";
							strFunctionsNoConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
							//strFunctionsBodyNoConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"Internal(isConConnexion,";							
						strBodyFuncion="\r\n\t\ttry {"+strWithConnectionGetNew+"\r\n";
						strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						
						strEndBodyFuncion+="\r\n\r\n\r\n\t\t\tif(this.isConDeep) {";
						strEndBodyFuncion+="\r\n\t\t\t\tthis.deepLoad(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",this.datosDeep.getIsDeep(),this.datosDeep.getDeepLoadType(), this.datosDeep.getClases());";
						strEndBodyFuncion+="\r\n\r\n\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.refrescarForeignKeysDescripciones"+GetNombreClaseC(TablaBase.ToString())+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");";
						strEndBodyFuncion+="\r\n\t\t\t}\r\n";
						strEndBodyFuncion+=strWithConnectionCommit;
						
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {"+strWithConnectionClose+"\r\n\t\t}\r\n\t}\r\n";
					
					} else {						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							//strInitFuncion+="\r\n\tprivate void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(String sFinalQuery,";
								strFunctionsWithConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(String sFinalQuery,Pagination pagination,"+strParametroReporte;
								//strFunctionsBodyWithConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(true,sFinalQuery,";
								strFunctionsNoConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,Pagination pagination,";
								//strFunctionsBodyNoConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(isConConnexion,sFinalQuery,";
							
						} else {
							//strInitFuncion+="\r\n\tprivate void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(";
								strFunctionsWithConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
								//strFunctionsBodyWithConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(true,";
								strFunctionsNoConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
								//strFunctionsBodyNoConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(isConConnexion,";
							
						}
						//ANTERIOR NEW
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(isConConnexion) {\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();\r\n\t\t\t}\r\n";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{"+strWithConnectionGetNew+"\r\n";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK)) {
							if(blnTieneProcesoBusqueda) {
								if(VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)){
									strFunctionsProcesoBusqueda="\r\n\t\t\tif(this.isConProcesoBusqueda) {";
									strFunctionsProcesoBusqueda+="\r\n\t\t\t\t"+GetNombreClase(TablaBase.ToString())+"LogicAdditional.ProcesarBusqueda"+GetNombreClase(TablaBase.ToString())+"s"+indexSchema.Name+"(connexion,sFinalQuery,pagination,PARAMS_PROCESO_BUSQUEDA);";//,id_anio,id_periodo,id_grado,id_paralelo,id_area);
									strFunctionsProcesoBusqueda+="\r\n\t\t\t}\r\n";
									
									strBodyFuncion+=strFunctionsProcesoBusqueda;
								}								
							}
							
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setPagination(pagination);";	
							strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+"Logic.registrarAuditoria(this.connexion,datosCliente.getIdUsuario(),\""+indexSchema.Name+"\",\"\",queryWhereSelectParameters,datosCliente.getsUsuarioPC(),datosCliente.getsNamePC(),datosCliente.getsIPPC());";
			
						strEndBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//ANTERIOR COMMIT
						//strEndBodyFuncion+="\r\n\r\n\t\t\tif(isConConnexion) {\r\n\t\t\tconnexion.commit();\r\n\t\t\t}";
						
						strEndBodyFuncion+="\r\n\r\n\r\n\t\t\tif(this.isConDeep) {";
						strEndBodyFuncion+="\r\n\t\t\t\tthis.deepLoads(this.datosDeep.getIsDeep(),this.datosDeep.getDeepLoadType(), this.datosDeep.getClases(),this.datosDeep.getSTituloMensaje());";
						strEndBodyFuncion+="\r\n\r\n\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.refrescarForeignKeysDescripciones"+GetNombreClaseC(TablaBase.ToString())+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
						strEndBodyFuncion+="\r\n\t\t\t}\r\n";
						
						strEndBodyFuncion+=strWithConnectionCommit;
						
						//ANTERIOR CLOSE
						//strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tif(isConConnexion) {\r\n\t\t\tconnexion.close();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {"+strWithConnectionClose+"\r\n\t\t}\r\n\t}\r\n";					
					}	
					
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					bool esRanges=false;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {						
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								esRanges=true;
							} else {
								esRanges=false;
							}
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique) {
									esUnico=true;
								} else {
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strParametersFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
										strParametersNameFuncion+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
									}	
								}
							
								if(!count.Equals(indexSchema.MemberColumns.Count)) {
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false,false,esRanges,false);
									
									if(esRanges) {
										strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false,false,esRanges,true);
									}
								} else {
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false,false,esRanges,false);
									
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(esRanges) {
										strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false,false,esRanges,true);
									}
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count)) {					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							} else {
								if(!indexSchema.Name.Contains("BusquedaRango")) {
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
								} else {
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strFunctionsWithConnection=strFunctionsWithConnection+strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"";//strFunctionsBodyWithConnection+strParametersNameFuncion+");\r\n\t}\r\n";
					strFunctionsNoConnection=strFunctionsNoConnection+strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"";//strFunctionsBodyNoConnection+strParametersNameFuncion+");\r\n\t}\r\n";
					
					strFunctions=strFunctionsWithConnection + strFunctionsNoConnection.Replace(strWithConnectionGetNew,"").Replace(strWithConnectionCommit,"").Replace(strWithConnectionClose,"");
					
					if(blnTieneProcesoBusqueda) {
						strFunctions=strFunctions.Replace("PARAMS_PROCESO_BUSQUEDA",strParametersNameFuncion);
					}
					
									
					
					//strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"";																																			
					
					//strInitFuncion=strFunctions+strInitFuncion;
					
					strInitFuncion+=strFunctions;
				}
			}
										
			return strInitFuncion; 
		}
		
				
		public String GetIndicesTablasClasesNative() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			String strFunctions=String.Empty;
			String strFunctionsWithConnection=String.Empty;
			String strFunctionsNoConnection=String.Empty;
			String strFunctionsBodyWithConnection=String.Empty;
			String strFunctionsBodyNoConnection=String.Empty;
			
			String strWithConnectionGetNew="\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();";
			String strWithConnectionCommit="\r\n\r\n\t\t\tconnexion.commit();";
			String strWithConnectionClose="\r\n\t\t\tconnexion.close();";
			
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						//strInitFuncion+="\r\n\tprivate void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"Internal(";
							strFunctionsWithConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+strNative+"WithConnection(";
							//strFunctionsBodyWithConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"Internal(true,";
							strFunctionsNoConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+strNative+"(";
							//strFunctionsBodyNoConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"Internal(isConConnexion,";
							
						strBodyFuncion="\r\n\t\ttry {"+strWithConnectionGetNew+"\r\n";
						strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity"+strNative+"(connexion,queryWhereSelectParameters);";
						strEndBodyFuncion+=strWithConnectionCommit;
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {"+strWithConnectionClose+"\r\n\t\t}\r\n\t}\r\n";
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							//strInitFuncion+="\r\n\tprivate void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(String sFinalQuery,";
								strFunctionsWithConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(String sFinalQuery,Pagination pagination,";
								//strFunctionsBodyWithConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(true,sFinalQuery,";
								strFunctionsNoConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"(String sFinalQuery,Pagination pagination,";
								//strFunctionsBodyNoConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(isConConnexion,sFinalQuery,";
							
						}
						else
						{
							//strInitFuncion+="\r\n\tprivate void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(";
								strFunctionsWithConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"WithConnection(";
								//strFunctionsBodyWithConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(true,";
								strFunctionsNoConnection="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+strNative+"(";
								//strFunctionsBodyNoConnection="\r\n\t\tthis."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"Internal(isConConnexion,";
							
						}
						//ANTERIOR NEW
						//strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(isConConnexion) {\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();\r\n\t\t\t}\r\n";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{"+strWithConnectionGetNew+"\r\n";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setPagination(pagination);";	
							strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+"Logic.registrarAuditoria(this.connexion,datosCliente.getIdUsuario(),\""+indexSchema.Name+"\",\"\",queryWhereSelectParameters,datosCliente.getsUsuarioPC(),datosCliente.getsNamePC(),datosCliente.getsIPPC());";
			
						strEndBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities"+strNative+"(connexion,queryWhereSelectParameters);";
						//ANTERIOR COMMIT
						//strEndBodyFuncion+="\r\n\r\n\t\t\tif(isConConnexion) {\r\n\t\t\tconnexion.commit();\r\n\t\t\t}";
						strEndBodyFuncion+=strWithConnectionCommit;
						
						//ANTERIOR CLOSE
						//strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tif(isConConnexion) {\r\n\t\t\tconnexion.close();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {"+strWithConnectionClose+"\r\n\t\t}\r\n\t}\r\n";
						
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					bool esRanges=false;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
							 esRanges=true;
						} else {
							 esRanges=false;
						}
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}  else {
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										strParametersFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
										strParametersNameFuncion+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
									}	
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false,true,esRanges,false);
									
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(esRanges) {
										strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false,true,esRanges,true);
									}
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false,true,esRanges,false);
									
									//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
									if(esRanges) {
										strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false,true,esRanges,true);
									}
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strFunctionsWithConnection=strFunctionsWithConnection+strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"";//strFunctionsBodyWithConnection+strParametersNameFuncion+");\r\n\t}\r\n";
					strFunctionsNoConnection=strFunctionsNoConnection+strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"";//strFunctionsBodyNoConnection+strParametersNameFuncion+");\r\n\t}\r\n";
					strFunctions=strFunctionsWithConnection+strFunctionsNoConnection.Replace(strWithConnectionGetNew,"").Replace(strWithConnectionCommit,"").Replace(strWithConnectionClose,"");
					
					
					//strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"";																																			
					
					//strInitFuncion=strFunctions+strInitFuncion;
					
					strInitFuncion+=strFunctions;
				}
			}
			
								
			return strInitFuncion; 
		}
		
		public String GetIndicesTablasClasesDeReporte() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			String strQueryChange=String.Empty;
			String strGetFunctionLoadRelaciones=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();\r\n";
						strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						strQueryChange="\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.GetQuery"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(queryWhereSelectParameters,";
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						strEndBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.CargarTablasRelaciones"+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+");";						
						strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.commit();";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tconnexion.close();\r\n\t\t}\r\n\t}\r\n";
					}

					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
							strQueryChange="\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.GetQuery"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(queryWhereSelectParameters,sFinalQuery,";
							strGetFunctionLoadRelaciones="\r\n\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.CargarTablasRelaciones"+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,";
						}

						else
						{
							strInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							strQueryChange="\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.GetQuery"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(queryWhereSelectParameters,";
							strGetFunctionLoadRelaciones="\r\n\r\n\t\t\t"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.CargarTablasRelaciones"+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,";
						}
						
						strBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();\r\n";
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//strBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							strBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						strEndBodyFuncion+=strGetFunctionLoadRelaciones+"BYDANCODE1";
						strEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.commit();";
						strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones.manageException(logger,e);\r\n\t\t\tthrow e;\r\n\t\t} finally {\r\n\t\t\tconnexion.close();\r\n\t\t}\r\n\t}\r\n";
					
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					bool esUnico=false;
					bool esRanges=false;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								esRanges=true;
							} else {
								esRanges=false;
							}
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false,false,esRanges,false);
								}
								else
								{
									strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false,false,esRanges,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									strParametersFuncion+=",";
									strParametersNameFuncion+=",";	
									
									strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								strParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception {"+strBodyFuncion+/*strParameterSelection+*/strQueryChange+strParametersNameFuncion+");"+strEndBodyFuncion.Replace("BYDANCODE1",strParametersNameFuncion+");")/*+strParametersNameFuncion+");"*/+strEndFuncion+"";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n}\r\ncatch(Exception e)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ ""+strTypeNewCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public  string GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String strSetEntity=string.Empty;
	

	strSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	strSetEntity+="\t\t\t\tauditoria.setField_strCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	strSetEntity+="\t\t\t\tauditoria.setField_strValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	strSetEntity+="\t\t\t\tstrValorActual=null;\r\n";
	strSetEntity+="\t\t\t\tstrValorNuevo=null;\r\n\r\n";
	
	strSetEntity+="\t\t\t\tif("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()!=null)\r\n\t\t\t\t{\r\n";
	strSetEntity+="\t\t\t\t\tstrValorActual="+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+";\r\n";
	strSetEntity+="\t\t\t\t}\r\n";
	
	strSetEntity+="\t\t\t\tif("+ GetNombreClaseObjetoC(TablaBase.ToString())+".get"+ GetNombreCompletoColumnaClaseC(column)+ "()!=null)\r\n\t\t\t\t{\r\n";
	strSetEntity+="\t\t\t\t\tstrValorNuevo="+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " ;\r\n";
	strSetEntity+="\t\t\t\t}\r\n\r\n";
	
	strSetEntity+="\t\t\t\t"+GetAuditoriaCommentTableFromProperties(TablaBase)+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.registrarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+"DataAccess.getColumnName"+ column.Name+"(),strValorActual,strValorNuevo);";
	strSetEntity+="\r\n\t\t\t}";
	
	return strSetEntity;
}

public static string GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String strSetEntity=string.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return strSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return strSetEntity;
		}
	}
	//usuario.setClave(strClave);
	String strEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String strEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String strEntityFinal=");";
   strSetEntity=strEntityInit+strEntityMiddle+strEntityFinal;
	
	return strSetEntity;
}

public string GetParametroFuncionNuevoClase(ColumnSchema column)
{		String strParamtro=string.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return strParamtro;
		}
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return strParamtro;
}

public string GetParametroFuncionActualizarClase(ColumnSchema column)
{		String strParamtro=string.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return strParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		strParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return strParamtro;
}

public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}

public String getClassesSetAddTablasRelacionadas() 
{
			String strTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\t\t\tclasses.add(new Classe("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class));";									
				}				
			}
			
			return strTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetdelete() 
{
			String strTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						strTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						strTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						strTablaClaseRelacionada+="\r\n\t\t\t{";
						strTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsDeleted(true);";
						strTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return strTablaClaseRelacionada; 
}

/*
//CUANDO TRABAJABA CON AUDITORIA
/*
<%=GetAuditoriaCommentTableFromProperties(TablaBase)%><%=strGlobalAuditoriaComment%>import <%=strEmpresaAuditoria%>.<%= strPackageAuditoria%>.<%= strPackageBusiness%>.<%= strPackageEntitiesAuditoria%>.*;
<%=GetAuditoriaCommentTableFromProperties(TablaBase)%><%=strGlobalAuditoriaComment%>import <%=strEmpresaAuditoria%>.<%= strPackageAuditoria%>.<%= strPackageBusiness%>.<%= strPackageLogic%>.*;
<%=GetAuditoriaCommentTableFromProperties(TablaBase)%><%=strGlobalAuditoriaComment%>import <%=strEmpresaAuditoria%>.<%= strPackageAuditoria%>.<%= strPackageBusiness%>.<%= strPackageDataAccessAuditoria%>.*;
*/

/*
import ByDan.Auditoria.Business.Logic.*;
import ByDan.Auditoria.Business.Entities.*;
import ByDan.Seguridad.Business.Entities.*;
import ByDan.Seguridad.Business.Logic.*;
*/

</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresaC(Empresa,false);%>
<%=GetByDanLicence()%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageLogic%>;

import java.util.List;
import java.util.Set;
import java.util.HashSet;
import java.util.ArrayList;
<%//if(blnTieneTimestamp){%>
import java.sql.Timestamp;
<%//}%>
import java.sql.SQLException;
import java.util.Date;
import java.util.Calendar;

import org.json.JSONArray;
import org.json.JSONObject;
import org.apache.log4j.Logger;
import javax.persistence.EntityManagerFactory;

import <%=Empresa%>.<%=strPackageFramework%>.ConstantesCommon;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityLogic;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneralMinimo;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageBusiness%>.<%= strPackageLogic%>.*;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageUtils%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%>.<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%>.<%=GetNombreClase(TablaBase.ToString())%><%=strReturnGeneral%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%>.<%=GetNombreClase(TablaBase.ToString())%><%=strParameterGeneral%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%>.<%=GetNombreClase(TablaBase.ToString())%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageInterface%>.<%=GetNombreClase(TablaBase.ToString())%>Implementable;
<%=strCommentAdditional%>import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageLogic%>.<%=GetNombreClase(TablaBase.ToString())%>LogicAdditional;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageDataAccess%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%>.*;<%=GetEsImportPaqueteReporteC(TablaBase,"import "+Empresa+"."+ Package+"."+strPackageBusiness+"."+strPackageEntities)%>

import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.*;

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageEntities+GetEsPaqueteReporteC(TablaBase)+".*;")%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageLogic+".*;")%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageUtils+".*;")%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageDataAccess+".*;")%>

<%=strPackageEntitiesExtra%>
<%=strPackageDataAccessExtra%>
<%=strPackageLogicExtra%>
<%=strPackageUtilsExtra%>

@SuppressWarnings("unused")
public class <%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetExtendClase()%> implements <%=GetNombreClase(TablaBase.ToString())%>Implementable {	
	
	
		
	
	<%//if(GenerarTipoGeneracionC(strTipoGeneracionMantenimientoClasesRelacionadas,TiposGeneracion)) {%>
	<%//if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
	
	<%=GetMaintenanceTablasClasesRelacionadasDetalles(TablaBase,true,"") %>
	<%//}%>		
	


	

}
<script runat="template">
//<%if(TieneClasesRelacionadasOForeignKeyC(TablaBase)){%>import <%=Empresa%>.<%= Package%>.<%= strPackageBusiness%>.<%= strPackageEntities%>.*;<% } %>

//IMPLEMENTACIONES SOBRANTES
/*
public void newInstance(<% for (int i = 0; i <TablaBase.Columns.Count; i++){%><%=GetParametroFuncionNuevoClase(TablaBase.Columns[i])%><%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionNuevoClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<%}%><%}%>,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC)throws SQLException,Exception {  			
	    try {		
			connexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();
			
	    	<%=GetNombreClaseObjeto(TablaBase.ToString())%>= new <%=GetNombreClase(TablaBase.ToString())%>();
		
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%=  GetSetEntityColumna(TablaBase.Columns[i],TablaBase.ToString(),false) %>	
 			<% } %>
			
			<%=strCommentAdditional%><%=GetNombreClase(TablaBase.ToString())%>LogicAdditional.update<%=GetNombreClase(TablaBase.ToString())%>ToSave(<%=GetNombreClaseObjeto(TablaBase.ToString())%>,this.arrDatoGeneral);
	   		
			<%=GetNombreClase(TablaBase.ToString())%>Logic.registrarAuditoria(this.connexion,idUsuario,<%=GetNombreClaseObjeto(TablaBase.ToString())%>,sUsuarioPC,sNamePC,sIPPC);
			
			<%=GetNombreClase(TablaBase.ToString())%>DataAccess.save(<%=GetNombreClaseObjeto(TablaBase.ToString())%>, connexion);
	    				
			connexion.commit();	
			
	   	} catch(SQLException e) {
			connexion.rollback();
			Funciones.manageException(logger,e);
			throw e;
			
      	} catch(Exception e) {
			connexion.rollback();
			Funciones.manageException(logger,e);
			throw e;
			
      	} finally {
			connexion.close();	
		}
	}
	
	public void update(<% for (int i = 0; i <TablaBase.Columns.Count; i++){ %><%=GetParametroFuncionActualizarClase(TablaBase.Columns[i])%> <%if((i!=TablaBase.Columns.Count-1)&&(!GetParametroFuncionActualizarClase(TablaBase.Columns[i]).Equals(string.Empty))){%>,<% } %><% } %>,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC) throws SQLException,Exception {			
		//AuditoriaLogic auditoriaLogic= new AuditoriaLogic(); 
		
	    try {
			connexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>=<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.getEntity(connexion, id);
			
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
			<%=  GetSetEntityColumna(TablaBase.Columns[i],TablaBase.ToString(),true) %>	
			<% } %>
			
			<%=strCommentAdditional%><%=GetNombreClase(TablaBase.ToString())%>LogicAdditional.update<%=GetNombreClase(TablaBase.ToString())%>ToSave(<%=GetNombreClaseObjeto(TablaBase.ToString())%>);
			
			<%=GetNombreClase(TablaBase.ToString())%>Logic.registrarAuditoria(this.connexion,idUsuario,<%=GetNombreClaseObjeto(TablaBase.ToString())%>,sUsuarioPC,sNamePC,sIPPC);
			
			<%=GetNombreClase(TablaBase.ToString())%>DataAccess.save(<%=GetNombreClaseObjeto(TablaBase.ToString())%>, connexion);	    	       	 
						
			connexion.commit();			
			
		} catch(SQLException e) {
			connexion.rollback();
			Funciones.manageException(logger,e);
			throw e;
			
      	} catch(Exception e) {
			connexion.rollback();
			Funciones.manageException(logger,e);
			throw e;
			
      	} finally {
			connexion.close();	
		}		
	}
	
	public void delete(Long id,Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC) throws SQLException,Exception {	
	    try {
			connexion=connexion.getNewConnexion(this.connexionType,this.parameterDbType,this.entityManagerFactory);connexion.begin();
			
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>=<%=GetNombreClaseObjeto(TablaBase.ToString())%>DataAccess.getEntity(connexion, id);
			<%=GetNombreClaseObjeto(TablaBase.ToString())%>.setIsDeleted(true);
			<%=strCommentAdditional%><%=GetNombreClase(TablaBase.ToString())%>LogicAdditional.update<%=GetNombreClase(TablaBase.ToString())%>ToSave(<%=GetNombreClaseObjeto(TablaBase.ToString())%>);
			
			<%=GetNombreClase(TablaBase.ToString())%>Logic.registrarAuditoria(this.connexion,idUsuario,<%=GetNombreClaseObjeto(TablaBase.ToString())%>,sUsuarioPC,sNamePC,sIPPC);
			
			<%=GetNombreClase(TablaBase.ToString())%>DataAccess.save(<%=GetNombreClaseObjeto(TablaBase.ToString())%>, connexion);	    	       	 
				 		
			connexion.commit();
			
		} catch(SQLException e) {
			connexion.rollback();
			Funciones.manageException(logger,e);
			throw e;
			
      	} catch(Exception e) {
			connexion.rollback();
			Funciones.manageException(logger,e);
			throw e;
			
      	} finally {
			connexion.close();	
		}
	}
	
*/
</script>