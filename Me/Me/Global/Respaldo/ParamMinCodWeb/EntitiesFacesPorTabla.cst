<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="ASCII"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="ASCII"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import NameSpace="Me" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Text" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="CodigoEmpresa" Type="System.String" Default="ME" Category="Options" Description="Codigo de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="EsSwing" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>
<%@ Property Name="ConEjb" Type="System.Boolean" Default="false" Category="Options" Description="json or xml" %>
<%@ Property Name="TiposGeneracion" Type="System.String" Default=" " Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="GenerarMe" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="ConSessionBeans" Type="System.Boolean" Default="true" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="ConSwingCombosTabla" Type="System.Boolean" Default="false" Category="5. Presentation" Description="Nombre del Programdor" %>
<%@ Property Name="JBoss_Version" Type="System.String" Default="5.1" Category="5.1 Versiones" Description="Nombre de la Entidad" %>
<%@ Property Name="ConPersistenciaAnotaciones" Type="System.Boolean" Default="true" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="RichFaces_Version" Type="System.String" Default="4.3" Category="4.3 Versiones" Description="Nombre de la Entidad" %>
<%@ Property Name="GeneracionPorModuloUnico" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>

<script runat="template">
int iPosicionInicialTablaModel=1;

public String GetAccionConRecargarFk() {
	String strReturn="false";
	
	if(!blnEsReporte) {
		if(blnTieneForeignKey) {
			strReturn="true";
		}
	}
	
	return strReturn;
}

public String GetRelacionesEventoNuevoPreparar() {
	String sVariablesArray="";
	String strClasesSiRelacionadas="";
	String[] strClasesSi;

	if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {
		if(!GetNombresClasesSiOnChangeFromTableFromPropertiesC(TablaBase).Equals("")) {
			/*
			if(GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column).Equals("")) {
			strClasesSiRelacionadas=GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase);					
			} else {
			strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
			}
			*/
									
			strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromTableFromPropertiesC(TablaBase);
									
			strClasesSi=strClasesSiRelacionadas.Split(',');
									
			//sVariablesArray+="\r\n\t\t\t\tclasses=new ArrayList<Classe>();";
									
			foreach(String strClase in strClasesSi) {
				sVariablesArray+="\r\n\t\tclasses.add(new Classe("+strClase+".class));";
			}
		} else {
			sVariablesArray+="\r\n\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
			sVariablesArray+="\r\n\t\t\tclasses="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
			sVariablesArray+="\r\n\t\t}";
		}
			
	} else {
		sVariablesArray+="\r\n\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
		sVariablesArray+="\r\n\t\t\tclasses="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
		sVariablesArray+="\r\n\t\t}";
	}
						
	return sVariablesArray;						
}

public  String GetCargarCombosVariablesForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);								
				
				//sVariablesArray+="\r\n\r\n\tpublic void addItemDefectoCombosForeignKey"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()throws Exception {";
				sVariablesArray+="\r\n\r\n\tpublic void cargarCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {"; 
					
				sVariablesArray+="\r\n\t\ttry {";
			
				sVariablesArray+=CallFuncionesForeignKeysLlamar("Todos","\t\t\t");
				
				
				
				sVariablesArray+="\r\n\t\t} catch(Exception e) {";
				sVariablesArray+="\r\n\t\t\tthrow e;";
				sVariablesArray+="\r\n\t\t}";
				sVariablesArray+="\r\n\t}";
				
				
				
				if(esPrimero){
					esPrimero=false;
				}
			}	
		}
	} else {
		
	}
	return sVariablesArray;
}

public String GetParametrosTiposPaginacion() {
	String //strReturn="false,false,false";
	
	strReturn="this.isPermisoPaginacionMedio"+GetNombreClase(TablaBase.ToString())+",this.isPermisoPaginacionMedio"+GetNombreClase(TablaBase.ToString())+",this.isPermisoPaginacionTodo"+GetNombreClase(TablaBase.ToString())+"";
	
	if(blnEsReporte) {
		strReturn="true,true,true";
	}
	
	return strReturn;
}

public String GetParentJInternalFramaEvent(TableSchema tableSchema) {
	String strReturn="";
	
	String strOnChangeParent=GetOnChangeParentFromTableFromPropertiesC(tableSchema);
	
	if(!strOnChangeParent.Equals("")) {
		strReturn+="\r\n\t\t\t\tif(this.jInternalFrameParent!=null) {";
		strReturn+="\r\n\t\t\t\t\tthis.jInternalFrameParent.setEsUsoDesdeHijo(true);";
		strReturn+="\r\n\t\t\t\t\tthis.jInternalFrameParent.jTextFieldActionPerformedGeneral(\""+strOnChangeParent+"\",null);";
		strReturn+="\r\n\t\t\t\t\tthis.jInternalFrameParent.setEsUsoDesdeHijo(false);";
		strReturn+="\r\n\t\t\t\t}";
	}
	
	return strReturn;
}

public String GetAccionesPanelesFinRelaciones(String strTipoAccion) {
	String strPaneles="";
	bool conPanel=false;
	bool existe=false;
	
	if(arrayPanelesRelacionesFin.Count>0) {
		existe=true;
	}
	
	if(strTipoAccion.Equals("DEFINIR")) {
		//protected JPanel jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>; 		
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {			
			if(conPanel) {
				strPaneles+="\r\n\tprotected JPanel jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			}
			//strPaneles+="\r\n\tprotected JButton jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			
			strPaneles+="\r\n\tthis.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ButtonActionListener(this,\"RelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\"));";
		}
		
		if(existe) {
			//strPaneles+="\r\n\tprotected JButton jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+";";
			strPaneles+="\r\n\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ButtonActionListener(this,\"RelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"\"));";
			
		}
		
	} else if(strTipoAccion.Equals("EJECUTAR")) {
		//protected JPanel jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>; 		
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {			
			if(conPanel) {
				strPaneles+="\r\n\tprotected JPanel jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			}
			//strPaneles+="\r\n\tthis.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ButtonActionListener(this,\"RelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\"));";
			strPaneles+="\r\n\t\t\telse if(sTipo.equals(\"RelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"\")) {";
			strPaneles+="\r\n\t\t\t\tthis.jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);";
			strPaneles+="\r\n\t\t\t}";
		}
		
		if(existe) {
			//strPaneles+="\r\n\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ButtonActionListener(this,\"RelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"\"));";
			
			strPaneles+="\r\n\t\t\telse if(sTipo.equals(\"RelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"\")) {";
			strPaneles+="\r\n\t\t\t\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);";
			strPaneles+="\r\n\t\t\t}";
		}
		
	} else if(strTipoAccion.Equals("FUNCIONES")) {
		//protected JPanel jPanelCamposOcultos<%=GetNombreClaseC(TablaBase.ToString())%>; 		
		String strPanelesOcultarTodos="";
		
		//OCULTAR TODOS
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {			
			if(conPanel) {
				strPanelesOcultarTodos+="\r\n\tprotected JPanel jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			}
			strPanelesOcultarTodos+="\r\n\t\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setVisible(false);";
		}
		
		if(existe) {
			//strPaneles+="\r\n\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ButtonActionListener(this,\"RelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"\"));";		
			strPanelesOcultarTodos+="\r\n\t\t\tthis.jTabbedPaneRelaciones"+GetNombreClaseC(TablaBase.ToString())+".setVisible(false);\r\n";//FinNormal
		}
		
		
		//DEFINIR FUNCIONES
		foreach(String strPanelFin in arrayPanelesRelacionesFin) {			
			if(conPanel) {
				strPaneles+="\r\n\tprotected JPanel jPanelRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+";";
			}
			strPaneles+="\r\n\t\tpublic void jButtonRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(ActionEvent evt) {";
			strPaneles+=strPanelesOcultarTodos;
			strPaneles+="\r\n\t\t\tthis.jTabbedPaneRelacionesFin"+strPanelFin+GetNombreClaseC(TablaBase.ToString())+".setVisible(true);";
			strPaneles+="\r\n\t\t}";
		}
		
		if(existe) {
			//strPaneles+="\r\n\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ButtonActionListener(this,\"RelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"\"));";
			
			strPaneles+="\r\n\t\tpublic void jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(ActionEvent evt) {";
			strPaneles+=strPanelesOcultarTodos;
			strPaneles+="\r\n\t\t\tthis.jTabbedPaneRelaciones"+GetNombreClaseC(TablaBase.ToString())+".setVisible(true);";//FinNormal
			strPaneles+="\r\n\t\t}";
		}
	} else if(strTipoAccion.Equals("FUNCIONES_INICIAL")) {
		if(existe) {
			strPaneles+="\r\n\t\tthis.jButtonRelacionesFinNormal"+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(null);";
		}
	}
	
	return strPaneles;
}

public String GetEsquemasImportClasesRelacionadas() {
	String strImport="";
	
	strImport+=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageEntities+/*GetEsPaqueteReporteC(TablaBase)+*/".*;");

	strImport+=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageUtils+".*;");
	
	if(!GeneracionPorModuloUnico){
		strImport+=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean+".*;");
	}
	
	if(ContieneImagenesC(TablaBase)){
		strImport+=GetFuncionesImagenesC(TablaBase);
	}

	return strImport;
}

public String GetResaltarIndicesVariablesTablasClases(TableSchema TablaBase) {
			String strFuncion=string.Empty;
			String strElse=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			bool blnExisteBusqueda=false;
			bool blnExisteBusquedaFkVariableGlobal=false;
			bool esPrimero=true;
			
			String strTabPanel=string.Empty;
			String strPanelesBusquedas=string.Empty;
			String strPanelBusqueda=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			String strObjetoBean=GetObjetoBeanC(TablaBase);

			//SIEMPRE DECLARAR PANE BUSQUEDA
			//strTabPanel="\r\n\tpublic JTabbedPane jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
			
			strPanelesBusquedas="\r\n\tpublic void resaltarPanelBusqueda"+GetNombreClaseC(TablaBase.ToString())+"(String sTipoBusqueda) {";
			strPanelesBusquedas+="\r\n\t\tBoolean existe=false;";
			strPanelesBusquedas+="\r\n\t\t//BYDAN_BUSQUEDAS";
			strPanelesBusquedas+="\r\n\t\t"+strCommentMinCodigoWebIni;
			strPanelesBusquedas+="\r\n\t\tint index=0;";			
			strPanelesBusquedas+="\r\n\t\tBorder resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,\"TAB\");\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				blnExisteBusquedaFkVariableGlobal=false;
				strPanelBusqueda="";
				
				if(!indexSchema.IsPrimaryKey) {
					strElse=string.Empty;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {						
						if(!blnExisteBusqueda) {
							blnExisteBusqueda=true;
							//strTabPanel="\r\n\tprotected JTabbedPane jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							/*
							strPanelBusqueda="\tpublic JPanel jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							strPanelBusqueda+="\tpublic JButton jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							*/
							
							if(!esPrimero) {
								strElse="else ";
							}
							
							strPanelBusqueda="\r\n\t\t"+strElse+"if(sTipoBusqueda.equals(\""+indexSchema.Name+"\")) {";							
							strPanelBusqueda+="\r\n\t\t\tindex= this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".indexOfComponent(this.jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
							strPanelBusqueda+="\r\n\r\n\t\t\tthis.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(index);";
							strPanelBusqueda+="\r\n\r\n\t\t\tJPanel jPanel=(JPanel)this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".getComponent(index);";
							strPanelBusqueda+="\r\n\r\n\t\t\t"+strObjetoBean+".setresaltar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"(this);";
							strPanelBusqueda+="\r\n\r\n\t\t\tjPanel.setBorder("+strObjetoBean+".resaltar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
							strPanelBusqueda+="\r\n\t\t\texiste=true;";
							strPanelBusqueda+="\r\n\t\t}";
														
							//strPanelesBusquedas+="\tprotected JPanel jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strPanelesBusquedas+="\tprotected JButton jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						} else {
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {												
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 
															
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//strInitFuncion+=";\r\n";	
							}
						} else {
							if(!indexSchema.Name.Contains("BusquedaRango")) {
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 																
							} else {
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial",memberColumnSchema.IsForeignKeyMember)+"\r\n";								
								
								//strInitFuncion+=",";
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 																
								break;
							}
						}
						count++;
					}
					
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
					
					if(esPrimero) {
						esPrimero=false;	
					}
							
					//strInitFuncion+=")throws Exception;";																																			
					
					strPanelesBusquedas+=strPanelBusqueda;
				}
			}
			
			strInitFuncion=strTabPanel+strPanelesBusquedas+strControlesPanelesBusquedas;
			
			strInitFuncion+="\r\n\t\t"+strCommentMinCodigoWebFin;
			
			strInitFuncion+="\r\n\r\n\t\tif(existe) {";
			strInitFuncion+="\r\n\t\t\t"+strCommentMinCodigoWebIni;
			strInitFuncion+="\r\n\t\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(resaltar);";
			strInitFuncion+="\r\n\t\t\t"+strCommentMinCodigoWebFin;
			strInitFuncion+="\r\n\t\t}";			
			strInitFuncion+="\r\n\t}";
			
				
			
			return strInitFuncion; 
	}
	
public String GetRedimensionarTablaPanelsRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	String sTab="";sTab+="";
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false,true);
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		//sTablaClaseRelacionada+="\r\n\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,intSelectedRow,false,true);";
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tdimension=this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".getPreferredSize();";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tdimension.setSize(this.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".getWidth(),dimension.getHeight());";
					
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".setMinimumSize(dimension);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".setMaximumSize(dimension);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".setPreferredSize(dimension);";
					
		/*
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+sTab+"//SOLO INICIALIZA SESSION (YA NO, CONSUME MUCHA MEMORIA)";
		sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"();";
		sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
		
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,true,false);";
		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,true);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.jInternalFrameParent=this;";
			
		//"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."
		sTablaClaseRelacionada+="\r\n\r\n\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
			
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,true,false,false);";
			
			
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+");";
			
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = iGridyRelaciones++;";//+intPosicionYPanelsRelaciones+";";		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t//this.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane(), this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.jTabbedPaneRelaciones"+GetNombreClaseC(TablaBase.ToString())+".add(\""+GetTituloNombreTableFromPropertiesC(tableSchema)+GetPluralTituloNombreTableFromPropertiesC(tableSchema)+"\",this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane());";
			
		sTablaClaseRelacionada+="\r\n\t\t\t\t} else {";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,false);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t}";
		*/							
	}
	
	return sTablaClaseRelacionada;
}

public string GetSwitchTiposColumnsReporteDinamico()
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(GetEsReporteParametroFromPropertiesC(column)||/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			
			strElse="";
			
			/*
			strVariables+="\r\n\t\treporte=new Reporte();";
			strVariables+="\r\n\t\treporte.setsCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			strVariables+="\r\n\t\treporte.setsDescripcion("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";			
			strVariables+="\r\n\r\n\t\tarrTiposSeleccionarTodos.add(reporte);";						
			*/
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			
			strVariables+="\r\n\r\n\t\t\t\t\tbreak;\r\n";
					
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetSwitchTipoColumnCategoriaReporteDinamico(bool esCategoriaValor)
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		string strVariableCategoria="sNombreCampoCategoria";
		
		if(esCategoriaValor) {
			strVariableCategoria="sNombreCampoCategoriaValor";
		}
		
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(GetEsReporteParametroFromPropertiesC(column)||/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			
			strElse="";
			
			/*
			strVariables+="\r\n\t\treporte=new Reporte();";
			strVariables+="\r\n\t\treporte.setsCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			strVariables+="\r\n\t\treporte.setsDescripcion("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";			
			strVariables+="\r\n\r\n\t\tarrTiposSeleccionarTodos.add(reporte);";						
			*/
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			strVariables+="\r\n\t\t\t\t\t"+strVariableCategoria+"=\""+GetNombreCompletoColumnaClaseC(column)+"\";";
			
			/*
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			*/
			
			strVariables+="\r\n\t\t\t\t\tbreak;\r\n";
					
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
	public string GetSwitchTipoColumnValorReporteDinamico()
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(GetEsReporteParametroFromPropertiesC(column)||/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			
			strElse="";
			
			/*
			strVariables+="\r\n\t\treporte=new Reporte();";
			strVariables+="\r\n\t\treporte.setsCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			strVariables+="\r\n\t\treporte.setsDescripcion("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";			
			strVariables+="\r\n\r\n\t\tarrTiposSeleccionarTodos.add(reporte);";						
			*/
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			//strVariables+="\r\n\t\t\t\t\tsNombreCampoCategoria=\""+GetNombreCompletoColumnaClaseC(column)+"\";";
			
			strVariables+="\r\n\t\t\t\t\tstrCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,\""+GetWebNombreTituloColumnFromPropertiesC(column)+"\",sNombreCampoCategoria,sNombreCampoCategoriaValor,\""+GetNombreCompletoColumnaClaseC(column)+"\");";
			
			/*
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			*/
			
			strVariables+="\r\n\t\t\t\t\tbreak;\r\n";
					
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetSwitchExcelTiposColumnsReporteDinamico()
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		
		string strToString="";strToString+="";
		string strGetColumn="";
	
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow
				|| EsBinaryColumn(column)) {
				continue;	
			}
			
			strToString="";
			strGetColumn="";
	
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			/*
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,row);
				
				iRow++;
			}
			*/
			
			strElse="";
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			strVariables+="\r\n\t\t\t\t\tiRow=0;";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(!existeFilas) {";
			strVariables+="row = sheet.createRow(iRow);";
			strVariables+="} else {";
			strVariables+="row=sheet.getRow(iRow);";
			strVariables+="}";
			
			strVariables+="\r\n\r\n\t\t\t\t\tcell = row.createCell(iCell);";
			
			strVariables+="\r\n\t\t\t\t\tcell.setCellValue("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			
			strVariables+="\r\n\t\t\t\t\tiRow++;";
				
			strVariables+="\r\n\r\n\t\t\t\t\tfor("+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+"sSeleccionados) {";
			strVariables+="\r\n\t\t\t\t\t\tif(!existeFilas) {";
			strVariables+="row = sheet.createRow(iRow);";
			strVariables+="} else {";
			strVariables+="row=sheet.getRow(iRow);";
			strVariables+="}";
			
			strVariables+="\r\n\r\n\t\t\t\t\t\tcell = row.createCell(iCell);";
			
			
			if(!column.IsForeignKeyMember) {
				if(!EsStringColumnC(column)) {
					strToString=".toString()";
				}
				
				if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
					strGetColumn="get"+GetNombreColumnaClaseC(column)+"()";
				} else {
					if(column.Name.Equals(strId)) {
						strGetColumn="getId()";
						
					} else if(column.Name.Equals(strVersionRow)) {
						strGetColumn="getVersionRow()";
					}
				}
				
				//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
				
				strVariables+="\r\n\t\t\t\t\t\tcell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
				
			} else {			
				//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
				strVariables+="\r\n\t\t\t\t\t\tcell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
			}
			
												
			
			strVariables+="\r\n\t\t\t\t\t\tiRow++;";
			strVariables+="\r\n\t\t\t\t\t}\r\n";
			
			strVariables+="\r\n\t\t\t\t\texisteFilas=true;";
			
			strVariables+="\r\n\t\t\t\t\tiCell++;";
			
			strVariables+="\r\n\t\t\t\t\tbreak;\r\n";
			
			/*	
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";			
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			
			strVariables+="\r\n\r\n\t\t\t\t\tbreak;\r\n";
			*/
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public String GetSetUpdateBorderElementosSwingTablaClase(TableSchema TablaBase,bool conVisibilidad,bool conHabilitar,bool conBorder) {
		String strSwing="";
			
		for (int i = 0; i < TablaBase.Columns.Count; i++) {
			if(TablaBase.Columns[i].Name.Equals(strVersionRow)) {
				continue;
			}
			
			//if(!TablaBase.Columns[i].IsForeignKeyMember) {
				strSwing+=GetDefinicionUpdateBorderControlVariablesSwing(TablaBase.Columns[i],"","",false,conVisibilidad,conHabilitar,conBorder);
			//}
		}			
		
		return strSwing;
}

public string GetDefinicionUpdateBorderControlVariablesSwing(ColumnSchema column,String strIndexName,String strFinalName,bool esParaFk,bool conVisibilidad,bool conHabilitar,bool conBorder) {			
	String strControl="";
	String sColumnName=GetNombreCompletoColumnaClaseC(column);//column.Name;
	String sBorderPainted="";
	//strControl="\r\n\r\n\tpublic void setBorderResaltar"+sColumnName+"() {";	
	//strControl+="\r\n\t\tBorder resaltar=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
	//strControl+="\r\n\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(resaltar);";
	String strObjetoBean=GetObjetoBeanC(TablaBase);
	
	if(conVisibilidad) {
		//strControl+="\r\n\t\tif(this."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+"!=null) {";
		strControl+="\r\n\t\t//this."+GetNombreControlVariablesSwingC(column,"","")+".setVisible("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
		
		strControl+="\r\n\t\tthis."+GetNombrePanelControlVariablesSwingC(column,"","",false)+".setVisible("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
		
		if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(blnConFuncionalidadAccionesCampoVersion1) {
				strControl+="\r\n\t\t\tthis.jButton"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setVisible("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
			}
		}
		//strControl+="}";
		
	} else if(conHabilitar) {
		//strControl+="\r\n\t\tif(this."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"!=null) {";
		strControl+="\r\n\t\tthis."+GetNombreControlVariablesSwingC(column,"","")+".setEnabled("+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
		
		if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(blnConFuncionalidadAccionesCampoVersion1) {
				strControl+="\r\n\t\t\tthis.jButton"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setEnabled("+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
			}
		}
				
		//strControl+="}";
		
	} else if(conBorder) {
		if(EsBitColumn(column)) {
			sBorderPainted="this."+GetNombreControlVariablesSwingC(column,"","")+".setBorderPainted(true);";
		}
		
		strControl+="\r\n\t\tif("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"!=null) {";
		strControl+=sBorderPainted+"this."+GetNombreControlVariablesSwingC(column,"","")+".setBorder("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+");";
		strControl+="}";
	}
	
	return strControl;	
}







public String GetUpdateVisibilidadHabilitarResaltarIndicesVariablesTablasClases(TableSchema TablaBase,bool esVisibilidad,bool esHabilitar, bool esResaltar) {
			String strFuncion=string.Empty;
			String strFuncionFinal=string.Empty;
			String strElse=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			bool blnExisteBusqueda=false;
			bool blnExisteBusquedaFkVariableGlobal=false;
			bool esPrimero=true;
			
			String strTabPanel=string.Empty;
			String strPanelesBusquedas=string.Empty;
			String strPanelBusqueda=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			String strObjetoBean=GetObjetoBeanC(TablaBase);

			//SIEMPRE DECLARAR PANE BUSQUEDA
			//strTabPanel="\r\n\tpublic JTabbedPane jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
			/*
			strPanelesBusquedas="\r\n\tpublic void resaltarPanelBusqueda"+GetNombreClaseC(TablaBase.ToString())+"(String sTipoBusqueda) {";
			strPanelesBusquedas+="\r\n\t\tint index=0;";
			strPanelesBusquedas+="\r\n\t\tBoolean existe=false;";
			strPanelesBusquedas+="\r\n\t\tBorder resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,\"TAB\");\r\n";
			*/
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				blnExisteBusquedaFkVariableGlobal=false;
				strPanelBusqueda="";
				
				if(!indexSchema.IsPrimaryKey) {
					strElse=string.Empty;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {	
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {						
						if(!blnExisteBusqueda) {
							blnExisteBusqueda=true;
							//strTabPanel="\r\n\tprotected JTabbedPane jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							if(!esPrimero) {
								strElse="";//"else ";
							}
							
							if(esVisibilidad) {
								strPanelBusqueda="\r\n\r\n\t\t\tindex= this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".indexOfComponent(this.jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\tjPanel=(JPanel)this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".getComponent(index);";			
								strPanelBusqueda+="\r\n\t\t\t//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE";
								strPanelBusqueda+="\r\n\t\t\tjPanel.setVisible("+strObjetoBean+".mostrar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\tif(!"+strObjetoBean+".mostrar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+" && index>-1) {";
								strPanelBusqueda+="\r\n\t\t\t\tthis.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".remove(index);";
								strPanelBusqueda+="\r\n\t\t\t}";
								
							} else if(esHabilitar) {
								strPanelBusqueda="\r\n\r\n\t\t\tindex= this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".indexOfComponent(this.jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\tif(index>-1) {";
								strPanelBusqueda+="\r\n\t\t\t\tjPanel=(JPanel)this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".getComponent(index);";			
								strPanelBusqueda+="\r\n\t\t\t\t//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI";
								strPanelBusqueda+="\r\n\t\t\t\tjPanel.setEnabled("+strObjetoBean+".activar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\t\tthis.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".setEnabledAt(index,"+strObjetoBean+".activar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\t}";
								
							} else if(esResaltar) {
								strPanelBusqueda="\r\n\r\n\t\t"+strElse+"if("+strObjetoBean+".resaltar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"!=null) {";
								strPanelBusqueda+="\r\n\t\t\tindex= this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".indexOfComponent(this.jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\tif(index>-1) {";
								strPanelBusqueda+="\r\n\t\t\t\tJPanel jPanel=(JPanel)this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".getComponent(index);";			
								strPanelBusqueda+="\r\n\t\t\t\tjPanel.setBorder("+strObjetoBean+".resaltar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
								strPanelBusqueda+="\r\n\t\t\t}";
								strPanelBusqueda+="\r\n\t\t}";
							}
							/*
							strPanelBusqueda="\tpublic JPanel jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							strPanelBusqueda+="\tpublic JButton jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							*/
							
							
							
							/*
							strPanelBusqueda="\r\n\t\t"+strElse+"if(sTipoBusqueda.equals(\""+indexSchema.Name+"\")) {";							
							strPanelBusqueda+="\r\n\t\t\tindex= this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".indexOfComponent(this.jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
							strPanelBusqueda+="\r\n\r\n\t\t\tthis.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(index);";
							strPanelBusqueda+="\r\n\r\n\t\t\tJPanel jPanel=(JPanel)this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".getComponent(index);";
							strPanelBusqueda+="\r\n\r\n\t\t\tthis.setBorderResaltar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"();";
							strPanelBusqueda+="\r\n\r\n\t\t\tjPanel.setBorder(this.resaltar"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
							strPanelBusqueda+="\r\n\t\t\texiste=true;";
							strPanelBusqueda+="\r\n\t\t}";
							*/
							
							//strPanelesBusquedas+="\tprotected JPanel jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strPanelesBusquedas+="\tprotected JButton jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						} else {
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {												
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 
															
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//strInitFuncion+=";\r\n";	
							}
						} else {
							if(!indexSchema.Name.Contains("BusquedaRango")) {
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 																
							} else {
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial",memberColumnSchema.IsForeignKeyMember)+"\r\n";								
								
								//strInitFuncion+=",";
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 																
								break;
							}
						}
						count++;
					}
					
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
					
					if(esPrimero) {
						esPrimero=false;	
					}
							
					//strInitFuncion+=")throws Exception;";																																			
					
					strPanelesBusquedas+=strPanelBusqueda;
				}
			}
			
			/*
			strInitFuncion=strTabPanel+strPanelesBusquedas+strControlesPanelesBusquedas;
			
			strInitFuncion+="\r\n\r\n\t\tif(existe) {";
			strInitFuncion+="\r\n\t\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(resaltar);";
			strInitFuncion+="\r\n\t\t}";			
			strInitFuncion+="\r\n\t}";
			*/
				
			
			return strPanelesBusquedas; 
	}
	

	
public string GetAccionesFromDescripcion(TableSchema table,bool esParaAccionesFormulario){
	String strAccionesReturn="";
	String strSufijoFormulario="";
	
	if(esParaAccionesFormulario) {
		strSufijoFormulario="Formulario";
	}
	
	String strAccionesDescripcion=GetAccionesFromTableFromPropertiesC(table);
				
	String[] strAcciones=strAccionesDescripcion.Split(',');
										
	foreach(String strAccion in strAcciones) {								
		strAccionesReturn="\r\n\r\n\t\t\treporte=new Reporte();";
		strAccionesReturn+="\r\n\t\t\treporte.setsCodigo(\""+strAccion+"\");";
		strAccionesReturn+="\r\n\t\t\treporte.setsDescripcion(\""+strAccion+"\");";						
		strAccionesReturn+="\r\n\r\n\t\t\tthis.tiposAcciones"+strSufijoFormulario+".add(reporte);";
	}
	
	return strAccionesReturn;
}

public string GetSetVariablesFormularioToClaseTableModel(){
		//string strVariables=GetSetVariablesFormularioToClaseTableModelC(TablaBase);
		
		string strVariables=GetSetVariablesFormularioToClaseTableModelBaseC(TablaBase,"",false,"",true);
		
		/*
		string strElse=" else "; strElse+="";
		string strTabsBase="\r\n\t\t\t";
		string strSufijoVariables=""; strSufijoVariables+="";
			  
		bool esPrimero=false;
		string strCommentEjb="";strCommentEjb+="";
		
		String strControl="";strControl+="";
		String strTituloControl="";strTituloControl+="";
		String strTipoControlId="";
		String strTipoControClaselId="";strTipoControClaselId+="";
		String strColumna="";
		String strToString="";strToString+="";
		String strToStringBase=".toString()";strToStringBase+="";
		string strPrefijoTipo="";
		string strPrefijoTipoParse="";
		string strPrefijoTipoAux="";
		string strSufijoTipoAux="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)) {//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			strToString="";
			strPrefijoTipoAux="";
			strSufijoTipoAux="";
		
			strColumna=GetNombreColumnaClaseC(column);
			
			strPrefijoTipo =  GetTipoColumnaClaseC(column);			
			strPrefijoTipoParse=strPrefijoTipo;
			
			if(EsIntColumn(column)) {
				strPrefijoTipoParse="Int";
			}
			
			if(EsDateTimeColumn(column)) {
				strPrefijoTipoAux="new Timestamp(";
				strSufijoTipoAux=".getTime())";
			}
			
			if(column.Name.Equals(strId)) {
				strColumna=GetNombreColumnaClaseC(column);
				//strToString=strToStringBase;
				
				strTipoControlId="jLabel";
				strTipoControClaselId="JLabel";
				
				if(!TieneIdentityColumnC(column)) {
					strTipoControlId="jTextField";
					strTipoControClaselId="JTextFieldMe";
				}
				
				strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipo+".parse"+strPrefijoTipo+"(this."+strTipoControlId+GetNombreColumnaClaseC(column)+GetNombreClaseC(column.Table.ToString())+".getText()));";//strIdGetSet
				
			}  else if(column.Name.Equals(strVersionRow)) {
				//strToString=strToStringBase;
				strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipo+".parse"+strPrefijoTipo+"(this.jLabel"+strVersionRowGetSet+GetNombreClaseC(column.Table.ToString())+".getText()));";
				
			} else if(!column.IsForeignKeyMember) {
				if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
					if(column.Size<51) {	
						strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText());";						
						
					} else if(column.Size<200) {
						strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText());";												
					} else {
						strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText());";
					}
				} else if(column.DataType==DbType.Boolean) {
					strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".isSelected());";				
					
				} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
					//strToString=strToStringBase;
					strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipo+".parse"+strPrefijoTipoParse+"(this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText()));";					
					
				} else if(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column)) {
					strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipoAux+"this.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".getDate()"+strSufijoTipoAux+");";					
					
				}
			}
		}
		*/
		
		return strVariables;
}

public string GetSetVariablesClaseToFormularioTableModel(bool paraObjetoBean){		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\r\n\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=false;
		string strCommentEjb="";strCommentEjb+="";
		
		String strControl="";strControl+="";
		String strTituloControl="";strTituloControl+="";
		String strTipoControlId="";
		String strTipoControClaselId="";strTipoControClaselId+="";
		String strColumna="";
		String strToString="";
		String strToStringBase=".toString()";
		
		String strSufijoObjeto="";
		
		if(paraObjetoBean) {
			strSufijoObjeto=strClaseBean;
		}
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			strToString="";
			strColumna=GetNombreColumnaClaseC(column);
			
			if(column.Name.Equals(strId)) {
				strColumna=GetNombreColumnaClaseC(column);
				strToString=strToStringBase;
				
				strTipoControlId="jLabel";
				strTipoControClaselId="JLabel";
				
				if(!TieneIdentityColumnC(column)) {
					strTipoControlId="jTextField";
					strTipoControClaselId="JTextFieldMe";
				}
				
				strVariables+=strTabsBase+"this."+strTipoControlId+GetNombreColumnaClaseC(column)/*strIdGetSet*/+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
			
			}  else if(column.Name.Equals(strVersionRow)) {
				strToString=strToStringBase;
				strVariables+=strTabsBase+"this.jLabel"+strVersionRowGetSet+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
				
			} else if(!column.IsForeignKeyMember) {
				if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
					if(column.Size<51) {	
						strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";
						
					} else if(column.Size<200) {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					} else {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					}
				} else if(column.DataType==DbType.Boolean) {
					strVariables+=strTabsBase+"this.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setSelected("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
					strToString=strToStringBase;
					strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";	
					
				} else if(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column)) {
					if(!EsTimeColumn(column)) {
						strVariables+=strTabsBase+"this.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".setDate("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					} else {
						strVariables+=strTabsBase+"this.jSpinner"+strColumna+GetNombreClaseC(column.Table.ToString())+".setValue("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					}					
				} else if((column.NativeType=="image"&&column.DataType==DbType.Binary&&column.Name!=strVersionRow)||(column.DataType==DbType.Binary&&column.Name!=strVersionRow)) {
					//strValorTexto="FuncionesSwing.getBytesFromFile(this.jFileChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".getSelectedFile())";
					//strValorTexto="this.jFileChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".getSelectedFile()";						
					//strVariables+=strTabsBase+strTabsExtra+strComment+strPrefijo+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipoAux+strValorTexto+strSufijoTipoAux+");";
					String strIndexName="";
					String strFinalName="";
					
					if(!paraObjetoBean) {
						if(!column.Name.Equals(strArchivo_Lower)) {
							strVariables+="\r\n\r\n"+strTabsBase+"this.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setText(\"Imagen\");";
							
							strVariables+="\r\n"+strTabsBase+"if("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()!=null) {";
							strVariables+=strTabsBase+"\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setMinimumSize(new Dimension(Constantes.ISWING_ANCHO_CONTROL_LABEL*2,Constantes2.ISWING_ALTO_CONTROL_LABEL*8));";
							strVariables+=strTabsBase+"\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setMaximumSize(new Dimension(Constantes.ISWING_ANCHO_CONTROL_LABEL*2,Constantes2.ISWING_ALTO_CONTROL_LABEL*8));";
							strVariables+=strTabsBase+"\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setPreferredSize(new Dimension(Constantes.ISWING_ANCHO_CONTROL_LABEL*2,Constantes2.ISWING_ALTO_CONTROL_LABEL*8));";
																			
							strVariables+="\r\n"+strTabsBase+"\timageActual=FuncionesSwing.getImageFromBytes((byte[])"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";
								
							strVariables+="\r\n"+strTabsBase+"\tif(imageActual!=null) {";
							strVariables+=strTabsBase+"\t\timageIcon=new ImageIcon(imageActual);";
									
							strVariables+="\r\n"+strTabsBase+"\t\tif (imageIcon != null) {";        	        	
							strVariables+=strTabsBase+"\t\t\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setIcon(imageIcon);";
							strVariables+=strTabsBase+"\t\t\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setText(null);";            
							strVariables+=strTabsBase+"\t\t\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".updateUI();";
							strVariables+=strTabsBase+"\t\t} else {";
							strVariables+=strTabsBase+"\t\t\tthis.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setText(\"Imagen no Encontrada\");";
							strVariables+=strTabsBase+"\t\t}";
							strVariables+=strTabsBase+"\t}";	
							strVariables+=strTabsBase+"}\r\n";	
						
						} else {
							strVariables+="\r\n\r\n"+strTabsBase+"this.jLabelImagen"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setText(\""+strArchivo_Lower+"\");";
						}								
					}
				}
			}
		}
		
		return strVariables;
}

public string GetSetVariablesClaseReturnToBean(bool fromObjetoToBean,bool soloForeignKey,bool fromObjetoToObjeto){		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\r\n\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=false;
		string strCommentEjb="";strCommentEjb+="";
		
		String strControl="";strControl+="";
		String strTituloControl="";strTituloControl+="";
		String strTipoControlId="";
		String strTipoControClaselId="";strTipoControClaselId+="";
		String strColumna="";
		String strToString="";
		String strToStringBase=".toString()";
		String strClaseBeanLocal=strClaseBean;
		
		String strSufijoObjeto="Local";
		
		if(!fromObjetoToBean) {
			if(!fromObjetoToObjeto) {
				strSufijoObjeto=strClaseBean;
				strClaseBeanLocal="";
			} else {
				strSufijoObjeto="Origen";
				strClaseBeanLocal="";
			}
		}
		
		//if(paraObjetoBean) {
		//strSufijoObjeto=strClaseBean;
		//}
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		String strDefaultInit="if(conDefault || (!conDefault && ";
		String strIfDefault="";
		
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(soloForeignKey) {
				if(!column.IsForeignKeyMember) {
					continue;
				}
			}
			
			if(column.Name.Equals(strVersionRow)) {
				continue;
			}
			
			if(!fromObjetoToObjeto) {
				if(EsColumnaOcultaTabla(column) || EsBinaryColumn(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
					continue;	
				}
			}
			
			strToString="";
			strColumna=GetNombreColumnaClaseC(column);
			
			strIfDefault=strDefaultInit+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()!=null && !"+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+GetDefaultValueColumna(column)+")";
			strIfDefault+=")) {";
			
			if(column.Name.Equals(strId)) {
				strColumna=GetNombreColumnaClaseC(column);
				strToString=strToStringBase;
				
				strTipoControlId="jLabel";
				strTipoControClaselId="JLabel";
				
				if(!TieneIdentityColumnC(column)) {
					strTipoControlId="jTextField";
					strTipoControClaselId="JTextFieldMe";
				}
				
				//strVariables+=strTabsBase+"this."+strTipoControlId+GetNombreColumnaClaseC(column)/*strIdGetSet*/+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
				strVariables+=strTabsBase+"if(conColumnasBase) {"+strIfDefault+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+".set"+GetNombreCompletoColumnaClaseC(column)+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());}"+"}";
				
			}  else if(column.Name.Equals(strVersionRow)) {
				strToString=strToStringBase;
				//strVariables+=strTabsBase+"this.jLabel"+strVersionRowGetSet+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
				strVariables+=strTabsBase+strIfDefault+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+".set"+GetNombreCompletoColumnaClaseC(column)+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());}";
				
			} else if(!column.IsForeignKeyMember) {
				strVariables+=strTabsBase+strIfDefault+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+".set"+GetNombreCompletoColumnaClaseC(column)+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());}";
				
				/*
				if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
					if(column.Size<51) {	
						strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";
						
					} else if(column.Size<200) {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					} else {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					}
				} else if(column.DataType==DbType.Boolean) {
					strVariables+=strTabsBase+"this.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setSelected("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
					strToString=strToStringBase;
					strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";	
					
				} else if(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column)) {
					strVariables+=strTabsBase+"this.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".setDate("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				}
				*/
			} else {
				if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)){
					continue;
				}
				
				if( !EsColumnaVariableGlobalDataBaseFromPropertiesC(column) 
					&& !EsColumnaVariableModuloGlobalC(column)
					&& !column.Name.Equals(strIdUsuario) 
					&& !ContieneColumna(TablaBase,strIdAnio) 
					&& !ContieneColumna(TablaBase,strIdMes)
				) {
					
					strVariables+=strTabsBase+strIfDefault+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanLocal+".set"+GetNombreCompletoColumnaClaseC(column)+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strSufijoObjeto+".get"+GetNombreCompletoColumnaClaseC(column)+"());}";
				}								
			}
		}
		
		return strVariables;
}

public bool EsColumnaOcultaTabla(ColumnSchema column) {
	bool esColumnaOculta=EsColumnaOcultaTablaC(column);
	
	/*
	if(GetEsReporteParametroFromPropertiesC(column) || !GetShowTableColumnFromPropertiesC(column) 
		|| column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)	{
		esColumnaOculta=true;
	}
	*/
	
	return esColumnaOculta;
}
	
public string GetFilaCabecera(){		
	string strFilaCabecera="";
	bool esPrimero=true;
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		if(column.Name.Equals(strVersionRow)) {
			strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
			strValidarColumnInit+="\r\n\t\t\tsFilaCabecera+=sDelimiter;";
			strValidarColumnFin="\r\n\t\t}\r\n";
		}
		
		if(!esPrimero && !column.Name.Equals(strVersionRow)) {
			strFilaCabecera+="\r\n\t\tsFilaCabecera+=sDelimiter;";
		} else {
			esPrimero=false;
		}
				
		strFilaCabecera+=strValidarColumnInit;
		strFilaCabecera+="\r\n\t\tsFilaCabecera+="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+";";
		strFilaCabecera+=strValidarColumnFin;
	}
			
	return strFilaCabecera;
}

public string GetFilaCabeceraExcel(){		
	string strFilaCabecera="";
	bool esPrimero=true;
	int iColumna=0;
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	strFilaCabecera+="\r\n\t\tHSSFCell cell =null;";
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		/*
		if(!esPrimero) {
			//strFilaCabecera+="\r\n\t\tsFilaCabecera+=sDelimiter;";
		} else {
			esPrimero=false;
		}
		*/				
		
		if(column.Name.Equals(strVersionRow)) {
			strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
			strValidarColumnFin="\r\n\t\t}\r\n";
		}
		
		strFilaCabecera+=strValidarColumnInit;
		strFilaCabecera+="\r\n\t\tcell = row.createCell(iColumn++"+/*iColumna+*/");cell.setCellValue("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
		//strFilaCabecera+="\r\n\t\tsFilaCabecera+="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+";";
		strFilaCabecera+=strValidarColumnFin;
		
		iColumna++;
	}
			
	return strFilaCabecera;
}

public string GetFilaDatos(){		
	string strFilaCabecera="";
	string strToString="";
	string strGetColumn="";
	
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	bool esPrimero=true;
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strToString="";
		strGetColumn="";
		
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		if(!esPrimero && !column.Name.Equals(strVersionRow)) {
			strFilaCabecera+="\r\n\t\tsFilaDatos+=sDelimiter;";
		} else {
			esPrimero=false;
		}
				
		if(!column.IsForeignKeyMember) {
			if(!EsStringColumnC(column)) {
				strToString=".toString()";
			}
			
			if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
				strGetColumn="get"+GetNombreColumnaClaseC(column)+"()";
			} else {
				if(column.Name.Equals(strId)) {
					strGetColumn="getId()";
					
				} else if(column.Name.Equals(strVersionRow)) {
					strGetColumn="getVersionRow()";
					
					strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
					strValidarColumnInit+="\r\n\t\t\tsFilaDatos+=sDelimiter;";
					strValidarColumnFin="\r\n\t\t}\r\n";
				}
			}
			
			strFilaCabecera+=strValidarColumnInit;									
			strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+";";
			strFilaCabecera+=strValidarColumnFin;
			
		} else {
			strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"();";
		}
	}
			
	return strFilaCabecera;
}

public string GetFilaDatosExcel(){		
	string strFilaCabecera="";
	string strToString="";strToString+="";
	string strGetColumn="";
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	bool esPrimero=true;
	
	strFilaCabecera+="\r\n\t\tHSSFCell cell =null;";
	int iColumna=0;
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strToString="";
		strGetColumn="";
		
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		/*
		if(!esPrimero) {
			strFilaCabecera+="\r\n\t\tsFilaDatos+=sDelimiter;";
		} else {
			esPrimero=false;
		}
		*/
		
		if(!column.IsForeignKeyMember) {
			if(EsBinaryColumn(column)) {
				continue;	
			}
			
			if(!EsStringColumnC(column)) {
				strToString=".toString()";
			}
			
			if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
				strGetColumn="get"+GetNombreColumnaClaseC(column)+"()";
			} else {
				if(column.Name.Equals(strId)) {
					strGetColumn="getId()";
					
				} else if(column.Name.Equals(strVersionRow)) {
					strGetColumn="getVersionRow()";
					strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
					strValidarColumnFin="\r\n\t\t}\r\n";
				}
			}
								
			strFilaCabecera+=strValidarColumnInit;
			strFilaCabecera+="\r\n\t\tcell = row.createCell(iColumn++"+/*iColumna+*/");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
			strFilaCabecera+=strValidarColumnFin;
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+";";
		
		} else {			
			strFilaCabecera+="\r\n\t\tcell = row.createCell(iColumn++"+/*iColumna+*/");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"();";
		}
		
		iColumna++;
	}
			
	return strFilaCabecera;
}

public string GetFilaDatosXml(){		
	string strFilaCabecera="";
	string strToString="";
	string strGetColumn="";
	string strColumnName="";
	string strValidarColumnInit="";
	string strValidarColumnFin="";
		
	bool esPrimero=true;
	
	//strFilaCabecera+="\r\n\t\tHSSFCell cell =null;";
	int iColumna=0;
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strToString="";
		strGetColumn="";
		strColumnName="";
		
		strValidarColumnInit="";
		strValidarColumnFin="";
					
		/*
		if(!esPrimero) {
			strFilaCabecera+="\r\n\t\tsFilaDatos+=sDelimiter;";
		} else {
			esPrimero=false;
		}
		*/
		
		if(!column.IsForeignKeyMember) {
			if(!EsStringColumnC(column)) {
				strToString=".toString().trim()";
			} else {
				strToString=".trim()";
			}
			
			if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
				strColumnName=GetNombreColumnaClaseC(column);
				strGetColumn="get"+strColumnName+"()";
			} else {
				if(column.Name.Equals(strId)) {
					strColumnName="Id";
					strGetColumn="get"+strColumnName+"()";
					
				} else if(column.Name.Equals(strVersionRow)) {
					strColumnName="VersionRow";
					strGetColumn="get"+strColumnName+"()";
					
					strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
					strValidarColumnFin="\r\n\t\t}\r\n";
				}
			}
			
			//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+";";
			
			strFilaCabecera+=strValidarColumnInit;
			strFilaCabecera+="\r\n\r\n\t\tElement element"+strColumnName+" = document.createElement("+GetNombreClaseC(column.Table.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+");";
			strFilaCabecera+="\r\n\t\telement"+strColumnName+".appendChild(document.createTextNode("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+"));";
			strFilaCabecera+="\r\n\t\telement.appendChild(element"+strColumnName+");";
			strFilaCabecera+=strValidarColumnFin;
			
		} else {			
			//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"();";
			
			strFilaCabecera+="\r\n\r\n\t\tElement element"+GetNombreColumnaClaseFkDescripcionC(column)+" = document.createElement("+GetNombreClaseC(column.Table.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+");";
			strFilaCabecera+="\r\n\t\telement"+GetNombreColumnaClaseFkDescripcionC(column)+".appendChild(document.createTextNode("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"()));";
			strFilaCabecera+="\r\n\t\telement.appendChild(element"+GetNombreColumnaClaseFkDescripcionC(column)+");";
		}
		
		iColumna++;
	}
			
	return strFilaCabecera;
}

public string GetColumnsSetRendererEditorTableModel(){		
		string strVariables="";
		string strVariable="";
		string strVariableDefinir="";
		string strVariableListener="";
		string strElse=" else ";
		string strTabsBase="\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		string strWidthColumn="";
		
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		String strSufijoListenerTotalizar="";
		String sParametro="";
		bool existeRender=false;
		String strSwingWidthControlExtra ="";//GetAnchoColumnSwingExtraC(SWING_WIDTH_CONTROL,null);
		String strObjetoBean=GetObjetoBeanC(TablaBase);
		//String strParametroSizeTablaTieneTotalizar="";		
		/*
		if(blnTieneCampoTotalizar) {
			strParametroSizeTablaTieneTotalizar=",iSizeTabla";	
		}
		*/
		String strMostrarColumnaGlobal="";
		String sMasNormal="";
		String sMasFk="";
		String sEsFk="";
		String strTipoBusqueda="BASICO";
		String strNombreHotKeyAbstractAction="NONE";
		String strConHotKeys="true";
		String strConEditorDobleClic="false";
		
		//SOLO SON AUXILIARES
		String strIndexName="";
		String strFinalName="";
		
		foreach(ColumnSchema column in TablaBase.Columns) {			
			strSwingWidthControlExtra ="";
			strMostrarColumnaGlobal="";
			
			strConHotKeys="true";			
			strTipoBusqueda="BASICO";
			strNombreHotKeyAbstractAction="NONE";
			strConEditorDobleClic="false";
		
			//CON ESTRO FUNCIONABA
			
			if( EsColumnaOcultaTabla(column) 
				|| (GetNoInsertEditColumnFromPropertiesC(column) && !GetShowTableColumnFromPropertiesC(column))
			) {
			
				//Trace.WriteLine(column.Name);
				continue;	
			}												
			
			
			if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)
				&& !EsColumnaVariableGlobalMostrarDataBaseFromPropertiesC(column)
			) {
					
				strMostrarColumnaGlobal=" && Constantes.ISDEVELOPING";
			}
			
			string strPrefijoTipo =  GetTipoColumnaClaseC(column);
			strSufijoListenerTotalizar="";			
			sParametro="";
			strVariable="";			
			strElse="";
			existeRender=false;
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			if(column.IsForeignKeyMember) {
				sMasNormal="";
				sMasFk="++";
				sEsFk="true";
			} else {
				sMasNormal="++";
				sMasFk="";
				sEsFk="false";
			}
			
			//IF VISIBILIDAD
			strVariableDefinir="\r\n\r\n\r\n"+strTabsBase+"tableColumn=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+","+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+"));";			
			strVariableDefinir+="\r\n\r\n\t\tif("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+" && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+","+sEsFk+",iCountNumeroColumnasNormal"+sMasNormal+",iCountNumeroColumnasFk"+sMasFk+")"+strMostrarColumnaGlobal+") {";
			
			//OJO
			//ERROR CUANDO HABILITO ESTO
			//existeRender=true; ACTUALIZA RENDER TOTALES
			
			
			
			if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)
							|| EsColumnaVariableModuloGlobalC(column)) {
								
				strTipoBusqueda="GLOBAL";
				strConHotKeys="false";
							
			} else if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
				strTipoBusqueda="CON_BUSQUEDA";
			}
						
			if(GetConEventChangeColumnFromPropertiesC(column)) {
				//if(!strTipoBusqueda.Equals("BASICO")) {
				strTipoBusqueda+="-";
				//}
							
				strTipoBusqueda+="CON_EVENT_CHANGE";				
			}
						
			if(GetOnChangeColumnFromPropertiesC(column) || GetConEventChangeColumnFromPropertiesC(column)) {
				if(EsStringColumnC(column) || EsTipoColumnaNumeroParaClaseC(column)) {
					strConEditorDobleClic="true";
				}
			}
			
			if(column.Name!=strId) {
				if(!column.IsForeignKeyMember) {
					strWidthColumn=GetAnchoColumnFromPropertiesC(column);//"Constantes.ISWING_ANCHO_COLUMNA";
					
					if(ValidacionCampoTotalizarC(column)) {
						//LISTENER VALOR SE REALIZA EN DEFINICION DEL MODEL
						//strSufijoListenerTotalizar="Valor";
					}
			
					strVariableListener="\r\n"+strTabsBase+strCommentListener+"tableColumn.addPropertyChangeListener(new "+GetNombreClaseC(TablaBase.ToString())+"Property"+strSufijoListenerTotalizar+"ChangeListener());";
					
					if(ValidacionCampoTotalizarC(column)) {
						//existeRender=true;
					}
					
					if(EsStringColumnC(column)) {
						existeRender=true;
						strSwingWidthControlExtra =GetAnchoColumnSwingExtraC(SWING_WIDTH_CONTROL,column);
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new LabelRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\","+strConEditorDobleClic+"));";//"-"+
						
						
					} else if(EsTipoColumnaNumeroParaClaseC(column)) {
						existeRender=true;
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new TextFieldRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\","+strConEditorDobleClic+"));";//"-"+
						
						
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new BooleanEditorRenderer());";							
					} else if(EsDateColumn(column)) {
						existeRender=true;
						strSwingWidthControlExtra =" + FuncionesSwing.getValorProporcion("+SWING_WIDTH_CONTROL+",30)";
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new DateRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new DateEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
					
					} else if(EsTimeColumn(column)) {
						existeRender=true;
						strSwingWidthControlExtra =" + FuncionesSwing.getValorProporcion("+SWING_WIDTH_CONTROL+",30)";
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new TimeRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TimeEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
					
					} else if(EsDateTimeColumn(column)) {
						existeRender=true;
						strSwingWidthControlExtra =" + FuncionesSwing.getValorProporcion("+SWING_WIDTH_CONTROL+",100)";
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new DateTimeRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new DateTimeEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
					
					
					} else if(EsBitColumn(column)) {
						existeRender=true;
						
						if(GetWebNombreTituloColumnFromPropertiesC(column).Length<=4) {
							strWidthColumn="50";
						}
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new BooleanRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+"));";
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new BooleanEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new BooleanEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+""+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
						
					
					} else if(EsBinaryColumn(column)) {
						existeRender=true;
						
						if(!column.Name.Equals(strArchivo_Lower)) {
							strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new LabelImageRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
						} else {
							strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new LabelArchivoRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
						}
						
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";//"-"+
						
						
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new BooleanEditorRenderer());";							
					}
					
					strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 				
					strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+strSwingWidthControlExtra+";";
					
				} else {
					strWidthColumn=GetAnchoColumnFromPropertiesC(column);//"Constantes.ISWING_ANCHO_COLUMNA";
					
					//ES LA COLUMNA DESCRIPCION DEL FOREIGN KEY POR ESO EL TIPO ES STRING
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column) 
						|| EsColumnaVariableModuloGlobalC(column)
						|| GetNoInsertEditColumnFromPropertiesC(column)
					) {
						//sTabColumnaOculta="\t";
						//sIfColumnaOculta="\r\n\t"+sTabColumnaOculta+"if(Constantes.ISDEVELOPING) {\r\n";
						//sIfColumnaOcultaFin="\t"+sTabColumnaOculta+"}";	
					}	
					
					strSufijoListenerTotalizar="";
					strVariableListener="\r\n"+strTabsBase+strCommentListener+"tableColumn.addProperty"+strSufijoListenerTotalizar+"ChangeListener(new "+GetNombreClaseC(TablaBase.ToString())+"PropertyChangeListener());";
			
					//COMENTAR Y DESCOMENTAR PARA HABILITAR O NO TieneColumnaComboTablaNormalC(column)
					if(!(ConSwingCombosTabla && TieneColumnaComboTablaNormalC(column,false,false))) {
						Trace.WriteLine(column.Name+"-"+ConSwingCombosTabla);
					} else {
						//Trace.WriteLine(column.Name+"-"+ConSwingCombosTabla);
						
						existeRender=true;
						
						if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
							sParametro="this.jComboBox"+GetNombreCompletoColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla";	
						} else {
							sParametro="this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey";
						}
						
						
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new "+GetNombreClaseRelacionadaFromColumn(column)+/*GetNombreCompletoClaseRelacionadaFromColumn(column)+*/"TableCellFk("+sParametro+","+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+",this,"+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new "+GetNombreClaseRelacionadaFromColumn(column)+/*GetNombreCompletoClaseRelacionadaFromColumn(column)+*/"TableCellFk("+sParametro+","+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+",this,"+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+","+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
					}
					
					strSwingWidthControlExtra =GetAnchoColumnSwingExtraC(SWING_WIDTH_CONTROL,column);
					
					strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 				
					strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+strSwingWidthControlExtra+";";
				}
			} else {
				existeRender=true;
				
				strWidthColumn="50";
				//strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.addPropertyChangeListener(new PropertyChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());"; 
				strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new TextFieldRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+strParametroSizeTablaTieneTotalizar+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\"));";
				//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+"));";
				
				strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new TextFieldEditorRenderer("+strObjetoBean+"."+GetNombreBorderControlVariablesSwingC(column,"","",false)+","+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+",this,"+strConHotKeys+",\""+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+"\",\""+strTipoBusqueda+"\","+strConEditorDobleClic+"));";//"-"+
				
				
				strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+");"; 	 
				strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+");"; 	 
				strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+");"; 				
				strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+";";
			}
			
			strVariable=strVariableDefinir+strVariable;
				
			if(existeRender) {
				strVariable+=strVariableListener;
				//strVariable=strVariableDefinir+strVariableListener+strVariable;								
			}
			
			//FIN IF VISIBILIDAD
			strVariable+="\r\n\t\t} else {";
			//strVariable+="\r\n"+/*"\r\n\r\n\r\n"+*/strTabsBase+"tableColumn=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+","+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+"));";
			
			strVariable+="\r\n"+strTabsBase+"Funciones2.setTableColumnOcultar(tableColumn);";
			/*
			strWidthColumn="0";			
			strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+");"; 	 
			strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+");"; 	 
			strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+");"; 				
			strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+";";
			*/
			
			strVariable+="\r\n\t\t}";
			
			strVariables+=strVariable;
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsSetFuncionTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		string strProcesarTotales="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strPrefijoTipo =  GetTipoColumnaClaseC(column);
			
			strElse="";
			strProcesarTotales="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			if(ValidacionCampoTotalizarC(column)) {
				strProcesarTotales="esCampoValor=true;";
			}
			
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"try {"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(("+strPrefijoTipo+") value);"+strProcesarTotales+"} catch (Exception e) {e.printStackTrace();} break;";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsGetFuncionTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			//string strValor =  "true";
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"return this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s.get(rowIndex).get"+GetNombreCompletoColumnaClaseC(column)+"();";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsEsEditableTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strValor =  "true";
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"return "+strValor+";";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsTipoTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strPrefijoTipo =  GetTipoColumnaClaseC(column);
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"return "+strPrefijoTipo+".class;";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsNameTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t\t\t\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+strElse+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper();
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
				
		strCommentEjb+="";
		
		return strVariables;
	}
	
public  String SetGetVariablesForeignKeys() {
	String sVariablesArray="";
	String strComentarioParaEjb="";strComentarioParaEjb+="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;

	bool blnVerificarDeshabilitarFk=false;
	String strVerificarDeshabilitarFk="";strVerificarDeshabilitarFk+="";
	bool blnNoLoadFk=false;
	String strComentarioNoLoadFk="";strComentarioNoLoadFk+="";
	
	if(!blnNoStandardTableFromProperties) {			
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(column.IsForeignKeyMember) {
				strComentarioNoLoadFk="";
								
				//SI FUNCIONA PERO NO SIEMPRE				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				//FUNCIONA SIEMPRE
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
		
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
				//sVariablesArray+="\r\n\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"() {";
				sVariablesArray+="\r\n\r\n\t\t\tif(!finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +".equals(\"NONE\")) {";
				sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strForeignKey+".get"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"();";//"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">();";
				sVariablesArray+="\r\n\t\t\t}";
				//sVariablesArray+="\r\n\t}";
				
				/*
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n";
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.setConnexion(this.connexion);\r\n";
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(true);\r\n";
				
				String strQueryStringValoresLista="sFinalQuery";
					
				sVariablesArray+="\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"s(finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +",new Pagination());\r\n";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+""+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();";			
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		bool blnAdmiteNulos=false;
		int cont=0;
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				cont++;
				blnAdmiteNulos=false;										
		}
	}
	
	return sVariablesArray;
}

public string GetTiposAcciones() {
	String sTipo="false";
	
	if(TieneCampoTotalizarC(TablaBase)) {
		sTipo="true";
	}
	
	return sTipo;
}

public string GetPermiteImportar() {
	String sTipo="false";
	
	if(blnPermiteImportar) {
		sTipo="true";
	}
	
	return sTipo;
}


public string GetColumnsSeleccionarTodos()
	{		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(!EsBitColumn(column)) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=" else ";	
			}
			
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
			strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
			strVariables+="\r\n\t\t"+strTabsBase+strCommentEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetNombreColumnaClaseC(column)+"(this.isSeleccionarTodos);";
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+"}";
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetColumnsDescripcionReporteGroupGenerico()
	{		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(ValidacionCampoTotalizarC(column) || column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=" else ";	
			}
			
			String strToString="";
			
			if(!column.IsForeignKeyMember && !EsBitColumn(column) && !EsDateColumn(column)) {//+GetNombreColumnaClaseC(column)
			
				if(!EsStringColumnC(column)) {
					strToString=".toString()";
				}
				
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetNombreColumnaClaseC(column)+"()"+strToString+");";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			
			} else if(column.IsForeignKeyMember){
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strDescripcion+"());";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			
			} else if(EsBitColumn(column)){
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetNombreColumnaClaseC(column)+"()));";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			
			} else if(EsDateColumn(column)){
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetNombreColumnaClaseC(column)+"()));";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			}
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetColumnsSetValorGeneralTodos()
	{		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsBitColumn(column) || column.IsForeignKeyMember || column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=" else ";	
			}						
			
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";//sValorCampoGeneral,jTextFieldValorCampoGeneral"+GetNombreClaseC(TablaBase.ToString())+".getText()
			strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
			strVariables+="\r\n\t\t"+strTabsBase+strCommentEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetNombreColumnaClaseC(column)+"("+GetTipoColumnaParse(column,"this.sValorCampoGeneral")+");";
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+"}";
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public String GetReporteClasesRelacionadas(TableSchema TablaBase,String strTab) {
	String strTablaClaseRelacionada=string.Empty;
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(TablaBase);
	//TableSchema tablaRelacionadaObjetivo;
							
	//foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
	foreach(TableSchema tablaRelacionadaObjetivo in tablasRelacionadasEncontradas) {									
		if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo)) {
			continue;
		}
					
		//strTablaClaseRelacionada+="\r\n\t\t"+strTab+"classes.add(new Classe("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+ ".class));";
		strTablaClaseRelacionada+="\r\n\r\n\t\t\tInputStream reportFile"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" = AuxiliarReportes.class.getResourceAsStream(\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"DetalleRelacionesDesign.jasper\");";			
		strTablaClaseRelacionada+="\r\n\t\t\tparameters.put(\"subreport_"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"\", reportFile"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+");";
	}
				
	return strTablaClaseRelacionada; 
}

public String GetListasParametroTablesRelacionadas(TableSchema table,bool esParaLogic,bool esParaEventos,bool esParaActualizarBeanActual,bool esParaActualizarFormulario,bool esParaActualizarListaConstantesFunciones,bool esParaActualizarObjetoActualRelaciones) {
	String sTablaClaseRelacionada=String.Empty;
	
	sTablaClaseRelacionada=GetListasParametroTablesRelacionadasC(table,esParaLogic,esParaEventos,esParaActualizarBeanActual,esParaActualizarFormulario,esParaActualizarListaConstantesFunciones,esParaActualizarObjetoActualRelaciones);
	
	/*	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
	
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strNombreAdicional="";
	
	
	
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {								
		strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);		
		strTipoLista="";
		
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			if(!esParaEventos && !esParaActualizarBeanActual && !esParaActualizarFormulario) { 
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
													
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";
				} else {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()";
				}

				sTablaClaseRelacionada+=","+strTipoLista+ strTipoObjetos;
			
			} else if(esParaEventos) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
													
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";
				} else {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()";
				}
				
				sTablaClaseRelacionada+="\r\n\t\t\tfor(Classe clas:classes) {";
				sTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)) {";				
				sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(table.ToString())+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"("+strTipoLista+ strTipoObjetos+");";//this.
				sTablaClaseRelacionada+="\r\n\t\t\t\t\tbreak;";
				sTablaClaseRelacionada+="\r\n\t\t\t\t}";
				sTablaClaseRelacionada+="\r\n\t\t\t}";
			} else if(esParaActualizarBeanActual) {
				strTipoLista=""+GetNombreClaseObjetoC(table.ToString())+strReturnGeneral+".get"+GetNombreClaseC(table.ToString())+"().";
													
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";
				} else {
					strTipoObjetos="get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()";
				}

				sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(table.ToString())+strClaseBean+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"("+strTipoLista+ strTipoObjetos+");";
			
			} else if(esParaActualizarFormulario) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
													
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";
				} else {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(";
				}
				
				sTablaClaseRelacionada+="\r\n\t\t\tfor(Classe clas:classes) {";
				sTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)) {";							
				sTablaClaseRelacionada+="\r\n\t\t\t\t\t"+strTipoLista+ strTipoObjetos+""+GetNombreClaseObjetoC(table.ToString())+".get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"());";//strClaseBean+
				sTablaClaseRelacionada+="\r\n\t\t\t\t\t"+strTipoLista+"inicializarActualizarBindingTabla"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(false);";
				sTablaClaseRelacionada+="\r\n\t\t\t\t\tbreak;";
				sTablaClaseRelacionada+="\r\n\t\t\t\t}";
				sTablaClaseRelacionada+="\r\n\t\t\t}";
			}
		
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
			if(!esParaEventos && !esParaActualizarBeanActual && !esParaActualizarFormulario) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
				
				
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";
				} else {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()";		
				}
				
				sTablaClaseRelacionada+=","+strTipoLista+ strTipoObjetos;	
			
			} else if(esParaEventos) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
				
				
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";
				} else {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()";		
				}
				
				sTablaClaseRelacionada+="\r\n\t\t\tfor(Classe clas:classes) {";
				sTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)) {";
				sTablaClaseRelacionada+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(table.ToString())+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s("+strTipoLista+ strTipoObjetos+");";//this.
				sTablaClaseRelacionada+="\r\n\t\t\t\t\tbreak;";
				sTablaClaseRelacionada+="\r\n\t\t\t\t}";
				sTablaClaseRelacionada+="\r\n\t\t\t}";
			} else if(esParaActualizarBeanActual) {
				strTipoLista=""+GetNombreClaseObjetoC(table.ToString())+strReturnGeneral+".get"+GetNombreClaseC(table.ToString())+"().";
				
				
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";
				} else {
					strTipoObjetos="get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()";
				}
				
				sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(table.ToString())+strClaseBean+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s("+strTipoLista+ strTipoObjetos+");";
			
			} else if(esParaActualizarFormulario) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
				
				
				if(!esParaLogic) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";
				} else {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(";		
				}
				
				sTablaClaseRelacionada+="\r\n\t\t\tfor(Classe clas:classes) {";
				sTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.clas.equals("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class)) {";											
				sTablaClaseRelacionada+="\r\n\t\t\t\t\t"+strTipoLista+ strTipoObjetos+""+GetNombreClaseObjetoC(table.ToString())+".get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"s());";//strClaseBean+
				sTablaClaseRelacionada+="\r\n\t\t\t\t\t"+strTipoLista+"inicializarActualizarBindingTabla"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(false);";
				sTablaClaseRelacionada+="\r\n\t\t\t\t\tbreak;";
				sTablaClaseRelacionada+="\r\n\t\t\t\t}";
				sTablaClaseRelacionada+="\r\n\t\t\t}";
			}
		}
	}
	*/
	
	return sTablaClaseRelacionada;
}


public String GetListasParametroTablesRelacionadasTempRespaldo(TableSchema table,bool esParaLogic,bool esParaEventos,bool esParaActualizarBeanActual) {
	String sTablaClaseRelacionada=String.Empty;
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
	
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strNombreAdicional="";
	String strComaSaltoLinea=",";
	
	String strObjetoActualRelacionIni="";
	String strObjetoActualRelacionFin="";
	
	String strClaseBeanActual="";
	String strThis="this.";
	
	
	if(esParaEventos) {
		strComaSaltoLinea="\r\n\t\t\t";
		
		//strObjetoActualRelacionIni="this."+GetNombreClaseObjetoC(TablaBase.ToString());
		strObjetoActualRelacionFin=");";
	
	}
	
	if(esParaActualizarBeanActual) {
		strClaseBeanActual=strClaseBean;
		strThis="";
	}
	
		
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {								
		strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		
		strTipoLista="";
		
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			if(!esParaActualizarBeanActual) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
			} else {
				strTipoLista=""+GetNombreClaseObjetoC(TablaBase.ToString())+strReturnGeneral+".get"+GetNombreClaseC(TablaBase.ToString())+"().";
			}
			//strTipoLista=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" ";	
								
			if(!esParaLogic) {
				strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";
			} else {
				if(!esParaActualizarBeanActual) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()";
				} else {
					strTipoObjetos="get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()";
				}
			}
		
			if(esParaEventos) {
				strObjetoActualRelacionIni=strThis+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanActual+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(";
			}
	
			sTablaClaseRelacionada+=strComaSaltoLinea+strObjetoActualRelacionIni+strTipoLista+ strTipoObjetos+strObjetoActualRelacionFin;
			
		
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
			if(!esParaActualizarBeanActual) {
				strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
			} else {
				strTipoLista=""+GetNombreClaseObjetoC(TablaBase.ToString())+strReturnGeneral+".get"+GetNombreClaseC(TablaBase.ToString())+"().";
			}
			
			//strTipoLista=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> ";	
						
			//sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";		
			if(!esParaLogic) {
				strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";
			} else {
				if(!esParaActualizarBeanActual) {
					strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()";
				} else {
					strTipoObjetos="get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()";
				}
			}
			
			if(esParaEventos) {
				strObjetoActualRelacionIni=strThis+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBeanActual+".set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(";
			}
			
			sTablaClaseRelacionada+=strComaSaltoLinea+strObjetoActualRelacionIni+strTipoLista+ strTipoObjetos+strObjetoActualRelacionFin;	
		}
	}
	
	return sTablaClaseRelacionada;
}

public String GetInicializarListasEliminadosParametroTablesRelacionadas(TableSchema table,bool esParaLogic,bool ConEjb) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strTipoComment="";
	
	if(ConEjb && esParaLogic) {
		strTipoComment="//";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		strTipoLista=strTipoComment+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.";
				
		if(!esParaLogic) {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"s= new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(tableSchema.ToString())+">();";
		} else {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"Logic.set"+GetNombreClaseC(tableSchema.ToString())+"s(new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(tableSchema.ToString())+">());";
		}		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t\t"+strTipoLista+ strTipoObjetos;		
		
		
				
	}
	
	return sTablaClaseRelacionada;
}

public String GetActualizarListasEliminadosParametroTablesRelacionadas(TableSchema table,bool esParaLogic,bool ConEjb) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false);
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strTipoComment="";
	
	if(ConEjb && esParaLogic) {
		strTipoComment="//";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		strTipoLista="this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.";
				
		if(!esParaLogic) {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"s.addAll("+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		} else {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"Logic.get"+GetNombreClaseC(tableSchema.ToString())+"s().addAll("+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		}		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t\t"+strTipoComment+strTipoLista+ strTipoObjetos;		
		
		
				
	}
	
	return sTablaClaseRelacionada;
}

public String GetEliminarFilaTotalTablesRelacionadas(TableSchema table,bool esParaLogic,bool ConEjb,bool esClasePrincipal,String sTablAcumulado,String strTipoListaPadreAcumulado) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false);
	ArrayList tablasRelacionadasEncontradasHijo=new ArrayList();
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strTipoComment="";
	
	if(ConEjb && esParaLogic) {
		strTipoComment="//";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		if(esClasePrincipal) {
			strTipoLista="this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame";
		
		} else {
			strTipoLista=strTipoListaPadreAcumulado+"."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame";
		}
				
		if(!esParaLogic) {
			strTipoObjetos=".quitarFilaTotales();";//+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		} else {
			strTipoObjetos=".quitarFilaTotales();";//+GetNombreClaseC(tableSchema.ToString())+"s().addAll("+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		}		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t\t\t"+sTablAcumulado+strTipoComment+"if("+strTipoLista+"!=null && "+strTipoLista+".conTotales) {"+strTipoLista+ strTipoObjetos+"}";		
		
		tablasRelacionadasEncontradasHijo=GetTablasRelacionadasFinal(tableSchema,false);
				
		if(tablasRelacionadasEncontradasHijo.Count>0 && !table.Name.Equals(tableSchema.Name) &&  tablasRelacionadasEncontradasHijo.Count<=intNumeroMaximoRelacionesHijoGlobal) {
			sTablaClaseRelacionada+=GetEliminarFilaTotalTablesRelacionadas(tableSchema,esParaLogic,ConEjb,false,"\t",strTipoLista);
		}
	}
	
	return sTablaClaseRelacionada;
}

public String GetCargarTablesRelacionadas(TableSchema table,bool esParaNuevo) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false);
	
	String strSelectedRow="intSelectedRow";
	
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		sTablaClaseRelacionada+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame!=null && this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {this.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true,null);}";
	}
	
	return sTablaClaseRelacionada;
}

public String GetEliminarLiberarTablesRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	//String strSelectedRow="intSelectedRow";
	
	/*
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	*/
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		sTablaClaseRelacionada+="\r\n\r\n\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame!=null) {";
		//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.setVisible(false);";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.dispose();";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;";
		sTablaClaseRelacionada+="\r\n\t\t}";
		
		sTablaClaseRelacionada+="\r\n\r\n\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup!=null) {";
		//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.setVisible(false);";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.dispose();";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup=null;";
		sTablaClaseRelacionada+="\r\n\t\t}";
	}
	
	return sTablaClaseRelacionada;
}

public String GetEliminarLiberarTablesRelacionadasForeignsKeys(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	TableSchema tableSchema=null;
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);		
	
	if(blnConVariableClaseControllerActualizarFk) {
	//foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				if(!GetNombreClaseObjetoC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())) {
				
					tableSchema=GetNombreTablaRelacionadaFromColumn(column);
					
					
					sTablaClaseRelacionada+="\r\n\r\n\t\tif(this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame!=null) {";
					//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";
					sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setVisible(false);";
					sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.dispose();";
					sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=null;";
					sTablaClaseRelacionada+="\r\n\t\t}";
				}
			}	
		}
	} else {
		
	}
	}
	//}
	
	return sTablaClaseRelacionada;
}

public String GetAbrirVentanaBotonForeignsKeysTablasClases() //CollectionInfo collectionInfo
{
	//NO DEBERIA USARSE, SE VIO COMO BOTON RELACIONES, PERO LA FUNCIONALIDAD ES COMO BOTON BUSQUEDA
	//VER BOTON BUSQUEDA Y ENCONTRAR FUNCION ACTION BUTTON ACTUALIZAR
	return "";
	
	String sNombrePakage="";//GetPackageTableFromProperties(tablaRelacionada);
	TableSchema tableSchema=null;
	String sColumna="";
	
	String strNombreAdicional="";//GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		
	String strSufijoAutoReferenciada="";
	
	
	if(blnConVariableClaseControllerActualizarFk) {
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				if(!GetNombreClaseObjetoC(TablaBase.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())) {
				
					tableSchema=GetNombreTablaRelacionadaFromColumn(column);
					
					sNombrePakage=GetPackageTableFromProperties(tableSchema);
					//strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					sColumna+="\r\n\tpublic void jButton"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ActionPerformed(ActionEvent evt) {";//,Boolean conInicializar,int rowIndex,Boolean esRelacionado
					sColumna+="\r\n";   
						sColumna+="\t\t\ttry {";
						sColumna+="\r\n";
							/*
							sColumna+="\t\t\t\tint intSelectedRow =rowIndex;";// this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
							
							String strComentarioParaEjb="";
							
							if(ConEjb){
								strComentarioParaEjb="//";
							}
							
							String strFuncionBusquedaEjbInit="\r\n\t\t\t\t\t//ARCHITECTURE";
								strFuncionBusquedaEjbInit+="\r\n\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
							
							String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
							
							String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t\t}";
								strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t\t//ARCHITECTURE";
								
							sColumna+="\r\n\r\n\t\t\t\tif(intSelectedRow!=-1) {";
							sColumna+=strFuncionBusquedaEjbInit;
							sColumna+="\r\n\t\t\t\t\t\t"+ strComentarioParaEjb+"this."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];";
							sColumna+=strFuncionBusquedaEjbMiddle;
							sColumna+="\r\n\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];";
							sColumna+=strFuncionBusquedaEjbEnd;
							sColumna+="\r\n\t\t\t\t} else {";
							sColumna+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = new "+GetNombreClaseC(TablaBase.ToString())+"();";
							sColumna+="\r\n\t\t\t\t}";
							*/
							
							//YA DEFINIDOS PERO APARTE AL INICIAR
							//sColumna+="\r\n\t\t\t\tBoolean isTienePermisos"+GetNombreClaseC(tableSchema.ToString())+"=false;\r\n";
							//sColumna+="\r\n\t\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"isTienePermisos"+GetNombreClaseC(tableSchema.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";
							//sColumna+="\r\n\t\t\t\t"+strGlobalSeguridadCommentNo+"isTienePermisos"+GetNombreClaseC(tableSchema.ToString())+"=true;\r\n\r\n";
							
							sColumna+="\r\n\r\n\t\t\t\tBoolean isTienePermisos"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"=true;";
							sColumna+="\r\n\r\n\t\t\t\tif(isTienePermisos"+GetNombreCompletoClaseRelacionadaFromColumn(column)+") {\r\n";// && this.permiteMantenimiento(this."+GetNombreClaseObjetoC(TablaBase.ToString())+")
							
							sColumna+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"BeanSwingJInternalFrame "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=null;\r\n\r\n";//new "+GetNombreClase(tableSchema.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario);\r\n\r\n";
							
							/*
							sColumna+="\t\t\t\t\tif(conInicializar) {\r\n";
							
							sColumna+="\t\t\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFramePopup=new "+GetNombreCompletoClaseRelacionadaFromColumn(column)+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,true,false);\r\n";														
							sColumna+="\t\t\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFramePopup.setJInternalFrameParent(this);\r\n\r\n";							
							sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFramePopup;\r\n";
							
							sColumna+="\t\t\t\t\t} else {\r\n";
							*/
							sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame=this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame;\r\n";
							
							//sColumna+="\t\t\t\t\t}\r\n";
							
							/*
							sColumna+="\r\n\t\t\t\t\t"+strTypeCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
							sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
							
							sColumna+="\t\t\t\t\tif(!esRelacionado) {\r\n";
							sColumna+="\t\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);\r\n";
							sColumna+="\t\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);\r\n";
							sColumna+="\t\t\t\t\t}\r\n\r\n";
							*/
							
							//CARGAR JINTERNALFRAME
							//sColumna+="\t\t\t\t\tthis.cargar"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"BeanSwingJInternalFrame("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,this."+GetNombreClaseObjetoC(TablaBase.ToString())+","+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame,/*conInicializar,*/"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".getConGuardarRelaciones(),"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado());\r\n\r\n\r\n";			
										
							
							//Trace.WriteLine("here");
							
							//if(!GetEsAuxiliarFromPropertiesC(TablaBase) && !blnNoStandardTableFromProperties){
							//	if(TieneIndiceClaseRelacionadaForeignKeyC(tableSchema,TablaBase)) {
									//sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+GetParameterClaseDeepRelacionadoC(collectionInfo)/*strIdGetSet+GetNombreClaseC(TablaBase.ToString())*/+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
							//	}
							/*
							} else if(blnNoStandardTableFromProperties) {
								//TableKeySchema tableKeySchema=collectionInfo.TableKey;	
								
								//Trace.WriteLine("PK:"+tableKeySchema.PrimaryKeyTable.Name);
								//Trace.WriteLine("FK:"+tableKeySchema.ForeignKeyTable.Name);
								
								MemberColumnSchema memberColumnSchemaPK=null;
								MemberColumnSchema memberColumnSchemaFK=null;
								string strPrefijoTipo = "";
								string strNombre = "";
								
								if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
									System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
								}
								
								for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
									memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
									memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
									
									strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
									strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
					
									//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
								}
							}
							*/
							
							
							//sColumna+="\t\t\t\t\tif(!esRelacionado) {\r\n";
							//sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);\r\n";
							//sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);\r\n\r\n";
							
							//sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(\"no_relacionado\");\r\n\r\n";
							//sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.redimensionarTablaDatosConTamanio("+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ConstantesFunciones.ITAMANIOFILATABLA + ("+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ConstantesFunciones.ITAMANIOFILATABLA/2));\r\n\r\n";
							
							sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));\r\n\r\n";
							
							sColumna+="\t\t\t\t\t\tTitledBorder titledBorder"+GetNombreClaseC(TablaBase.ToString())+"=(TitledBorder)this.jScrollPanelDatos"+GetNombreClaseObjetoC(TablaBase.ToString())+".getBorder();\r\n";
							sColumna+="\t\t\t\t\t\tTitledBorder titledBorder"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"=(TitledBorder)"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseRelacionadaFromColumn(column)+".getBorder();\r\n\r\n";														
							
							sColumna+="\t\t\t\t\t\ttitledBorder"+GetNombreCompletoClaseRelacionadaFromColumn(column)+".setTitle(titledBorder"+GetNombreClaseC(TablaBase.ToString())+".getTitle() + \" -> "+GetTituloNombreTableFromPropertiesC(tableSchema)+"\");\r\n\r\n";
						
							sColumna+="\t\t\t\t\t\tif(!Constantes.CON_VARIAS_VENTANAS) {\r\n";
							sColumna+="\t\t\t\t\t\t\tMainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame);\r\n";
							sColumna+="\t\t\t\t\t\t}\r\n\r\n";
							
							sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";	        
							sColumna+="\t\t\t\t\t\tthis.jDesktopPane.add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame);\r\n\r\n";	        
							//sColumna+="\t\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"BeanSwingJInternalFrame.setSelected(true);\r\n";
							
							//sColumna+="\t\t\t\t\t}\r\n";
							
							sColumna+="\r\n\t\t\t\t} else {\r\n";//if
							sColumna+="\t\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+"SessionBean.getConGuardarRelaciones()) {\r\n";
							sColumna+="\t\t\t\t\t\tJOptionPane.showMessageDialog(this,\"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE "+GetNombreCompletoClaseRelacionadaFromColumn(column)+"\",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);\r\n";
							sColumna+="\t\t\t\t\t}\r\n";
							sColumna+="\t\t\t\t}\r\n";			
							
						sColumna+="\t\t\t}";
						sColumna+=" catch(Exception e) {";
						sColumna+="\r\n";
							sColumna+="\t\t\t\tFuncionesSwing.manageException2(this, e,logger,"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.CLASSNAME);\r\n";
						sColumna+="\t\t\t}\r\n";
					sColumna+="\t\t}\r\n";
				}
			}	
		}
	} else {
		
	}
	}
	
	return sColumna;
}

public String GetHabilitarDeshabilitarTablesRelacionadas(TableSchema table,bool esHabilitar) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	String strSelectedRow="true";
	
	if(!esHabilitar) {
		strSelectedRow="false";
	}
	//this.perfilBeanSwingJInternalFrame.getContentPane().setVisible(false);
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		sTablaClaseRelacionada+="\r\n\r\n\t\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame!=null) {";
		sTablaClaseRelacionada+="\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado("+strSelectedRow+");";
		sTablaClaseRelacionada+="\r\n\t\t\t\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane().setVisible("+strSelectedRow+");";		
		sTablaClaseRelacionada+="\r\n\t\t\t}";
	}
	
	return sTablaClaseRelacionada;
}

	public string GetInvalidoParameterClase(ColumnSchema column,String strSufijo,bool esInicializar)
	{
		String strMostrar="";
		
		if((column.Name==strId /*&& !column.IsForeignKeyMember*/)||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)	{
			//Trace.WriteLine(column.Name);
			
			return "";
		}
		//Trace.WriteLine(column.Name);
		string strValidacion="";strValidacion+="";
		
		/*
		if(ConMostrarValidaciones) {
			strValidacion=GetValidacionParameterClaseC(column,ConValidaciones);
		}
		*/
		
		string strPrefijo=String.Empty;
		string strPrefijoTabla=GetPrefijoTablaC().ToLower();
		string strPrefijoTipo =GetPrefijoTipoC(column);
	
		strPrefijo=strPrefijoTabla+strPrefijoTipo;
		
		string strNombre = GetNombreColumnaClaseC(column);
		strPrefijo+=strNombre;
			
		string param =  GetTipoColumnaClaseC(column);
		
		String strCampo=GetNombreClase(TablaBase.ToString())+"ConstantesFunciones."+column.Name.ToUpper();
		String strLabelTitulo=GetNombreTituloControlVariablesSwingC(column,"","",false);
		//strCampo="\""+strPrefijo+"\"";
		
		if(!esInicializar) {
			strMostrar="if(invalidValue.getPropertyName().equals("+strCampo+")) {";
			strMostrar+="FuncionesSwing.mostrarCampoMensajeInvalido(false,this."+strLabelTitulo+",invalidValue.getMessage());}";
		} else {
			strMostrar="FuncionesSwing.mostrarCampoMensajeInvalido(true,this."+strLabelTitulo+",\"\");";
		}
		
		return strMostrar;
	}
	
public string GetControlesIndicesBusquedaVariables(TableSchema tablaBase,ColumnSchema columnSchema,String sNombreCompletoVariable) {
	string strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
		
	ArrayList arrCombosNamesFkBusquedas=GetCombosIndicesNamesFkBusquedasTableC(tablaBase,columnSchema);//GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	String sIndice="";
	String sCombo="";
	String strCommentWeb="";
	
	if(!EsSwing) {
		strCommentWeb="//";
	}
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		string[] arrIndiceCombo=strCombosNamesFkBusquedas.Split(',');
		
		sIndice=arrIndiceCombo[0];
		sCombo=arrIndiceCombo[1];
		
		strVariables+="\r\n\t\t\t\tif(sFormularioTipoBusqueda.equals(\""+sIndice+"\") || sFormularioTipoBusqueda.equals(\"Todos\")){";
		strVariables+="\r\n\t\t\t\t\tif("+sNombreCompletoVariable/*GetNombreClaseObjeto(tableSchemaFK.ToString())+"Temp"*/+"!=null) {";
		strVariables+="\r\n\t\t\t\t\t\t"+strCommentWeb+/*strCombosNamesFkBusquedas*/sCombo+".setSelectedItem("+sNombreCompletoVariable/*GetNombreClaseObjeto(tableSchemaFK.ToString())+"Temp"*/+");";
		strVariables+="\r\n\t\t\t\t\t} else {";
		strVariables+="\r\n\t\t\t\t\t\t//"+strCommentWeb+/*strCombosNamesFkBusquedas*/sCombo+".setSelectedItem("+sNombreCompletoVariable/*GetNombreClaseObjeto(tableSchemaFK.ToString())+"Temp"*/+");";//".setSelectedIndex(-1);";
		
		strVariables+="\r\n\t\t\t\t\t\tif("+strCommentWeb+/*strCombosNamesFkBusquedas*/sCombo+".getItemCount()>0) {";
		strVariables+="\r\n\t\t\t\t\t\t\t"+strCommentWeb+/*strCombosNamesFkBusquedas*/sCombo+".setSelectedIndex(0);";
		strVariables+="\r\n\t\t\t\t\t\t}";
					
		strVariables+="\r\n\t\t\t\t\t}";
		strVariables+="\r\n\t\t\t\t}";
		//strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		//strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		//strVariables+="\r\n\t\t}";
	
	}			
	
	
	return strVariables;
}

public String GetFuncionesRecargarControlesTablasVariables(TableSchema tablaBase,ColumnSchema columnSchema) {
	String strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
	String strObjetoBean=GetObjetoBeanC(TablaBase);
	
	/*	
	strVariables+="\r\n\t\t\tif(sType.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"\")) {";	
	strVariables+="\r\n\t\t\t\tif(!"+strObjetoBean+"."+GetNombreConCargarControlVariablesSwingC(columnSchema,"","",false)+") {";	
	strVariables+="\r\n\t\t\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"sForeignKeyLista(\" where id=\"+id);";
	strVariables+="\r\n\t\t\t\t\t//this.inicializarActualizarBinding"+GetNombreClase(tablaBase.ToString())+"(false,false);";
	strVariables+="\r\n\t\t\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"sForeignKey(\"Todos\");";
	strVariables+="\r\n\t\t\t\t}";
	strVariables+="\r\n\r\n\t\t\t\tthis.setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(columnSchema)+" ("+strId+");";
	
	strVariables+="\r\n\r\n\t\t\t\t//ACTUALIZA COMBOS DE TABLA";
	*/
	
	strVariables+="\r\n\tpublic void recargarComboTabla"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(List<"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey)throws Exception{";
		
	strVariables+="\r\n\t\tTableColumn tableColumn"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+","+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+columnSchema.Name.ToUpper()+"));";
	strVariables+="\r\n\t\tTableCellEditor tableCellEditor"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+" =tableColumn"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+".getCellEditor();";
				
	strVariables+="\r\n\r\n\t\t"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"TableCellFk "+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk=("+GetNombreClaseRelacionadaFromColumn(columnSchema)+"TableCellFk)tableCellEditor"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";
				
	strVariables+="\r\n\r\n\t\t"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.set"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey("+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey);";
			
	
	strVariables+="\r\n\r\n\r\n\t\t//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO";
	strVariables+="\r\n\t\t//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO";
	strVariables+="\r\n\t\t//int intSelectedRow = -1;";
	strVariables+="\r\n\t\t//intSelectedRow=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();";				
	strVariables+="\r\n\r\n\t\t//if(intSelectedRow<=0) {";
	strVariables+="\r\n\t\t\t//"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.setRowActual(intSelectedRow);";
	strVariables+="\r\n\t\t\t//"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.set"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKeyActual("+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey);";
	strVariables+="\r\n\t\t//}";
				
				
	strVariables+="\r\n\r\n\r\n\t\t"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.Recargar"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"sForeignKey();";
	strVariables+="\r\n\t\t//ACTUALIZA COMBOS DE TABLA-FIN";
	
	strVariables+="\r\n\r\n\t}";
	
	//strVariables+="\r\n\r\n\t\t}";
	
	
	return strVariables;
}

public string CallFuncionBusquedaControlesVariables(TableSchema tablaBase,ColumnSchema columnSchema) {
	string strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
	String strObjetoBean=GetObjetoBeanC(TablaBase);
	
		
	strVariables+="\r\n\t\t\tif(sType.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"\")) {";	
	strVariables+="\r\n\t\t\t\tif(!"+strObjetoBean+"."+GetNombreConCargarControlVariablesSwingC(columnSchema,"","",false)+") {";	
	strVariables+="\r\n\t\t\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"sForeignKeyLista(\" where id=\"+id);";
	strVariables+="\r\n\t\t\t\t\t//this.inicializarActualizarBinding"+GetNombreClase(tablaBase.ToString())+"(false,false);";
	strVariables+="\r\n\t\t\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"sForeignKey(\"Todos\");";
	strVariables+="\r\n\t\t\t\t}";
	strVariables+="\r\n\r\n\t\t\t\tthis.setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(columnSchema)+" ("+strId+");";
	
	if(EsColumnaVariableGlobalDataBaseFromPropertiesC(columnSchema) 
		|| EsColumnaVariableModuloGlobalC(columnSchema)) {			
		
		
	} else {
		strVariables+="\r\n\r\n\t\t\t\tthis.recargarComboTabla"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(this."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey);";
	}
	
	/*
	strVariables+="\r\n\r\n\t\t\t\t//ACTUALIZA COMBOS DE TABLA";
	strVariables+="\r\n\t\t\t\tTableColumn tableColumn"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+","+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+columnSchema.Name.ToUpper()+"));";
	strVariables+="\r\n\t\t\t\tTableCellEditor tableCellEditor"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+" =tableColumn"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+".getCellEditor();";
				
	strVariables+="\r\n\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"TableCellFk "+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk=("+GetNombreClaseRelacionadaFromColumn(columnSchema)+"TableCellFk)tableCellEditor"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";
				
	strVariables+="\r\n\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.set"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey(this."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey);";
			
	
	strVariables+="\r\n\r\n\r\n\t\t\t\t//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO";
	strVariables+="\r\n\t\t\t\t//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO";
	strVariables+="\r\n\t\t\t\t//int intSelectedRow = -1;";
	strVariables+="\r\n\t\t\t\t//intSelectedRow=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();";				
	strVariables+="\r\n\r\n\t\t\t\t//if(intSelectedRow<=0) {";
	strVariables+="\r\n\t\t\t\t\t//"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.setRowActual(intSelectedRow);";
	strVariables+="\r\n\t\t\t\t\t//"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.set"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKeyActual(this."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema).ToLower()+"sForeignKey);";
	strVariables+="\r\n\t\t\t\t//}";
				
				
	strVariables+="\r\n\r\n\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(columnSchema).ToLower()+"TableCellFk.Recargar"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"sForeignKey();";
	strVariables+="\r\n\t\t\t\t//ACTUALIZA COMBOS DE TABLA-FIN";
	*/
	
	strVariables+="\r\n\r\n\t\t\t}";
	/*
	ArrayList arrCombosNamesFkBusquedas=GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		//strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		//strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		//strVariables+="\r\n\t\t}";
	
	}
	*/
	
	//strVariables+="\r\n\r\n\t};";
	
	
	return strVariables;
}

public string GetSetFuncionBusquedaControlesVariables(TableSchema tablaBase,ColumnSchema columnSchema) {
	string strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
	
	strVariables+="\r\n\r\n\tpublic void setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(columnSchema)+" (Long "+strId+") throws Exception {";
	strVariables+="\r\n\t\tthis.setActual"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)/*GetNombreClase(tableSchemaFK.ToString())*/+strForeignKey+"("+strId+",true,\"Todos\");";	
	
	ArrayList arrCombosNamesFkBusquedas=GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		//strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		//strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		//strVariables+="\r\n\t\t}";
	
	}
	
	strVariables+="\r\n\r\n\t};";
	
	
	return strVariables;
}

public string SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				/*
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isIngreso() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isModificacion() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isConsulta() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				*/
				//NO FUNCIONA READONLY PARA INSERT UPDATE TOCA OCULTAR TODO
				strVariables+="\r\n\r\n\t\t\tif(!isPermisoTodo"+strSufijoVariables+"&&!isPermisoActualizarOriginal"+strSufijoVariables+") {";								
				strVariables+="\r\n\t\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";
				strVariables+="\r\n\t\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:none\";";
				strVariables+="\r\n\t\t\t} else {";								
				strVariables+="\r\n\t\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=true;";
				strVariables+="\r\n\t\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";
				strVariables+="\r\n\t\t\t}";

			}
		}
		
		return strVariables;
	}
	
public string SetSeguridadNuevoPrepararCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				/*
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isIngreso() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isModificacion() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isConsulta() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				*/
				
				strVariables+="\r\n\r\n\t\tif(!isPermisoTodo"+strSufijoVariables+"&&!isPermisoNuevo"+strSufijoVariables+") {";								
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:none\";";
				strVariables+="\r\n\t\t} else {";								
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=true;";
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";
				strVariables+="\r\n\t\t}";
			}
		}
		
		return strVariables;
	}
	
public string SetSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=new PerfilCampo();";
				strVariables+="\r\n\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";
				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isIngreso() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isModificacion() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isConsulta() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				strVariables+="\r\n\r\n\t\t\tif(!isPermisoConsulta"+strSufijoVariables+") {";								
				strVariables+="\r\n\t\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:none\";\r\n\t\t\t}";								
				
			}
		}
		
		return strVariables;
	}
	
	public string GetSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);															
				strVariables+="\r\n\r\n\r\n\tpublic Boolean isPermisoTodo"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic Boolean isPermisoNuevo"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic Boolean isPermisoActualizarOriginal"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\tpublic Boolean isPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\tpublic Boolean isPermisoConsulta"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic String sPermisoCssAuxiliar"+strSufijoVariables+"=\"\";";
				
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoTodo"+strSufijoVariables+"() {\r\n\t\treturn isPermisoTodo"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoTodo"+strSufijoVariables+"(Boolean isPermisoTodo"+strSufijoVariables+") {\r\n\t\tthis.isPermisoTodo"+strSufijoVariables+" = isPermisoTodo"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoNuevo"+strSufijoVariables+"() {\r\n\t\treturn isPermisoNuevo"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoNuevo"+strSufijoVariables+"(Boolean isPermisoNuevo"+strSufijoVariables+") {\r\n\t\tthis.isPermisoNuevo"+strSufijoVariables+" = isPermisoNuevo"+strSufijoVariables+";\r\n\t}";
								
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoActualizarOriginal"+strSufijoVariables+"() {\r\n\t\treturn isPermisoActualizarOriginal"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoActualizarOriginal"+strSufijoVariables+"(Boolean isPermisoActualizarOriginal"+strSufijoVariables+") {\r\n\t\tthis.isPermisoActualizarOriginal"+strSufijoVariables+" = isPermisoActualizarOriginal"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoNuevoActualizar"+strSufijoVariables+"() {\r\n\t\treturn isPermisoNuevoActualizar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoNuevoActualizar"+strSufijoVariables+"(Boolean isPermisoNuevoActualizar"+strSufijoVariables+") {\r\n\t\tthis.isPermisoNuevoActualizar"+strSufijoVariables+" = isPermisoNuevoActualizar"+strSufijoVariables+";\r\n\t}";
			
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoConsulta"+strSufijoVariables+"() {\r\n\t\treturn isPermisoConsulta"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoConsulta"+strSufijoVariables+"(Boolean isPermisoConsulta"+strSufijoVariables+") {\r\n\t\tthis.isPermisoConsulta"+strSufijoVariables+" = isPermisoConsulta"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic String getsPermisoCssAuxiliar"+strSufijoVariables+"() {\r\n\t\treturn sPermisoCssAuxiliar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setsPermisoCssAuxiliar"+strSufijoVariables+"(String sPermisoCssAuxiliar"+strSufijoVariables+") {\r\n\t\tthis.sPermisoCssAuxiliar"+strSufijoVariables+" = sPermisoCssAuxiliar"+strSufijoVariables+";\r\n\t}";
			}
		}
		
		return strVariables;
	}
	
public String GetPackageClasesTableFromPropertiesC() 
{
	String sTablaClasesEntityExplicitReturn=String.Empty;
	
	String sTablaClasesEntityExplicit=String.Empty;										
			
	sTablaClasesEntityExplicit=GetPackageClasesTableFromPropertiesC(TablaBase);
	
	
	String [] arrClasesEntityExplicit=sTablaClasesEntityExplicit.Split(',');
	
	foreach(String strClasesEntityExplicit in arrClasesEntityExplicit) {
		if(!strClasesEntityExplicit.Equals("")) {
			sTablaClasesEntityExplicitReturn+="import "+Empresa+"."+Package+"."+Module+strPackageBusiness+"."+strPackageEntities+"."+strClasesEntityExplicit+";\r\n";
		}
	}
	
	return sTablaClasesEntityExplicitReturn; 
}
		
/*
public  String GetNoStandardFuncionesBuscarForeignKeys()
{
	String sTablaClaseRelacionada="";;
	
	
	if(blnNoStandardTableFromProperties) {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
				
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//INICIALIZA TABLA
			//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
					
			//sTablaClaseRelacionada+="\r\n\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";							
			//sTablaClaseRelacionada+="\r\n\tLong lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";	
			sTablaClaseRelacionada+="\r\n\tpublic void setVariables"+strFK+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"ParaBuscar"+GetNombreClaseC(TablaBase.ToString())+"s () {";
							
			ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
			for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
				sTablaClaseRelacionada+=GetParameterClaseC(columnSchemaCollectionFK[i],false,false,GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual") ;					
			} 	
			
			sTablaClaseRelacionada+="\r\n\t}";
		}
	}
			
	return sTablaClaseRelacionada;
}
*/

public String GetNoStandardSetVariablesActualSession(TableSchema tablaRelacionadaObjetivo,String strNombreAdicional) 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
						
				}
	
			return sTablaClaseRelacionada; 
		}
		
public String GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(TableSchema tablaRelacionadaObjetivo,String strNombreAdicional) 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";				
						
				}
	
			return sTablaClaseRelacionada; 
		}
		
public String GetNoStandardVariablesParameterPKActual() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{		
					sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
					//sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchema,false,true,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;
					//sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchema,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
					
				}
	
			return sTablaClaseRelacionada; 
		}

public String GetNoStandardVariablesGetSetParameterPKActual() 
{
	String sTablaClaseRelacionada=String.Empty;										
		
		foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
		{		
			//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
			sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchema,false,true,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;
			sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchema,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
					
		}
	
	return sTablaClaseRelacionada; 
}

public String GetNoStandardVariablesInicializarParameterPKActual() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
			{		//INICIALIZA TABLA
					//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);

				sTablaClaseRelacionada+="\r\n\t\t\t"+GetValueDefaultParameterClaseC(columnSchema,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
				 					
			}
				
			return sTablaClaseRelacionada; 
		}
		
public  string GetSessionKeyQuery()
	{
		String strControl="";
		String strtSessionKeyQuery=GetSessionKeyQueryTableFromPropertiesC(TablaBase);
		
		if(!strtSessionKeyQuery.Equals("")) {
			strtSessionKeyQuery=strtSessionKeyQuery.ToUpper();
			strControl="\r\n\t\tString sSessionKeyQuery=\"\";";
			strControl+="\r\n\t\tsSessionKeyQuery=(String)httpSession.getAttribute(Constantes."+strtSessionKeyQuery+"+ConstantesServlet.SSESSIONACTUAL);";
			strControl+="\r\n\r\n\t\tif(sSessionKeyQuery!=null) {";
			strControl+="\r\n\t\t\tfinalQueryPaginacion=sSessionKeyQuery+finalQueryPaginacion;";
			strControl+="\r\n\t\t}";
			
			strControl+="\r\n\r\n\t\tsSessionKeyQuery=(String)httpSession.getAttribute(Constantes."+strtSessionKeyQuery+"PARAT0D0S+ConstantesServlet.SSESSIONACTUAL);";
			strControl+="\r\n\r\n\t\tif(sSessionKeyQuery!=null) {";
			strControl+="\r\n\t\t\tfinalQueryPaginacionTodos=sSessionKeyQuery+finalQueryPaginacionTodos;";
			strControl+="\r\n\t\t}";
		}
		
		return strControl;
	}
	
public bool TienePathImagenDocumento() {
	bool blnTienePathImagenDocumento=false;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(EsPathImagenDocumentoColumn(TablaBase.Columns[i])) {
			blnTienePathImagenDocumento=true;
		}
		
	}
	
	return blnTienePathImagenDocumento;
}
	
	
public String GetTimeTimestampImport() {
	String strIdName=string.Empty;
	
	bool blnTieneTime=false;
	bool blnTieneTimestamp=false;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(!blnTieneTime) {
			if(EsTimeColumn(TablaBase.Columns[i])) {
				strIdName="\r\nimport java.sql.Time;";
				blnTieneTime=true;
			}
		}
		
		if(!blnTieneTimestamp) {
			if(EsDateTimeColumn(TablaBase.Columns[i])) {
				strIdName="\r\nimport java.sql.Timestamp;";
				blnTieneTimestamp=true;
			}
		}
	}
	
	return strIdName;
				
}

public string GetClaveNavigationRuleFK() {
	String strTablaClaseRelacionada=string.Empty;
	TableSchema tableSchema=null;
	bool blnEsPrimero=true;
	String strCondicion="";
	
	foreach(ColumnSchema columnSchema in TablaBase.Columns) {	
		if(columnSchema.IsForeignKeyMember&&!columnSchema.Name.Equals(strId+TablaBase.Name)) {			
			tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
			
			if(blnEsPrimero) {
				strCondicion="if";
				blnEsPrimero=false;
			} else {
				strCondicion="else if";
			}
			
			strTablaClaseRelacionada+="\r\n\t\t\t"+strCondicion+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getsNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(TablaBase.ToString())+"().equals("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SNOMBREOPCION)) {";
			strTablaClaseRelacionada+="\r\n\t\t\t\tsClavePaginaFk=\""+GetNombreClaseObjetoC(tableSchema.ToString())+"\";";
			strTablaClaseRelacionada+="\r\n\t\t\t}";
			/*
			strTablaClaseRelacionada+="\r\n\t<navigation-case>";
			strTablaClaseRelacionada+="\r\n\t\t<from-outcome>"+GetNombreClaseObjetoC(tableSchema.ToString())+"</from-outcome>";
			strTablaClaseRelacionada+="\r\n\t\t<to-view-id>/Paginas/"+GetRelativePathNavegacionFromTableFromPropertiesC(tableSchema)+"Mantenimiento"+GetNombreClaseC(tableSchema.ToString())+".jsp</to-view-id>";
			strTablaClaseRelacionada+="\r\n\t\t<redirect/>";
			strTablaClaseRelacionada+="\r\n\t</navigation-case>";
			*/
		}
	}
	
	return  strTablaClaseRelacionada;
}

public String GetFuncionesGetTablasClasesRelacionadasForeigKeysDescription() 
		{
			String strFuncion=GetFuncionesGetTablasClasesRelacionadasForeigKeysDescriptionC(TablaBase);
			
			/*
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";// void  getTR[";
			
			String strEndFuncion="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
					
			if(!blnNoStandardTableFromProperties) {										
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					
					
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
							
							strInitFuncion="\r\n\t\t\t";//"\r\n\t@Transient";				
							
							strInitFuncion+="";//"\r\n\tpublic ";
						
						
							//strInitFuncion+="String get"+GetPrefijoRelacionC()+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+strDescripcion+"() {\r\n";
							//strTablaClaseRelacionada="\t\treturn this."+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+strDescripcion+";\r\n";
						
							strTablaClaseRelacionada=""+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+strDescripcion;
							strTablaClaseRelacionada+="("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"Descripcion"+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"()));";
							
							strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion;
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey))
					{
						continue;
					}
							
					strInitFuncion="\r\n\t\t\t";//"\r\n\t@Transient";				
							
					strInitFuncion+="";//"\r\n\tpublic ";
																		
					strTablaClaseRelacionada=""+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+strDescripcion;
					strTablaClaseRelacionada+="("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion"+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"()));";
							
					strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion;							
				}
			}
			*/
			
			return strFuncion; 
		}
		
public static String getFrameworkDomain() {
	return strFrameworkDomain;
}

	public  string GetPaneBusquedas(bool conThis)
	{
		String strControl="";
		String strThis="";
		
		if(conThis) {
			strThis="this.";
		}
		
		if(GetExisteBusquedasTablaC(TablaBase)) {
			strControl=strThis+"jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString());
		} else {
			strControl="null";
		}
		
		return strControl;
	}
	
	public  string SetVariablesHabilitarDeshabilitarSwing()
	{
		String strControl="";
		String strComment="";
		
		foreach(ColumnSchema columnSchema in TablaBase.Columns) {
			//NO FOREIGN, LOS FOREIGN SE LO PROCESA CON NO STANDARD
			if(!columnSchema.IsForeignKeyMember) {
				strComment="";
				
				if( GetNoInsertEditColumnFromPropertiesC(columnSchema)
					||   GetReadOnlyColumnFromPropertiesC(columnSchema)
					||   GetNoEditColumnFromPropertiesC(columnSchema)){
					strComment="//";
				}
				
				strControl+=strComment+SetVariablesHabilitarDeshabilitarSwing(columnSchema);
			}
		}	
		
		return strControl;
	}

public  string SetVariablesDefaultSwing()
	{
		String strControl="";
		String strComment="";
		
		foreach(ColumnSchema columnSchema in TablaBase.Columns) {
			//NO FOREIGN, LOS FOREIGN SE LO PROCESA CON NO STANDARD
			if(!columnSchema.IsForeignKeyMember) {
				strComment="";
				
				if( GetNoInsertEditColumnFromPropertiesC(columnSchema)
					||   GetReadOnlyColumnFromPropertiesC(columnSchema)
					||   GetNoEditColumnFromPropertiesC(columnSchema)){
					continue;
					//strComment="//";
				}
				
				if(columnSchema.DataType==DbType.Date||columnSchema.DataType==DbType.DateTime) {
					strControl+=strComment+SetVariablesDefaultSwing(columnSchema);
				}
			}
		}	
		
		return strControl;
	}
	
	public  string SetVariablesDefaultSwing(ColumnSchema column) {
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);
	
	String strControl="";
	String strType="";
		strType+="";
	String strName="";strName+="";
	
	String strObjectFace="";
	String strValueFace="";
		strValueFace+="";
	String strPrefijoCampo="";
	
	
	strObjectFace=GetNombreClaseObjetoC(column.Table.ToString())+strPrefijoJSFFaces;
	strPrefijoCampo=GetPrefijoTablaC().ToLower();
	
	string strFieldColumnaclase=GetPrefijoTablaC().ToLower()+GetPrefijoTipoC(column)+strColumna;
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return string.Empty;
	}
		
	if(column.Name.Equals(strId)) {
		return string.Empty;		
		
	}
	if(column.Name.Equals(strVersionRow)) {
		return string.Empty;
	} else {
		if(!column.IsForeignKeyMember) {				
			if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
				/*
				String strMaxLength="";
					strMaxLength+="";
				String strRows="";
				strRows+="";
				int numRows=0;
				numRows+=0;
				int numCols=0;
				numCols+=0;
				
				strName=" name=\""+GetNameControlHtml(column)+"\"";
				
				if(column.Size<51) {					
					strControl+="\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				} else if(column.Size<200) {
					strControl+="\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				} else {
					strControl+="\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				}
				*/
			} else if(column.DataType==DbType.Boolean) {
				//strControl+="\tthis.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n\r\n";
			} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
				//strControl+="\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
			} else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime) {
				//strControl+="\t\tthis.jFormattedTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText(Funciones.getStringMySqlCurrentDate());\r\n";
			}
		} else {
			//strName=" id=\""+GetNameControlHtml(column)+"\"";
			//strControl+="\tthis.jComboBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";			
		}
	}
	
	return strControl;
}

	public  string SetVariablesHabilitarDeshabilitarSwingForeigKeys()
	{
		String strControl="";
		String strComment="";
		
		if(!blnNoStandardTableFromProperties) {	
			foreach(ColumnSchema columnSchema in TablaBase.Columns) {
				strComment="";
				if( EsColumnaVariableGlobalDataBaseFromPropertiesC(columnSchema) 
					|| EsColumnaVariableModuloGlobalC(columnSchema)
					|| GetNoInsertEditColumnFromPropertiesC(columnSchema)
					|| GetReadOnlyColumnFromPropertiesC(columnSchema)
					|| GetNoEditColumnFromPropertiesC(columnSchema)
					/*|| GetEsReporteParametroFromPropertiesC(columnSchema)*/){
					strComment="//";
				}
									
				//NO FOREIGN, LOS FOREIGN SE LO PROCESA CON NO STANDARD
				if(columnSchema.IsForeignKeyMember) {
					strControl+=strComment+SetVariablesHabilitarDeshabilitarSwing(columnSchema);
				}
			}	
		} else {
			ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
			foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				//strName=" id=\""+GetNameControlHtml(column)+"\"";
				strControl+="\r\n\tthis.jComboBox"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+".setEnabled(isHabilitar);";									
			}
		}
		
		return strControl;
	}
	
public  string SetVariablesHabilitarDeshabilitarSwing(ColumnSchema column)
	{
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);
	
	String strControl="";
	String strType="";
		strType+="";
	String strName="";
	
	String strObjectFace="";
	String strValueFace="";
		strValueFace+="";
	String strPrefijoCampo="";
	
	String strObjetoBean=GetObjetoBeanC(TablaBase);

	strObjectFace=GetNombreClaseObjetoC(column.Table.ToString())+strPrefijoJSFFaces;
	strPrefijoCampo=GetPrefijoTablaC().ToLower();
	
	string strFieldColumnaclase=GetPrefijoTablaC().ToLower()+GetPrefijoTipoC(column)+strColumna;
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return string.Empty;		
		
	}
	if(column.Name.Equals(strVersionRow))
	{
		return string.Empty;
	}
	else
	{
		if(!column.IsForeignKeyMember)
		{
		
		
			if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
			String strMaxLength="";
				strMaxLength+="";
			String strRows="";
			strRows+="";
			int numRows=0;
			numRows+=0;
			int numCols=0;
			numCols+=0;
			
			strName=" name=\""+GetNameControlHtml(column)+"\"";
			
				if(column.Size<51)
				{					
					strControl+="\r\n\t\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
				}
				else if(column.Size<200)
				{
					strControl+="\r\n\t\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
				}
				else
				{
					strControl+="\r\n\t\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
				}
			}
			
			else if(column.DataType==DbType.Boolean)
			{
				strControl+="\r\n\t\tthis.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
			}
			else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64)
			{
				strControl+="\r\n\t\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
			}
			else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{	//jFormattedTextField
			
				if(!EsTimeColumn(column)) {
					strControl+="\r\n\t\tthis.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
				} else {
					strControl+="\r\n\t\tthis.jSpinner"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";
				}
			}
		}
		else
		{

			strName=" id=\""+GetNameControlHtml(column)+"\"";
			strControl+="\r\n\t\tthis.jComboBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar && "+strObjetoBean+"."+GetNombreHabilitarControlVariablesSwingC(column,"","",false)+");";			
		}
	}
	
	return strControl;
}


public String GetTraerIndicesVariablesSessionTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					if(EsSwing) {
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						sInitFuncion+="\r\n\t\t\t else if(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\r\n\t\t\t\tthis.set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"());";
							sInitFuncion+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+");";
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\r\n\t\t\t\tthis.set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"());";
								sInitFuncion+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+");";
							}
							/*
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							*/
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+="";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\r\n\t\tthis.set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"());"; 
								sInitFuncion+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+")";
								
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								
							}
							else
							{
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								break;
							}
						}
						count++;
					}
					//sInitFuncion+="\r\n\tif(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						sInitFuncion+="\r\n\t\t\t}";			
					}
				} else {
					continue;	
				}
			}
			
								
			return sInitFuncion; 
		}
		

public String GetGuardarIndicesVariablesSessionTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(EsSwing) {
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						//Trace.WriteLine(indexSchema.Name);
						sInitFuncion+="\r\n\t\telse if(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"(this.get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"());\t"; 
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"(this.get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"());\t"; 
							}
							/*
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							*/
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+="";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\r\n\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"(this.get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"());"; 
								
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								
							}
							else
							{
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								break;
							}
						}
						count++;
					}
					//sInitFuncion+="\r\n\tif(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						sInitFuncion+="\r\n\t\t}";			
					}
				} else {
					continue;	
				}
			}
			
			//System.Windows.Forms.MessageBox.Show(sInitFuncion);					
			return sInitFuncion; 
		}
		
public String GetFuncionesAccionesNavegacionTablasClasesRelacionadasC() 
		{
			String strTablaClaseRelacionada=string.Empty;
			StringBuilder stringBuilder=new StringBuilder();
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			String sSchemaPadre=GetSchemaTableFromDBC(TablaBase,"");
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				strNombreAdicional="";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				if(!GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				if(GeneracionPorModuloUnico){
					String sSchemaRelacionada=GetSchemaTableFromDBC(tablaRelacionadaObjetivo,"");
					
					if(!sSchemaPadre.Equals(sSchemaRelacionada)) {
						continue;
					}
				}
				
				//Trace.WriteLine(collectionInfo.CollectionRelationshipType);
				
				/*
				TableKeySchema TableKey =collectionInfo.TableKey;
				
				
				foreach(ColumnSchema columnSchema in TableKey.PrimaryKeyMemberColumns) {
					Trace.WriteLine(columnSchema.Name);
				}
				
				foreach(String spkColName in collectionInfo.PkColNames) {
					Trace.WriteLine(tablaRelacionadaObjetivo.Name+"->"+spkColName+"-"+collectionInfo.PkIdxName);
				}
				
				if(collectionInfo.FkColNames!=null) {
					foreach(String spkColName in collectionInfo.FkColNames) {
						Trace.WriteLine(tablaRelacionadaObjetivo.Name+"->"+spkColName);
					}
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType!=RelationshipType.OneToOne) {
					
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					//DESHABILITADO
					//OJO USA PRIMARYTABLE Y NO SECONDARYTABLE COMO NORMALMENTE USABA
					//EN REEMPLAZO DE PASO 2 , TOMA A TODOS strNombreAdicional YA QUE ASI LO HACE EL FOREIGN KEY RELACIONADO
					//TOMA EL NOMBRE RESTANTE DE LA COLUMNA MAS DE 1 FOREIGN KEY DE UNA TABLA
					//strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					//CON DESORDEN NO FUNCIONA
					/*
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.PrimaryTable)) {
						//continue;
						//PASO 2
						//TOMA EL NOMBRE RESTANTE DE LA COLUMNA MAS DE 1 FOREIGN KEY DE UNA TABLA
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					} else {
						strNombreAdicional="";
						arrayListRelaciones.Add(collectionInfo.PrimaryTable);
					}
					*/	
				} else {
					strNombreAdicional="";
				}
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					//&&strNombreAdicional.Equals("") SI NO ES VACIO SE PUEDE TRATAR DE MAS DE UNA RELACION FOREIGN KEY HACIA UNA TABLA
					if(tableSchema.Equals(tablaRelacionadaObjetivo)&&strNombreAdicional.Equals(""))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					String strComentarioParaEjb="";
					String strComentarioInicioParaEjb="";
					String strComentarioFinParaEjb="";
				
					if(ConEjb){
						strComentarioParaEjb="//";
						strComentarioInicioParaEjb="\r\n\t\t\t\t/*";
						strComentarioFinParaEjb="*/";
					}
					
					
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					
					strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
					
				
					stringBuilder.Append("\r\n\r\n\tpublic String registrarSesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Para"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPlural.ToLower()+"() throws Exception {");
					stringBuilder.Append("\r\n\t\tBoolean isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n");					
					
					if(!EsSwing){
						stringBuilder.Append("\r\n\t\tFuncionesBeanFace funcionesBeanFace=new FuncionesBeanFace();\r\n");
						stringBuilder.Append("\r\n\t\ttry {\r\n\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);");
					} else {
						stringBuilder.Append("\r\n\t\ttry {");
						//stringBuilder.Append("\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
					}
					stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {");
					stringBuilder.Append("\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
					stringBuilder.Append("\r\n\t\t\t}");
					
					if(!EsSwing){
						stringBuilder.Append("\r\n\r\n\t\t\t//"+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME);");
					} else {
						//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
					}
					
					
					stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"==null) {");
					stringBuilder.Append("\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
					stringBuilder.Append("\r\n\t\t\t}");
					
					stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setsPathNavegacionActual("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getsPathNavegacionActual()+Constantes.SHTMLFLECHA+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SCLASSWEBTITULO);");
					stringBuilder.Append("\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisPermiteRecargarInformacion(false);");
					
					stringBuilder.Append("\r\n\t\t\tisPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"="+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".getisPaginaPopup();");
					
					//stringBuilder.Append("\r\n\r\n\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual=Long.parseLong(httpServletRequest.getParameter(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\"));");
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					
					String strPermiteNavegacionHaciaForeignKeyDesde="";
					
					if(!GetConPopupTableFromProperties(tablaRelacionadaObjetivo)) {
						strPermiteNavegacionHaciaForeignKeyDesde="true";
						//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(false);");
					} else {
						strPermiteNavegacionHaciaForeignKeyDesde="false";
						stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(true);");
					}
					
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisPermiteNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+strPermiteNavegacionHaciaForeignKeyDesde+");");
					
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setsNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SNOMBREOPCION);");
					
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);");
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setl"+strId+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					
					//DESHABILITA MANTENIMIENTO HIJO
					if(blnTemporalWebNoActualizarDatos) {
						stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setNoMantenimiento(true);");
					}
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(tablaRelacionadaObjetivo,strNombreAdicional));
					}
					
					
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"(true);");
					stringBuilder.Append("\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setl"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSession(tablaRelacionadaObjetivo,strNombreAdicional));
					}
					
					stringBuilder.Append("\r\n\r\n\t\t\tString strPagina=Constantes.SNONE;");
					stringBuilder.Append("\r\n\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();");
					
					/*
					stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {");
					stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionable= (SistemaAdditionable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);");
					stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
					stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionableHome= (SistemaAdditionableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);");
					stringBuilder.Append("\r\n\t\t\t\t}");
					*/
					
					//stringBuilder.Append("\r\n\r\n\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))");
					
					String  strTablaClaseRelacionadaFunction=" "+strGlobalSeguridadComment+"{";					
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t\t//strPagina="+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SRELATIVEPATH + Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaObjetivo)+"\"+Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP;";
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"}";
					
					
					
					/* TEMPORAL ERA ANTERIOR
					//if(ConEjb){
						stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {";
						stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
						stringBuilder.Append(strTablaClaseRelacionadaFunction;
						stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
						stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
						stringBuilder.Append(strTablaClaseRelacionadaFunction;
						stringBuilder.Append("\r\n\t\t\t\t}";
					//}
					*/
					if(!EsSwing){
					stringBuilder.Append("\r\n\r\n\t\t\t//ARCHITECTURE");
					stringBuilder.Append("\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {");
					stringBuilder.Append("\r\n\t\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP
					stringBuilder.Append(strComentarioInicioParaEjb+strTablaClaseRelacionadaFunction+strComentarioFinParaEjb);
					stringBuilder.Append("\r\n\t\t\t}");
					
					
					//if(ConEjb){
						stringBuilder.Append(" else if(Constantes.ISUSAEJBREMOTE) {");
						stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
						stringBuilder.Append(strTablaClaseRelacionadaFunction);
						stringBuilder.Append("\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
						stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
						stringBuilder.Append(strTablaClaseRelacionadaFunction);
						stringBuilder.Append("\r\n\t\t\t}");
						stringBuilder.Append("\r\n\t\t\t//ARCHITECTURE");
					//}
					
					
						if(EsVersionRichFaces3C(RichFaces_Version)){
							stringBuilder.Append("\r\n\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+");");
							stringBuilder.Append("\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+");");
						}
					}
					
					stringBuilder.Append("\r\n\r\n\t\t\tguardarDatosBusquedaSession();");
					stringBuilder.Append("\r\n\r\n\t\t} catch(Exception e) {");
					stringBuilder.Append("\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);"); 
					stringBuilder.Append("\r\n\t\t}");
					
					
					//OJO SE REPITE sAuxiliarUrlPagina FINAL DE IF Y ELSE
					if(!EsSwing){
						stringBuilder.Append("\r\n\r\n\t\tif(!"+"isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+") {");
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=\"\";");
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
						stringBuilder.Append("\r\n\r\n\t\t\tFacesContext facesContext = FacesContext.getCurrentInstance();");
						stringBuilder.Append("\r\n\t\t\tExternalContext externalContext = facesContext.getExternalContext();");
						stringBuilder.Append("\r\n\r\n\t\t\texternalContext.redirect(sAuxiliarUrlPagina);");
						stringBuilder.Append("\r\n\r\n\t\t\treturn "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
						stringBuilder.Append("\r\n\r\n\t\t} else {");
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=Constantes.SHTTPINIT+Constantes.SDNSNAMESERVER+\":\"+Constantes.SPORTSERVER+\"/\"+Constantes.SCONTEXTSERVER+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHOPCION+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION;");					
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
						stringBuilder.Append("\r\n\t\t\treturn \"\";");//GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
						stringBuilder.Append("\r\n\t\t}");
					} else {
						stringBuilder.Append("\r\n\r\n\t\treturn \"\";");	
					}
					
					stringBuilder.Append("\r\n\t}");
				}
				
			}
								
			//return strTablaClaseRelacionada; 
			return stringBuilder.ToString();
		}
		
public String GetFuncionesBusquedaTablasClasesFk() {
			String strTablaClaseRelacionada=string.Empty;
			StringBuilder stringBuilder=new StringBuilder();
			//System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			String sSchemaPadre=GetSchemaTableFromDBC(TablaBase,"");
			String sSchemaRelacionada="";
			
			String sCommentRF3="";
			
			if(EsVersionRichFaces4C(RichFaces_Version)){
				sCommentRF3="//";
			}
			
			foreach(ColumnSchema column in TablaBase.Columns) {
				if(column.IsForeignKeyMember && GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					tablaRelacionadaObjetivo=GetNombreTablaRelacionadaFromColumn(column);
					
					if(GeneracionPorModuloUnico){
						sSchemaRelacionada=GetSchemaTableFromDBC(tablaRelacionadaObjetivo,"");
						
						if(!sSchemaPadre.Equals(sSchemaRelacionada)) {
							continue;
						}
					}
			/*
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				strNombreAdicional="";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				if(!GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)) {
					continue;
				}
				
				
				
					if(GeneracionPorModuloUnico){
						String sSchemaRelacionada=GetSchemaTableFromDBC(tablaRelacionadaObjetivo,"");
						
						if(!sSchemaPadre.Equals(sSchemaRelacionada)) {
							continue;
						}
					}
									
					
					if(collectionInfo.CollectionRelationshipType!=RelationshipType.OneToOne) {
						
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
						
					} else {
						strNombreAdicional="";
					}
					
					
					encontrado=false;
					
					foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
						//&&strNombreAdicional.Equals("") SI NO ES VACIO SE PUEDE TRATAR DE MAS DE UNA RELACION FOREIGN KEY HACIA UNA TABLA
						if(tableSchema.Equals(tablaRelacionadaObjetivo)&&strNombreAdicional.Equals("")) {
							encontrado=true;
						}
					}
					*/
								
					if(!encontrado) {
						String strComentarioParaEjb="";
						String strComentarioInicioParaEjb="";
						String strComentarioFinParaEjb="";
					
						if(ConEjb){
							strComentarioParaEjb="//";
							strComentarioInicioParaEjb="\r\n\t\t\t\t/*";
							strComentarioFinParaEjb="*/";
						}
										
						tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
						
						strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
						
						stringBuilder.Append("\r\n\r\n\tpublic String registrarSesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"ParaBusqueda"+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tablaRelacionadaObjetivo.ToString())*/+strPlural.ToLower()+"() throws Exception {");
						stringBuilder.Append("\r\n\t\tBoolean isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n");						
						
						if(!EsSwing){
							stringBuilder.Append("\r\n\t\tFuncionesBeanFace funcionesBeanFace=new FuncionesBeanFace();\r\n");
							stringBuilder.Append("\r\n\t\ttry {");
							
							stringBuilder.Append("\r\n\r\n\t\t\t"+sCommentRF3+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);");							
						} else {
							stringBuilder.Append("\r\n\t\ttry {");
							//stringBuilder.Append("\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
						}
						
						stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {");
						stringBuilder.Append("\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
						stringBuilder.Append("\r\n\t\t\t}");
						
						if(!EsSwing){
							stringBuilder.Append("\r\n\r\n\t\t\t"+sCommentRF3+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME);");														
						} else {
							//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
						}
											
						stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"==null) {");
						stringBuilder.Append("\r\n\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
						stringBuilder.Append("\r\n\t\t\t}");
						
						stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setsPathNavegacionActual("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getsPathNavegacionActual()+Constantes.SHTMLFLECHA+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SCLASSWEBTITULO);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPermiteRecargarInformacion(false);");
						
						//SIEMPRE ES POPUP POR BUSQUEDA
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPaginaPopup(true);");							
						stringBuilder.Append("\r\n\t\t\tisPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".getisPaginaPopup();");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPaginaPopup(false);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setEstaModoBusqueda(true);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setsFuncionBusquedaRapida(\"window.opener."+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.setCombosCodigoDesdeBusqueda"+GetNombreCompletoColumnaClaseC(column)+"(TO_REPLACE);\");");
						
						//stringBuilder.Append("\r\n\r\n\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual=Long.parseLong(httpServletRequest.getParameter(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\"));");
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						
						String strPermiteNavegacionHaciaForeignKeyDesde="";
						
						if(!GetConPopupTableFromProperties(tablaRelacionadaObjetivo)) {
							strPermiteNavegacionHaciaForeignKeyDesde="true";
							//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(false);");
						} else {
							strPermiteNavegacionHaciaForeignKeyDesde="false";
							stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(true);");
						}
						
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPermiteNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+strPermiteNavegacionHaciaForeignKeyDesde+");");
						
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setsNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SNOMBREOPCION);");
						
						stringBuilder.Append("\r\n\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);");
						stringBuilder.Append("\r\n\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setl"+strId+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						
						//AQUI PARA NO STANDARD LOS CAMPO PK
						if(blnNoStandardTableFromProperties) {	
							stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(tablaRelacionadaObjetivo,strNombreAdicional));
						}
											
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"(true);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setl"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						
						//AQUI PARA NO STANDARD LOS CAMPO PK
						if(blnNoStandardTableFromProperties) {	
							stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSession(tablaRelacionadaObjetivo,strNombreAdicional));
						}
						
						stringBuilder.Append("\r\n\r\n\t\t\tString strPagina=Constantes.SNONE;");
						stringBuilder.Append("\r\n\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();");
						
						/*
						stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {");
						stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionable= (SistemaAdditionable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);");
						stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
						stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionableHome= (SistemaAdditionableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);");
						stringBuilder.Append("\r\n\t\t\t\t}");
						*/
						
						//stringBuilder.Append("\r\n\r\n\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))");
						
						String  strTablaClaseRelacionadaFunction=" "+strGlobalSeguridadComment+"{";					
								strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t\t//strPagina="+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SRELATIVEPATH + Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaObjetivo)+"\"+Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP;";
								strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"}";
						
						
						
						/* TEMPORAL ERA ANTERIOR
						//if(ConEjb){
							stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {";
							stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
							stringBuilder.Append(strTablaClaseRelacionadaFunction;
							stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
							stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
							stringBuilder.Append(strTablaClaseRelacionadaFunction;
							stringBuilder.Append("\r\n\t\t\t\t}";
						//}
						*/
						if(!EsSwing){
						stringBuilder.Append("\r\n\r\n\t\t\t//ARCHITECTURE");
						stringBuilder.Append("\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {");
						stringBuilder.Append("\r\n\t\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP
						stringBuilder.Append(strComentarioInicioParaEjb+strTablaClaseRelacionadaFunction+strComentarioFinParaEjb);
						stringBuilder.Append("\r\n\t\t\t}");
						
						
						//if(ConEjb){
							stringBuilder.Append(" else if(Constantes.ISUSAEJBREMOTE) {");
							stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
							stringBuilder.Append(strTablaClaseRelacionadaFunction);
							stringBuilder.Append("\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
							stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
							stringBuilder.Append(strTablaClaseRelacionadaFunction);
							stringBuilder.Append("\r\n\t\t\t}");
							stringBuilder.Append("\r\n\t\t\t//ARCHITECTURE");
						//}
						
						
							if(EsVersionRichFaces3C(RichFaces_Version)){
								stringBuilder.Append("\r\n\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+");");
								stringBuilder.Append("\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+");");
							}
						}
						
						stringBuilder.Append("\r\n\r\n\t\t\tguardarDatosBusquedaSession();");
						stringBuilder.Append("\r\n\r\n\t\t} catch(Exception e) {");
						stringBuilder.Append("\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);"); 
						stringBuilder.Append("\r\n\t\t}");
						
						
						//OJO SE REPITE sAuxiliarUrlPagina FINAL DE IF Y ELSE
						if(!EsSwing){
							stringBuilder.Append("\r\n\r\n\t\tif(!"+"isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+") {");
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=\"\";");
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
							stringBuilder.Append("\r\n\r\n\t\t\tFacesContext facesContext = FacesContext.getCurrentInstance();");
							stringBuilder.Append("\r\n\t\t\tExternalContext externalContext = facesContext.getExternalContext();");
							stringBuilder.Append("\r\n\r\n\t\t\texternalContext.redirect(sAuxiliarUrlPagina);");
							stringBuilder.Append("\r\n\r\n\t\t\treturn "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
							stringBuilder.Append("\r\n\r\n\t\t} else {");
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=Constantes.SHTTPINIT+Constantes.SDNSNAMESERVER+\":\"+Constantes.SPORTSERVER+\"/\"+Constantes.SCONTEXTSERVER+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHOPCION+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION;");					
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
							stringBuilder.Append("\r\n\t\t\treturn \"\";");//GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
							stringBuilder.Append("\r\n\t\t}");
						} else {
							stringBuilder.Append("\r\n\t\t\treturn \"\";");	
						}
						
						stringBuilder.Append("\r\n\t}");
					}
				}				
			}
								
			//return strTablaClaseRelacionada; 
			return stringBuilder.ToString();
		}
		
public  String DefinirFuncionesListItemsArrayForeignKeys()
{
	String sVariablesArray="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();\r\n\r\n";
				sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
			
				sVariablesArray+="\t\tif(this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"!=null) {\r\n";
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"!=null) {\r\n";
				sVariablesArray+="\t\t\t\t\titem=new SelectItem();\r\n";
				sVariablesArray+="\t\t\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"));\r\n";///*GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +*/GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column),GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())+");\r\n";
				sVariablesArray+="\t\t\t\t\titem.setValue("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n\r\n";
					
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem.add(item);\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
			
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n";
				sVariablesArray+="\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem(ArrayList<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem) {";
				sVariablesArray+="\r\n\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem;";
				sVariablesArray+="\r\n\t}\r\n\r\n";
				
				
				
				
				//PARA COMBOS CON DEPENDENCIA EVENT, SON TEMPORALES
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
					
					sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItemAuxiliar("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tArrayList<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal=new ArrayList<SelectItem>();\r\n\r\n";
					sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
				
					sVariablesArray+="\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"!=null) {\r\n";
					//sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
					//sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
					sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"));\r\n";///*GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +*/GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column),GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())+");\r\n";
					sVariablesArray+="\t\t\titem.setValue("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
						
					sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal.add(item);\r\n";
					//sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t}\r\n\r\n";
				
					sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal;\r\n";
					sVariablesArray+="\t}\r\n\r\n";
					
					//DESDE PADRE
					sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItemAuxiliarDesdePadre("+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tArrayList<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal=new ArrayList<SelectItem>();\r\n\r\n";
					sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
				
					sVariablesArray+="\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString()) +"!=null) {\r\n";
					//sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
					//sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\titem=new SelectItem();\r\n\r\n";
					
					sVariablesArray+="\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"()!=null && !"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"().equals(\"\")){\r\n";					
					sVariablesArray+="\t\t\t\titem.setLabel("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());\r\n";///*GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +*/GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column),GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())+");\r\n";
					sVariablesArray+="\t\t\t} else {\r\n";
					sVariablesArray+="\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"()!=null) {\r\n";
					sVariablesArray+="\t\t\t\t\titem.setLabel("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().toString());\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());\r\n\r\n";
					
					sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal.add(item);\r\n";
					//sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t}\r\n\r\n";
				
					sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal;\r\n";
					sVariablesArray+="\t}\r\n\r\n";
				}
				//PARA COMBOS CON DEPENDENCIA EVENT, SON TEMPORALES FIN
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"ListSelectItem() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();\r\n\r\n";
				sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
			
				sVariablesArray+="\t\tfor("+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +":this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
				sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseC(TablaBase.ToString()) +strClaseConstantesFunciones+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+strDescripcion+"("+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"));\r\n";
				///*GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +*/GetDescripcionComboColumnFromProperties(tableSchemaForeignKey,GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower())+");\r\n";
				sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseC(TablaBase.ToString()) +strClaseConstantesFunciones+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+strDescripcion+"("+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"));\r\n";
					
				sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem.add(item);\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
			
				sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n";
				sVariablesArray+="\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic void set"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"ListSelectItem(ArrayList<SelectItem> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem) {";
				sVariablesArray+="\r\n\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem;";
				sVariablesArray+="\r\n\t}\r\n\r\n";									
		}
	}
			
	return sVariablesArray;
}

public  String DefinirFuncionesListItemsArrayForeignKeysInicializacion()
{
	String sVariablesArray="";
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sVariablesArray+="\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();";
				/*
				sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();\r\n\r\n";
				sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
			
				sVariablesArray+="\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
				sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column))+");\r\n";
				sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
					
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem.add(item);\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
			
				sVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem;\r\n";
				sVariablesArray+="\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem(ArrayList<SelectItem> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem) {";
				sVariablesArray+="\r\n\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem;";
				sVariablesArray+="\r\n\t}\r\n\r\n";
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();";												
		}
	}
			
	return sVariablesArray;
}

public  String GetVariablesEjbCargarCombosFuncionestrForeignKeys()
{
	String sVariablesArray="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				TableSchema tableSchemaFk;
				tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);	
					
				//if(GetNombreClaseRelacionadaFromColumn(column)!=TablaBase.Name) {
				if(!GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).Equals(GetNombreClaseC(TablaBase.ToString()))) {
					//<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SREMOTEEJBNAME<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>
					
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"Implementable "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SREMOTEEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version)+");";
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"ImplementableHome= "+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHomeEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SLOCALEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version)+");";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Implementable "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Implementable="+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);";
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableHome "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"ImplementableHome= "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableHomeEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);";									
		}
	}
			
	return sVariablesArray;
}

//GetVariablesEjbCargarCombosFuncioneParametros
public  String GetVariablesEjbCargarCombosFuncioneParametros()
{
	String sVariablesArray="";
	
	/*
	foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				//if(GetNombreClaseRelacionadaFromColumn(column)!=TablaBase.Name) {
				if(!GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).Equals(GetNombreClaseC(TablaBase.ToString()))) {
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"Implementable "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);";
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"ImplementableHome= "+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHomeEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);";
				}
			}	
		}
	*/
	
	TableSchema tableSchemaEncontrada=null;
	String sClasesParametros=String.Empty;
	String[] sClases;
	
	
	sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
	
	//Trace.WriteLine(sClasesParametros);
	
	sClases=sClasesParametros.Split(',');
									
	foreach(String sClase in sClases){						
		tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
		
		//Trace.WriteLine(tableSchemaEncontrada.Name);
		
		if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"Implementable "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Implementable="+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ImplementableEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaEncontrada)+"ConstantesFunciones.SREMOTEEJBNAME"+GetAdditionalFromReporteC(tableSchemaEncontrada)+GetJBossSufijoC(JBoss_Version)+");";
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ImplementableHome "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"ImplementableHome= "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ImplementableHomeEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaEncontrada)+"ConstantesFunciones.SLOCALEJBNAME"+GetAdditionalFromReporteC(tableSchemaEncontrada)+GetJBossSufijoC(JBoss_Version)+");";
		}
	}
					
	//sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"Implementable "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SREMOTEEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version)+");";
	//sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"ImplementableHome= "+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHomeEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SLOCALEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version)+");";
				
	return sVariablesArray;
}

public  String GetFuncionesCargarCombosFuncionestrForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	bool blnVerificarDeshabilitarFk=false;
	String strVerificarDeshabilitarFk="";
	bool blnNoLoadFk=false;
	String strComentarioNoLoadFk="";
	String strCommentForeingKeyData="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				strComentarioNoLoadFk="";
				blnNoLoadFk=GetConNoLoadForeignKeyColumnFromPropertiesC(column);
				
				if(blnNoLoadFk) {
					strComentarioNoLoadFk="//";	
				}
				//SI FUNCIONA PERO NO SIEMPRE				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				//FUNCIONA SIEMPRE
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
		
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				//SI EXISTE COINCIDENCIA Y AL QUERER CARGAR TODOS LOS FK SE DESHABILITA Y SE OCULTA
				blnVerificarDeshabilitarFk=VerificarClaseFkBusquedaTablaC(TablaBase,GetNombreCompletoClaseRelacionadaFromColumn(column) );
				
				if(blnVerificarDeshabilitarFk) {
					strVerificarDeshabilitarFk="";
				} else {
					strVerificarDeshabilitarFk="//";	
				}
				
				sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(String sFinalQuery)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				sVariablesArray+="\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
				sVariablesArray+="\t\t\tArrayList<Classe> clases=new ArrayList<Classe>();\r\n";
				sVariablesArray+="\t\t\tArrayList<String> arrClasses=new ArrayList<String>();\r\n";
				sVariablesArray+="\t\t\tClasse classe=new Classe();\r\n";
				sVariablesArray+="\t\t\tDatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,\"\");\r\n\r\n";
		
				if(column.AllowDBNull) {
					sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo = new "+GetNombreClaseRelacionadaFromColumn(column)+"();\r\n\r\n";
				}
				//sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo.set"+strField_+"sCodigo(Constantes.SCAMPONONE);";
			
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
				
				if( GetConCargarTodoFkColumnFromPropertiesC(column) 
					|| EsColumnaVariableGlobalDataBaseFromPropertiesC(column,true,false) 
					|| TieneColumnaEsDefectoC(tableSchema)
				) {
						
					strCommentForeingKeyData="//";					
				}
				
				sVariablesArray+="\t\t\t"+strCommentForeingKeyData+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(true);\r\n\r\n";
				
				String strQueryStringValoresLista="sFinalQuery";			
				if(VerificarColumnaCatalogoGeneralC(column)) {
					sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"=\"\";\r\n";
					sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"="+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+column.Name.ToUpper()+"CODIGO);\r\n\r\n";
					
					strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString());
				}
				/*
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+strPrefijoJSFSessionFaces+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=("+GetNombreClaseRelacionadaFromColumn(column)+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
	
				sVariablesArray+="\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseRelacionadaFromColumn(column)+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				*/
				
				if(!EsSwing) {
					sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
				} else {
					//sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				
				String strClasesSiDeepLoadFk=GetNombresClasesSiDeepLoadFkFromTableFromPropertiesC(column);
				String[] arrClasesSiDeepLoadFk=null;
				
				sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(true);\r\n";
				
				if(!strClasesSiDeepLoadFk.Equals("")) {					
					
					//sVariablesArray+="\t\t\t\tclases=new ArrayList<Classe>();\r\n";
					//sVariablesArray+="\t\t\t\tarrClasses=new ArrayList<String>();\r\n\r\n";
					
					arrClasesSiDeepLoadFk=strClasesSiDeepLoadFk.Split(',');
					
					sVariablesArray+="\r\n";
					
					foreach(String strClaseSiDeepLoadFk in arrClasesSiDeepLoadFk) {
						sVariablesArray+="\t\t\t\t\tarrClasses.add(\""+strClaseSiDeepLoadFk+"\");\r\n";
					}
															
					sVariablesArray+="\r\n\t\t\t\t\tclases.addAll("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.getClassesForeignKeysFromStringsOf"+GetNombreClaseRelacionadaFromColumn(column)+"(arrClasses,DeepLoadType.INCLUDE));\r\n";
					sVariablesArray+="\t\t\t\t\tclases.addAll("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.getClassesRelationshipsFromStringsOf"+GetNombreClaseRelacionadaFromColumn(column)+"(arrClasses,DeepLoadType.INCLUDE));\r\n\r\n";
					sVariablesArray+="\t\t\t\t\tdatosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,\"\");\r\n";
					
					sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(false);\r\n";
					sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.setIsConDeep(true);\r\n";
					sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"Logic.setDatosDeep(datosDeep);\r\n\r\n";
					
				}
				
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();";
				sVariablesArray+="\r\n\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t}\r\n\r\n";
				
				if(column.AllowDBNull) {
					sVariablesArray+="\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add(0, "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo);\r\n";
				}
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				
				if(!blnVerificarDeshabilitarFk) {
					sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
					sVariablesArray+="\r\n\r\n\t\t\t\tif(!this.conCargarMinimo) {";
					sVariablesArray+="\r\n\t\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(false);";		
					sVariablesArray+="\r\n\t\t\t\t\t}";
					sVariablesArray+="\r\n\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
				}
				
				//if busqueda session
				sVariablesArray+="\r\n\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tif(!this.conCargarMinimo) {\r\n";
				sVariablesArray+="\t\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
				sVariablesArray+="\t\t\t\t}\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE\r\n";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.getEntityWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"());";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual(),this.datosCliente));";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getEntity("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual(),this.datosCliente));";
				}
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
				
				//end else
				sVariablesArray+="\r\n\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		bool blnAdmiteNulos=false;
		int cont=0;
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				cont++;
				blnAdmiteNulos=false;
				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				//SI EXISTE COINCIDENCIA Y AL QUERER CARGAR TODOS LOS FK SE DESHABILITA Y SE OCULTA
				blnVerificarDeshabilitarFk=VerificarClaseFkBusquedaTablaC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()) );
				
				if(blnVerificarDeshabilitarFk) {
					strVerificarDeshabilitarFk="";
				} else {
					strVerificarDeshabilitarFk="//";	
				}
				
				sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString()) +"s"+strForeignKey+"Lista()throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				sVariablesArray+="\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">();\r\n\r\n";
				
				if(blnAdmiteNulos) {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Nulo = new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Locic = new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic();\r\n\r\n";
				
				String strQueryStringValoresLista="\"\"";			
				if(VerificarTablaValorCatalogoGeneralC(tableSchemaForeignKey)) {
					sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"=\"\";\r\n";
					sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"="+GetNombreClase(tableSchemaForeignKey.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+cont.ToString()+"CODIGO);\r\n\r\n";
					
					strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString());
				}
				
				if(!EsSwing) {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
				} else {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"()) {\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.getTodos"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.get"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"s();";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\t"+strVerificarDeshabilitarFk+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Implementable.getTodos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\t"+strVerificarDeshabilitarFk+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"ImplementableHome.getTodos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t}";
				
				if(blnAdmiteNulos) {
					sVariablesArray+="\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()  +"s"+strForeignKey+".add(0, "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Nulo);\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				
				if(!blnVerificarDeshabilitarFk) {
					sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
					sVariablesArray+="\r\n\r\n\t\t\t\tif(!this.conCargarMinimo) {\r\n";
					sVariablesArray+="\r\n\t\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(false);";		
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
					sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
				}
				
				String strParametrosNoStandardSession=GetParametrosCargarCombosFuncionestrForeignKeys(tableSchemaForeignKey);
				//if busqueda session
				sVariablesArray+="\r\n\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tif(!this.conCargarMinimo) {\r\n";
				sVariablesArray+="\t\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
				sVariablesArray+="\t\t\t\t}\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE\r\n";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				//GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.getEntityWithConnection("+strParametrosNoStandardSession+");\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Logic.get"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"());";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Implementable.getEntityWithConnection("+strParametrosNoStandardSession+"));";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"ImplementableHome.getEntityWithConnection("+strParametrosNoStandardSession+"));";
				}
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
				
				//end else
				sVariablesArray+="\r\n\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";									
		}
	}
	
	return sVariablesArray;
}

public  String GetParametrosCargarCombosFuncionestrForeignKeys(TableSchema tableSchemaForeignKey){
	//INICIALIZA TABLA
	//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
	String sTablaClaseRelacionada="";
	
	//sTablaClaseRelacionada+="\r\n\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";							
	//sTablaClaseRelacionada+="\r\n\tLong lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";	
					
	ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
	for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
		sTablaClaseRelacionada+=GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(columnSchemaCollectionFK[i])+GetNombreClaseC(tableSchemaForeignKey.ToString()+"Actual()") ;					
	} 	
	
	return sTablaClaseRelacionada;
}

public  String GetFuncionesSetActualComboForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic void setActual"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"(Long "+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				/*
				sVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
							
				sVariablesArray+="\r\n\r\n\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection(\"\",new Pagination());\r\n\r\n";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Logic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();\r\n\r\n";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection(\"\",pagination,datosCliente);";
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection(\"\",pagination,datosCliente);";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				*/
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"()!=null && "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t\tbreak;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				if(EsSwing) {
					sVariablesArray+="\t\t\tif(sFormularioTipoBusqueda.equals(\"Formulario\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n";
					sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp!=null) {\r\n";
					sVariablesArray+="\t\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sVariablesArray+="\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					}
					sVariablesArray+="\t\t\t\t} else {\r\n";
					sVariablesArray+="\t\t\t\t\t//jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";//".setSelectedIndex(-1);\r\n";
					sVariablesArray+="\t\t\t\t\tif(jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".getItemCount()>0) {\r\n";
					sVariablesArray+="\t\t\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(0);\r\n";
					sVariablesArray+="\t\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tif(conCombosBusquedas) {\r\n";
					sVariablesArray+="\r\n\t\t//BYDAN_BUSQUEDAS";
					sVariablesArray+="\r\n\t\t"+strCommentMinCodigoWebIni;
					//if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
						sVariablesArray+="\t\t\t\t"+GetControlesIndicesBusquedaVariables(TablaBase,column,GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp")+"\r\n";
					//}
					sVariablesArray+="\r\n\t\t"+strCommentMinCodigoWebFin;
					sVariablesArray+="\t\t\t}\r\n";
				
				} else {
					sVariablesArray+="\t\t\tif(sFormularioTipoBusqueda.equals(\"Formulario\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n";
					sVariablesArray+="\t\t\t\t//jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					
					sVariablesArray+="\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+"!=null) {\r\n";
					sVariablesArray+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado);\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sVariablesArray+="\t\t\t\t//jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					}
					
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tif(conCombosBusquedas) {\r\n";
					sVariablesArray+="\r\n\t\t//BYDAN_BUSQUEDAS";
					sVariablesArray+="\r\n\t\t"+strCommentMinCodigoWebIni;
					//if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
						sVariablesArray+="\t\t\t\t"+GetControlesIndicesBusquedaVariables(TablaBase,column,GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp")+"\r\n";
					//}
					sVariablesArray+="\r\n\t\t"+strCommentMinCodigoWebFin;
					sVariablesArray+="\t\t\t}\r\n";
				}
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
				
				
				//ACTUAL DESCRIPCION
				
				sVariablesArray+="\r\n\tpublic String getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"Descripcion(Long "+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\tString sDescripcion=\"\";\r\n\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"()!=null && "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t\tbreak;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\t\t\tsDescripcion="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);";
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\treturn sDescripcion;\r\n";
				
				sVariablesArray+="\t}\r\n";
				
				//GENERICO
				
				if(EsSwing){
				
				sVariablesArray+="\r\n\t@SuppressWarnings(\"rawtypes\")";
				sVariablesArray+="\r\n\tpublic void setActual"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"Generico(Long "+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado,JComboBox jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";				
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"()!=null && "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t\tbreak;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp!=null) {\r\n";
				sVariablesArray+="\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico.setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
				sVariablesArray+="\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tif(jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico!=null && jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico.getItemCount()>0) {\r\n";
				sVariablesArray+="\t\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico.setSelectedIndex(0);\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n";
				//sVariablesArray+="\r\n\t\t\tsDescripcion="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);";
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
								
				sVariablesArray+="\t}\r\n";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		String strPorTablaColumnsPKParametrosSinComaPrimeroFK="";
		String strConditions="";
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				
				strPorTablaColumnsPKParametrosSinComaPrimeroFK=GetColumnsPKParametrosSinComaPrimeroC(tableSchemaForeignKey);
				
				sVariablesArray+="\r\n\tpublic void setActual"+GetNombreClaseC(tableSchemaForeignKey.ToString()) +strForeignKey+"("+ strPorTablaColumnsPKParametrosSinComaPrimeroFK +")throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"  "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Aux:"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+") {\r\n";
				strConditions=GetConditionsSetActualComboForeignKeys(tableSchemaForeignKey);
				
				sVariablesArray+="\t\t\t\tif("+strConditions+") {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Temp="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				if(EsSwing) {
					sVariablesArray+="\t\t\tjComboBox"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Temp);\r\n\r\n";
				}
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";									
		}
	}	
	
	return sVariablesArray;
}

public  String GetConditionsSetActualComboForeignKeys(TableSchema tableSchema)
{
	String strConditionsSetActualComboForeignKeys="";
	String strPrefijoTipo="";
	String strNombre="";
	bool blnEsPrimero=true;
	
	foreach(ColumnSchema columnSchema in tableSchema.Columns) {
		if(columnSchema.IsPrimaryKeyMember) {
			
			if(!blnEsPrimero) {
				strConditionsSetActualComboForeignKeys+="&&";
			}
			
			strPrefijoTipo = GetPrefijoTipoC(columnSchema);
			strNombre = GetNombreColumnaClaseC(columnSchema);	
					
			strConditionsSetActualComboForeignKeys+=GetNombreClaseC(tableSchema.ToString()).ToLower()+"Aux."+ GetParameterClaseMethodC(columnSchema,true,false,false,"")+".equals("+strPrefijoTipo+ strNombre+")";
			
			if(blnEsPrimero) {
				blnEsPrimero=false;
			}
		}
	}
	
	return strConditionsSetActualComboForeignKeys;
}

public  String GetFuncionesSetActualParaGuardarForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
			strComentarioParaEjb+="";
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				
				//if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)*/){
				//	continue;
				//}
				
				
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
				
				sVariablesArray+="\r\n\t@SuppressWarnings(\"rawtypes\")";
				sVariablesArray+="\r\n\tpublic void setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"("+ GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+",JComboBox jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"Generico)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=new "+GetNombreClaseRelacionadaFromColumn(column)+"();\r\n\r\n"; //("+ GetNombreClaseRelacionadaFromColumn(column)+")"+"jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();\r\n\r\n";
				
				sVariablesArray+="\t\t\tif(jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"Generico==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=("+ GetNombreClaseRelacionadaFromColumn(column)+")"+"jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();\r\n";
				sVariablesArray+="\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=("+ GetNombreClaseRelacionadaFromColumn(column)+")"+"jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"Generico.getSelectedItem();\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux!=null) {\r\n";
				
				//if(GetNombreClaseRelacionadaFromColumn(column).Equals("Periodo")) {
				if(GetConValidacionInactividadFkTableFromPropertiesC(tableSchema)) {
					sVariablesArray+="\t\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux.getid_estado_"+GetNombreClaseObjetoC(tableSchema.ToString())+"().equals(0L)) {\r\n";
					sVariablesArray+="\t\t\t\t\tthrow new Exception(\""+GetTituloNombreTableFromPropertiesC(tableSchema)+" INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR\");\r\n";
					sVariablesArray+="\t\t\t\t}\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strField_+""+sPrefijo+sColumna+"("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+strIdGetSet+"());\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strDescripcion+ "("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux));\r\n";
				sVariablesArray+="\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =new ArrayList();//GetArrayListForeignKeys(TablaBase);
		String sPrefijo="";sPrefijo+="";
		String sColumna="";sColumna+="";
		
		MemberColumnSchema memberColumnSchemaPK=null;
		MemberColumnSchema memberColumnSchemaFK=null;
				
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {		
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				
				sVariablesArray+="\r\n\tpublic void setActualParaGuardar"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString()) +strForeignKey+"("+ GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+" "+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+")throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"  "+GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"Aux=("+ GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+")"+"jComboBox"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+".getSelectedItem();\r\n\r\n";
					
					
				
				string strPrefijoTipo = "";
				string strNombre = "";
				
				if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
					System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
				}
				
				for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
					memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
					memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
					
					strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
					strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
	
					//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
					sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+".set"+strField_+""+strPrefijoTipo+strNombre+"("+GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"Aux."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");";
				
				}	
					
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";			
			}
		}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualComboForeignKeys(bool esParaVariablesGlobalDataBase,bool conTraerDesdeBaseDatos,bool esConObjetoClaseParametro)
{
	String sVariablesArray="";	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	String sModuloDominio="";
	String sModuloDominioProperties="";
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strObjetoBean="";

	if(!esConObjetoClaseParametro) {
		strObjetoBean=GetObjetoBeanC(TablaBase);
	} else {
		strObjetoBean=GetNombreClaseObjetoC(TablaBase.ToString());
	}
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sModuloDominio="this.moduloActual.getId()";
				
				if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)){
					continue;
				}
				
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!esParaVariablesGlobalDataBase) {
					if(conTraerDesdeBaseDatos) {
						sVariablesArray+="\r\n\r\n\t\t\t\t\t//"+GetNombreCompletoClaseRelacionadaFromColumn(column);
						sVariablesArray+="\r\n\t\t\t\t\tif(!"+strObjetoBean+"."+GetNombreConCargarControlVariablesSwingC(column,"","",false)+") {";	
						sVariablesArray+="\r\n\t\t\t\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKeyLista(\" where id=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"());";
						sVariablesArray+="\r\n\t\t\t\t\t\t//this.inicializarActualizarBinding"+GetNombreClase(TablaBase.ToString())+"(false,false);";
						sVariablesArray+="\r\n\t\t\t\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey(\"Todos\");";
						sVariablesArray+="\r\n\t\t\t\t\t}";
							
						sVariablesArray+="\r\n\t\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";
					} else {
						if( !EsColumnaVariableGlobalDataBaseFromPropertiesC(column) 
							&& !EsColumnaVariableModuloGlobalC(column)
							&& !column.Name.Equals(strIdUsuario) 
							&& !column.Name.Equals(strIdAnio) 
							&& !column.Name.Equals(strIdMes)
						) { //&& !ContieneColumna(TablaBase,strIdAnio) && !ContieneColumna(TablaBase,strIdMes)) {
								
							sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+/*GetNombreClaseObjetoC(TablaBase.ToString())*/strObjetoBean+".get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";
						}
					}
				} else {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
					
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						
						sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
						
						if(!sModuloDominioProperties.Equals(String.Empty)) {
							sModuloDominio="ModuloConstantesFuncionesAdditional."+sModuloDominioProperties;														
						}												
	
						sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+sModuloDominio+",false,\"Formulario\");";
					}
				}
				/*
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tjComboBox"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(column)+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n\r\n";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
				*/
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			String sPrefijo="";//GetPrefijoTipoC(column);	
			String sColumna="";//GetNombreColumnaClaseC(column);	
	.
			sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableSchemaForeignKey.ToString())+strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"());";
													
		}
		*/
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
				if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
					arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
					strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
				}
			}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualFechas(bool esParaVariablesGlobalDataBase)
{
	String sVariablesArray="";	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	String sModuloDominio="";sModuloDominio+="";
	String sModuloDominioProperties="";sModuloDominioProperties+="";
		
	if(ConFechaSistemaDatabaseFromPropertiesC(TablaBase.Database)) {
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsDateColumn(column)) {
				sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.parametroGeneralUsuario.getfecha_sistema());";
			}	
		}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualComboGlobalAuxiliarForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(EsSwing) {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
							//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
							if(column.Name.Equals(strIdUsuario)) {	
								//Trace.WriteLine("ok");
								sVariablesArray+="\r\n\r\n\t\t\t\tthis.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,\"Formulario\");";						
							
							} else if(column.Name.Equals(strIdEjercicio)) {
								sVariablesArray+="\r\n\r\n\t\t\t\tEjercicio ejercicioActual=(Ejercicio)jComboBoxid_ejercicio"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdAnio)) {
									sVariablesArray+="\r\n\t\t\t\tthis.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,\"Formulario\");";
								}
							} else if(column.Name.Equals(strIdPeriodo)) {
								sVariablesArray+="\r\n\r\n\t\t\t\tPeriodo periodoActual=(Periodo)jComboBoxid_periodo"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdMes)) {
									sVariablesArray+="\r\n\t\t\t\tthis.setActualMesForeignKey(periodoActual.getid_mes(),false,\"Formulario\");";
								}
							} else {
								//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";
							}
							
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
					}	
				} else {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
							//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
							if(column.Name.Equals(strIdUsuario)) {	
								//<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>									
								sVariablesArray+="\r\n\r\n\t\t\t\tthis.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,\"Formulario\");";						
							
							} else if(column.Name.Equals(strIdEjercicio)) {
								sVariablesArray+="\r\n\r\n\t\t\t\t//Ejercicio ejercicioActual=(Ejercicio)jComboBoxid_ejercicio"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdAnio)) {
									//sVariablesArray+="\r\n\t\t\t\tthis.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,\"Formulario\");";
									sVariablesArray+="\r\n\t\t\t\tthis.setActualAnioForeignKey(this."+GetNombreClaseObjeto(TablaBase.ToString())+".getid_anio(),false,\"Formulario\");";
								}
							
							} else if(column.Name.Equals(strIdPeriodo)) {
								sVariablesArray+="\r\n\r\n\t\t\t\t//Periodo periodoActual=(Periodo)jComboBoxid_periodo"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdMes)) {
									//sVariablesArray+="\r\n\t\t\t\tthis.setActualMesForeignKey(periodoActual.getid_mes(),false,\"Formulario\");";
									sVariablesArray+="\r\n\t\t\t\tthis.setActualMesForeignKey(this."+GetNombreClaseObjeto(TablaBase.ToString())+".getid_mes(),false,\"Formulario\");";
								}
							}
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
					}	
				}
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
				sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
			}
		}
	}
	
	return sVariablesArray;
}

//GetCallFuncionesSetActualComboDefaultForeignKeys
public  String GetCallFuncionesSetActualComboDefaultForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!GetDefaultValueColumna(column,true).Equals("")) {
					sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+GetDefaultValueColumna(column)+",false,\"Formulario\");";
				}
				
				/*
				if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						
				} else if(EsColumnaVariableModuloGlobalC(column)) {
					//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
				}	
				*/
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
				sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
			}
		}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualComboParametroForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!GetColumnClaseParametroColumnFromPropertiesC(column).Equals("")) {
					String[] sObjetoCampo=GetColumnClaseParametroColumnFromPropertiesC(column).Split('.');
					String sObjeto=sObjetoCampo[0];
					
					sVariablesArray+="\r\n\t\t\t\tif("+sObjeto+"!=null){";
					sVariablesArray+="\r\n\t\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+GetColumnClaseParametroColumnFromPropertiesC(column)+"(),false,\"Formulario\");";
					sVariablesArray+="\r\n\t\t\t\t}";
				}
				
				/*
				if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						
				} else if(EsColumnaVariableModuloGlobalC(column)) {
					//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
				}	
				*/
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
				sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
			}
		}
	}
	
	return sVariablesArray;
}

public  String GetSetParametersSetActualComboForeignKeys(TableSchema foreignKeyTable,MemberColumnSchemaCollection foreignKeyMemberColumns)
{
	String strConditionsSetActualComboForeignKeys="";
	String strPrefijoTipo="";
	String strNombre="";
	bool blnEsPrimero=true;
	ColumnSchema columnSchema=null;
	
	foreach(MemberColumnSchema memberColumnSchema in foreignKeyMemberColumns) {
		columnSchema=memberColumnSchema.Column;
				
			if(!blnEsPrimero) {
				strConditionsSetActualComboForeignKeys+=",";
			}
			
			strPrefijoTipo = GetPrefijoTipoC(columnSchema);
			strNombre = GetNombreColumnaClaseC(columnSchema);	
					
			strConditionsSetActualComboForeignKeys+="this."+GetNombreClaseC(foreignKeyTable.ToString()).ToLower()+"."+ GetParameterClaseMethodC(columnSchema,true,false,false,"")+"";
			
			if(blnEsPrimero) {
				blnEsPrimero=false;
			}		
	}
	
	return strConditionsSetActualComboForeignKeys;
}

public  String GetCallFuncionesSetActualParaGuardarForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
	
				sVariablesArray+="\r\n\t\t\t\tthis.setActualParaGuardar"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+GetNombreClaseObjetoC(TablaBase.ToString())+",null);";//this.
	
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\t\t\tthis.setActualParaGuardar"+GetNombreClaseC(tableSchemaForeignKey.ToString())+strForeignKey+"("+GetNombreClaseObjetoC(TablaBase.ToString())+",null);";//this.
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesArrayForeignKeysV0()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";
	String sModuloDominio="this.moduloActual";
	String sModuloDominioProperties="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sModuloDominio="this.moduloActual";
				
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				if(EsSwing)
				{
					strCargarDependencia="";
					
					if(!GetConEventDependColumnFromPropertiesC(column).Equals("") || !GetConEventQueryDependColumnFromPropertiesC(column).Equals("")) {
						strCargarDependencia="cargarCombosDependencia && ";
					}
					
					sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
				}
				
				sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneralNo= new  ArrayList<String>();";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral,this.arrDatoGeneralNo);";		
				
				//SI TIENE MODULO DINAMICO
				sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
				if(!sModuloDominioProperties.Equals(String.Empty)) {
					sModuloDominio="moduloActualAux";
					
					sVariablesArray+="\r\n\t\t\t\t\tmoduloActualAux.setId(ModuloConstantesFuncionesAdditional."+sModuloDominioProperties+");\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,"+sModuloDominio+",true,false,arrColumnasGlobales);";
				
				
				sVariablesArray+="\r\n\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, \""+GetFinalQueryColumnFromPropertiesC(column)+"\");";
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesForeignKeysLlamar(String strTipo,String strTab) {
	String sVariablesArray="";
	String sVariablesArrays="";
	String strFuncionLista="";
	String strFuncionDefecto="";
	String strFuncionAddFrame="";
	String strFuncionActions="";
	String strTabExtraLocal="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns) {
			strTabExtraLocal="";
			
			if(column.IsForeignKeyMember) {
				if(strTipo.Equals("Listas") || strTipo.Equals("Todos")) {
					strFuncionLista="\r\n\t"+strTab+"this.cargarCombosForeignKey"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Listas(cargarCombosDependencia,sFinalQueryCombo);";
					sVariablesArray+=strFuncionLista;
				}
				
				if(strTipo.Equals("AddDefecto") || strTipo.Equals("Todos")) {
					strFuncionDefecto="\r\n\t"+strTab+"this.addItemDefectoCombosForeignKey"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"();";
					sVariablesArray+=strFuncionDefecto;
				}
				
				if(strTipo.Equals("InitActions") || strTipo.Equals("Todos")) {
					if(GetConEventChangeColumnFromPropertiesC(column)) {
						if(strTipo.Equals("Todos")) {
							strTabExtraLocal="\t";
						}
						
						strFuncionActions="\r\n\t"+strTab+strTabExtraLocal+"this.initActionsCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"();";
						sVariablesArray+=strFuncionActions;
					}
				}
				
				if(strTipo.Equals("Todos")) {	
					if( EsColumnaVariableGlobalDataBaseFromPropertiesC(column)
						|| EsColumnaVariableModuloGlobalC(column)
					) {
							
						continue;
					}
					
					strFuncionAddFrame="\r\n\t"+strTab+"this.cargarCombosFrame"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArrays+="\r\n\r\n\tpublic void cargarCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {"; 					
					sVariablesArrays+="\r\n\t\ttry {";			
					sVariablesArrays+=strFuncionLista;
					sVariablesArrays+=strFuncionDefecto;
					sVariablesArrays+=strFuncionAddFrame;
					sVariablesArrays+="\r\n\r\n\t"+strTab+"if(conInitActions) {";
					sVariablesArrays+=strFuncionActions;
					sVariablesArrays+="\r\n\t"+strTab+"}\r\n";
					
					sVariablesArrays+="\r\n\t\t\tthis.recargarComboTabla"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey);";
					
					sVariablesArrays+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArrays+="\r\n\t\t\tthrow e;";
					sVariablesArrays+="\r\n\t\t}";
					sVariablesArrays+="\r\n\t}";
				}
			}
		}
		
		if(strTipo.Equals("Todos")) {	
			sVariablesArray=sVariablesArrays;
		}
	} else {
		ArrayList arrayListForeignKeys = GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
		
		}
	}
				
	return sVariablesArray;
}	

public  String CallFuncionesArrayForeignKeys() {
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";
	String sModuloDominio="this.moduloActual";
	String sModuloDominioProperties="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sModuloDominio="this.moduloActual";
				
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				sVariablesArray+="\r\n\r\n\tpublic void cargarCombosForeignKey"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {";
				sVariablesArray+="\r\n\t\ttry	{";
				sVariablesArray+="\r\n\t\t\tArrayList<String> arrColumnasGlobales=new ArrayList<String>();";
				sVariablesArray+="\r\n\r\n\t\t\tString  finalQueryGlobal=\"\";";
				
				if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){
				sVariablesArray+="\r\n\r\n\t\t\tModulo  moduloActualAux=new Modulo();";
				}
				
				if(EsSwing)
				{
					strCargarDependencia="";
					
					if(!GetConEventDependColumnFromPropertiesC(column).Equals("") || !GetConEventQueryDependColumnFromPropertiesC(column).Equals("")) {
						strCargarDependencia="cargarCombosDependencia && ";
					}
					
					sVariablesArray+="\r\n\r\n\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
				}
				
				sVariablesArray+="\r\n\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\t\t\t\tthis.arrDatoGeneralNo= new  ArrayList<String>();";
				
				String strVariablesGlobalNo=GetVarGlobalNOColumnFromPropertiesC(column);							
				
				if(!strVariablesGlobalNo.Equals("")) {
					String[] arrVariablesGlobalNo=strVariablesGlobalNo.Split(',');
					
					foreach(String strVariablesGlobalNoActual in arrVariablesGlobalNo) {
						sVariablesArray+="\r\n\t\t\t\tthis.arrDatoGeneralNo.add(\""+strVariablesGlobalNoActual+"\");";
					}
				}
				
				sVariablesArray+="\r\n\r\n\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral,this.arrDatoGeneralNo);";		
				
				//SI TIENE MODULO DINAMICO
				sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
				if(!sModuloDominioProperties.Equals(String.Empty)) {
					sModuloDominio="moduloActualAux";
					
					sVariablesArray+="\r\n\t\t\t\tmoduloActualAux.setId(ModuloConstantesFuncionesAdditional."+sModuloDominioProperties+");\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,"+sModuloDominio+",true,false,arrColumnasGlobales);";
				
				
				sVariablesArray+="\r\n\r\n\t\t\t\tfinalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, \""+GetFinalQueryColumnFromPropertiesC(column)+"\");";
				sVariablesArray+="\r\n\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery + finalQueryGlobal);";
				
				if(EsSwing) {
					sVariablesArray+="\r\n\t\t\t}\r\n";
				}
				
				sVariablesArray+="\r\n\t\t} catch(Exception e) {";
				sVariablesArray+="\r\n\t\t\tthrow e;";
				sVariablesArray+="\r\n\t\t}";		
				sVariablesArray+="\r\n\t}";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesArrayForeignKeysLote() {
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";
	String sModuloDominio="this.moduloActual";
	String sModuloDominioProperties="";
	String strObjetoBean=GetObjetoBeanC(TablaBase);
	TableSchema tableSchemaFk=null;
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(column.IsForeignKeyMember) {
				sModuloDominio="this.moduloActual";
				tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				//if(EsSwing) {
				strCargarDependencia="";
					
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("") || !GetConEventQueryDependColumnFromPropertiesC(column).Equals("")) {
					strCargarDependencia="cargarCombosDependencia && ";
				}
					
				sVariablesArray+="\r\n\r\n\r\n\t\t\t\tString finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=\"\";";
				sVariablesArray+="\r\n\r\n\t\t\t\tif("+strCargarDependencia+"((this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0) && "+strObjetoBean+"."+GetNombreConCargarControlVariablesSwingC(column,"","",false)+")";
				sVariablesArray+="\r\n\t\t\t\t\t || (this.esRecargarFks && "+strObjetoBean+"."+GetNombreConCargarControlVariablesSwingC(column,"","",false)+")) {";
				//}
				
				sVariablesArray+="\r\n\r\n\t\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
				sVariablesArray+="\r\n\t\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\t\t\t\t\t\tthis.arrDatoGeneralNo= new  ArrayList<String>();\r\n";
				
				
				//NO GLOBAL POR TABLA
				String strVariablesGlobalNo=GetVarGlobalNOFkTableFromPropertiesC(tableSchemaFk);							
				
				if(!strVariablesGlobalNo.Equals("")) {
					String[] arrVariablesGlobalNo=strVariablesGlobalNo.Split(',');
					
					foreach(String strVariablesGlobalNoActual in arrVariablesGlobalNo) {
						sVariablesArray+="\r\n\t\t\t\t\t\tthis.arrDatoGeneralNo.add(\""+strVariablesGlobalNoActual+"\");";
					}
				}
				//NO GLOBAL POR TABLA
				
				
				
				//NO GLOBAL POR COLUMNA
				strVariablesGlobalNo=GetVarGlobalNOColumnFromPropertiesC(column);							
				
				if(!strVariablesGlobalNo.Equals("")) {
					String[] arrVariablesGlobalNo=strVariablesGlobalNo.Split(',');
					
					foreach(String strVariablesGlobalNoActual in arrVariablesGlobalNo) {
						sVariablesArray+="\r\n\t\t\t\t\t\tthis.arrDatoGeneralNo.add(\""+strVariablesGlobalNoActual+"\");";
					}
				}
				//NO GLOBAL POR COLUMNA
				
				//GetVarGlobalNOColumnFromPropertiesC
				
				sVariablesArray+="\r\n\r\n\t\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral,this.arrDatoGeneralNo);";		
				
				//SI TIENE MODULO DINAMICO
				sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
				if(!sModuloDominioProperties.Equals(String.Empty)) {
					sModuloDominio="moduloActualAux";
					
					sVariablesArray+="\r\n\t\t\t\t\t\tmoduloActualAux.setId(ModuloConstantesFuncionesAdditional."+sModuloDominioProperties+");\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,"+sModuloDominio+",true,false,arrColumnasGlobales);";
				
				
				sVariablesArray+="\r\n\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=Funciones.GetFinalQueryAppend(finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +", \""+GetFinalQueryColumnFromPropertiesC(column)+"\");";
				sVariablesArray+="\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
				
				sVariablesArray+=strBusquedaFKComment+"\t//this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
				
				sVariablesArray+="\r\n\t\t\t\t\t} else {";
				sVariablesArray+="\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=\" WHERE \" + ConstantesSql.ID + \"=\"+"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual();";
				sVariablesArray+="\r\n\t\t\t\t\t}";
				
				//if(EsSwing)
				//{
					sVariablesArray+="\r\n\t\t\t\t} else {";
					sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=\"NONE\";";
					sVariablesArray+="\r\n\t\t\t\t}";
				//}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String VariablesStringForeignKeysLote(bool conInicializar) {
	String sVariablesArray=VariablesStringForeignKeysLoteC(TablaBase,conInicializar);	
	
	return sVariablesArray;
}

public  String CallInicializarFuncionesArrayForeignKeys()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";strCargarDependencia+="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				if(EsSwing)
				{
					strCargarDependencia="";
					/*
					if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
						strCargarDependencia="cargarCombosDependencia && ";
					}
					*/
					
					//sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
					
					sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey=new ArrayList();";
				}
				/*
				sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral);";		
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales);";
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
		
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallArbolBusquedaFuncionesArrayForeignKeys()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";strCargarDependencia+="";
	String strNombreCompletoClaseRelacionadaFromColumn="";
	
	if(!blnNoStandardTableFromProperties) {	
		
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				TableSchema tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);
				//Trace.WriteLine("INICIO");
				bool esAutoReferenciadaFk=GetEsAutoReferenciadaTablaC(tableSchemaFk);								
				
				strNombreCompletoClaseRelacionadaFromColumn=GetNombreCompletoClaseRelacionadaFromColumn(column);
				
				if(esAutoReferenciadaFk && !strNombreCompletoClaseRelacionadaFromColumn.Equals(TablaBase.Name)) {
					strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
								
					sVariablesArray+="\r\n\r\n\t\t\t\tpublic void abrirFrameTree"+strNombreCompletoClaseRelacionadaFromColumn+"(String sTipoProceso) { //throws Exception";
					sVariablesArray+="\r\n\t\t\t\t\ttry {";
					sVariablesArray+="\r\n\t\t\t\t\t\t//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false";
					sVariablesArray+="\r\n\t\t\t\t\t\t//this.jDesktopPane.add(jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+");";
							
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.setJInternalFrameParent(this);";
			
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setsTipoProceso(sTipoProceso);";
							
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\tif(sTipoProceso.equals(\"BUSQUEDA_FK\")) {";
					sVariablesArray+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".sTipoBusqueda=\""+strNombreCompletoClaseRelacionadaFromColumn+"\";";
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.getTodos"+GetNombreClaseC(tableSchemaFk.ToString())+"Arbol();";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".set"+GetNombreClaseC(tableSchemaFk.ToString())+"s("+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"sArbol);";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".CargarTree"+GetNombreClaseC(tableSchemaFk.ToString())+"();";
							
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setVisible(true);";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setSelected(true);";
					
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\t//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".jInternalFrameParent=this;";
					
					sVariablesArray+="\r\n\t\t\t\t\t\tTitledBorder titledBorder"+GetNombreClaseC(TablaBase.ToString())+"=(TitledBorder)this.jScrollPanelDatos"+GetNombreClaseC(TablaBase.ToString())+".getBorder();";					
					//AUTOREFERENCIADA
					sVariablesArray+="\r\n\t\t\t\t\t\tTitledBorder titledBorder"+strNombreCompletoClaseRelacionadaFromColumn+"=(TitledBorder)"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchemaFk.ToString())+".getBorder();";											
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\ttitledBorder"+strNombreCompletoClaseRelacionadaFromColumn+".setTitle(titledBorder"+GetNombreClaseC(TablaBase.ToString())+".getTitle() + \" -> "+GetTituloNombreTableFromPropertiesC(tableSchemaFk)+"\");";
						
						
					sVariablesArray+="\r\n\r\n\r\n\t\t\t\t\t\tif(!Constantes.CON_VARIAS_VENTANAS) {";
					sVariablesArray+="\r\n\t\t\t\t\t\t\tMainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame);";
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t\t\tthis.jDesktopPane.add("+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame);";
			
					sVariablesArray+="\r\n\r\n\t\t\t\t\t} catch (Exception e) {";
					sVariablesArray+="\r\n\t\t\t\t\t\te.getStackTrace();";
					sVariablesArray+="\r\n\t\t\t\t\t\t//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);";
					sVariablesArray+="\r\n\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t}";
					
					sVariablesArray+="\r\n\r\n\t\t\t\tpublic void cerrarFrameTree"+strNombreCompletoClaseRelacionadaFromColumn+"("+GetNombreClaseC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+") throws Exception {";
					sVariablesArray+="\r\n\t\t\t\t\ttry {";
					sVariablesArray+="\r\n\t\t\t\t\t\t//jDesktopPane.add(jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+");";
							
					sVariablesArray+="\r\n\t\t\t\t\t\tjInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setVisible(false);";
					sVariablesArray+="\r\n\t\t\t\t\t\tjInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setSelected(false);";
							
					sVariablesArray+="\r\n\t\t\t\t\t\t//jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".dispose();";
					sVariablesArray+="\r\n\t\t\t\t\t\t//jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+"=null;";
							
					sVariablesArray+="\r\n\t\t\t\t\t} catch (final java.beans.PropertyVetoException e) {";
					sVariablesArray+="\r\n\t\t\t\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t}";
				}
				
				/*				
				if(EsSwing)
				{
					strCargarDependencia="";
					
					
					//sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
					
					sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey=new ArrayList();";
				}
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
							
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesArrayParametros()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";strBusquedaFKComment+="";
	String strCargarDependencia="";
	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strComentarioNoLoadFk="";strComentarioNoLoadFk+="";
	String strVerificarDeshabilitarFk="";strVerificarDeshabilitarFk+="";
	
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			String sNombrePakage="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					//sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+"=new "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					
					sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Parametro==null||this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Parametro.getId()<=0)) {";
				
				
					sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
					sVariablesArray+="\r\n\r\n\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"(this.arrDatoGeneral);";		
					
					sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales);";
					
					
					sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.SFINALQUERY;";
			
					//CARGAR COMBO PARAMETRO
					sVariablesArray+="\r\n\r\n\t\t\t\t\ttry {\r\n";
					sVariablesArray+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"=new "+ sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();\r\n\r\n";
					
					/*
					if(column.AllowDBNull) {
						sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Nulo = new "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();\r\n\r\n";
					}
					*/
					//sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo.set"+strField_+"sCodigo(Constantes.SCAMPONONE);";
				
					sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+/*GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic "*/"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic=new "+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic();\r\n\r\n";
					
					String strQueryStringValoresLista="sFinalQuery";strQueryStringValoresLista+="";
					/*
					if(VerificarColumnaCatalogoGeneralC(column)) {
						sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"=\"\";\r\n";
						sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"="+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+column.Name.ToUpper()+"CODIGO);\r\n\r\n";
						
						strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString());
					}
					*/
					
					/*
					if(!EsSwing) {
						sVariablesArray+="\t\t\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
					} else {
						sVariablesArray+="\t\t\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
					}
					
					sVariablesArray+="\t\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
					sVariablesArray+="\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
					sVariablesArray+="\t\t\t\t\t\t}";
					*/
					
					//if busqueda session
					//sVariablesArray+="\r\n\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
					
					/*
					sVariablesArray+="\t\t\t\t//ARCHITECTURE";
					sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Logic.getTodos"+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
					sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic.get"+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					sVariablesArray+="\r\n\t\t\t\t}";
					sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Implementable.getTodos"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
					sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"ImplementableHome.getTodos"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
					sVariablesArray+="\r\n\t\t\t\t}\r\n\r\n";
					*/
					
					/*
					if(column.AllowDBNull) {
						sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Nulo;\r\n";
					}
					*/
					
					//sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
					
					/*
					if(!blnVerificarDeshabilitarFk) {
						sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(false);";		
						sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
					}
					*/
					
					//if busqueda session
					//sVariablesArray+="\r\n\t\t\t} else {\r\n";
					//sVariablesArray+="\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
					
					sVariablesArray+="\r\n\t\t\t\t\t\t//ARCHITECTURE\r\n";
					sVariablesArray+="\r\n\t\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
					sVariablesArray+="\r\n\t\t\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Logic.getEntityWithConnection(finalQueryGlobal);\r\n";
					sVariablesArray+="\t\t\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"=this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Logic.get"+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
					if(ConSessionBeans){
					sVariablesArray+="\r\n\t\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Implementable.getEntity(finalQueryGlobal,this.datosCliente);";
					}
					sVariablesArray+="\r\n\t\t\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
					if(ConSessionBeans){
					sVariablesArray+="\r\n\t\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"ImplementableHome.getEntity(finalQueryGlobal,this.datosCliente);";
					}
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t\t\t//ARCHITECTURE";
					
					//end else
					//sVariablesArray+="\r\n\t\t\t}";
					
					
					sVariablesArray+="\r\n\t\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t\t\tcatch(Exception e)\r\n";
					sVariablesArray+="\t\t\t\t\t{\r\n";
					sVariablesArray+="\t\t\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t\t\t}\r\n";
				
					//FIN CARGAR PARAMETRO
				
					//sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
					
					if(EsSwing) {
						sVariablesArray+="\r\n\t\t\t\t}\r\n";
					}
					
				}
			}
			
	return sVariablesArray;
}

public  String DefinirVariablesArrayForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
			sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseC(tableSchemaForeignKey.ToString())+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> get"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";
	
			sVariablesArray+="\tpublic void set"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";									
		}
	}
			
	return sVariablesArray;
}

public  String DefinirVariablesArrayParametros()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
				
					sVariablesArray+="\r\n\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
					
					sVariablesArray+="\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" get"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"() ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\treturn "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+";\r\n";
					sVariablesArray+="\t}\r\n\r\n";
		
					sVariablesArray+="\tpublic void set"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"("+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+" = "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n";
					sVariablesArray+="\t}\r\n";
				}
			}
			
	/*
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	*/
			
	return sVariablesArray;
}

public  String DefinirVariablesLogicForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(column),column)) {
				continue;
			}
						
			tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
			//if(TablaBase.Name.Equals(tableSchema.Name)) {
			if(GetNombreCompletoClaseRelacionadaFromColumn(column).Equals(TablaBase.Name)) {
				continue;
			}
			
			sVariablesArray+="\r\n\t"+sEjbComment+"public "+GetNombreClaseC(tableSchema.ToString())+"Logic "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Logic;";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
			
			/*
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";

			sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";
			*/
		}	
	}
	return sVariablesArray;
}

public  String DefinirVariablesLogicParametros()
{
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	String sVariablesArray="";
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			String sNombrePakage="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					sVariablesArray+="\r\n\t"+sEjbComment+"public "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic;";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";

				}
			}
			
	return sVariablesArray;
}

public  String DefinirVariablesLogicInicializarForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
			if(TablaBase.Name.Equals(tableSchema.Name)) {
				continue;
			}
			
			sVariablesArray+="\r\n\t\t\t"+sEjbComment+"this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Logic=new "+GetNombreClaseC(tableSchema.ToString())+"Logic();";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
			
			/*
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";

			sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";
			*/
		}	
	}
	return sVariablesArray;
}

public  String DefinirVariablesLogicInicializarParametros()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					sVariablesArray+="\r\n\t\t\t"+sEjbComment+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic=new "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic();";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
					
					//sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+"=new "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					
					
				}
			}
			
	return sVariablesArray;
}

public  String DefinirVariablesArrayForeignKeysInicializar()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;";
				/*
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">"+strTypeNewCollectionEnd+" ;";
												
		}
	}
	
	return sVariablesArray;
}

public  String DefinirVariablesArrayParametrosInicializar()
{
	String sVariablesArray="";
		TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			String sNombrePakage="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+"=new "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					
					/*
					sVariablesArray+="\r\n\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
					
					sVariablesArray+="\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" get"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"() ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\treturn "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+";\r\n";
					sVariablesArray+="\t}\r\n\r\n";
		
					sVariablesArray+="\tpublic void set"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"("+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+" = "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n";
					sVariablesArray+="\t}\r\n";
					*/
				}
			}
	
	return sVariablesArray;
}

public  String DefinirFuncionesGuardarForeignKeys()
{
	String sVariablesArray="";
	String sVariablesArrays="";
	String sNombrePakage="";sNombrePakage+="";
	TableSchema tableSchema=null;
	
	
	if(!blnNoStandardTableFromProperties) {
		/*	
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(column.IsForeignKeyMember) {
			}	
		}
		*/
	} else {
		//ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		ArrayList arrayListForeignKeys =new ArrayList();
		ArrayList arrayListPK =new ArrayList();
		ArrayList arrayListFK =new ArrayList();
		ArrayList arrayListPKFK =new ArrayList();
		
		String strPK="";
		String strFK="";
		String strPKFK="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {		
			//sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
			arrayListPK =new ArrayList();
			arrayListFK =new ArrayList();
			arrayListPKFK =new ArrayList();
			
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				
				
				sVariablesArray="\r\n\tpublic void guardar"+ GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Para"+ GetNombreClaseC(TablaBase.ToString())+strForeignKey+"("+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+" "+GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+") throws Exception ";
				sVariablesArray+="{\r\n";
				//sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
				
				foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.PrimaryKeyMemberColumns) {
					strPK=GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"."+GetParameterClaseMethodC(memberColumnSchema.Column,true,false,false,"");
					arrayListPK.Add(strPK);
				}
				
				foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.ForeignKeyMemberColumns) {
					strFK=GetSetPartParameterClaseMethodC(memberColumnSchema.Column,"this."+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString()),true);
					arrayListFK.Add(strFK);
				}
				
				for (int i = 0; i < arrayListPK.Count; i++){
					strPKFK="\r\n\t\t"+((String)arrayListFK[i])+((String)arrayListPK[i])+");";
					arrayListPKFK.Add(strPKFK);
				}				
				
				foreach(String strPKFKArray in arrayListPKFK) {
					sVariablesArray+=strPKFKArray;					
				}
				
				sVariablesArray+="\r\n\t}\r\n\r\n";	
				
				//System.Windows.Forms.MessageBox.Show(sVariablesArray);
				
				sVariablesArrays+=sVariablesArray;
			}
			
			
		}
	}
			
	return sVariablesArrays;
}

public  String DefinirVariablesActualForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	TableSchema tableSchemaFk;
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);
			
			if(!blnExiste) {
				blnExiste=true;
			}
			
			//SI ES AUTOREFERENCIADA, YA EXISTE VARIABLE NO TOMAR EN CUENTA
			//if(!tableSchemaFk.Name.Equals(TablaBase.Name)) {
			if(!GetNombreCompletoClaseRelacionadaFromColumn(column).Equals(TablaBase.Name)) {
				sVariablesArray+="\r\n\tpublic Long "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=0L;";
				sVariablesArray+="\r\n\r\n\tpublic Long get"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual() {";
				sVariablesArray+="\r\n\t\treturn "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual;";
				sVariablesArray+="\r\n\t}";
			
				sVariablesArray+="\r\n\r\n\tpublic void set"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual(Long "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual) {";
				sVariablesArray+="\r\n\t\tthis."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual= "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual;";
				sVariablesArray+="\r\n\t}";
			}
		}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public  String DefinirVariablesActualInicializarForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			
			sVariablesArray+="\r\n\t\t\tthis."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=0L;";
		
		}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t\t\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public  String DefinirFuncionesSeleccionarActualForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	String strEjbComment="";
	
	if(ConEjb){
		strEjbComment="//";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			/*
			sVariablesArray+="\r\n\tpublic Long "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual=0L;";
			sVariablesArray+="\r\n\r\n\tpublic Long get"+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual() {";
			sVariablesArray+="\r\n\t\treturn "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual;";
			sVariablesArray+="\r\n\t}";
		
			sVariablesArray+="\r\n\r\n\tpublic void set"+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual(Long "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual) {";
			sVariablesArray+="\r\n\t\tthis."+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual= "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual;";
			sVariablesArray+="\r\n\t}";
			*/
			
			sVariablesArray+="\r\n\tpublic void seleccionar"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual() throws Exception {";
			sVariablesArray+="\r\n\t\ttry	{";
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux=new "+GetNombreClaseRelacionadaFromColumn(column)+"();";
					
			//sVariablesArray+="\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity("+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual);";
			
			sVariablesArray+="\r\n\r\n\t\t\tif(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual != null && this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual>0) {";
			
			sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
			sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sVariablesArray+="\r\n\t\t\t\t\t"+strEjbComment+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Logic.getEntityWithConnection(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t\t\t"+strEjbComment+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"();";			
			sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			if(ConSessionBeans){
			sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual,this.datosCliente);";
			}
			sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			if(ConSessionBeans){
			sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getEntity(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual,this.datosCliente);";
			}
			sVariablesArray+="\r\n\t\t\t\t}";
			sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
			
			
			sVariablesArray+="\r\n\r\n\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+";";
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey.add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux);";
			sVariablesArray+="\r\n\t\t\t}";
			
			sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
			if(!EsSwing) {
				sVariablesArray+="\r\n\t\t\tFuncionesFaces.manageException(this, e,logger);";
			} else {
				sVariablesArray+="\r\n\t\t\tFuncionesSwing.manageException(this, e,logger);";
			}
			sVariablesArray+="\r\n\t\t}";
			sVariablesArray+="\r\n\t}";
			}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}


public  String UsarFuncionesSeleccionarActualComoAuxiliarForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	String strEjbComment="";
	strEjbComment+="";
	
	if(ConEjb){
		strEjbComment="//";
	}
	
	string strPrefijoTabla=GetPrefijoTablaC();
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			/*
			if(!blnExiste) {
				blnExiste=true;
			}
			*/
			string strPrefijoTipo = GetPrefijoTipoC(column);
			string strNombre = GetNombreColumnaClaseC(column);
			
			sVariablesArray+="\r\n\r\n\t\t\t"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strPrefijoTabla+strPrefijoTipo+strNombre+"();";
			sVariablesArray+="\r\n\t\t\tthis.seleccionar"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual();";
			
			/*
			sVariablesArray+="\r\n\tpublic void seleccionar"+GetNombreClaseRelacionadaFromColumn(column)+"Actual() throws Exception {";
			sVariablesArray+="\r\n\t\ttry	{";
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=new "+GetNombreClaseRelacionadaFromColumn(column)+"();";
					
			sVariablesArray+="\r\n\r\n\t\t\t//ARCHITECTURE";
			sVariablesArray+="\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sVariablesArray+="\r\n\t\t\t\t"+strEjbComment+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Logic.getEntity("+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t\t"+strEjbComment+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"();";			
			sVariablesArray+="\r\n\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity("+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getEntity("+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t}";
			sVariablesArray+="\r\n\t\t\t//ARCHITECTURE";
				
			sVariablesArray+="\r\n\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+";";
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey.add("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux);";
				
			sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
			if(!EsSwing) {
				sVariablesArray+="\r\n\t\t\tFuncionesFaces.manageException(this, e,logger);";
			} else {
				sVariablesArray+="\r\n\t\t\tFuncionesSwing.manageException(this, e,logger);";
			}
			sVariablesArray+="\r\n\t\t}";
			sVariablesArray+="\r\n\t}";
				
			*/
		}
	}
	
	/*
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	*/
	
	return sVariablesArray;
}
	
/*
public void cargarCombosFramePerfilstrForeignKey()throws Exception
	{
		try
		{
			
			JComboBoxBinding jComboBoxBindingPerfil;

			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.perfilstrForeignKey, this.jComboBoxIdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();
			
			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.perfilstrForeignKey, this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();

		}
		catch(Exception e)
		{
			throw e;
		}
	}
*/

	public String GetSetActionIndicesVariablesTablasClases(ColumnSchema columnForeignKey,bool paraSeleccionarEvento,bool esPrimero,String strTab) {
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sNombrePakage="";sNombrePakage+="";
			TableSchema tableSchema=null;
			bool blnExisteBusquedaFkVariableGlobal=false;
			bool esPrimeroLocal=true;
			String strElse=" else ";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {	
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							;
						} else {
							;
						}
					}	
					
					int count=1;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {						
						if(columnForeignKey.Name!=memberColumnSchema.Name) {
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {							
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							tableSchema=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							strElse=" else ";
							//sControlesPanelesBusquedas+="\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema))+"DefaultListCellRenderer());\r\n\r\n";
							
							/*
							sControlesPanelesBusquedas+="\r\n\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".addActionListener (new ActionListener () {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"("+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+",\""+indexSchema.Name+"\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t}\r\n";
							sControlesPanelesBusquedas+="\t\t\t});\r\n";
							*/
							
							if(!paraSeleccionarEvento) {
								sControlesPanelesBusquedas+="\r\n\t\t\t\tif(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {";
								sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strCommentMinCodigoWebIni;
								sControlesPanelesBusquedas+="\r\n\t\t\t\t\tif(Constantes2.CON_COMBOBOX_ITEMLISTENER) {";						
								sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".addItemListener(new ComboBoxItemListener(this,\""+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\"));\r\n";
								sControlesPanelesBusquedas+="\r\n\t\t\t\t\t} else {";
								sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".addActionListener(new ComboBoxActionListener(this,\""+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\"));\r\n";
								sControlesPanelesBusquedas+="\r\n\t\t\t\t\t}";
								sControlesPanelesBusquedas+="\r\n\t\t\t\t"+strCommentMinCodigoWebFin;
								sControlesPanelesBusquedas+="\r\n\t\t\t\t}";
							} else {
								
								//NO FUNCIONA VERIFICAR LUEGO
								if(esPrimeroLocal && !esPrimero) {
									//strElse="";
								}
								
								sControlesPanelesBusquedas+="\r\n\t\t"+strTab+strElse+"if(sTipo.equals(\""+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\")) {";
								//sControlesPanelesBusquedas+="\r\n\t\t"+strTab+strCommentMinCodigoWebIni;
								sControlesPanelesBusquedas+="\r\n\t\t\t"+strTab+strCommentMinCodigoWebLinea+"this.procesarActionsCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column))+"("+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+",\""+indexSchema.Name+"\");";
								//sControlesPanelesBusquedas+="\r\n\t\t"+strTab+strCommentMinCodigoWebFin;
								sControlesPanelesBusquedas+="\r\n\t\t\t"+strTab+"//recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"("+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+",\""+indexSchema.Name+"\");";
								sControlesPanelesBusquedas+="\r\n\t\t"+strTab+"}";
								
								if(esPrimeroLocal) {
									esPrimeroLocal=false;	
								}
							}
							
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//sInitFuncion+=";\r\n";	
							}
						} else {
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
					
					

					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
	}
		
public String GetIndicesVariablesTablasClases(ColumnSchema columnForeignKey,String strTab) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sNombrePakage="";
			TableSchema tableSchema=null;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{	
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						
						
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						if(columnForeignKey.Name!=memberColumnSchema.Name)
						{
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							tableSchema=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
							sControlesPanelesBusquedas+="\r\n\t\t\t\t"+strTab+"if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN && (sFormularioTipoBusqueda.equals(\""+indexSchema.Name+"\") || sFormularioTipoBusqueda.equals(\"Todos\"))){\r\n";
							sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strTab+"//BYDAN_BUSQUEDAS";
							sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strTab+strCommentMinCodigoWebIni;
					
							sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strTab+"if(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							if(blnConBindingComplejo){
								sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+">(this."+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema)).ToLower()+"sForeignKey), this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+",\""+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+"\");\r\n";
							}
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"} else {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".removeAllItems();\r\n\r\n";
						
							sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"for("+GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+" "+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema).ToLower()+":this."+ GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema).ToLower()+"sForeignKey) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".addItem("+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema).ToLower()+");\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"}\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"}\r\n\r\n";
						
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(memberColumnSchema))+/*GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema))+*/"DefaultListCellRenderer());\r\n\r\n";
							
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"if(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							if(blnConBindingComplejo){
								sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+".bind();\r\n";
							}
							
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"}\r\n";
							
							sControlesPanelesBusquedas+="\r\n\t\t\t\t\t"+strTab+strCommentMinCodigoWebFin;
							
							sControlesPanelesBusquedas+="\r\n\t\t\t\t"+strTab+"}";
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								//sInitFuncion+=";\r\n";	
							}
						}
						else
						{
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
					
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
																																						
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
		}

	public String GetSetSelectedItemIndicesVariablesTablasClases(ColumnSchema columnForeignKey,String strTab) {
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sNombrePakage="";
			TableSchema tableSchema=null;
			bool blnExisteBusquedaFkVariableGlobal=false;

			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {	
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							;
						} else {
							;
						}
					}	
					
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {						
						if(columnForeignKey.Name!=memberColumnSchema.Name) {
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {							
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}

							tableSchema=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"if(!conSelectedIndex) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setSelectedItem("+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema))+");\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"} else {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t"+strTab+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setSelectedIndex(iIndexSelected);\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t"+strTab+"}\r\n";
							
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//sInitFuncion+=";\r\n";	
							}
						} else {
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
		}
		
		
public  String GetCargarCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{							
				sVariablesArray+="\t\t\tthis.cargarCombosFrame"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey(\"Todos\");\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\t\t\tthis.cargarCombosFrame"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"sForeignKey(\"Todos\");\r\n";									
		}
	}
	
	return sVariablesArray;
}

public  String GetInitActionsFrameColumnsVariablestrForeignKeysV0(bool paraSeleccionarEvento)
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	String strCommentConEventChange="";
	String strElse=" else ";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				strElse=" else ";				
				
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					//Trace.WriteLine(column.Name);
					
					
					//sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					//sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					//sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+",\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
					//sVariablesArray+="\t\t\t\t}\r\n";
					//sVariablesArray+="\t\t\t});\r\n";
					
					if(!paraSeleccionarEvento) {
						sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ComboBoxActionListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
					} else {
						if(esPrimero) {
							strElse="";
						}
						
						sVariablesArray+="\r\n\t\t\t"+strElse+"if(sTipo.equals(\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\")) {";
						sVariablesArray+="\r\n\t\t\t\trecargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+",\"Formulario\");";
						sVariablesArray+="\r\n\t\t\t}";
						
						if(esPrimero) {
							esPrimero=false;
						}
					}
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						//sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addActionListener (new ActionListener () {\r\n";
						//sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
						//sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
						//sVariablesArray+="\t\t\t\t}\r\n";
						//sVariablesArray+="\t\t\t});\r\n";
						
						if(!paraSeleccionarEvento) {
							sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addActionListener(new ComboBoxActionListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\"));\r\n";
						}
					}
					
					if(!paraSeleccionarEvento) {
						sVariablesArray+="\r\n\r\n\t\t\tif(!this.conCargarMinimo) {";
					}
					
					sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column,paraSeleccionarEvento,esPrimero,"\t");
					
					if(!paraSeleccionarEvento) {
						sVariablesArray+="\r\n\t\t\t}";
					}
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	
	return sVariablesArray;
}

public  String GetActualizarVistaClasesRelacionadas(ColumnSchema column) {
	String strClasesSiRelacionadas="";
	String sVariablesArray="";
	String[] strClasesSi=null;
	String strClasesSiOnChange="";
	
	if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {
							strClasesSiOnChange=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
		
							if(!strClasesSiOnChange.Equals("")) {
								/*
								if(GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column).Equals("")) {
									strClasesSiRelacionadas=GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase);					
								} else {
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
								}
								*/
								
								if(!strClasesSiOnChange.Equals("TODOS")) {
									
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
									
									strClasesSi=strClasesSiRelacionadas.Split(',');
									
									//sVariablesArray+="\r\n\t\t\t\tclasses=new ArrayList<Classe>();";
									
									foreach(String strClase in strClasesSi) {
										sVariablesArray+="\r\n\t\t\t\tclasses.add(new Classe("+strClase+".class));";
									}
								} else {
									sVariablesArray+="\r\n\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
									sVariablesArray+="\r\n\t\t\t\t\tclasses="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
									sVariablesArray+="\r\n\t\t\t\t}";
								}
							} else {
								sVariablesArray+="\r\n\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
								sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
								sVariablesArray+="\r\n\t\t\t\t}";
							}
						} else {
							sVariablesArray+="\r\n\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
							sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
							sVariablesArray+="\r\n\t\t\t\t}\r\n";
						}
						
	return sVariablesArray;
}
	
public  String GetInitActionsFrameColumnsVariablestrForeignKeys(bool paraSeleccionarEvento)
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	String strElse=" else ";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	String sTipoControl="COMBOBOX";	
	String strOnChangeDb="false";

	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				strElse=" else ";				
				strOnChangeDb="false";
				
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					//Trace.WriteLine(column.Name);
					
					
					//sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					//sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					//sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+",\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
					//sVariablesArray+="\t\t\t\t}\r\n";
					//sVariablesArray+="\t\t\t});\r\n";
					
					if(!paraSeleccionarEvento) {
						sVariablesArray+="\r\n\r\n\tpublic void initActionsCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()throws Exception {";
						sVariablesArray+="\r\n\t\ttry {";
						
						sVariablesArray+="\r\n\t\t\tif(Constantes2.CON_COMBOBOX_ITEMLISTENER) {";
						sVariablesArray+="\r\n\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addItemListener(new ComboBoxItemListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
						sVariablesArray+="\r\n\t\t\t} else {";
						sVariablesArray+="\r\n\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ComboBoxActionListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
						sVariablesArray+="\r\n\t\t\t}";
						
					} else {
						if(esPrimero) {
							strElse="";
						}
						
						
						
						sVariablesArray+="\r\n\t\t\t"+strElse+"if(sTipo.equals(\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\")) {";
						sVariablesArray+="\r\n\t\t\t\tif(jComboBoxGenerico==null) {";
						sVariablesArray+="\r\n\t\t\t\t\tjComboBoxGenerico=jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+";";
						sVariablesArray+="\r\n\t\t\t\t}";
						
						sVariablesArray+=GetActualizarVistaClasesRelacionadas(column);
												
						
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.procesarActionsCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"(jComboBoxGenerico,\"Formulario\");";
						
						if(GetOnEventDbColumnFromPropertiesC(column)) {
							strOnChangeDb="true";
						}
						
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())/*GetNombreClaseC(tableSchema.ToString())*/+"(sTipo,\"Formulario\",eventoGlobalTipo,ControlTipo."+sTipoControl+",EventoTipo.CHANGE,EventoSubTipo.CHANGED,\""+sTipoControl+"\",classes,"+strOnChangeDb+",esControlTabla);";//sTipo//EventoGlobalTipo.CONTROL_CHANGE
						
						//sVariablesArray+="\r\n\t\t\t\t//recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+",\"Formulario\");";
						
						sVariablesArray+="\r\n\t\t\t}";
						
						if(esPrimero) {
							esPrimero=false;
						}
					}
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						//sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addActionListener (new ActionListener () {\r\n";
						//sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
						//sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
						//sVariablesArray+="\t\t\t\t}\r\n";
						//sVariablesArray+="\t\t\t});\r\n";
						
						if(!paraSeleccionarEvento) {
							sVariablesArray+="\r\n\t\t\tif(Constantes2.CON_COMBOBOX_ITEMLISTENER) {";						
							sVariablesArray+="\r\n\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addItemListener(new ComboBoxItemListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\"));\r\n";
							sVariablesArray+="\r\n\t\t\t} else {";
							sVariablesArray+="\r\n\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addActionListener(new ComboBoxActionListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\"));\r\n";
							sVariablesArray+="\r\n\t\t\t}";
						}
					}
					
					if(!paraSeleccionarEvento) {
						sVariablesArray+="\r\n\r\n\t\t\tif(!this.conCargarMinimo) {";
					}
					
					sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column,paraSeleccionarEvento,esPrimero,"\t");
					
					if(!paraSeleccionarEvento) {
						sVariablesArray+="\r\n\t\t\t}";
						
						sVariablesArray+="\r\n\t\t} catch(Exception e) {";
						sVariablesArray+="\r\n\t\t\tthrow e;";
						sVariablesArray+="\r\n\t\t}";		
						sVariablesArray+="\r\n\t}";
					}																
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	
	return sVariablesArray;
}

public  String GetProcesarActionsFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	String strElse=" else ";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				strElse=" else ";				
				
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					//Trace.WriteLine(column.Name);
											
					sVariablesArray+="\r\n\r\n\t@SuppressWarnings(\"rawtypes\")";
					sVariablesArray+="\r\n\tpublic void procesarActionsCombos"+strForeignKey+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"(JComboBox jComboBox"+GetNombreClase(tableSchema.ToString())+"Generico,String sFormularioTipoBusqueda)throws Exception {";
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\t\t\tString sFinalQueryCombo=\"\";";
					sVariablesArray+="\r\n\t\t\t"+GetNombreClase(tableSchema.ToString())+" "+GetNombreClaseObjeto(tableSchema.ToString())+"Local=("+GetNombreClase(tableSchema.ToString())+")jComboBox"+GetNombreClase(tableSchema.ToString())+"Generico.getSelectedItem();";
				
					sVariablesArray+="\r\n\r\n\t\t\tif("+GetNombreClaseObjeto(tableSchema.ToString())+"Local!=null) {";
					sVariablesArray+="\r\n\t\t\t\tsFinalQueryCombo=\"  WHERE  "+GetNombreColumnFromProperties(column)+"=\"+"+GetNombreClaseObjeto(tableSchema.ToString())+"Local.get"+strIdGetSet+"();";
					sVariablesArray+="\r\n\t\t\t}";

					//sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ComboBoxActionListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
					
					String strConEventUpdates=GetConEventUpdatesColumnFromPropertiesC(column);
					ColumnSchema columnSchemaUpdate=null;
					TableSchema tableSchemaUpdate=null;
					
					String strCommentUpdates="";
					
					/*					
					
					if(strConEventUpdates.Equals("NONE") || strConEventUpdates.Equals("NINGUNO")) {
						strCommentUpdates="//";
					}
					
					Trace.WriteLine("UPDATES="+strConEventUpdates);
					*/
					
					//Trace.WriteLine("UPDATES="+strConEventUpdates);
					
					if(!strConEventUpdates.Equals("")) {
						foreach(String strConEventUpdate in strConEventUpdates.Split(',')) {
							//Trace.WriteLine(strConEventUpdate);
							
							columnSchemaUpdate=GetColumnaFromNombreC(strConEventUpdate,TablaBase,false);
							tableSchemaUpdate=GetNombreTablaRelacionadaFromColumn(columnSchemaUpdate);
					
							sVariablesArray+="\r\n\r\n\t\t\t"+strCommentUpdates+"this."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaUpdate))+"sForeignKey=new ArrayList<"+GetNombreClaseC(tableSchemaUpdate.ToString())+">();";				
							sVariablesArray+="\r\n\t\t\t"+strCommentUpdates+"this.cargarCombosForeignKey"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaUpdate))+"(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);";
					
							//sVariablesArray+="\r\n\t\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Controller."+GetNombreClaseObjetoC(TablaBase.ToString())+"Actual."+strConEventUpdate+"!=null){jQuery(\"#form-"+strConEventUpdate+"\").val("+GetNombreClaseObjetoC(TablaBase.ToString())+"Controller."+GetNombreClaseObjetoC(TablaBase.ToString())+"Actual."+strConEventUpdate+").trigger(\"change\");}";						
						}
					}
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {							
						//sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addActionListener(new ComboBoxActionListener(this,\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\"));\r\n";						
					}
					
					//sVariablesArray+="\r\n\t\t\tif(!this.conCargarMinimo) {";
					
					
					//sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column,paraSeleccionarEvento,esPrimero,"\t");
					
					//sVariablesArray+="\r\n\t\t\t}";
						
					sVariablesArray+="\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tthrow e;";
					sVariablesArray+="\r\n\t\t}";		
					sVariablesArray+="\r\n\t}";																					
				}
				
			}	
		}
	} else {
		
	}
	
	return sVariablesArray;
}

public  String GetInitActionsFrameColumnsVariables(bool paraTextField,bool paraTextArea,bool paraLabel,bool paraCheckBox,bool paraDateChooser)
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	String strElse=" else ";
	String sTipoControl="TEXTBOX";
	String sEventoTipo="CHANGE";
	String sEventoSubTipo="CHANGED";
	
	String strClasesSiRelacionadas="";
	String[] strClasesSi;
	
	String strClasesSiParentRelacionadas="";
	String[] strClasesSiParent;
	
	bool esPrimero=true;
	bool existe=false;
	bool tieneChangeParent=false;
	bool tieneOnEventDbParent=false;
	
	if(paraTextArea) {
		sTipoControl="TEXTAREA";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
	
	} else if(paraTextField) {
		sTipoControl="TEXTBOX";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
		
	} else if(paraCheckBox) {
		sTipoControl="CHECKBOX";
		sEventoTipo="CLIC";
		sEventoSubTipo="CLICKED";
		
	} else if(paraLabel) {
		sTipoControl="LABEL";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
		
	} else if(paraDateChooser) {
		sTipoControl="DATE";
		sEventoTipo="CHANGE";
		sEventoSubTipo="CHANGED";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns){
		
		if(!column.IsForeignKeyMember){	
			if(paraTextField) {
				if(!EsStringColumnC(column) && !EsTipoColumnaNumeroParaClaseC(column)) {
					continue;
				}
			} else if(paraTextArea) {
				if(!EsStringColumnC(column)) {
					continue;
				}
			} else if(paraCheckBox) {
				if(!EsBitColumn(column)) {
					continue;
				}
			} else if(paraDateChooser) {
				if(!EsDateColumn(column)) {
					continue;
				}
			}
			
				strElse=" else ";				
				existe=false;
				tieneChangeParent=false;
				tieneOnEventDbParent=false;
				
				/*
				if(!paraTextArea && GetOnChangeColumnFromPropertiesC(column)) {	
					existe=true;
					
				}  else if (paraTextArea && GetOnChangeColumnFromPropertiesC(column) && EsTextAreaColumnC(column)){
					existe=true;
				}
				*/
				
				if(GetOnChangeColumnFromPropertiesC(column)) {
					existe=true;
					//Trace.WriteLine(column.Name+"="+GetOnChangeColumnFromPropertiesC(column));
				}
				
				
				tieneChangeParent=GetOnChangeParentFromColumnFromPropertiesC(column);
				tieneOnEventDbParent=GetOnEventDbParentColumnFromPropertiesC(column);
				
					
				if(existe) {
					//Trace.WriteLine("Columna="+column.Name);
					
					/*
					if(paraTextField && !paraTextArea && !paraLabel && !paraCheckBox && !paraDateChooser) {
						Trace.WriteLine("TEXTF");
					}
					*/										
					
					if(esPrimero) {
							strElse="";
						}
						
						sVariablesArray+="\r\n\t\t\t"+strElse+"if(sTipo.equals(\""+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"\")) {";//"-"+
						//Trace.WriteLine(sVariablesArray);
						
						String strClasesSiOnChange="";
						
						//Trace.WriteLine(sVariablesArray);
						
						if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {
							strClasesSiOnChange=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
							
							if(!strClasesSiOnChange.Equals("")) {
								/*
								if(GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column).Equals("")) {
									strClasesSiRelacionadas=GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase);					
								} else {
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
								}
								*/
								
								if(!strClasesSiOnChange.Equals("TODOS")) {
									strClasesSiRelacionadas=GetNombresClasesSiOnChangeFromColumnFromPropertiesC(column);
									
									strClasesSi=strClasesSiRelacionadas.Split(',');
									
									//sVariablesArray+="\r\n\t\t\t\tclasses=new ArrayList<Classe>();";
									
									foreach(String strClase in strClasesSi) {
										sVariablesArray+="\r\n\t\t\t\tclasses.add(new Classe("+strClase+".class));";
									}
								} else {
									sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
									sVariablesArray+="\r\n\t\t\t\t\tclasses="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
									sVariablesArray+="\r\n\t\t\t\t}";
								}
							} else {
								sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
								sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
								sVariablesArray+="\r\n\t\t\t\t}";
							}
						} else {
							sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones()) {";
							sVariablesArray+="\r\n\t\t\t\t\t//classes="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.getClassesRelationshipsOf"+GetNombreClaseC(TablaBase.ToString())+"(new ArrayList<Classe>(),DeepLoadType.NONE);";
							sVariablesArray+="\r\n\t\t\t\t}";
						}
						
						String strOnChangeDb="false";
						
						if(GetOnEventDbColumnFromPropertiesC(column)) {
							strOnChangeDb="true";
						}
						
						
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.classesActual=new ArrayList<Classe>();";
						sVariablesArray+="\r\n\t\t\t\tthis.classesActual.addAll(classes);";
		
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())/*GetNombreClaseC(tableSchema.ToString())*/+"(sTipo,\"Formulario\",eventoGlobalTipo,ControlTipo."+sTipoControl+",EventoTipo."+sEventoTipo+",EventoSubTipo."+sEventoSubTipo+",\""+sTipoControl+"\",classes,"+strOnChangeDb+",esControlTabla);";//sTipo//EventoGlobalTipo.CONTROL_CHANGE
						
						if(tieneChangeParent) {
							sVariablesArray+="\r\n\r\n\t\t\t\tesUsoDesdeHijoLocal=true;";
						}
						
						if(tieneOnEventDbParent) {
							sVariablesArray+="\r\n\t\t\t\tconIrServidorAplicacionParent=true;";
						}
						
						
						strClasesSiParentRelacionadas=GetNombresClasesSiOnChangeParentFromColumnFromPropertiesC(column);									
						
						if(!strClasesSiParentRelacionadas.Equals("")) {
							strClasesSiParent=strClasesSiParentRelacionadas.Split(',');
							
							sVariablesArray+="\r\n";
							
							foreach(String strClase in strClasesSiParent) {
								sVariablesArray+="\r\n\t\t\t\tarrClasses.add(\""+strClase+"\");";
							}
						}
						
						/*
						String strOnChangeParent=GetOnChangeParentFromColumnFromPropertiesC(column);
						
						if(!strOnChangeParent.Equals("")) {
							sVariablesArray+="\r\n\r\n\t\t\t\tif(this.jInternalFrameParent!=null) {";
							sVariablesArray+="\r\n\t\t\t\t\tthis.jInternalFrameParent.jTextFieldActionPerformedGeneral(\""+strOnChangeParent+"\",null);";
							sVariablesArray+="\r\n\t\t\t\t}";
						}
						*/
						
						sVariablesArray+="\r\n\t\t\t}";
						
						if(esPrimero) {
							esPrimero=false;
						}
										
					//sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column,paraSeleccionarEvento,esPrimero);			
				}				
		}	
	}
	
	
					
	return sVariablesArray;
}

public  String GetAddItemDefectoFrameColumnsVariablestrForeignKeysV0()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);								
				
				if(esPrimero){
					if(!EsSwing) {
						sVariablesArray+="\r\n\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
					} else {
						//sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
					}
					
					sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
					sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
					sVariablesArray+="\t\t\t}";
				}
				
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {";
				
				
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseC(tableSchema.ToString())+" "+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"=new "+GetNombreClaseC(tableSchema.ToString())+"();";				
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.set"+GetNombreClaseC(tableSchema.ToString())+"Descripcion("+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",Constantes.SMENSAJE_ESCOJA_OPCION);";
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".set"+strIdGetSet+"(null);";//"(-1L);";
				
				sVariablesArray+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.ExisteEnLista(this."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey,"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",true)) {";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey.add(0,"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+");";
				sVariablesArray+="\r\n\t\t\t\t}";
				
				sVariablesArray+="\r\n\t\t\t}";
				/*
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					
					sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t});\r\n";
				}
				*/
				
				if(esPrimero){
					esPrimero=false;
				}
			}	
		}
	} else {
		
	}
	return sVariablesArray;
}

public  String GetAddItemDefectoFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);								
				
				sVariablesArray+="\r\n\r\n\tpublic void addItemDefectoCombosForeignKey"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()throws Exception {";
				sVariablesArray+="\r\n\t\ttry {";
			
				if(esPrimero){
					if(!EsSwing) {
						sVariablesArray+="\r\n\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
					} else {
						//sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
					}
					
					sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
					sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
					sVariablesArray+="\t\t\t}";
				}
				
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {";
				
				
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseC(tableSchema.ToString())+" "+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"=new "+GetNombreClaseC(tableSchema.ToString())+"();";				
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.set"+GetNombreClaseC(tableSchema.ToString())+"Descripcion("+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",Constantes.SMENSAJE_ESCOJA_OPCION);";
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".set"+strIdGetSet+"(null);";//"(-1L);";
				
				sVariablesArray+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.ExisteEnLista(this."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey,"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",true)) {";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey.add(0,"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+");";
				sVariablesArray+="\r\n\t\t\t\t}";
				
				sVariablesArray+="\r\n\t\t\t}";
				
				sVariablesArray+="\r\n\t\t} catch(Exception e) {";
				sVariablesArray+="\r\n\t\t\tthrow e;";
				sVariablesArray+="\r\n\t\t}";
				sVariablesArray+="\r\n\t}";
				
				/*
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					
					sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t});\r\n";
				}
				*/
				
				if(esPrimero){
					esPrimero=false;
				}
			}	
		}
	} else {
		
	}
	return sVariablesArray;
}

public  String GetSetItemDefectoFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);								
				
				sVariablesArray+="\r\n\r\n\t\t\tif(this.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"!=null && this.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".getItemCount()>0) {";
				sVariablesArray+="\r\n\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(0);";
				sVariablesArray+="\r\n\t\t\t}";
				
				/*
				sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchema.ToString())+" "+GetNombreClaseObjetoC(tableSchema.ToString())+"=new "+GetNombreClaseC(tableSchema.ToString())+"();";				
				sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.set"+GetNombreClaseC(tableSchema.ToString())+"Descripcion("+GetNombreClaseObjetoC(tableSchema.ToString())+",Constantes.SMENSAJE_ESCOJA_OPCION);";
				sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+".set"+strIdGetSet+"(null);";//"(-1L);";
				
				sVariablesArray+="\r\n\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"sForeignKey.add(0,"+GetNombreClaseObjetoC(tableSchema.ToString())+");\r\n";
				*/
				
				/*
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					
					sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t});\r\n";
				}
				*/
			}	
		}
	} else {
		
	}
	return sVariablesArray;
}

public  String GetCallInitActionsFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	String sComboGenericoParametro="";
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				sComboGenericoParametro="";
				
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				if(EsSwing) {
					sComboGenericoParametro="JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+",";
				}
				
				sVariablesArray+="\r\n\r\n";
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					//Trace.WriteLine(column.Name);
					
					sVariablesArray+="\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+/*GetNombreClaseC(tableSchema.ToString())*/GetNombreCompletoClaseRelacionadaFromColumn(column)+"("+sComboGenericoParametro+"String sFormularioTipoBusqueda) throws Exception {\r\n";
					//sVariablesArray+="\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"();";
					sVariablesArray+=""+GetCallRecargarActionsFrameColumnsVariablestrForeignKeys(column);
					
					
					sVariablesArray+="\r\n\t}";
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String GetRecargarActionsFrameColumnsVariablestrForeignKeys2()
{
	String sVariablesArray="";
		
		
	
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	TableSchema tableSchemaEncontrada=null;
	String strPhpPunto="";
							
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {	
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"(JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+",String sFormularioTipoBusqueda) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
					
					String strDepend=GetConEventDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++){//i+=2) {
								j=i+1;
								//Trace.WriteLine(i);
								//Trace.WriteLine(j);
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								
								//strDependSql=arrDepend[j];	
																
								tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																

								sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+");\r\n";
								
								//if(!EsParaBusqueda) {
									sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
								
								/*} else {
									strControl+="\t\t\tif($"+strDepend+"!=null && $"+strDepend+"!='') {\r\n";
									strControl+="\t\t\t\t$sFinalQuery"+strPhpPunto+"=' "+strWhereAnd+" "+strDependSql+"='.$"+strDepend+";\r\n";
								}							
								*/
								
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
							}
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";		
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					sVariablesArray+="\r\n\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				} else if(!GetConEventSetParentDependColumnFromPropertiesC(column).Equals("")) {
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"(JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+",String sFormularioTipoBusqueda) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					//sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
										
					String strDepend=GetConEventSetParentDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							//String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++){//i+=2) {
								j=i+1;
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								
																
								//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																
								//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+");\r\n";								
									//sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									//sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
																								
								//sVariablesArray+="\t\t\t} else {\r\n";
								//sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								//sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									//strWhereAnd=" AND ";
								}
							}
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";		
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					//sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					//sVariablesArray+="\r\n\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";
					
				} else if(!GetConEventQueryDependColumnFromPropertiesC(column).Equals("")) {
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"(JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+",String sFormularioTipoBusqueda) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					//sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
										
					String strDepend=GetConEventQueryDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							//String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++){//i+=2) {
								j=i+1;
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								
																
								//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																
								//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+");\r\n";								
									//sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									//sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
																								
								//sVariablesArray+="\t\t\t} else {\r\n";
								//sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								//sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									//strWhereAnd=" AND ";
								}
							}
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";		
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					//sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					//sVariablesArray+="\r\n\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String GetCallRecargarActionsFrameColumnsVariablestrForeignKeys(ColumnSchema columnEvent)
{
	String sVariablesArray="";
	bool existe=false;	
				
	String sNombrePakage="";
	TableSchema tableSchema=null;
	TableSchema tableSchemaEvent=null;
	TableSchema tableSchemaEncontrada=null;
	String strPhpPunto="";strPhpPunto+="";
	String sComboGenericoParametro="";
	int count=0;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns){
			if(column.IsForeignKeyMember)
			{	
				count++;
				
				sComboGenericoParametro="";								
				
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				tableSchemaEvent=GetNombreTablaRelacionadaFromColumn(columnEvent);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				
				if(EsSwing) {
					sComboGenericoParametro="jComboBoxGenerico"+GetNombreClaseC(tableSchemaEvent.ToString())+",";
				}
				
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
					
					existe=false;
					
					sVariablesArray+="";//"\r\n\r\n";
					/*
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"() throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					*/
					String strDepend=GetConEventDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					String strOnChangeDb="false";
						
					if(GetOnEventDbColumnFromPropertiesC(column)) {
						strOnChangeDb="true";
					}
						
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";strWhereAnd+=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								//strDependSql=arrDepend[j];	
								
								if(strDependSql.Equals(GetNombreColumnFromPropertiesInterno(columnEvent,true))) {
									//sVariablesArray+="\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";					
									sVariablesArray+="\r\n\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sComboGenericoParametro+"sFormularioTipoBusqueda,\""+GetNombreCompletoClaseRelacionadaFromColumn(columnEvent)+"\",false"+");";//,"+strOnChangeDb
									break;
								}
								/*								
								tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																

									sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
								
								
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
								*/
							}
							
							
					/*		
					sVariablesArray+="\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					sVariablesArray+="\r\n\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"();";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";
					*/

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				} else if(!GetConEventSetParentDependColumnFromPropertiesC(column).Equals("")) {
					existe=false;
					
					sVariablesArray+="";//"\r\n\r\n";
					
					String strOnChangeDb="false";
						
					if(GetOnEventDbColumnFromPropertiesC(column)) {
						strOnChangeDb="true";
					}
					
					String strDepend=GetConEventSetParentDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";strWhereAnd+=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								//strDependSql=arrDepend[j];	
								
								//if(strDependSql.Equals(GetNombreColumnFromPropertiesInterno(columnEvent,true))) {
									//sVariablesArray+="\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";					
									sVariablesArray+="\r\n\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sComboGenericoParametro+"sFormularioTipoBusqueda,\""+GetNombreCompletoClaseRelacionadaFromColumn(columnEvent)+"\","+strOnChangeDb+");";
									break;
								//}								
							}
					
				} else if(!GetConEventQueryDependColumnFromPropertiesC(column).Equals("")) {
					existe=false;
					
					sVariablesArray+="";//"\r\n\r\n";
					
					String strOnChangeDb="false";
						
					if(GetOnEventDbColumnFromPropertiesC(column)) {
						strOnChangeDb="true";
					}
					
					String strDepend=GetConEventQueryDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";strWhereAnd+=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								//strDependSql=arrDepend[j];	
								
								//if(strDependSql.Equals(GetNombreColumnFromPropertiesInterno(columnEvent,true))) {
									//sVariablesArray+="\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";					
									sVariablesArray+="\r\n\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sComboGenericoParametro+"sFormularioTipoBusqueda,\""+GetNombreCompletoClaseRelacionadaFromColumn(columnEvent)+"\","+strOnChangeDb+");";
									break;
								//}								
							}
					
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}


public  String GetRecargarActionsFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
	String sNombrePakage="";
	TableSchema tableSchemaOrigen=null;
	TableSchema tableSchemaEncontrada=null;
	TableSchema tableSchemaEncontradaFromDescription=null;
	ColumnSchema columnSchemaEncontrada=null;
	ColumnSchema columnSchemaEncontradaPadreFk=null;
	String strPhpPunto="";
	
	String sCommentWeb="";
	String sParametroComboGenerico="";
	
	if(!EsSwing) {
		sCommentWeb="//";
	}
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				sParametroComboGenerico="";
				
				tableSchemaOrigen=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaOrigen);
								
				if(EsSwing) {
					sParametroComboGenerico="JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchemaOrigen.ToString())+",";
				}
				
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {	
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sParametroComboGenerico+"String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
					
					String strDepend=GetConEventDependColumnFromPropertiesC(column);
					String strDependSql="";
					String strNombreClaseClave="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
								//Trace.WriteLine(i);
								//Trace.WriteLine(j);
								
								//strDepend=strDepend.Split(',')[i];
								//strDependSql=strDepend.Split(',')[j];							
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								
								//strDependSql=arrDepend[j];	
																
								//Trace.WriteLine(strDepend.Replace(strId+"_","")+"-->"+GetNombreCompletoClaseRelacionadaFromColumn(column));
								//PORSI_GetNombreCompletoClaseRelacionadaFromColumn(column) ESTO PARA PRODUCTO (Linea,LineaGrupo,LineaCategoria,LineaMarca)
								
								columnSchemaEncontrada=GetColumnaFromNombreC(strDepend,TablaBase);
								
								//ANTES
								//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																								
								tableSchemaEncontrada=GetTableSchemaFromColumnForeignKey(columnSchemaEncontrada);
								
								
								//strNombreClaseClave=GetNombreClaseC(tableSchemaEncontrada.ToString());
								strNombreClaseClave=GetNombreCompletoClaseRelacionadaFromColumn(column);
								
								if(!GetNombreClaseC(tableSchemaEncontrada.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column))) {
									//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																
								
									strDependSql=strId+"_"+GetNombreTableFromProperties(tableSchemaEncontrada);
								}
								
								sVariablesArray+="\r\n\r\n\t\t\tif(sTipoComboOrigen.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+"\")){";
								sVariablesArray+="\r\n\t\t\t\t"+sCommentWeb+"this.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchemaOrigen.ToString())+");";
								sVariablesArray+="\r\n\t\t\t}";
								
								//if(!EsParaBusqueda) {
									sVariablesArray+="\r\n\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
								
								/*} else {
									strControl+="\t\t\tif($"+strDepend+"!=null && $"+strDepend+"!='') {\r\n";
									strControl+="\t\t\t\t$sFinalQuery"+strPhpPunto+"=' "+strWhereAnd+" "+strDependSql+"='.$"+strDepend+";\r\n";
								}							
								*/
								
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
							}
					//PORSI_GetNombreCompletoClaseRelacionadaFromColumn(column) ESTO PARA PRODUCTO (Linea,LineaGrupo,LineaCategoria,LineaMarca)
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";
					sVariablesArray+="\r\n\t\t\tthis.setActual"+strNombreClaseClave+"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					sVariablesArray+="\r\n\r\n\t\t\t"+sCommentWeb+"this.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				} else if(!GetConEventSetParentDependColumnFromPropertiesC(column).Equals("")) {
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sParametroComboGenerico+"String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					//sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					
					String strDepend=GetConEventSetParentDependColumnFromPropertiesC(column);
					String strDependSql="";
					String strNombreClaseClave="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							//String strWhereAnd=" WHERE ";
							
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
									
								strDepend=arrDepend[i];
								strDependSql=arrDepend[j];	
								
								tableSchemaEncontradaFromDescription=GetTablaFromNombreC(strDependSql,tableSchemaOrigen);								
			
								columnSchemaEncontrada=GetColumnaFromNombreC(strDepend,TablaBase);
								columnSchemaEncontradaPadreFk=GetColumnaFromNombreC(strId+"_"+strDependSql,TablaBase);
								
								if(!columnSchemaEncontradaPadreFk.Description.Contains("CONCARGARTODOFK")) {
									System.Windows.Forms.MessageBox.Show("COLUMNA DEBE TENER DESCRIPCION CONCARGARTODOFK=true -> Tabla="+columnSchemaEncontradaPadreFk.Table.Name+",Columna="+columnSchemaEncontradaPadreFk.Name);
								}
								
								//ANTES
								//tableSchemaEncontrada=GetTableSchemaFromColumnForeignKey(columnSchemaEncontrada);
								
								
								strNombreClaseClave=GetNombreCompletoClaseRelacionadaFromColumn(column);
								
								/*
								if(!GetNombreClaseC(tableSchemaEncontrada.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column))) {								
									strDependSql=strId+"_"+GetNombreTableFromProperties(tableSchemaEncontrada);
								}
								*/
								
								sVariablesArray+="\r\n\r\n\t\t\tif(sTipoComboOrigen.equals(\""+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+"\")){";
								sVariablesArray+="\r\n\t\t\t\t"+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+" "+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux=new "+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+"();";
								
								
								sVariablesArray+="\r\n\r\n\t\t\t\tif(this.jComboBox"+strId+"_"+strDependSql+GetNombreClase(TablaBase.ToString())+"!=null) {";
								/*
								sVariablesArray+="\r\n\t\t\t\t\tif(this.jComboBox"+strId+"_"+strDependSql+GetNombreClase(TablaBase.ToString())+".getItemCount()>0){";
								sVariablesArray+="\r\n\t\t\t\t\t\tthis.jComboBox"+strId+"_"+strDependSql+GetNombreClase(TablaBase.ToString())+".setSelectedIndex(0);";
								sVariablesArray+="\r\n\t\t\t\t\t}";
								*/
								
								sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux=("+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+")jComboBox"+strId+"_"+strDependSql+GetNombreClase(TablaBase.ToString())+".getSelectedItem();";
									
								sVariablesArray+="\r\n\r\n\t\t\t\t\t//BUCLE RECURSIVO";
								sVariablesArray+="\r\n\t\t\t\t\tif("+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux!=null) {";// && "+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux.get"+strDepend+"()!=null && "+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux.get"+strDepend+"()>0) {";
								sVariablesArray+="\r\n\t\t\t\t\t\tthis.setActual"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+"ForeignKey("+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux.get"+strDepend+"(),true,sFormularioTipoBusqueda);";
								sVariablesArray+="\r\n\t\t\t\t\t}";
								sVariablesArray+="\r\n\t\t\t\t}";
								
								sVariablesArray+="\r\n\t\t\t}";
								
								/*
								sVariablesArray+="\r\n\r\n\t\t\tif(sTipoComboOrigen.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+"\")){";
								sVariablesArray+="\r\n\t\t\t\t"+sCommentWeb+"this.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchemaOrigen.ToString())+");";
								sVariablesArray+="\r\n\t\t\t}";
								*/
								
								
								/*
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								*/
								
								if(!blnExiste) {
									blnExiste=true;
									//strWhereAnd=" AND ";
								}
								
								break;
							}
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";
					sVariablesArray+="\r\n\t\t\t//this.setActual"+strNombreClaseClave+"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					//sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					//sVariablesArray+="\r\n\t\t\t"+sCommentWeb+"this.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";
										
				} else if(!GetConEventQueryDependColumnFromPropertiesC(column).Equals("")) {	
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sParametroComboGenerico+"String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
					
					String strDepend=GetConEventQueryDependColumnFromPropertiesC(column);
					String strDependSql="";
					String strNombreClaseClave="";
					String strDependQuery="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";
							
							for (int i = 0,j=0,k=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;			
								k=j + 1;
								
								//strDepend=strDepend.Split(',')[i];
								//strDependSql=strDepend.Split(',')[j];							
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[j];	
								strDependQuery=arrDepend[k];
								
								strDependQuery=strDependQuery.Replace("-I-","=");
								
								tableSchemaEncontradaFromDescription=GetTablaFromNombreC(strDependSql,tableSchemaOrigen);											
								columnSchemaEncontrada=GetColumnaFromNombreC(strDepend,TablaBase);
								
								if(columnSchemaEncontrada.IsForeignKeyMember) {
									tableSchemaEncontrada=GetTableSchemaFromColumnForeignKey(columnSchemaEncontrada);
								} else {
									tableSchemaEncontrada=column.Table;
								}
								
								
								//strNombreClaseClave=GetNombreClaseC(tableSchemaEncontrada.ToString());
								strNombreClaseClave=GetNombreCompletoClaseRelacionadaFromColumn(column);
								
								if(!GetNombreClaseC(tableSchemaEncontrada.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column))) {
									//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																
								
									//strDependSql=strId+"_"+GetNombreTableFromProperties(tableSchemaEncontrada);
								}
								
								
								sVariablesArray+="\r\n\r\n\t\t\tif(sTipoComboOrigen.equals(\""+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+"\")){";
								sVariablesArray+="\r\n\t\t\t\t"+sCommentWeb+"this.setActualParaGuardar"+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchemaOrigen.ToString())+");";
								
								sVariablesArray+="\r\n\t\t\t\t"+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+" "+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux=new "+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+"();";
								
								//Trace.WriteLine(strDependSql);
								
								sVariablesArray+="\r\n\r\n\t\t\t\tif(this.jComboBox"+strId+"_"+strDependSql+GetNombreClase(TablaBase.ToString())+"!=null) {";
								sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux=("+GetNombreClase(tableSchemaEncontradaFromDescription.ToString())+")jComboBox"+strId+"_"+strDependSql+GetNombreClase(TablaBase.ToString())+".getSelectedItem();";
									
								sVariablesArray+="\r\n\r\n\t\t\t\t\t//BUCLE RECURSIVO";
								sVariablesArray+="\r\n\t\t\t\t\t//this.setActual"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+"ForeignKey("+GetNombreClaseObjeto(tableSchemaEncontradaFromDescription.ToString())+"Aux.get"+strDepend+"(),true,sFormularioTipoBusqueda);";
								sVariablesArray+="\r\n\t\t\t\t}";
								
								
								sVariablesArray+="\r\n\r\n\t\t\t\t//BUCLE RECURSIVO";
								sVariablesArray+="\r\n\t\t\t\t//this.setActual"+strNombreClaseClave+"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
								
								sVariablesArray+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(tableSchemaEncontradaFromDescription.ToString())+"Aux!=null && "+GetNombreClaseObjetoC(tableSchemaEncontradaFromDescription.ToString())+"Aux.getId()!=null && "+GetNombreClaseObjetoC(tableSchemaEncontradaFromDescription.ToString())+"Aux.getId()>0){";
								sVariablesArray+="\r\n\t\t\t\t\tsFinalQuery="+strDependQuery+"+"+GetNombreClaseObjetoC(tableSchemaEncontradaFromDescription.ToString())+"Aux.get"+strDepend+"();";
								sVariablesArray+="\r\n\t\t\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
								sVariablesArray+="\r\n\t\t\t\t\t"+sCommentWeb+"this.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
								sVariablesArray+="\r\n\t\t\t\t}";
								sVariablesArray+="\r\n\t\t\t}";
								
								/*
									sVariablesArray+="\r\n\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
																							
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								*/
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
								
								break;
							}
					//PORSI_GetNombreCompletoClaseRelacionadaFromColumn(column) ESTO PARA PRODUCTO (Linea,LineaGrupo,LineaCategoria,LineaMarca)
					
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String SetSelectedItemCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\t\tpublic void setSelectedItemCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKey("+GetNombreClaseC(tableSchema.ToString())+" "+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tif(conFormulario) {\r\n";					
						sVariablesArray+="\t\t\t\t\tif(!conSelectedIndex) {\r\n";
						sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+");\r\n";						
						sVariablesArray+="\t\t\t\t\t} else {\r\n";
						sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(iIndexSelected);\r\n";
						sVariablesArray+="\t\t\t\t\t}\r\n";
						sVariablesArray+="\t\t\t\t}\r\n\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tif(!this.conCargarMinimo) {\r\n";
						sVariablesArray+="\t\t\t\t\tif(conBusqueda) {\r\n";	
						sVariablesArray+="\r\n\t\t\t\t\t//BYDAN_BUSQUEDAS";
						sVariablesArray+="\r\n\t\t\t\t\t"+strCommentMinCodigoWebIni;
						sVariablesArray+="\r\n"+GetSetSelectedItemIndicesVariablesTablasClases(column,"\t");
						sVariablesArray+="\r\n\t\t\t\t\t"+strCommentMinCodigoWebFin;
						sVariablesArray+="\t\t\t\t\t}\r\n";						
						sVariablesArray+="\t\t\t\t}\r\n";
						
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
	}
	return sVariablesArray;
}

public  String CargarCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\t\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })";
				sVariablesArray+="\r\n\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey(String sFormularioTipoBusqueda)throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
					
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"=null;\r\n\r\n";			
						sVariablesArray+="\t\t\t\tif(sFormularioTipoBusqueda.equals(\"Formulario\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n\r\n";
						
						sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
						if(blnConBindingComplejo){
							sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+",\"jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";					
						}
						sVariablesArray+="\t\t\t\t\t} else {\r\n";
						sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".removeAllItems();\r\n\r\n";
						
						sVariablesArray+="\t\t\t\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+":this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey) {\r\n";
						
						if(TieneColumnaEsDefectoC(tableSchema)) {
							sVariablesArray+="\t\t\t\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+".getes_defecto()) {\r\n";
							sVariablesArray+="\t\t\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strClaseBean+".set"+GetNombreCompletoColumnaClaseC(column)+"("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+".getId());\r\n";
							sVariablesArray+="\t\t\t\t\t\t\t}\r\n\r\n";
						}
						
						sVariablesArray+="\t\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".addItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+");\r\n";
						sVariablesArray+="\t\t\t\t\t\t}\r\n";
						sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
						
						sVariablesArray+="\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column)/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/)+"DefaultListCellRenderer());\r\n\r\n";					
						
						sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
						if(blnConBindingComplejo){
							sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n";
						}
						sVariablesArray+="\t\t\t\t\t}\r\n";
						
						if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
							/*
							sVariablesArray+="\r\n\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\");\r\n";//strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)					
							sVariablesArray+="\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n";//strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)					
							sVariablesArray+="\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n";							
							*/
							//SE REPITE ANTERIOR SOLO CAMBIA SUFIJO ParaTabla
							sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							if(blnConBindingComplejo){
								sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\");\r\n";					
							}
							sVariablesArray+="\t\t\t\t\t} else {\r\n";
							sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.removeAllItems();\r\n\r\n";
							sVariablesArray+="\t\t\t\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+":this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey) {\r\n";
							sVariablesArray+="\t\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+");\r\n";
							sVariablesArray+="\t\t\t\t\t\t}\r\n";
							sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
							
							sVariablesArray+="\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";					
							
							sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							if(blnConBindingComplejo){
								sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"ParaTabla.bind();\r\n";
							}
							sVariablesArray+="\t\t\t\t\t}\r\n";
						}
						
						sVariablesArray+="\t\t\t\t}\r\n";
						
						
						sVariablesArray+="\r\n\r\n\t\t\t\tif(!this.conCargarMinimo) {\r\n";
						sVariablesArray+=GetIndicesVariablesTablasClases(column,"\t");
						sVariablesArray+="\r\n\r\n\t\t\t\t}\r\n";
						
					sVariablesArray+="\r\n\t\t\t} ";
					sVariablesArray+=" catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
	}
	return sVariablesArray;
}

public  String DefinirClassDefaultListCellRendererColumnsVariablestrForeignKeys(bool conMostrar)
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	String 	sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				if(conMostrar) {
					tableSchema=GetNombreTablaRelacionadaFromColumn(column);
					sNombrePakage=GetPackageTableFromProperties(tableSchema);
					
					sVariablesArray+="\t\tclass "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer  extends DefaultListCellRenderer {";
					sVariablesArray+="\r\n\t\t\tprivate static final long serialVersionUID = 1L;";
					
					sVariablesArray+="\r\n\r\n\t\t\t@SuppressWarnings(\"rawtypes\")";
					sVariablesArray+="\r\n\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus) ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
							
					sVariablesArray+="\t\t\t\tif(value instanceof "+ GetNombreClaseRelacionadaFromColumn(column)+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\t\t\t"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"=("+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+")value;\r\n";
					sVariablesArray+="\t\t\t\t\tthis.setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"));\r\n";
					sVariablesArray+="\t\t\t\t}\r\n\r\n";
							
					sVariablesArray+="\t\t\t\treturn this;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t}\r\n";
				}
		
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			if(conMostrar) {
					
				sVariablesArray+="\t\tclass "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer  extends DefaultListCellRenderer ";
				sVariablesArray+="{\r\n";
							
				sVariablesArray+="\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus) ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
						
				sVariablesArray+="\t\t\t\tif(value instanceof "+GetNombreClaseC(tableSchemaForeignKey.ToString())+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\t\t"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+ GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"=("+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+")value;\r\n";
				sVariablesArray+="\t\t\t\t\tthis.setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion("+ GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"));\r\n";
				sVariablesArray+="\t\t\t\t}\r\n\r\n";
						
				sVariablesArray+="\t\t\t\treturn this;\r\n";
				sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
			}
		}
	}
	return sVariablesArray;
}

public  String ReDefinirColumnsTableVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	//sVariablesArray+="\r\n\t\tTableColumn tableColumn;\r\n\r\n";
	sVariablesArray+="\r\n\r\n";
			
	String sTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			sTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
			
			sVariablesArray+="\t\ttableColumn= this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumn(\""+sTitulo+"\");\r\n";
			sVariablesArray+="\t\ttableColumn.setCellRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n";
			sVariablesArray+="\t\ttableColumn.setCellEditor(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n\r\n";

		}	
	}
	return sVariablesArray;
}


	
public  String ReDefinirTableCellColumnsTableVariablestrForeignKeys(bool conMostrar)
{
	String sVariablesArray="";
			
	String sTitulo="";
		sTitulo+="";
	String strComentarioParaEjb="";
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strFuncionBusquedaEjbInit="\r\n\t\t\t\t//ARCHITECTURE";
			strFuncionBusquedaEjbInit+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
	String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
		   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
	
	TableSchema tableSchema=null;
	String sNombrePakage="";
	String sCommentCombo="";
	String strSufijoAutoReferenciada="";
	
	if(!blnNoStandardTableFromProperties) {				
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				if(conMostrar) {
					strSufijoAutoReferenciada="";
					sCommentCombo="";
					
					tableSchema=GetNombreTablaRelacionadaFromColumn(column);
					sNombrePakage=GetPackageTableFromProperties(tableSchema);
						
					//YA TIENE
					/*
					if(TablaBase.Name.Equals(tableSchema.Name)) {
						strSufijoAutoReferenciada=strAutoRef;
					}
					*/
		
					sVariablesArray+="\r\n\t\tclass "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+strSufijoAutoReferenciada+"TableCell extends DefaultCellEditor implements TableCellRenderer {\r\n";//extends AbsactCellEditor ,  ,TableCellEditor
					//sVariablesArray+="\t\t{\r\n\r\n";
					sVariablesArray+="\t\t\tprivate static final long serialVersionUID = 1L;\r\n\r\n";
					sVariablesArray+="\t\t\tprotected JLabel jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JLabelMe();\r\n";
									
					sVariablesArray+="\t\t\t@SuppressWarnings(\"rawtypes\")\r\n";
					sVariablesArray+="\t\t\tprotected JComboBox jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JComboBoxMe();\r\n";
					
					sVariablesArray+="\t\t\tprotected Object valor=new Object();\r\n";
					sVariablesArray+="\t\t\tprotected List<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey=new ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n";
					sVariablesArray+="\t\t\tprotected Border resaltar=null;\r\n\r\n";
					
					sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell() {\r\n";
					sVariablesArray+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(JCheckBox checkBox) {\r\n";
					sVariablesArray+="\t\t\t\tsuper(checkBox);\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\t@SuppressWarnings(\"rawtypes\")\r\n";
					sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(JComboBox jcComboBox) {\r\n";
					sVariablesArray+="\t\t\t\tsuper(jcComboBox);\r\n";
					sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=jcComboBox;\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
									
					sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(List<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey) {\r\n";
					sVariablesArray+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
					sVariablesArray+="\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey;\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(List<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey,Border resaltar) {\r\n";
					sVariablesArray+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
					sVariablesArray+="\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey;\r\n";
					sVariablesArray+="\t\t\t\tthis.resaltar=resaltar;\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
			
					sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {\r\n";
					sVariablesArray+="\t\t\ttry{\r\n";
					
					//DESCOMENTAR PARA DEEPLOAD
					//sVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
					//sVariablesArray+="\t\t\t\tclasses.add(new Classe("+ GetNombreClaseRelacionadaFromColumn(column)+".class));\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";  
					
					sVariablesArray+=strFuncionBusquedaEjbInit;
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];";
					sVariablesArray+=strFuncionBusquedaEjbMiddle;
					sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];";
					sVariablesArray+=strFuncionBusquedaEjbEnd;
				
					/*
					sVariablesArray+=strFuncionBusquedaEjbInit;
					
					sVariablesArray+="\r\n\t\t\t\t\ttry {\r\n";
						
					
					sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getNewConnexionToDeep();\r\n";
					sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
					sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.commitNewConnexionToDeep();\r\n";
					sVariablesArray+="\t\t\t\t\t} ";
					sVariablesArray+="catch(Exception e) {\r\n";
					//sVariablesArray+="\r\n";
					sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.rollbackNewConnexionToDeep();\r\n";
					sVariablesArray+="\t\t\t\t\t} ";
					sVariablesArray+="finally {";
					sVariablesArray+="\r\n";
					sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.closeNewConnexionToDeep();\r\n";
					sVariablesArray+="\t\t\t\t\t}\r\n";
					
					sVariablesArray+=strFuncionBusquedaEjbMiddle;	
					if(ConSessionBeans){
					sVariablesArray+="\r\n\t\t\t\t\t"+ strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.deepLoadWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes,\"\", datosCliente);\r\n";			
					}				
					
					sVariablesArray+=strFuncionBusquedaEjbEnd;
					*/
							
					sVariablesArray+="\r\n\r\n\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JLabelMe();\r\n\r\n";
						//valor=value;
					//sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()));\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged()) {\r\n";
					sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetPrefijoRelacionC()+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"_descripcion((getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyDescripcion((Long)value)));\r\n";		
					sVariablesArray+="\t\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"_descripcion());\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tif(this.resaltar!=null) {\r\n";
					sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setBorder(this.resaltar);\r\n";
					sVariablesArray+="\t\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setOpaque(true);\r\n";
					sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());\r\n\r\n";
			
					sVariablesArray+="\t\t\t\tif(isSelected) {\r\n";
					sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setForeground(FuncionesSwing.getColorSelectedForeground());\r\n";
					sVariablesArray+="\t\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\t} catch(Exception e) {\r\n";
					sVariablesArray+="\t\t\t;\r\n\t\t\t}\r\n\r\n";
					sVariablesArray+="\t\t\treturn jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
					sVariablesArray+="\r\n\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\r\n\t\t\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\r\n";
					sVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int row,int column) {\r\n";
					//sVariablesArray+="\t\t\t{\r\n";
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sCommentCombo="//";					
					}
					
					sVariablesArray+="\t\t\t\t"+sCommentCombo+"this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JComboBoxMe();\r\n\r\n";
					
					sVariablesArray+="\t\t\t\ttry{\r\n";
					
					sVariablesArray+="\t\t\t\t\tint intSelectedRow = row;\r\n";  
					
					sVariablesArray+=strFuncionBusquedaEjbInit;
					sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];";
					sVariablesArray+=strFuncionBusquedaEjbMiddle;
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];";
					sVariablesArray+=strFuncionBusquedaEjbEnd;
					
						
					sVariablesArray+="\r\n\t\t\t\t\t"+sCommentCombo+"JComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"=null;\r\n\r\n";
		
					sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+");\r\n\r\n";
		
					sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n";
		
					sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
					if(GetConEventChangeColumnFromPropertiesC(column)) {
						sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".addActionListener (new ActionListener () {\r\n";
						sVariablesArray+="\t\t\t\t\t\t"+sCommentCombo+"public void actionPerformed(ActionEvent e) {\r\n";
						sVariablesArray+="\t\t\t\t\t\t\t"+sCommentCombo+"try {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+",\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
						sVariablesArray+="\t\t\t\t\t\t"+sCommentCombo+"}\r\n";
						sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"});\r\n\r\n";
						
					}
						
					sVariablesArray+="\t\t\t\t\t//this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".setSelectedItem("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+ GetNombreClaseRelacionadaFromColumn(column)+"());\r\n\r\n";
					
					sVariablesArray+="\t\t\t\t\t//setActual"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKey((Long)value,false,\"Formulario\");\r\n\r\n";
					
					sVariablesArray+="\t\t\t\t\tsetActual"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyGenerico((Long)value,this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+");\r\n\r\n";
					
					sVariablesArray+="\t\t\t\t\t//NO_FUNCIONA_"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"_descripcion(getActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"ForeignKeyDescripcion((Long)value));\r\n\r\n";
					
					sVariablesArray+="\t\t\t\t\tvalor=value;\r\n\r\n";
					
					sVariablesArray+="\t\t\t\t} catch(Exception e) {\r\n";
					sVariablesArray+="\t\t\t\t;\r\n\t\t\t\t}\r\n\r\n";
					
					
					sVariablesArray+="\t\t\t\treturn this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tpublic Object getCellEditorValue() {\r\n";
					//sVariablesArray+="\t\t\t{\r\n";
					sVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseRelacionadaFromColumn(column)+")this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".getSelectedItem()).get"+strIdGetSet+"();\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					/*
					sVariablesArray+="\t\t\tpublic void addCellEditorListener(CellEditorListener arg0) {\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
			
					sVariablesArray+="\t\t\tpublic void cancelCellEditing() {\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
			
					sVariablesArray+="\t\t\tpublic boolean isCellEditable(EventObject arg0) {\r\n";
					sVariablesArray+="\t\t\t\treturn true;\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
			
					sVariablesArray+="\t\t\tpublic void removeCellEditorListener(CellEditorListener arg0) {\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
			
					sVariablesArray+="\t\t\tpublic boolean shouldSelectCell(EventObject arg0) {\r\n";
					sVariablesArray+="\t\t\t\treturn false;\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					*/
					
					sVariablesArray+="\t\t\tpublic boolean stopCellEditing() {\r\n";
					sVariablesArray+="\t\t\t\tfireEditingStopped();\r\n\r\n";
					sVariablesArray+="\t\t\t\treturn true;\r\n";
					sVariablesArray+="\t\t\t}\r\n";	
					
					sVariablesArray+="\t\t}\r\n";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
								
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\tclass "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"TableCell extends DefaultCellEditor implements TableCellRenderer\r\n";//extends AbsactCellEditor  , ,TableCellEditor
			sVariablesArray+="\t\t{\r\n";
			sVariablesArray+="\t\t\tJLabel jLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\tJComboBox jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\tObject valor;\r\n\r\n";
				
			sVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
		
			sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
			sVariablesArray+="\t\t\t{try{\r\n";
			sVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
			sVariablesArray+="\t\t\t\tclasses.add(new Classe("+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".class));\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";  
				
			sVariablesArray+=strFuncionBusquedaEjbInit;
			sVariablesArray+="\r\n\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sVariablesArray+=strFuncionBusquedaEjbMiddle;
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sVariablesArray+=strFuncionBusquedaEjbEnd;
			
			sVariablesArray+=strFuncionBusquedaEjbInit;
				
			sVariablesArray+="\r\n\t\t\t\t\ttry\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
				
			
			sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.commitNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n";
			sVariablesArray+="\t\t\t\t\tcatch(Exception e)\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.rollbackNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
			sVariablesArray+="\t\t\t\t\tfinally\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.closeNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
				
			sVariablesArray+=strFuncionBusquedaEjbMiddle;
			if(ConSessionBeans){
			sVariablesArray+="\r\n\t\t\t\t\t"+strCommentReporte+ GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.deepLoadWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes,\"\", datosCliente);\r\n";			
			}
			//sVariablesArray+="\t\t\t\t\t";
			sVariablesArray+=strFuncionBusquedaEjbEnd;
						
			sVariablesArray+="\r\n\t\t\tjLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"=new JLabelMe();\r\n\r\n";
				//valor=value;
			sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"()));\r\n";
						
					
			sVariablesArray+="\t\t\t}catch(Exception e){;}\r\n\r\n";
			sVariablesArray+="\t\t\t\treturn jLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n}";
				
				
			sVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"=new JComboBoxMe();\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
	
			sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">("+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+");\r\n\r\n";
	
			sVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
	
			sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();	\r\n\r\n";
					
			sVariablesArray+="\t\t\t\tvalor=value;\r\n";
			sVariablesArray+="\t\t\t\treturn jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\t}\r\n\r\n";
				
			sVariablesArray+="\t\t\tpublic Object getCellEditorValue()\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseC(tableSchemaForeignKey.ToString())+")jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".getSelectedItem()).get"+strIdGetSet+"();\r\n";
			sVariablesArray+="\t\t\t}\r\n";
				
			sVariablesArray+="\t\t\tpublic void addCellEditorListener(CellEditorListener arg0) {\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic void cancelCellEditing() {\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic boolean isCellEditable(EventObject arg0) {\r\n";
			sVariablesArray+="\t\treturn true;\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic void removeCellEditorListener(CellEditorListener arg0) {\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic boolean shouldSelectCell(EventObject arg0) {\r\n";
			sVariablesArray+="\t\treturn false;\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic boolean stopCellEditing() {\r\n";
			sVariablesArray+="\t\treturn false;\r\n";
			sVariablesArray+="\t\t}\r\n";	
				
			sVariablesArray+="\t\t}\r\n";		
		}
	}
			
	return sVariablesArray;
}

public  String GetDescripcionColumnsTableVariablestrForeignKeys(bool paraColor)
{
	String sVariablesArray="";
			
	String sTitulo="";
		sTitulo+="";
	String strComentarioParaEjb="";
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strFuncionBusquedaEjbInit="\r\n\t\t\t\t//ARCHITECTURE";
			strFuncionBusquedaEjbInit+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
	String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
		   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
	
	TableSchema tableSchema=null;
	String sNombrePakage="";
	String sCommentCombo="";sCommentCombo+="";
	String strSufijoAutoReferenciada="";strSufijoAutoReferenciada+="";
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {				
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
						
				if(paraColor && !GetConColorTableFromPropertiesC(tableSchema)) {
					continue;
				}
				
					strSufijoAutoReferenciada="";
					sCommentCombo="";
					
					//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
					sNombrePakage=GetPackageTableFromProperties(tableSchema);
						
					//YA TIENE
					/*
					if(TablaBase.Name.Equals(tableSchema.Name)) {
						strSufijoAutoReferenciada=strAutoRef;
					}
					*/
		
					//sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {\r\n";
					//sVariablesArray+="\t\t\ttry{\r\n";
					
					
					//sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";  
					
					//BYDAN_COMMENT
					/*
					sVariablesArray+=strFuncionBusquedaEjbInit;
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];";
					sVariablesArray+=strFuncionBusquedaEjbMiddle;
					sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];";
					sVariablesArray+=strFuncionBusquedaEjbEnd;
					*/
												
					//valor=value;
					//sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()));\r\n\r\n";
					
					//sVariablesArray+="\r\n\r\n\t\t\t\t//if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged()) {\r\n";
					
					if(!paraColor) {
						sVariablesArray+="\r\n\t\tif(sTipo.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(column)+"\")) {";//GetNombreClaseC(tableSchema.ToString())
						sVariablesArray+="\r\n\t\t\t//sDescripcion=this.getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyDescripcion((Long)value);";		
						sVariablesArray+="\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew() && !"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged() && !"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()) {";
						sVariablesArray+="\r\n\t\t\t\tsDescripcion="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strDescripcion+"();";		
						sVariablesArray+="\r\n\t\t\t} else {";
						sVariablesArray+="\r\n\t\t\t\tsDescripcion=this.getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyDescripcion((Long)value);";		
						sVariablesArray+="\r\n\t\t\t}";
						sVariablesArray+="\r\n\t\t}\r\n";
					} else {
						sVariablesArray+="\r\n\t\tif(sTipo.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(column)+"\")) {"; //GetNombreClaseC(tableSchema.ToString())
						sVariablesArray+="\r\n\t\t\tcolor=FuncionesSwing.getColorGeneral("+GetNombreClaseObjetoC(TablaBase.ToString())+"Row.get"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"().getid_color_general());";//GetNombreClaseC(tableSchema.ToString())
						sVariablesArray+="\r\n\t\t}\r\n";
					}
					//sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetPrefijoRelacionC()+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"_descripcion((getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyDescripcion((Long)value)));\r\n";		
					
					//sVariablesArray+="\t\t\t\t//}\r\n\r\n";			
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
								
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\tclass "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"TableCell extends DefaultCellEditor implements TableCellRenderer\r\n";//extends AbsactCellEditor  , ,TableCellEditor
			sVariablesArray+="\t\t{\r\n";
			sVariablesArray+="\t\t\tJLabel jLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\tJComboBox jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\tObject valor;\r\n\r\n";
				
			sVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
		
			sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
			sVariablesArray+="\t\t\t{try{\r\n";
			sVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
			sVariablesArray+="\t\t\t\tclasses.add(new Classe("+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".class));\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";  
				
			sVariablesArray+=strFuncionBusquedaEjbInit;
			sVariablesArray+="\r\n\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sVariablesArray+=strFuncionBusquedaEjbMiddle;
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sVariablesArray+=strFuncionBusquedaEjbEnd;
			
			sVariablesArray+=strFuncionBusquedaEjbInit;
				
			sVariablesArray+="\r\n\t\t\t\t\ttry\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
				
			
			sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.commitNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n";
			sVariablesArray+="\t\t\t\t\tcatch(Exception e)\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.rollbackNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
			sVariablesArray+="\t\t\t\t\tfinally\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.closeNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
				
			sVariablesArray+=strFuncionBusquedaEjbMiddle;
			if(ConSessionBeans){
			sVariablesArray+="\r\n\t\t\t\t\t"+strCommentReporte+ GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.deepLoadWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes,\"\", datosCliente);\r\n";			
			}
			//sVariablesArray+="\t\t\t\t\t";
			sVariablesArray+=strFuncionBusquedaEjbEnd;
						
			sVariablesArray+="\r\n\t\t\tjLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"=new JLabelMe();\r\n\r\n";
				//valor=value;
			sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"()));\r\n";
						
					
			sVariablesArray+="\t\t\t}catch(Exception e){;}\r\n\r\n";
			sVariablesArray+="\t\t\t\treturn jLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n}";
				
				
			
				
		
		}
	}
			
	return sVariablesArray;
}

public String GetBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						
											
						sTablaClaseRelacionada+="\r\n\t\t\telse if(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"())";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
								
						sTablaClaseRelacionada+="\r\n\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual().equals(0L))";
						sTablaClaseRelacionada+="\r\n\t\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.sAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"\";";						
						sTablaClaseRelacionada+="\r\n\t\t\t\t}";
									
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(false);";
						
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iNumeroPaginacionPagina=0;";
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iInicioPaginacion=0;";
						//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.iFinPaginacion=10;";
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
										
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
						
						sTablaClaseRelacionada+="\r\n\t\t\t}";
							
						
				
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					sTablaClaseRelacionada+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"())";
					sTablaClaseRelacionada+="\r\n\t\t\t{";
								
					sTablaClaseRelacionada+="\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual().equals(0L))";
					sTablaClaseRelacionada+="\r\n\t\t\t\t{";
					sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.sAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreClaseC(tableSchemaForeignKey.ToString())+"\";";						
					sTablaClaseRelacionada+="\r\n\t\t\t\t}";
									
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(false);";
						
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iNumeroPaginacionPagina=0;";
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iInicioPaginacion=0;";
					//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.iFinPaginacion=10;";
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
										
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
						
					sTablaClaseRelacionada+="\r\n\t\t\t}";							
				}
			}
				
			return sTablaClaseRelacionada; 
		}
		
	public String GetXmlBusquedasIndicesTablas()  {
			bool blnEsIndiceFkUnoAUno=false;
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			
			String sIfFuncion=String.Empty;
			sIfFuncion="\r\n\telse if(sAccionBusqueda==\"{0}\") {";
			
			String sFuncionBusqueda="";
			String sFuncionBusqueda2="";
			
			String strFuncionBusquedaEjbInit0="\r\n\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit0+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
			String strFuncionBusquedaEjbRemote="";
			String strFuncionBusquedaEjbHome="";
			String strFuncionBusquedaEjb="";
			
			
			String sDefinicionVariables="";
			String sUsoVariables="";
			
			String sXmlFuncion=String.Empty;
			
			
			String sFuncionLogic="";
				 sFuncionLogic+="";
			String strComentarioParaEjb="";
			String strComentarioBloqueInicioParaEjb="";
				strComentarioBloqueInicioParaEjb+="";
			String strComentarioBloqueFinParaEjb="";
				strComentarioBloqueFinParaEjb+="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
				strComentarioBloqueInicioParaEjb="/*";
				strComentarioBloqueFinParaEjb="*/";
			}
			
			
			sXmlFuncion+="\r\n\r\n\t\t\t\tBoolean isNoExiste=false;";		
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sXmlFuncion+="\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/"isNoExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0;";
			sXmlFuncion+="\r\n\t\t\t\t}";	
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\tisNoExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+"s==null|| "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.size()==0;";
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			
			
			sXmlFuncion+="\r\n\r\n\t\tif(false && sTipoArchivoReporte!=\"\"&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte";
			
			
			sXmlFuncion+="\r\n\t\t\tif(false) {//isMostrarTodosResultadosReporte";
			sXmlFuncion+="\r\n\t\t\t\tthis.pagination.setiFirstResult(-1);";
			sXmlFuncion+="\r\n\t\t\t\tthis.pagination.setiMaxResults(-1);";	
			sXmlFuncion+="\r\n\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+";";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"sAux.addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s());";						
			sXmlFuncion+="\r\n\t\t\t\t}";	
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+";";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux.addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
		
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			sXmlFuncion+="\r\n\t\t\t\t\t}";			
			
			String sParametrosReporte="";
			
			if(blnEsReporte){
				sParametrosReporte=",this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual";
			}
			
			String strResultados1="";
			String strResultados2="";
			
			///if(!ConEjb){
				strResultados1=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()";
			//} else {
				strResultados2=GetNombreClaseObjetoC(TablaBase.ToString())+"s";
			//}
			
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";			
			sXmlFuncion+="\r\n\t\t\t\t\t"+strComentarioParaEjb+"generarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+strResultados1;
			
			if(ConSessionBeans){
				sXmlFuncion+=","+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable,"+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome";
			}
			
			sXmlFuncion+=");";
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\tgenerarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+strResultados2;
			
			if(ConSessionBeans){
				sXmlFuncion+=","+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable,"+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome";
			}
			
			sXmlFuncion+=");";			
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			
			sXmlFuncion+="\r\n\r\n\t\t\t\t\tif(false) {//isMostrarTodosResultadosReporte";
			sXmlFuncion+="\r\n\t\t\t\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
			sXmlFuncion+="\r\n\t\t\t\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);";	
			sXmlFuncion+="\r\n\r\n\t\t\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";			
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.set"+GetNombreClaseC(TablaBase.ToString())+"s(new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+");";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux);";
			sXmlFuncion+="\r\n\t\t\t\t\t\t}";				
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+";";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux);";
			sXmlFuncion+="\r\n\t\t\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t\t\t//ARCHITECTURE";
			
			sXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t}";	
			
			//sXmlFuncion+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
			//sXmlFuncion+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
			
			String sXmlFuncionObjeto=String.Empty;
			
			sXmlFuncionObjeto+="\r\n\r\n\t\t\t\tBoolean isExiste=false;";
			
			sXmlFuncionObjeto+="\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncionObjeto+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sXmlFuncionObjeto+="\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/"isExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0;";
			sXmlFuncionObjeto+="\r\n\t\t\t\t}";	
			sXmlFuncionObjeto+=" else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {";
			sXmlFuncionObjeto+="\r\n\t\t\t\t\tisExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+"!=null|| "+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"()!=0;";
			sXmlFuncionObjeto+="\r\n\t\t\t\t}";
			sXmlFuncionObjeto+="\r\n\t\t\t\t//ARCHITECTURE";
			
					
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			
			
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
			
						
			//sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
			//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			//sXmlFuncionObjeto+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
			//sXmlFuncionObjeto+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
				
			if(!ConEjb){
				//sXmlFuncionObjeto+="\r\n\t\t\t}";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {
					blnEsIndiceFkUnoAUno=false;
					
					//if(EsSwing) {
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)){
							continue;
						}
					//}
					
					sFuncionBusqueda2="\r\n\t\t\t\t"+strComentarioParaEjb+"this.sDetalleReporte="+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique) {
						//SOLO BUSQUEDAS PROPIAMENTE DICHAS
						continue;
						/*
						sFuncionBusqueda="\r\n\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(";
						strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
						strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
						
						sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
						*/
					} else {
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							
							if(indexSchema.Name.Contains(strFK)) {
								if(!TieneColumnaFkIndiceFkC(indexSchema)) {
									continue;
								}
							}
							
							/*if(indexSchema.Name.Contains("FK")) {
								blnEsIndiceFkUnoAUno=true;
							}
							*/
							
							sFuncionBusqueda="\r\n\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,pagination"+sParametrosReporte+",";
							if(ConSessionBeans){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,pagination,datosCliente"+sParametrosReporte+",";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,pagination,datosCliente"+sParametrosReporte+",";
							}
							
							sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\")) {";							
						} else {
							sFuncionBusqueda="\r\n\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							if(ConSessionBeans){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							}	
							sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\")) {";	
						}
					}
					
					int count=1;
					sDefinicionVariables="";
					sUsoVariables="";							
					//sFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{								
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {								
									//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									//sDefinicionVariables+="\r\n\r\n\t\t\t\tif(httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									//sDefinicionVariables+="\r\n\t\t\t\t{";
									//sDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";										
									//sDefinicionVariables+="\r\n\t\t\t\t}";
										
									
									if(indexSchema.Name.Contains(strFK+"_")) {
										if(!blnNoStandardTableFromProperties && memberColumnSchema.Column.IsPrimaryKeyMember && memberColumnSchema.Column.Name.Equals(strId) && memberColumnSchema.Column.IsForeignKeyMember) {
											blnEsIndiceFkUnoAUno=true;
										}
										
										if(!EsSwing) {
											if(!blnNoStandardTableFromProperties) {	
												
												sDefinicionVariables+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual()>0)";
												sDefinicionVariables+="\r\n\t\t\t\t{";
												sDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual();";
												sDefinicionVariables+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual(-1L);";
												
												sDefinicionVariables+="\r\n\t\t\t\t}";
												
											} else {
												
												String strNombreClaseRelacionada=indexSchema.Name.Replace(strFK+"_Id","");
												/*
												string strPrefijoTipo =  GetPrefijoTipoC(memberColumnSchema.Column);
												string strNombre = GetNombreColumnaClaseC(memberColumnSchema.Column);
												string strValor=GetDefaultValueColumna(memberColumnSchema.Column);
												*/
												
												sDefinicionVariables+="\r\n\r\n\t\t\t\tthis.setVariablesFk"+strNombreClaseRelacionada+/*GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+*/"ParaBuscar"+GetNombreClaseC(TablaBase.ToString())+"s("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+");";
												
												/*
												sDefinicionVariables+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual().equals("+strValor+")) {";
												sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+strPrefijoTipo+strNombre+strFK+"_Id"+strNombreClaseRelacionada+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual();";
												sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual("+strValor+");";
												sDefinicionVariables+="\r\n\r\n\t\t\t\t}";
												*/
											}
										}
									}
									
									sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										sUsoVariables+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name; 
									}
						
									if(!indexSchema.MemberColumns.Count.Equals(count)) {
										sUsoVariables+=",";	
									}
								} else {
									if(!indexSchema.Name.Contains("BusquedaRango")) {
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									
									} else {
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name; 									
										
										sUsoVariables+=",";	
										
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name; 									
									}																	
								}
								
								count++;
							}
							
							sFuncionBusqueda2+=sUsoVariables+");\r\n";
							sFuncionBusqueda+=sUsoVariables+");";
					
					//Ejbs
					if(ConSessionBeans){
						strFuncionBusquedaEjbRemote+=sUsoVariables+");\r\n";
						strFuncionBusquedaEjbRemote+="\t\t\t\t\tthis.setEstadosIniciales"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
						strFuncionBusquedaEjbHome+=sUsoVariables+");\r\n";
						strFuncionBusquedaEjbHome+="\t\t\t\t\tthis.setEstadosIniciales"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
					}
					
					String strAuxDescomentar="";
					
					if(strComentarioParaEjb!="") {
						strAuxDescomentar=sFuncionBusqueda2.Replace(strComentarioParaEjb,"");
					} else {
						strAuxDescomentar=sFuncionBusqueda2;
					}						 
					
					strFuncionBusquedaEjb="\r\n\t\t\t\t"+ strFuncionBusquedaEjbInit0+sFuncionBusqueda+strFuncionBusquedaEjbInit+strFuncionBusquedaEjbRemote+strAuxDescomentar+"\r\n\t\t\t\t"+strFuncionBusquedaEjbMiddle+strFuncionBusquedaEjbHome+strAuxDescomentar+"\r\n\t\t\t\t"+strFuncionBusquedaEjbEnd;
											
					String strFuncionBusquedaConEjb="";
						   strFuncionBusquedaConEjb=strFuncionBusquedaEjb;
												
					if(indexSchema.IsUnique) {
							sInitFuncion+=sIfFuncion+sDefinicionVariables+/*sFuncionBusqueda+*/sFuncionBusqueda2+strFuncionBusquedaEjb+sXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					} else {
							
							sInitFuncion+=sIfFuncion+sDefinicionVariables+/*sFuncionBusqueda+*/sFuncionBusqueda2+strFuncionBusquedaEjb;
							sInitFuncion+=sXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",/*sFuncionBusqueda*/strFuncionBusquedaConEjb.Replace("finalQueryPaginacion","\"\"").Replace("\r\n\r\n","\r\n\t\t"));
							
							if(blnEsIndiceFkUnoAUno) {								
								sInitFuncion+="\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
								sInitFuncion+="\r\n\t\t\t\t\tBoolean isTieneDatos"+GetNombreClaseC(TablaBase.ToString())+"=true;";
								sInitFuncion+="\r\n\t\t\t\t\t"+strComentarioParaEjb+"isTieneDatos"+GetNombreClaseC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()!=null && "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()>0;";
								sInitFuncion+="\r\n\r\n\t\t\t\t\t"+"if(isTieneDatos"+GetNombreClaseC(TablaBase.ToString())+") {";
								
								if(!EsSwing) {
									sInitFuncion+="\r\n\t\t\t\t\t\tthis.isPermisoNuevo"+GetNombreClaseC(TablaBase.ToString())+"=false;";
								}
								
								sInitFuncion+="\r\n\t\t\t\t\t}";
								sInitFuncion+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
								sInitFuncion+="\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"s!=null && "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.size()>0) {";
								
								if(!EsSwing) {
									sInitFuncion+="\r\n\t\t\t\t\t\tthis.isPermisoNuevo"+GetNombreClaseC(TablaBase.ToString())+"=false;";
								}
								
								sInitFuncion+="\r\n\t\t\t\t\t}";
								sInitFuncion+="\r\n\t\t\t\t}";
							}
							
							sInitFuncion+="\r\n\r\n\t\t\t}";																																		
					}
				} else {
					continue;	
				}
			}
			
		return  sInitFuncion;
	}
		
	public  String GetSetNoStandardParametrosIndiceFk()
	{
		//sDefinicionVariables+="\r\n\r\n\t\t\t\tthis.setVariablesFk"+strNombreClaseRelacionada+/*GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+*/"ParaBuscar"+GetNombreClaseC(TablaBase.ToString())+"s();";
												
		String sVariablesArray="";
		String sVariablesArrays="";
		String sNombrePakage="";sNombrePakage+="";
		TableSchema tableSchema=null;
		
		
		if(blnNoStandardTableFromProperties) {
			
			//ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			ArrayList arrayListForeignKeys =new ArrayList();
			ArrayList arrayListPK =new ArrayList();
			ArrayList arrayListFK =new ArrayList();
			ArrayList arrayListPKFK =new ArrayList();
			
			String strPK="";
			String strFK="";
			String strPKFK="";
			string strPrefijoTipo ="";
			string strNombre ="";
			string strValor="";
			
			String strFK0="";
			String strFK1="";strFK1+="";
					
			foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {		
				//sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				arrayListPK =new ArrayList();
				arrayListFK =new ArrayList();
				arrayListPKFK =new ArrayList();
				
				if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
					arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
					
					
					sVariablesArray="\r\n\tpublic void setVariablesFk"+ GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"ParaBuscar"+ GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+"s("+GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+") throws Exception ";
					sVariablesArray+="{\r\n";
					//sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
					
					foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.PrimaryKeyMemberColumns) {
						strPrefijoTipo =  GetPrefijoTipoC(memberColumnSchema.Column);
						strNombre = GetNombreColumnaClaseC(memberColumnSchema.Column);
						strValor=GetDefaultValueColumna(memberColumnSchema.Column);
						//strPK=GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"."+GetParameterClaseMethodC(memberColumnSchema.Column,true,false,false,"");
						strPK="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Actual().equals("+strValor+")) {";
						strPK+="\r\n\r\n\t\t\t\t\t"+/*strPrefijoTipo+strNombre+strFK+"_Id"+GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+*/"REEMPLACE="+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Actual();";
						strPK+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Actual("+strValor+");";
						strPK+="\r\n\r\n\t\t\t\t}";
						
						arrayListPK.Add(strPK);
					}
					
					foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.ForeignKeyMemberColumns) {
						strPrefijoTipo =  GetPrefijoTipoC(memberColumnSchema.Column);
						strNombre = GetNombreColumnaClaseC(memberColumnSchema.Column);
						strValor=GetDefaultValueColumna(memberColumnSchema.Column);
						
						//strFK=GetSetPartParameterClaseMethodC(memberColumnSchema.Column,"this."+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString()),true);
						strFK="this."+strPrefijoTipo+strNombre+"FK_Id"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString());//+"|"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString());
						arrayListFK.Add(strFK);
					}
					
					
					for (int i = 0; i < arrayListPK.Count; i++){
						strPKFK=/*((String)arrayListFK[i])+*/((String)arrayListPK[i])+"";
						
						strFK0=((String)arrayListFK[i]);
						strPKFK=strPKFK.Replace("REEMPLACE",strFK0);
						
						//strFK0=((String)arrayListFK[i]).Split('|')[0];
						//strFK1=((String)arrayListFK[i]).Split('|')[1];
						
						//strPKFK=strPKFK.Replace("REEMPLACE2",strFK0);						
						//strPKFK=strPKFK.Replace("REEMPLACE1",strFK1);
						
						arrayListPKFK.Add(strPKFK);
					}				
					
					foreach(String strPKFKArray in arrayListPKFK) {
						sVariablesArray+=strPKFKArray;					
					}
					
					sVariablesArray+="\r\n\t}\r\n\r\n";	
					
					/*
					sDefinicionVariables+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual().equals("+strValor+")) {";
					sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+strPrefijoTipo+strNombre+strFK+"_Id"+strNombreClaseRelacionada+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual();";
					sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual("+strValor+");";
					sDefinicionVariables+="\r\n\r\n\t\t\t\t}";
					*/
					
					sVariablesArrays+=sVariablesArray;
				}
				
				
			}
		}
				
		return sVariablesArrays;
	}

		
		public String GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			
			String sIfFuncion=String.Empty;
			sIfFuncion="\r\n\telse if(sAccionBusqueda==\"{0}\")\r\n{";
			
			String sFuncionBusqueda="";
			
			String sDefinicionVariables="";
			String sUsoVariables="";
			
			String sXmlFuncion=String.Empty;
			
			String sParametroPadre="";
			
			if(!EsSwing)
			{
				sParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong(httpServletRequest.getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";
			}
			else
			{
				sParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=1L;";
			}
											
											
			String sFuncionTodos=String.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					sFuncionTodos="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					sFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+sParametroPadre+"\r\n\t\t\t\t";					
					sFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					//sFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					sFuncionTodos+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					sFuncionTodos+="\r\n\t\t\t\t{";
					//sFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					sFuncionTodos+="\r\n\t\t\t\t}";
					
					//sFuncionTodos+="\r\n\r\n\t\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sFuncionTodos+="\r\n\t\t\t\thttpServletResponse.getWriter().write(xml);";
					sFuncionTodos+="\r\n\t\t\t}";
					
					
					
					//sXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
					
					//sXmlFuncion+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sXmlFuncion+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
					
					String sXmlFuncionObjeto=String.Empty;
					
					sXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					
					//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					sXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					sXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
					
					
					
					//sXmlFuncionObjeto+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sXmlFuncionObjeto+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							sIfFuncion+=sParametroPadre;
							
							int count=1;
							sDefinicionVariables="";
							sUsoVariables="";							
							//sFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{	
											if(!EsSwing)
											{
												sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
											}
											else
											{
												sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
											}
											
											
											sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												sUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												sUsoVariables+=",";	
												
												
												
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
												
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									sFuncionBusqueda+=sUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
					}
					
					sInitFuncion=sFuncionTodos+sInitFuncion;
				}
			}
			
			return  sInitFuncion;
		}
		
public String GetVariablesTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			String strEjbComentario="";
				strEjbComentario+="";
			String strEjbComentarioInicio="";
			String strEjbComentarioFin="";
			
			if(ConEjb){
				strEjbComentario="//";
				strEjbComentarioInicio="/*";
				strEjbComentarioFin="*/";
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
			
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//Trace.WriteLine(collectionInfo.SecondaryTableSchema.ToString());
					
					sTablaClaseRelacionada+="\r\n\r\n\t"+strEjbComentarioInicio+"public "+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+"Logic "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic=null;\r\n\r\n";
					
					if(!TablaBase.Name.Equals(collectionInfo.SecondaryTableSchema.Name)) {
						sTablaClaseRelacionada+="\tpublic "+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+"Logic get"+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic() "; 
						sTablaClaseRelacionada+="{\r\n";		
						sTablaClaseRelacionada+="\t\treturn "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic;\r\n";
						sTablaClaseRelacionada+="\t}\r\n\r\n";
					
						sTablaClaseRelacionada+="\tpublic void set"+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic("+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+"Logic "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic) "; 
						sTablaClaseRelacionada+="{\r\n";
						sTablaClaseRelacionada+="\t\tthis."+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic = "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic;\r\n";
						sTablaClaseRelacionada+="\t}\r\n"+strEjbComentarioFin;
					}
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

	public String GetEjbTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			String strEjbComentario="";
				strEjbComentario+="";
			
			if(ConEjb){
				strEjbComentario="//";
			}
			
			bool blnExiste=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					if(TablaBase.Name!=collectionInfo.SecondaryTable)
					{
						blnExiste=true;
						break;
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Implementable;";
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"ImplementableHome;";

						/*
						strTablaClaseRelacionada+="\r\n\r\n\t\t "+strEjbComentario+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;";
						//strTablaClaseRelacionada+="\r\n\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable+";");
						strTablaClaseRelacionada+="\r\n\t\t "+strTypeCollection+"<"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s=new "+strTypeNewCollection+"<"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";";
						*/
					}
				}
			}
			
			if(blnExiste) {
				strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Implementable;";
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetEjbTablasClasesRelacionadasForeignKeys() 
		{
			String strTablaClaseRelacionada="";
			bool blnExiste=false;
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema column in TablaBase.Columns)
				{
					if(column.IsForeignKeyMember)
					{
						blnExiste=true;
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome;";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					blnExiste=true;
					//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Implementable;";
					//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableHome;";							
				}
			}
			
			if(blnExiste) {
				strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetEjbTablasClasesRelacionadasParametros() 
		{
			String strTablaClaseRelacionada="";
			
			TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sModuloParametro=GetModuloPaqueteJavaFromTableFromPropertiesC(tableSchemaEncontrada);
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetTablasClasesRelacionadasParametros() 
		{
			String strTablaClaseRelacionada="";
			
			TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
					
			String strEjbComentario="";
			
			if(ConEjb){
				strEjbComentario="//";
			}
			
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sModuloParametro=GetModuloPaqueteJavaFromTableFromPropertiesC(tableSchemaEncontrada);
					//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageBusiness+"."+strPackageEntities+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageUtils+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\n"+strEjbComentario+"import "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageBusiness+"."+strPackageLogic+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetVariablesTablasInicializarClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
			
			String strEjbComentario="";
			String strNombreAdicional="";
			
			if(ConEjb){
				strEjbComentario="//";
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+="\r\n\t\t\t"+strEjbComentario+"this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String sTablaClaseRelacionada=String.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					sTablaClaseRelacionada+="\r\n\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String sFuncion=String.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			sFuncion+="\r\n\r\n\tpublic String toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()throws Exception";
			sFuncion+="\r\n\t{";
			sFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			sFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			sFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			sFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			sFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			sFuncion+="\r\n\t\ttry"; 
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			sFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			sFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			sFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\\r\n\");";
			sFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\\r\n\");";	    
				
			sFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			sFuncion+="\r\n\t\t\t\t{";
			
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.deepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					sFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				sFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					sFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			sFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\\r\n\");";			
			sFuncion+="\r\n\t\t\t\t}\r\n";
					
			sFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\\r\n\");";
					
			sFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			sFuncion+="\r\n\t\t}"; 
			sFuncion+="\r\n\t\tcatch(Exception e)"; 
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();";
			sFuncion+="\r\n\t\t\tthrow e;";
			sFuncion+="\r\n\t\t}";
			sFuncion+="\r\n\t\tfinally";
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			sFuncion+="\r\n\t\t}";
				
			sFuncion+="\r\n\t\t\treturn Funciones.ValidarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getSTableName());";
				
			sFuncion+="\r\n\t}";
		}
	}
	
	return sFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">();" ;																
																																																		
				}													
			}
								
			return sInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					sInitFuncion+="\r\n\t"+"ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					sInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
																																								
					sInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					sInitFuncion+="\r\n\t{";	
					sInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					sInitFuncion+="\r\n\t}";	
					
					sInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					sInitFuncion+="\r\n\t{";	
					sInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					sInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return sInitFuncion; 
		}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			String sParametroCompuesto="";
			String sParametroCompuesto2="";
			String sParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
							//sParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							//sParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							//sParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							//sParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							//sParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";

							sInitFuncion+="\r\n\tpublic  String  get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws SQLException,Exception"; 
							sInitFuncion+="\r\n\t{\r\n\t\tString sMensaje=\"\";\r\n\t\t";
							sInitFuncion+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							sInitFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+");";
						
							//sInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							//sInitFuncion+=sParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//sInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);\r\n\t\t\t";
							//sInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntities" +strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							sInitFuncion+="\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException e)\r\n\t\t{\r\n\t\t\t";//connexion.getConnection().commit();//connexion.getConnection().rollback();
							
							sInitFuncion+="\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t";	//connexion.getConnection().rollback();	//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();
							sInitFuncion+="\r\n\r\n\t\treturn sMensaje;\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{		
						if(!indexSchema.IsPrimaryKey)
						{					
							sParametersFuncion="";
							sParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								sInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
								sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									sInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";									
									sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									sInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
									sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto;
									//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
									
									//sBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto2;
									sBodyFuncion+=sParametroCompuestoFinal2;
											
								}
								else
								{
									//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto;
									
									//sBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									sBodyFuncion+="\r\n\r\n\t\t\t"+sParametroCompuesto2;
									sBodyFuncion+=sParametroCompuestoFinal2;
								}
								
								//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
							
							}	
							int count=1;	
							sParametersFuncion="";
							sParametersNameFuncion="";	
							sParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											sParametersFuncion+=",";
											sParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											sParametersFuncion+=",";
											sParametersNameFuncion+=",";	
											
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
						}
					}
				}													
			}
								
			return sInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			String sTablaClaseRelacionadaNombre="";
				sTablaClaseRelacionadaNombre+="";
			String sTablaClaseRelacionada3="";
			
			String sFuncionInit="\r\n\tpublic String Save"+GetNombreClase(TablaBase.ToString())+"Relaciones(Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC,"+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString());
			String sFuncionMiddle=")throws SQLException,Exception\r\n\t{\r\n\t\tString sMensaje=\"\";\r\n";//Mensaje.getMensajeGeneralDeepSave(\"\")
			sFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\t";//this.getNewConnexionToDeep();
			
			sFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"Relaciones(idUsuario,sUsuarioPC,sNamePC,sIPPC,"+" "+GetNombreClaseObjetoC(TablaBase.ToString());
			
			String sFuncionEnd="\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\r\n\treturn sMensaje;\r\n\r\n\t}";
			
			//connexion.getConnection().commit();
			//connexion.getConnection().rollback();
			//connexion.getConnection().rollback();
			//finally\r\n\t\t{\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String sTablaClaseRelacionada2="";
			//sTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()"+")";
			//sTablaClaseRelacionada2+="\r\n\t\t\t{";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+sTablaClaseRelacionada3+");";
			//sTablaClaseRelacionada2+="\r\n\t\t\t}";
			//sTablaClaseRelacionada2+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted())";
			//sTablaClaseRelacionada2+="\r\n\t\t\t{";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+sTablaClaseRelacionada3+");";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			//sTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			sTablaClaseRelacionada=sFuncionInit+sTablaClaseRelacionada+sFuncionMiddle+sTablaClaseRelacionada3+");"+sTablaClaseRelacionada2+sFuncionEnd;
			return sTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String sTablaClaseRelacionada="";
			String sTablaClaseRelacionadaNombre="";
			String sFuncionInit="\r\n\tpublic void Save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC";
			String sFuncionMiddle=")throws Exception\r\n\t{\r\n";
			sFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";
			
			sFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC";
			
			String sFuncionEnd="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					sTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
					sTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String sTablaClaseRelacionada2="";
			//sTablaClaseRelacionada2+="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();";
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null)\r\n\t\t\t{";										
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					sTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s())\r\n\t\t\t{";					
					//sTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+strField_+""+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//sTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
				}
			}
			
			sTablaClaseRelacionada=sFuncionInit+sTablaClaseRelacionada+sFuncionMiddle+sTablaClaseRelacionadaNombre+");"+sTablaClaseRelacionada2+sFuncionEnd;
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;							
			String sInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ sTablaClaseRelacionadaSave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;						
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor;
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ sTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;							
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ sTablaClaseRelacionadaSave+sTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;	
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			String sTablaClaseRelacionadaLogic=String.Empty;
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();	
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ sTablaClaseRelacionadaSave+sTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;							
			String sInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ sTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;							
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor;
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ sTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;	
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ sTablaClaseRelacionadaReturn+sTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;		
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ sTablaClaseRelacionadaReturn+sTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			ArrayList arrayListRelaciones=new ArrayList();
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)))) {
							continue;
						} else {
							arrayListRelaciones.Add(GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)));
						}
						
						sTablaClaseRelacionada+="\r\n\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));";
					
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,GetNombreClaseC(tableSchemaForeignKey.ToString()))) {
						continue;
					} else {
						arrayListRelaciones.Add(GetNombreClaseC(tableSchemaForeignKey.ToString()));
					}
						
						sTablaClaseRelacionada+="\r\n\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchemaForeignKey.ToString())+ ".class));";
												
				}
			}
			
			return sTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String sInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String sTablaClaseRelacionada2=String.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String sInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String sInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String sInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String sInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			
			String sFuncionInclude=String.Empty;
			String sFuncionExclude=String.Empty;
			
            sTablaClaseRelacionada2="\r\nelse\r\n{"+sInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			sFuncionInclude="";
			sFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\t\t}";
			
			
			}
			
				sFuncionInclude=sInitInclude+sInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ sFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ sFuncionExclude+ "\r\n\t}\r\n}";
			
			sTablaClaseRelacionada2=sTablaClaseRelacionada2+"\t}\r\n"+sFuncionInclude+sFuncionExclude;
			
			// parte del no if deep
			
			
			String sInitIfFuncion=String.Empty;
			String sIfFuncion=String.Empty;
			String sInitElseFuncion=String.Empty;
			String sElseFuncion=String.Empty;
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion=" get"+GetPrefijoRelacionC();
			
			sInitIfFuncion=sInit+"\r\nif(!deep)\r\n{\r\n";
			sInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				sInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//sInitFuncion=sInitFuncion;
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//sInitFuncion=sInitFuncion;
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			sFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String sTablaClaseRelacionada0=String.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            sTablaClaseRelacionada0=sInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			sFuncionInclude="";
			sFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{";
						sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada0+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\r\n\t\t}";
				
			}
			
			sFuncionInclude=sInitInclude+sInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+sFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+sFuncionExclude+"\r\n\t}\r\n}";
	
			
			sIfFuncion=sInitIfFuncion+sTablaClaseRelacionada0+"\t}\r\n"+sFuncionInclude+sFuncionExclude;//+"\r\n}\r\n"+sInitElseFuncion+sTablaClaseRelacionada0+sTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+sTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return sIfFuncion+sTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String sTablaClaseRelacionada2=String.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String sInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n\r\n";
			String sInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String sInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String sInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			String sFuncionInclude=String.Empty;
			String sFuncionExclude=String.Empty;
			
			sFuncionInclude="";
			sFuncionExclude="";
			
            sTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+sInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String sInitFuncion=" get"+GetPrefijoRelacionC();
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaAux=String.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				sInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";						
					sTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";
					sFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";
					sFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;		
					sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;	
					sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					sFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;	
					sFuncionExclude+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
					sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//sFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\t\t}";
				
			}
			
				sFuncionInclude=sInitInclude+sInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ sFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				sFuncionExclude=sInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ sFuncionExclude+ "\r\n\t}\r\n}";
				
			
			sTablaClaseRelacionada2=sTablaClaseRelacionada2+"\t}\r\n"+sFuncionInclude+sFuncionExclude;
			
			
			//Parte del no if del deep
			
			String sInitIfFuncion=String.Empty;
			String sIfFuncion=String.Empty;
			String sInitElseFuncion=String.Empty;
			String sElseFuncion=String.Empty;
			
			sFuncion=String.Empty;
			
			sTablaClaseRelacionada=String.Empty;
			sInitFuncion=" get"+GetPrefijoRelacionC();
			
			sInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			sInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			sFuncion=sInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			sFuncionInclude="";
			sFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+sInitFor +sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				sInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			sFuncion+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
			sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			sFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			sFuncionInclude=sInitInclude+sInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +sFuncionInclude+ "\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+sFuncionExclude+ "\r\n\t}\r\n}";
			
			sIfFuncion=sInitIfFuncion+sFuncion+"\t}\r\n"+sFuncionInclude+sFuncionExclude; //+sInitElseFuncion+sFuncion+sTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+sTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return sIfFuncion+sTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String sParaBusquedaString=""; 
			String sParaBusquedaCompuesto=""; 
			
			if(esCompuesto)
			{
				sParaBusquedaCompuesto="Constantes.getSSchema()+\".\"+"+GetNombreClase(column.Table.ToString())+".getSTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				if(!esUnico)	
				{
				sParaBusquedaString="+\"%\"";
				}
			}
			
			String sParameterSelection=String.Empty;
			sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+sParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			sParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			sParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return sParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String sIndexName) 
		{
			String sParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				sParaBusquedaString="+\"%\"";
			}
			
			String sParameterSelection=String.Empty;
			
			if(!sIndexName.Contains("BusquedaRango"))
			{
				sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(sIndexName.Contains("BusquedaMayorIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMayor"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMenorIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMenor"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				sParameterSelection+="ParameterTypeOperator.NONE);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(sIndexName.Contains("BusquedaRangoIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				sParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				sParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(sIndexName.Contains("BusquedaRangoIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				sParameterSelection+="ParameterTypeOperator.NONE);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return sParameterSelection;
		}

		public String GetIndicesTablasFacesClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sBodyFuncion="\r\n\t\ttry {";//connexion=Connexion.getNewConnexion();
						
						
						sBodyFuncion+="\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
						sBodyFuncion+="\r\n\t\t\tthis.iNumeroPaginacionPagina=0;";
						//sBodyFuncion+="\r\n\r\n\t\t\tthis.iInicioPaginacion=0;";
						//sBodyFuncion+="\r\n\t\t\tthis.iFinPaginacion=this.iNumeroPaginacion;";
						sBodyFuncion+="\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
						//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							
							sBodyFuncion="\r\n\t\ttry {";//connexion=Connexion.getNewConnexion();
							sBodyFuncion+="\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
							sBodyFuncion+="\r\n\t\t\tthis.iNumeroPaginacionPagina=0;";
							//sBodyFuncion+="\r\n\r\n\t\t\tthis.iInicioPaginacion=0;";
							//sBodyFuncion+="\r\n\t\t\tthis.iFinPaginacion=this.iNumeroPaginacion;";
							sBodyFuncion+="\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
							//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(sFinalQuery,";
						}
						else
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							sBodyFuncion="\r\n\t\ttry {";//connexion=Connexion.getNewConnexion();
							
							sBodyFuncion+="\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
							sBodyFuncion+="\r\n\t\t\tthis.iNumeroPaginacionPagina=0;";
							//sBodyFuncion+="\r\n\r\n\t\t\tthis.iInicioPaginacion=0;";
							//sBodyFuncion+="\r\n\t\t\tthis.iFinPaginacion=this.iNumeroPaginacion;";
							sBodyFuncion+="\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
							//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\r\n\t\t} catch(Exception e) {\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);\r\n\t\t}\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					/*
					int count=1;	
					sParametersFuncion="";
					sParametersNameFuncion="";	
					sParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
									
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					*/
					sInitFuncion+=sParametersFuncion+")throws Exception {"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
		public String GetIndicesVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			String sValor="";sValor+="";
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
				sDefault="\"false\"";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="false";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\tpublic "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
		public String GetIndicesInicializarVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				 sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
				sDefault="\"true\"";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="true";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\t\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
		public String GetIndicesGetSetVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\tpublic "+sTipo+" get"+sPrefijo+"Visibilidad"+indexSchema.Name+"() {";
						sInitFuncion+="\r\n\t\treturn this."+sPrefijo+"Visibilidad"+indexSchema.Name+";";
						sInitFuncion+="\r\n\t}";
						
						sInitFuncion+="\r\n\r\n\tpublic void set"+sPrefijo+"Visibilidad"+indexSchema.Name+"("+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+") {";
						sInitFuncion+="\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sPrefijo+"Visibilidad"+indexSchema.Name+";";
						sInitFuncion+="\r\n\t}\r\n";
						
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
		public String GetFuncionesIndicesFKVisibilidadTablasClases() {
			//System.Windows.Forms.MessageBox.Show(TablaBase.Database.Description);
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
			sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			String sDefaultTrue=String.Empty;
			String sDefaultFalse=String.Empty;
			
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
				sDefault="\"false\"";
				sDefaultTrue="\"true\"";
				sDefaultFalse="\"false\"";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="false";
				sDefaultTrue="true";
				sDefaultFalse="false";
			}
			
			bool blnTieneForeignMember=false;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			String sToString="";
			
			if(!EsSwing) {
				sToString=".toString()";	
			}
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema column in TablaBase.Columns) {
					if(column.IsForeignKeyMember) {
						blnExisteBusquedaFkVariableGlobal=false;
						
						sInitFuncion+="\r\n\r\n\tpublic void setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(Boolean isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"){";
						sInitFuncion+="\r\n\t\t//BYDAN_BUSQUEDAS";
						sInitFuncion+="\r\n\t\t"+strCommentMinCodigoWebIni;
						sInitFuncion+="\r\n\t\tif(!this.conCargarMinimo) {\r\n";
						
						if(EsSwing){							
							sInitFuncion+="\r\n\t\t\tBoolean isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Negation=!isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+";";
						
							foreach(IndexSchema indexSchema in TablaBase.Indexes) {
								blnTieneForeignMember=false;
								blnExisteBusquedaFkVariableGlobal=false;
								
								if(!indexSchema.IsPrimaryKey) {
									if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {									
										continue;
									}
									
									sParametersFuncion="";
									sParametersNameFuncion="";
																	
									if(indexSchema.IsUnique) {
									
									} else {																				
										foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{
											if(memberColumnSchema.Column.Name.Equals(column.Name)) {
												blnTieneForeignMember=true;
											}
										}
																				
										//sInitFuncion+="\r\n\tpublic "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
									
										if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {											
											if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])
												|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])) {
												blnExisteBusquedaFkVariableGlobal=true;													
											}
										} else {
											
										}
																				
										if(blnExisteBusquedaFkVariableGlobal) {
											//Trace.WriteLine(indexSchema.Name);
											continue;	
										}
						
										if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
											//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
											//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
										} else {
											//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
										}
																														
										if(blnTieneForeignMember) {
											sInitFuncion+="\r\n\r\n\t\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+sToString+";";
										} else {
											sInitFuncion+="\r\n\r\n\t\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Negation"+sToString+";";
										}
										
										sInitFuncion+="\r\n\t\t\tif(!this."+sPrefijo+"Visibilidad"+indexSchema.Name+") {this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".remove(jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");}";
									}	
									
									//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
								}
							}						
						}
						
						sInitFuncion+="\r\n\t\t}";
						sInitFuncion+="\r\n\t\t"+strCommentMinCodigoWebFin;
						sInitFuncion+="\r\n\t}";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					sInitFuncion+="\r\n\tpublic void setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(Boolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"){";
					sInitFuncion+="\r\n\t\tBoolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation=!isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						
					//foreach(ColumnSchema column in TablaBase.Columns)
					//{
					//if(column.IsForeignKeyMember) {
						//sInitFuncion+="\r\n\tpublic void setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(Boolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"){";
						//sInitFuncion+="\r\n\t\tBoolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation=!isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						
						foreach(IndexSchema indexSchema in TablaBase.Indexes) {
							if(!indexSchema.IsPrimaryKey)
							{
								sParametersFuncion="";
								sParametersNameFuncion="";
							
								
								if(indexSchema.IsUnique) {
								
								} else {
									blnTieneForeignMember=false;
									
									
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{
										if(GetNombreClaseC(GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column).ToString()).Equals(GetNombreClaseC(tableSchemaForeignKey.ToString()))) {
											blnTieneForeignMember=true;
										}
									}
									
									
									//sInitFuncion+="\r\n\tpublic "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
								
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
									
									} else {
									}
									
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
										//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
									} else {
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									}
									
									
									
									if(blnTieneForeignMember) {
										sInitFuncion+="\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+sToString+";";
									} else {
										sInitFuncion+="\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation"+sToString+";";
									}
									
								}	
								
								//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
							}
						}
						
						sInitFuncion+="\r\n\t}";
					//}
				//}							
				}
			}
			
			return sInitFuncion; 
		}
		
public String GetIndicesTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
											
			String strFuncionBusquedaEjbInit0="\r\n\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit0+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
			String strFuncionBusquedaNoEjbLogic="";			
			String strFuncionBusquedaEjbRemote="";
			String strFuncionBusquedaEjbHome="";
			String strFuncionBusquedaEjb="";			
			
			String strComentarioParaEjb="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
			}
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sBodyFuncion="\r\n\t\ttry {\r\n\t\t\t";//connexion=Connexion.getNewConnexion();
						sBodyFuncion+="\r\n\t\t\tthis.pagination=new Pagination();";
						sBodyFuncion+="\r\n\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
						sBodyFuncion+="\r\n\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);\r\n";
						
						strFuncionBusquedaNoEjbLogic="\r\n\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						
						if(ConSessionBeans){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
						}
						
						//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
							
							sBodyFuncion="\r\n\t\ttry {\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							sBodyFuncion+="\r\n\t\t\tthis.pagination=new Pagination();";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);\r\n";
							strFuncionBusquedaNoEjbLogic="\r\n\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(sFinalQuery,this.pagination,";
							
							if(ConSessionBeans){
								strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"sFinalQuery,pagination,datosCliente,";
								strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"sFinalQuery,pagination,datosCliente,";						
							}
						}
						else
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();
							sBodyFuncion+="\r\n\t\t\tthis.pagination=new Pagination();";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);\r\n";
							strFuncionBusquedaNoEjbLogic="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						
							if(ConSessionBeans){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";						
							}
						}
						
						//sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					int count=1;	
					sParametersFuncion="";
					sParametersNameFuncion="";	
					sParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
								//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									sParametersFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
								}
							
								sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									sParametersNameFuncion+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
								}
								
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
									
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					//EJB
					if(ConSessionBeans){
					strFuncionBusquedaEjbRemote+=sParametersNameFuncion+");";
					strFuncionBusquedaEjbHome+=sParametersNameFuncion+");";
					}
					
					strFuncionBusquedaEjb="\r\n\t\t\t\t"+ strFuncionBusquedaEjbInit+strFuncionBusquedaEjbRemote+"\r\n\t\t\t\t"+strFuncionBusquedaEjbMiddle+strFuncionBusquedaEjbHome+"\r\n\t\t\t\t"+strFuncionBusquedaEjbEnd;
					
						
					//String strFuncionBusquedaConEjb="";
					//	   strFuncionBusquedaConEjb=sFuncionBusqueda+strFuncionBusquedaEjb;
						
						
					sInitFuncion+=sParametersFuncion+")throws Exception {"+sBodyFuncion+strFuncionBusquedaEjbInit0+strFuncionBusquedaNoEjbLogic+sParametersNameFuncion+");"+strFuncionBusquedaEjb+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String sEndFuncion="\r\n}\r\ncatch(Exception e)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					sTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					sTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			sFuncion+=sInitFuncion+	sTablaClaseRelacionada+sEndFuncion+"\r\n\r\n";
			}
								
			return sFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					sTablaClaseRelacionada+=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public  String GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String sSetEntity=String.Empty;
	

	sSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	sSetEntity+="\t\t\t\tauditoria.set"+strField_+"sCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	sSetEntity+="\t\t\t\tauditoria.set"+strField_+"sValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	sSetEntity+="\t\t\t\tauditoria.set"+strField_+"sValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	
	sSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegisarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),"+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ","+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );";
	sSetEntity+="\r\n\t\t\t}";
	
	return sSetEntity;
}

public static String GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String sSetEntity=String.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return sSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return sSetEntity;
		}
	}
	//usuario.setClave(sClave);
	String sEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String sEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String sEntityFinal=");";
   sSetEntity=sEntityInit+sEntityMiddle+sEntityFinal;
	
	return sSetEntity;
}

public String GetParametroFuncionNuevoClase(ColumnSchema column)
{		String sParamtro=String.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return sParamtro;
		}
		sParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return sParamtro;
}

public String GetParametroUsoFuncionNuevoClase(ColumnSchema column)
{		String sParamtro=String.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return sParamtro;
		}
		sParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return sParamtro;
}

public String GetParametroFuncionActualizarClase(ColumnSchema column)
{		String sParamtro=String.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return sParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		sParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		sParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return sParamtro;
}

public String GetParametroUsoFuncionActualizarClase(ColumnSchema column)
{		String sParamtro=String.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return sParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		sParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		sParamtro=strId;			
		}
		return sParamtro;
}

public String GetNombreClase(String sTablaBase)
{
		return GetNombreClaseC(sTablaBase);
}

public String GetNombreClaseObjeto(String sTablaBase)
{
		return GetNombreClaseObjetoC(sTablaBase);
}

public String GetClassesSetAddTablasRelacionadas() 
{
			String sTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+="\r\n\t\t\tclasses.add(new Classe("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class));";									
				}				
			}
			
			return sTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetDelete() 
{
			String sTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						sTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsDeleted(true);";
						sTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						sTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsDeleted(true);";
						sTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return sTablaClaseRelacionada; 
}

public String GetIndicesVariablesTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			String sValor=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					if(EsSwing) {
						//NO IMPORTA QUE ESCRIBA VARIABLE QUE NO SEAN TOMADAS EN CUENTA EN INDICES
						//PARA USUARIOINSERT Y UPDATE ES NECESARIO
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
						{
							//continue;
						}
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sValor=GetDefaultValueColumna(memberColumnSchema.Column);
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sValor+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"() {\r\n"; 
							//sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") {\r\n";
							//sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							
							
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n\r\n"; 
							
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							}
							
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+=";\r\n";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							}
							else
							{
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								break;
							}
						}
						count++;
					}
					//sInitFuncion+=")throws Exception;";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetSetVariablesTablaToBean(ColumnSchema column) {
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	String strReturn="";
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
		strReturn=String.Empty;
		
	} else if(column.Name.Equals(strId)) {
		strReturn="this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strIdGetSet+"());";
		
	} else if(column.Name.Equals(strVersionRow)) {
		strReturn="this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strVersionRowGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	
	} else {
		strReturn="this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strField_+""+sPrefijo+ sColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";
		
		if(column.IsForeignKeyMember) {
			strReturn+="\r\n\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreColumnaClaseFkDescripcionC(column)+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
		}
	}
	
	return strReturn;
}		

public String GetSetVariableToVariableLocal(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strIdGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strVersionRowGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strField_+""+sPrefijo+ sColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";
}	

public String GetSetVariablesBeanToTable(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		//if(!blnEsTablaUnoAUnoFk) {
			return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strIdGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
		//} else {
			//return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strIdGetSet+"(l"+strIdGetSet+strFK+"_"+strIdGetSet+strNombreTablaUnoAUnoPk+");//PARA RELACION UNO A UNO";
		//}
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strVersionRowGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	
	String strReturn="";
	
	
	
	if(column.IsForeignKeyMember && column.AllowDBNull) {
		strReturn="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()>0L) {";
		strReturn+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";		
		strReturn+="\r\n\t\t\t\t} else {";
		strReturn+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(null);";
		strReturn+="\r\n\t\t\t\t}";
	} else {
		strReturn=GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";	
	}
	
	return  strReturn;
}	



public String EliminarArchivoGetVariablesBean(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow))
	{
			return String.Empty;
	}
	
	String strReturn="";
	
	if(!EsSwing) {
		strReturn="Funciones.eliminarArchivo(servletContext.getRealPath(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()));";
	} else {
		strReturn="//Funciones.eliminarArchivo(servletContext.getRealPath(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()));";
	}
	
	return strReturn;
	//return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";
}

public String SetVariablesTablaToCancelar(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String sValor="";
	
	switch(column.Name)
	{
		case strIsActive:
		sValor="";
		break;
		
		case strIsExpired:
		sValor="";
		break;
		
		case strVersionRow:
		sValor="";
		break;
		
		default:
		sValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+sValor+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "";//"this.set"+strVersionRowGetSet+"(\"\");";
	}
	return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strField_+""+sPrefijo+ sColumna +"("+sValor+");";
}
/*
	public Long id;
	public Boolean isActive;
	public Boolean isExpired;
	public Timestamp versionRow;
	public boolean isNew;
	public boolean isChanged;
	public boolean isDeleted;
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% } %>
	
	public Long getId() 
	{
		return id;
	}

	public void setId(Long id) 
	{
		this.id = id;
	}

	public Boolean getIsActive() 
	{
		return isActive;
	}

	public void setIsActive(Boolean isActive) 
	{
		this.isActive = isActive;
	}

	public Boolean getIsExpired() 
	{
		return isExpired;
	}

	public void setIsExpired(Boolean isExpired) 
	{
		this.isExpired = isExpired;
	}

	public Timestamp getVersionRow() 
	{
		return versionRow;
	}

	public void setVersionRow(Timestamp versionRow) 
	{
		this.versionRow = versionRow;
	}

	public boolean getIsNew() 
	{
		return isNew;
	}

	public void setIsNew(boolean isNew) 
	{
		this.isNew = isNew;
	}

	public boolean getIsChanged() 
	{
		return isChanged;
	}

	public void setIsChanged(boolean isChanged) 
	{
		this.isChanged = isChanged;
	}

	public boolean getIsDeleted() 
	{
		return isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) 
	{
		this.isDeleted = isDeleted;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseSetMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	
	
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
			<% } %>
*/

public String GetParameterBindingClase(ColumnSchema column)
{
	String sBindingColumnTable="";
	
	if(GetEsReporteParametroFromPropertiesC(column) || !GetShowTableColumnFromPropertiesC(column) 
		|| column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return "";
	}
		
	String sPrefijo=String.Empty;
	String sPrefijoTabla=GetPrefijoTablaC().ToLower();
	String sPrefijoTipo =GetPrefijoTipoC(column);

	sPrefijo=sPrefijoTabla+sPrefijoTipo;
	
	String sNombre = GetNombreColumnaClaseC(column);
	sPrefijo+=sNombre;
	
	String sTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
		
	String param =  GetTipoColumnaClaseC(column);
	
	//return param+" "+sPrefijo+";";
	
	String sTabColumnaOculta=String.Empty;
	String sIfColumnaOculta=String.Empty;
	String sIfColumnaOcultaFin=String.Empty;
	String strSufijoListenerTotalizar="";
	String strParametroListenerTotalizar="";
	String strCommentListenerLocal=strCommentListener;
	
	//Trace.WriteLine(strCommentListener);
	
	if(column.Name!=strId)
	{
		if(!column.IsForeignKeyMember) {
			sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"),\""+sPrefijo+"\");\r\n";
			
			if(ValidacionCampoTotalizarC(column)) {
				strSufijoListenerTotalizar="Valor";
				strParametroListenerTotalizar="this";
				strCommentListenerLocal="";
			}
			
			//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(true);\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";			
			
			if(blnConListenerBindingComplejo) {
				if(blnTieneListener) {
					sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".addBindingListener(new "+GetNombreClaseC(TablaBase.ToString())+"BindingListenerTabla());\r\n";
				}
			}
			
			sBindingColumnTable+="\t\t"+strCommentListenerLocal+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addPropertyChangeListener(new "+GetNombreClaseC(TablaBase.ToString())+"Property"+strSufijoListenerTotalizar+"ChangeListener("+strParametroListenerTotalizar+"));\r\n";
			
			if(EsDateColumn(column)) {
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new DateRenderer());\r\n";
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditor(new DateEditorRenderer());\r\n";
				//sBindingColumnTable+="\t\t//columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setConverter(new DateConverterFromDate<Date,String>());\r\n";//".setConverter(new DateConverter<String,Date>());\r\n";
			
			} else if(EsBitColumn(column)) {
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new BooleanRenderer());\r\n";
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditor(new BooleanEditorRenderer());\r\n";
				//sBindingColumnTable+="\t\t//columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setConverter(new DateConverterFromDate<Date,String>());\r\n";//".setConverter(new DateConverter<String,Date>());\r\n";
			}
		} else {
			//PRIMERA VERSION DE FOREIGN KEY DONDE CODIGO ES IGUAL AL IF ANTERIOR
			/*
			sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
			
			//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(false);\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
			*/
			String sParametro="";
			
			//ES LA COLUMNA DESCRIPCION DEL FOREIGN KEY POR ESO EL TIPO ES STRING
			if( (EsColumnaVariableGlobalDataBaseFromPropertiesC(column) 
				|| EsColumnaVariableModuloGlobalC(column)
				|| GetNoInsertEditColumnFromPropertiesC(column)
				)
				
				&& !EsColumnaVariableGlobalMostrarDataBaseFromPropertiesC(column)
				
			) {
				sTabColumnaOculta="\t";
				sIfColumnaOculta="\r\n\t"+sTabColumnaOculta+"if(Constantes.ISDEVELOPING) {\r\n";
				sIfColumnaOcultaFin="\t"+sTabColumnaOculta+"}";	
			}			
				sBindingColumnTable+=sIfColumnaOculta;
				
				//COMENTAR Y DESCOMENTAR PARA HABILITAR O NO TieneColumnaComboTablaNormalC(column)
				if(!(ConSwingCombosTabla && TieneColumnaComboTablaNormalC(column))) {
					sBindingColumnTable+="\r\n\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+strDescripcion+"}\"),\""+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+strDescripcion+"\");\r\n";
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(false);\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass(String.class);\r\n";			
					
					if(blnConListenerBindingComplejo) {
						if(blnTieneListener) {
							sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addBindingListener(new "+GetNombreClaseC(TablaBase.ToString())+"BindingListenerTabla());\r\n";
						}
					}
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+strCommentListener+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addPropertyChangeListener(new "+GetNombreClaseC(TablaBase.ToString())+"PropertyChangeListener());\r\n";
				
				} else {
					sBindingColumnTable+="\r\n\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+GetNombreCompletoColumnaClaseC(column)+"}\"),\""+GetNombreCompletoColumnaClaseC(column)+"\");\r\n";
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(true);\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass(Long.class);\r\n";			
					
					if(blnConListenerBindingComplejo) {
						if(blnTieneListener) {
							sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addBindingListener(new "+GetNombreClaseC(TablaBase.ToString())+"BindingListenerTabla());\r\n";
						}
					}
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+strCommentListener+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addPropertyChangeListener(new "+GetNombreClaseC(TablaBase.ToString())+"PropertyChangeListener());\r\n";	
					
					
					
					
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sParametro="this.jComboBox"+GetNombreCompletoColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla";	
					} else {
						sParametro="this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey";
					}					
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+GetNombreClaseRelacionadaFromColumn(column)+/*GetNombreCompletoClaseRelacionadaFromColumn(column)+*/"TableCellFk("+sParametro+",this));\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditor(new "+GetNombreClaseRelacionadaFromColumn(column)+/*GetNombreCompletoClaseRelacionadaFromColumn(column)+*/"TableCellFk("+sParametro+",this));\r\n";//this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey
					
				}
				
				sBindingColumnTable+=sIfColumnaOcultaFin;
		}
	}
	else
	{
		//OJO:ID DEBE SER EDITABLE SINO NO PERMITE CLICK BOTON
		sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+strId+"}\"),\""+strId+"\");\r\n";
		
		//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+strId+"}\"));\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strIdGetSet.ToUpper()+"\");\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(true);\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	
	return sBindingColumnTable;
}

public String GetIndicesActionsInicializacionButtonsTablasClasesC(TableSchema TablaBase,String strTab) 
		{
			String sActionsButtons=String.Empty;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							if(indexSchema.Name.Contains("FK")){
								if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])
									|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])) {
									blnExisteBusquedaFkVariableGlobal=true;
								}
							}
							
							if(blnExisteBusquedaFkVariableGlobal) {
								continue;	
							}
							//sPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButtonMe();\r\n";
 							
							/*
							sActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener(";
							sActionsButtons+="\r\n";
							sActionsButtons+="\t\t\tnew java.awt.event.ActionListener() {";
							sActionsButtons+="\t\t\t\r\n";
							sActionsButtons+="\t\t\t\tpublic void actionPerformed(ActionEvent evt) {";
							sActionsButtons+="";
							sActionsButtons+="\r\n\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							sActionsButtons+="\t\t\t\t}\r\n";
							sActionsButtons+="\t\t\t}\r\n";
							sActionsButtons+="\t\t);\r\n";
							*/
							
							sActionsButtons+="\r\n\t\t"+strTab+"this.jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\""+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {					
								if(GetBusquedaForeignKeyColumnFromPropertiesC(memberColumnSchema.Column)) {
									//sActionsButtons+="\r\n\t\tthis.jButtonBuscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\"Buscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
									sActionsButtons+="\r\n\t\t"+strTab+"this.jButtonBuscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\""+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*strIndexName+strFinalName+*/GetNombreClaseC(memberColumnSchema.Column.Table.ToString())+"\"));\r\n";									
								}
							}
						}
						else
						{
						;
						}
					}																																						
				}
			}
						
		return sActionsButtons; 
	}		
	
	public String GetIndicesActionsSeleccionarButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							if(indexSchema.Name.Contains("FK")){
								if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])
									|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])) {
									blnExisteBusquedaFkVariableGlobal=true;
								}
							}
							
							if(blnExisteBusquedaFkVariableGlobal) {
								continue;	
							}
							//sPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButtonMe();\r\n";
 							
							/*
							sActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener(";
							sActionsButtons+="\r\n";
							sActionsButtons+="\t\t\tnew java.awt.event.ActionListener() {";
							sActionsButtons+="\t\t\t\r\n";
							sActionsButtons+="\t\t\t\tpublic void actionPerformed(ActionEvent evt) {";
							sActionsButtons+="";
							sActionsButtons+="\r\n\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							sActionsButtons+="\t\t\t\t}\r\n";
							sActionsButtons+="\t\t\t}\r\n";
							sActionsButtons+="\t\t);\r\n";
							*/
							
							//sActionsButtons+="\r\n\t\tthis.jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\""+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {
								if(GetBusquedaForeignKeyColumnFromPropertiesC(memberColumnSchema.Column)) {
										//sActionsButtons+="\r\n\t\tthis.jButtonBuscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\"Buscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
									//sActionsButtons+="\r\n\t\tthis.jButtonBuscar"+indexSchema.Name+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\""+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*strIndexName+strFinalName+*/GetNombreClaseC(memberColumnSchema.Column.Table.ToString())+"\"));\r\n";									
										
									sActionsButtons+="\r\n\t\t\telse if(sTipo.equals(\""+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*strIndexName+strFinalName+*/GetNombreClaseC(memberColumnSchema.Column.Table.ToString())+"\")) {";
									sActionsButtons+="\r\n\t\t\t\tthis.jButton"+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*strIndexName+strFinalName+*/GetNombreClaseC(memberColumnSchema.Column.Table.ToString())+"ActionPerformed(evt);";
									sActionsButtons+="\r\n\t\t\t}";
								}
							}
						}
						else
						{
						;
						}
					}	
					
					

					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}		
		
	public String GetSetIndicesActionsButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							if(indexSchema.Name.Contains("FK")){
								if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])
									|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])) {
									blnExisteBusquedaFkVariableGlobal=true;
								}
							}
							
							if(blnExisteBusquedaFkVariableGlobal) {
								continue;	
							}
							//sPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButtonMe();\r\n";
 							
							/*
							sActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener(";
							sActionsButtons+="\r\n";
							sActionsButtons+="\t\t\tnew java.awt.event.ActionListener() {";
							sActionsButtons+="\t\t\t\r\n";
							sActionsButtons+="\t\t\t\tpublic void actionPerformed(ActionEvent evt) {";
							sActionsButtons+="";
							sActionsButtons+="\r\n\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							sActionsButtons+="\t\t\t\t}\r\n";
							sActionsButtons+="\t\t\t}\r\n";
							sActionsButtons+="\t\t);\r\n";
							*/
							
							//sActionsButtons+="\r\n\t\tthis.jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener(new ButtonActionListener(this,\""+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"\"));\r\n";
							
							sActionsButtons+="\r\n\t\t\telse if(sTipo.equals(\""+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"\")) {";
							sActionsButtons+="\r\n\t\t\t\tthis.jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);";
							sActionsButtons+="\r\n\t\t\t}";
						}
						else
						{
						;
						}
					}	
					
					

					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}	
		
		public String GetIndicesFunctionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							
							
						
							sActionsButtons+="\r\n\tpublic void jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(ActionEvent evt) {";
							sActionsButtons+="\r\n";
							sActionsButtons+="\t\ttry {";
							sActionsButtons+="\r\n";
							//sActionsButtons+="\t\t\tthis.iNumeroPaginacion=0;\r\n";
							
							//if(!blnEsReporte) {
								sActionsButtons+="\t\t\tthis.iNumeroPaginacionPagina=0;\r\n";
								sActionsButtons+="\t\t\tthis.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"(false,false);\r\n\r\n";
								sActionsButtons+="\t\t\tthis.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"();\r\n\r\n";
								sActionsButtons+="\t\t\tthis.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"(false);\r\n\r\n";
								sActionsButtons+="\t\t\t//if("+GetNombreClase(TablaBase.ToString())+strPrefijoBeanSwing+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
								sActionsButtons+="\t\t\t//this.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"(false,false);\r\n";
								sActionsButtons+="\t\t\t//}\r\n";
							//}
							
							sActionsButtons+="\t\t}";
							sActionsButtons+=" catch(Exception e) {";
							sActionsButtons+="\r\n";
							sActionsButtons+="\t\t\t;\r\n";
							sActionsButtons+="\t\t}\r\n";
							sActionsButtons+="\t}\r\n";
							
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}		
		
public String GetIndicesInicializacionBindingsVariablesTablasClasesC(TableSchema TablaBase) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sFinalFuncion="";
			
			sFinalFuncion="\r\n\t\tthis.bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
			sFinalFuncion+="\r\n\t\t//this.binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
			String sControlBinding=String.Empty;
			String sPropertyControlBinding=String.Empty;			
			bool blnExisteBusquedaFkVariableGlobal=false;

			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{	
					blnExisteBusquedaFkVariableGlobal=false;
				
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
					}
					else
					{
						
						


						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							if(memberColumnSchema.Column.IsForeignKeyMember) {
								sPropertyControlBinding="selectedItem.id";
							} else {
								if(EsDateColumn(memberColumnSchema.Column) || EsDateTimeColumn(memberColumnSchema.Column) || EsTimeColumn(memberColumnSchema.Column)){
									sPropertyControlBinding="date";
									
								} else if(memberColumnSchema.Column.DataType==DbType.Boolean) {
									sPropertyControlBinding="selected";
								
								} else {
									sPropertyControlBinding="text";
								}
							}
							//sControlesPanelesBusquedas+="\t"+GetInicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
							sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
							sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
							sControlesPanelesBusquedas+="\t\t{\r\n";
							sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
							sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
							sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+", ELProperty.create(\"${"+sPropertyControlBinding+"}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
								
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								;
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								if(memberColumnSchema.Column.IsForeignKeyMember) {
								sPropertyControlBinding="selectedItem.id";
								} else {
									sPropertyControlBinding="text";
								}
								
								sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+", ELProperty.create(\"${"+sPropertyControlBinding+"}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
						
								
							}
							else
							{
								sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+", ELProperty.create(\"${text}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n";
						
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"Final",memberColumnSchema.Column.IsForeignKeyMember)+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", ELProperty.create(\"${text}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n";
						
								
								break;
							}
						}
						
						sControlesPanelesBusquedas+=GetConverterBindingVariablesSwingInternoC(memberColumnSchema.Column);
						
						count++;
						
						sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
						sInitFuncion+=sControlBinding;
					}
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
																																						
				}
			}
			
			
			return sInitFuncion; 
		}

public String GetIndicesInicializacionBindingsVariablesManualTablasClasesC(TableSchema TablaBase) {
	String sFuncion=String.Empty;
	String sTablaClaseRelacionada=String.Empty;
	String sInitFuncion="\r\n";
		
	String sPanelesBusquedas=String.Empty;
	String sControlesPanelesBusquedas=String.Empty;
			
	String sFinalFuncion="";
			
	sFinalFuncion="";//"\r\n\t\tthis.bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
	//sFinalFuncion+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
	String sControlBinding=String.Empty;
	String sPropertyControlBinding=String.Empty;
	String sPropertyControlBindingInit=String.Empty;
	TableSchema tableRelacionada=null;
	ColumnSchema columnSchema=null;
	string strPrefijoTabla="";
	string strPrefijoTipo ="";
	string strNombre = "";
	bool blnExisteBusquedaFkVariableGlobal=false;
	String strCommentParse="";
	
	foreach(IndexSchema indexSchema in TablaBase.Indexes) {
		if(!indexSchema.IsPrimaryKey) {			
			blnExisteBusquedaFkVariableGlobal=false;

			if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
				continue;
			}
					
			if(indexSchema.IsUnique) {
				continue;
			} else {
				if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
					;
				} else {
					;
				}
			}	
			
			int count=1;	
			sControlesPanelesBusquedas="";
			
			//Trace.WriteLine(indexSchema.Name);
			
			foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {
				strCommentParse="";
				
				if(memberColumnSchema.Column.Name.Equals(strId) || memberColumnSchema.Column.Name.Equals(strVersionRow)) {
					strCommentParse="//";
				}
				
				if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
					if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
						|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
						blnExisteBusquedaFkVariableGlobal=true;
						break;
					}
							
					if(memberColumnSchema.Column.IsForeignKeyMember) {
						if(!blnNoStandardTableFromProperties) {	
							tableRelacionada=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							sPropertyControlBinding=").getId";
						} else {
							tableRelacionada=GetTableSchemaFromColumnForeignKey(memberColumnSchema.Column);
							columnSchema=GetColumnSchemaFromColumnForeignKey(tableRelacionada,TablaBase,memberColumnSchema.Column);
									
							strPrefijoTabla=GetPrefijoTablaC();
							strPrefijoTipo = GetPrefijoTipoC(columnSchema);
							strNombre = GetNombreColumnaClaseC(columnSchema);

							sPropertyControlBinding=").get"+strPrefijoTabla+strPrefijoTipo+strNombre;
						}
								
						sPropertyControlBindingInit="(("+GetNombreClaseC(tableRelacionada.ToString())+")";
								
					} else {
						sPropertyControlBindingInit="";
														
						if(!EsDateTimeColumn(memberColumnSchema.Column) && !EsDateColumn(memberColumnSchema.Column) && !EsTimeColumn(memberColumnSchema.Column)) {
							if(!EsBitColumn(memberColumnSchema.Column)) {
								sPropertyControlBinding=".getText";
							} else {
								sPropertyControlBinding=".isSelected";
							}
						} else {
							sPropertyControlBinding=".getDate().getTime";
						}
					}
					
					//sControlesPanelesBusquedas+="\t"+GetInicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
					//sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
					//sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
					//sControlesPanelesBusquedas+="\t\t{\r\n";
					//sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
					//sControlesPanelesBusquedas+="\t\t}\r\n\r\n";			GetTipoColumnaParse(memberColumnSchema.Column,"")		
							
					//SOLO CAMBIA O SE QUITA sPropertyControlBindingInit
							
					if(!memberColumnSchema.Column.IsForeignKeyMember) {
						if(!EsDateTimeColumn(memberColumnSchema.Column) && !EsDateColumn(memberColumnSchema.Column) && !EsTimeColumn(memberColumnSchema.Column)) {
							if(!EsBitColumn(memberColumnSchema.Column)) {
								sControlesPanelesBusquedas+="\t\t"+strCommentParse+"this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"()")+";\r\n";								
								
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,"TODOS")) {
									sControlesPanelesBusquedas+="\t\t"+strCommentParse+"this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,strSufijoRangoFinal,memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"()")+";\r\n";								
								}
							} else {
								sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"()"+";\r\n";
							}
						} else {
							String sNewType="";
									
							if(EsDateColumn(memberColumnSchema.Column)) {
								sNewType="new Date(";
							} else if(EsDateTimeColumn(memberColumnSchema.Column)) {
								sNewType="new Timestamp(";
							} else if(EsTimeColumn(memberColumnSchema.Column)) {
								sNewType="new Time(";
							}
									
							sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sNewType+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"())"+";\r\n";
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,"TODOS")) {
								sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"="+sNewType+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,strSufijoRangoFinal,memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"())"+";\r\n";
							}
						}
					} else {
						sControlesPanelesBusquedas+="\t\tif(this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+".getSelectedItem()!=null){this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sPropertyControlBindingInit+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+".getSelectedItem()"+sPropertyControlBinding+"();}\r\n";							
					}
					
					//GetTipoColumnaParse(memberColumnSchema.Column,"");
							
					if(!indexSchema.MemberColumns.Count.Equals(count)) {
						;
					}
					
				} else {
					if(!indexSchema.Name.Contains("BusquedaRango")) {
						if(memberColumnSchema.Column.IsForeignKeyMember) {
							if(!blnNoStandardTableFromProperties) {	
								tableRelacionada=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
								sPropertyControlBinding=".getSelectedItem()).getId";
							} else {
								tableRelacionada=GetTableSchemaFromColumnForeignKey(memberColumnSchema.Column);
								columnSchema=GetColumnSchemaFromColumnForeignKey(tableRelacionada,TablaBase,memberColumnSchema.Column);
										
								strPrefijoTabla=GetPrefijoTablaC();
								strPrefijoTipo = GetPrefijoTipoC(columnSchema);
								strNombre = GetNombreColumnaClaseC(columnSchema);

								sPropertyControlBinding=".getSelectedItem()).get"+strPrefijoTabla+strPrefijoTipo+strNombre;
							}
									
							sPropertyControlBindingInit="(("+GetNombreClaseC(tableRelacionada.ToString())+")";
									
						} else {
							sPropertyControlBindingInit="";
							sPropertyControlBinding=".getText";
						}
						
						/*
						sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
						sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
						sControlesPanelesBusquedas+="\t\t{\r\n";
						sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
						sControlesPanelesBusquedas+="\t\t}\r\n\r\n";
						*/
						//ANTERIOR
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						
						//SOLO CAMBIA O SE QUITA sPropertyControlBindingInit
							
						if(!memberColumnSchema.Column.IsForeignKeyMember) {
							sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"()")+";\r\n";
						} else {
							sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sPropertyControlBindingInit+"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						}
					} else {
						/*
						sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
						sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
						sControlesPanelesBusquedas+="\t\t{\r\n";
						sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
						sControlesPanelesBusquedas+="\t\t}\r\n\r\n";		
						*/
						//ANTERIOR
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sPropertyControlBindingInit+"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						
						sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"()")+";\r\n";
								
						//sInitFuncion+=",";
						/*
						sControlesPanelesBusquedas+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n\r\n";				
						sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
						sControlesPanelesBusquedas+="\t\t{\r\n";
						sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
						sControlesPanelesBusquedas+="\t\t}\r\n\r\n";	
						*/
						//ANTERIOR
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						
						//TALVEZ
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"()")+";\r\n";
								
						break;
					}
				}
				
				count++;
						
				//sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
				//sInitFuncion+=sControlBinding;
			}	
			
			sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
			sInitFuncion+=sControlBinding;
				
			if(blnExisteBusquedaFkVariableGlobal) {
				continue;	
			}
		}
	}
						
	return sInitFuncion; 
}

public String GetNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table,bool esConMenu,bool esConManejarMenu,bool esConSwitchManejarMenu) 
		{
			return GetNavegacionColumnsTablaTablasClasesRelacionadasC(table,esConMenu,esConManejarMenu,esConSwitchManejarMenu,false,false,false,false,EsSwing);
			/*
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table,false);
			
			
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			TableSchema tablaRelacionadaObjetivo;
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)
					|| !GetPermitePorOcultoClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					
					if(!esConMenu && !esConManejarMenu) {
						sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
					
					} else if(esConMenu){
						sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadasMenuItem(tablaRelacionadaObjetivo);						
					
					} else if(esConManejarMenu){
						sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadasMenuItemActionPerformed(tablaRelacionadaObjetivo);						
					}
				}
				
					
				
			}
									
			return sTablaClaseRelacionada; 
			*/
		}
/*
public String GetNavegacionColumnTablaTablasClasesRelacionadasMenuItemActionPerformed(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\t\t\t\telse if(sActionCommand.equals(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\")) {";
	sColumna+="\r\n\t\t\t\tint row=jTableDatos"+GetNombreClase(TablaBase.ToString())+".getSelectedRow();";
	sColumna+="\r\n\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(actionEvent,row,true,false);";
	sColumna+="\r\n\t\t\t\t}";
	
	return sColumna;
}
public String GetNavegacionColumnTablaTablasClasesRelacionadasMenuItem(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && !"+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.ISGUARDARREL) {";

	sColumna+="\r\n\t\t\t\tjmenuItem = new JMenuItem(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");";
    sColumna+="\r\n\t\t\t\t//jmenuItem.setMnemonic(KeyEvent.VK_S);";
    sColumna+="\r\n\t\t\t\t//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));";
    sColumna+="\r\n\t\t\t\tjmenuItem.setActionCommand(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");";
		
	sColumna+="\r\n\r\n\t\t\t\tjmenuItem.addActionListener (";
	sColumna+="\r\n\t\t\t\t\tnew java.awt.event.ActionListener() {";
	sColumna+="\r\n\t\t\t\t\t\tpublic void actionPerformed(ActionEvent evt) {";
	sColumna+="\r\n\t\t\t\t\t\t\tjmenuItemActionPerformed(evt);";
	sColumna+="\r\n\t\t\t\t\t\t}";
	sColumna+="\r\n\t\t\t\t\t}";
	sColumna+="\r\n\t\t\t\t);";
	
	sColumna+="\r\n\r\n\t\t\t\tthis.jmenuDetalleContinente.add(jmenuItem);";
	
	sColumna+="\r\n\t\t\t}";//IF
	
	return sColumna;
}

public String GetNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && !"+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.ISGUARDARREL) {";

	sColumna+="\r\n\t\t\t\ttableColumn= new TableColumn();\r\n";
	sColumna+="\t\t\t\ttableColumn.setIdentifier(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	sColumna+="\t\t\t\ttableColumn.setHeaderValue(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	sColumna+="\t\t\t\ttableColumn.setCellRenderer(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n";
	sColumna+="\t\t\t\ttableColumn.setCellEditor(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n\r\n";

	sColumna+="\t\t\t\ttableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);\r\n"; 	 
	sColumna+="\t\t\t\ttableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);\r\n"; 	 
	sColumna+="\t\t\t\ttableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);\r\n\r\n"; 
					
	sColumna+="\t\t\t\tthis.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;\r\n\r\n";
				
	sColumna+="\t\t\t\tthis.jTableDatos"+GetNombreClase(TablaBase.ToString())+".addColumn(tableColumn);\r\n";
	
	sColumna+="\r\n\t\t\t}";//IF
	
	return sColumna;
}
*/

public String GetSetVariablesTabsNavegacionTablasClasesRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
	TableSchema tablaRelacionadaObjetivo;
	ArrayList tablasRelacionadasEncontradas=new ArrayList();
	bool encontrado=false;
	String sClasesNoRelacionadas=String.Empty;
	String[] sClases;sClases=new String[1];
	bool blClaseNo=false;
			
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {				
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
			tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
		} else {
			tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
		}
								
		if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
			continue;
		}
				
		encontrado=false;
				
		foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
			if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)){
				encontrado=true;
			}
		}
								
		if(!encontrado) {
			tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
			sTablaClaseRelacionada+=GetSetVariablesTabsNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
		}	
	}
	//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
	return sTablaClaseRelacionada; 
}

public String GetSetVariablesTabsNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) {
	String sColumna="";
	String sComment="";sComment+="";
	
	if(ConEjb){
		sComment="//";
	}
	
	sColumna+="\r\n\r\n\t\tif(!this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame!=null) {";
	sColumna+="\r\n\t\t\tthis.jTabbedPaneRelaciones"+GetNombreClaseC(TablaBase.ToString())+".remove(this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.getContentPane());";
	sColumna+="\r\n\t\t}";
	/*
	sColumna+="\r\n\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
		
	sColumna+="\r\n\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";	
	sColumna+="\r\n\t\t\t"+sComment+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";	
	sColumna+="\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t} else if(Constantes.ISUSAEJBHOME) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionableHome.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t}\r\n";
	
	sColumna+="\r\n\t\t"+strGlobalSeguridadCommentNo+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n\r\n";				
	*/
	
	return sColumna;
}

public String GetSetVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;sClases= new String[1];
			//bool blClaseNo=false;
				// blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}

		
public String GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	String sComment="";
	
	if(ConEjb){
		sComment="//";
	}
	
	sColumna+="\r\n\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
		
	sColumna+="\r\n\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";	
	sColumna+="\r\n\t\t\t"+sComment+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";	
	sColumna+="\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t} else if(Constantes.ISUSAEJBHOME) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionableHome.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t}\r\n";
	
	sColumna+="\r\n\t\t"+strGlobalSeguridadCommentNo+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n\r\n";				
	
	return sColumna;
}

public String GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table,String sTabs) {
		String sTablaClaseRelacionada=String.Empty;
		System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
		TableSchema tablaRelacionadaObjetivo;
		ArrayList tablasRelacionadasEncontradas=new ArrayList();
		bool encontrado=false;
		String sClasesNoRelacionadas=String.Empty;
		String[] sClases;sClases= new String[1];
		//bool blClaseNo=false;
			
		foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {				
			
			if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else {
				tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
			}
								
			if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
				continue;
			}
												
			encontrado=false;
				
			foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
				if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)) {
						encontrado=true;
				}
			}
								
			if(!encontrado) {
				tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
				//sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				sTablaClaseRelacionada+="\r\n\t\t"+sTabs+"arrPaginas.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION);";
			}													
		}
		//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
		return sTablaClaseRelacionada; 
}

public String GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(TableSchema table) {
	return 	GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(table,false);
}

public String GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(TableSchema table,bool conParametro) {
		String sTablaClaseRelacionada=String.Empty;
		System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
		TableSchema tablaRelacionadaObjetivo;
		ArrayList tablasRelacionadasEncontradas=new ArrayList();
		bool encontrado=false;
		String sClasesNoRelacionadas=String.Empty;
		String[] sClases;sClases= new String[1];
		//bool blClaseNo=false;
			
		foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {						
			if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else {
				tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
			}
								
			if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
				continue;
			}
												
			encontrado=false;
				
			foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
				if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)) {
						encontrado=true;
				}
			}
								
			if(!encontrado) {
				tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
				//sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				//sTablaClaseRelacionada+="\r\n\t\tarrPaginas.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION);";
				
				if(!conParametro) {
					sTablaClaseRelacionada+="\r\n\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n";
					sTablaClaseRelacionada+="\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=this.verificarGetPermisosUsuarioOpcion"+GetNombreClase(TablaBase.ToString())+"ClaseRelacionada(this.opcionsRelacionadas,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION);";
				} else {
					sTablaClaseRelacionada+="\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=conPermiso;";
				}
			}													
		}
		//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
		return sTablaClaseRelacionada; 
}





public String GetDefinitionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases; sClases=new String[1];
			//bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetDefinitionVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetDefinitionVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\tpublic Boolean isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
	sColumna+="\r\n\tpublic Boolean getIsTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
	sColumna+="\r\n\t\treturn isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";

	sColumna+="\r\n\tpublic void setIsTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"(Boolean isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+") {";
	sColumna+="\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"= isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";
	
	return sColumna;
}

public String GetNavegacionColumnsTableCellTablasClasesRelacionadas(TableSchema table,bool conTableCellRenderer,bool conButtonFuncion) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;sClases= new String[1];
			//bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetNavegacionColumnTableCellTablasClasesRelacionadas(table,tablaRelacionadaObjetivo,collectionInfo,conTableCellRenderer,conButtonFuncion);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetNavegacionColumnTableCellTablasClasesRelacionadas(TableSchema  table,TableSchema tablaRelacionada,CollectionInfo collectionInfo,bool conTableCellRenderer,bool conButtonFuncion) 
{
	String sNombrePakage=GetPackageTableFromProperties(tablaRelacionada);
	
	String sColumna="";
	
	String strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		
	String strSufijoAutoReferenciada="";
	
	if(table.Name.Equals(tablaRelacionada.Name)) {
		strSufijoAutoReferenciada=strAutoRef;
	}
	
	if(conTableCellRenderer) {
	sColumna+="\r\n\r\n\t\tclass "+GetNombreClase(tablaRelacionada.ToString())+strSufijoAutoReferenciada+"TableCell extends DefaultCellEditor implements TableCellRenderer {\r\n";//extends AbsactCellEditor , ,TableCellEditor
		//sColumna+="\t\t{\r\n";
		sColumna+="\t\t\tprivate static final long serialVersionUID = 1L;\r\n\r\n";
		sColumna+="\t\t\tprivate Border resaltar"+GetNombreClase(tablaRelacionada.ToString())+"=null;\r\n\r\n";
		
		sColumna+="\t\t\tpublic "+GetNombreClase(tablaRelacionada.ToString())+strSufijoAutoReferenciada+"TableCell(Border resaltar"+GetNombreClase(tablaRelacionada.ToString())+") {\r\n";
		sColumna+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
		sColumna+="\t\t\t\tthis.resaltar"+GetNombreClase(tablaRelacionada.ToString())+"=resaltar"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";
				
		sColumna+="\t\t\tpublic "+GetNombreClase(tablaRelacionada.ToString())+strSufijoAutoReferenciada+"TableCell(JCheckBox checkBox) {\r\n";
		sColumna+="\t\t\t\tsuper(checkBox);\r\n";
		sColumna+="\t\t\t}\r\n\r\n";
				
		sColumna+="\t\t\tJButton jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\tObject valor;\r\n\r\n";

		
		sColumna+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {\r\n";
		//sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+" =new JButtonMe((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setToolTipText((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			sColumna+="\t\t\t\tif(this.resaltar"+GetNombreClase(tablaRelacionada.ToString())+"!=null) {\r\n";
			sColumna+="\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setBorder(this.resaltar"+GetNombreClase(tablaRelacionada.ToString())+");\r\n";
			sColumna+="\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setOpaque(true);\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());\r\n\r\n";

			sColumna+="\t\t\t\tif(isSelected) {\r\n";
			sColumna+="\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setForeground(FuncionesSwing.getColorSelectedForeground());\r\n";
			sColumna+="\t\t\t\t}\r\n\r\n";
				
			sColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";

		sColumna+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,final int row,int column) {\r\n";
		//sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"=new JButtonMe((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setToolTipText((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			sColumna+="\t\t\t\tif(this.resaltar"+GetNombreClase(tablaRelacionada.ToString())+"!=null) {\r\n";
			sColumna+="\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setBorder(this.resaltar"+GetNombreClase(tablaRelacionada.ToString())+");\r\n";
			sColumna+="\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".addActionListener(\r\n";
	        //sColumna+="\t\t\t\t(\r\n";
		          sColumna+="\t\t\t\t\tnew java.awt.event.ActionListener() {\r\n";
		          //sColumna+="\t\t\t\t\t{\r\n";
		              sColumna+="\t\t\t\t\t\tpublic void actionPerformed(ActionEvent evt) {\r\n";
		              //sColumna+="\t\t\t\t\t\t{\r\n";
		            	  sColumna+="\t\t\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(evt,row,true,false);\r\n";
		              sColumna+="\t\t\t\t\t\t}\r\n";
		          sColumna+="\t\t\t\t\t}\r\n";
	        sColumna+="\t\t\t\t);\r\n\r\n";

			sColumna+="\t\t\t\tvalor=value;\r\n\r\n";
			sColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";

		sColumna+="\t\t\tpublic Object getCellEditorValue() {\r\n";
		//sColumna+="\t\t{\r\n";
			sColumna+="\t\t\t\treturn valor;\r\n";
		sColumna+="\t\t\t}\r\n\r\n";
	
		/*
		sColumna+="\t\t\tpublic void addCellEditorListener(CellEditorListener arg0) {\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic void cancelCellEditing() {\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic boolean isCellEditable(EventObject arg0) {\r\n";
			sColumna+="\t\t\t\treturn true;\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic void removeCellEditorListener(CellEditorListener arg0) {\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic boolean shouldSelectCell(EventObject arg0) {\r\n";
			sColumna+="\t\t\t\treturn false;\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	*/
			sColumna+="\t\t\tpublic boolean stopCellEditing() {\r\n";
			sColumna+="\t\t\t\tfireEditingStopped();\r\n\r\n";
			sColumna+="\t\t\t\treturn true;\r\n";
			sColumna+="\t\t\t}\r\n";	
			
	sColumna+="\t\t}\r\n\r\n";
	
	}
	
	if(conButtonFuncion) {
	sColumna+="\r\n\tpublic void jButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,"+GetNombreClase(table.ToString())+" "+GetNombreClaseObjeto(table.ToString())+") {";
	sColumna+="\r\n";   
		sColumna+="\t\t\ttry {";
		sColumna+="\r\n";
			
			sColumna+="\t\t\t\tint intSelectedRow =rowIndex;";// this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
			
			String strComentarioParaEjb="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
			}
			
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit+="\r\n\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t\t//ARCHITECTURE";
				
			sColumna+="\r\n\r\n\t\t\t\tif(intSelectedRow!=-1) {";
			sColumna+=strFuncionBusquedaEjbInit;
			sColumna+="\r\n\t\t\t\t\t\t"+ strComentarioParaEjb+"this."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];";
			sColumna+=strFuncionBusquedaEjbMiddle;
			sColumna+="\r\n\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];";
			sColumna+=strFuncionBusquedaEjbEnd;
			sColumna+="\r\n\t\t\t\t} else {";
			sColumna+="\r\n\t\t\t\t\tif("+GetNombreClaseObjeto(table.ToString())+"!=null) {";
			sColumna+="\r\n\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = "+GetNombreClaseObjeto(table.ToString())+";";
			sColumna+="\r\n\t\t\t\t\t} else {";
			sColumna+="\r\n\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = new "+GetNombreClaseC(TablaBase.ToString())+"();";
			sColumna+="\r\n\t\t\t\t\t}";
			sColumna+="\r\n\t\t\t\t}";
			//YA DEFINIDOS PERO APARTE AL INICIAR
			//sColumna+="\r\n\t\t\t\tBoolean isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
			//sColumna+="\r\n\t\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";
			//sColumna+="\r\n\t\t\t\t"+strGlobalSeguridadCommentNo+"isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n\r\n";
			
			sColumna+="\r\n\r\n\t\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && this.permiteMantenimiento(this."+GetNombreClaseObjetoC(TablaBase.ToString())+")) {\r\n";
			
			sColumna+="\t\t\t\t\t"+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=null;\r\n\r\n";//new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario);\r\n\r\n";
			
			sColumna+="\t\t\t\t\tif(conInicializar) {\r\n";
			
			sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFramePopup=new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);\r\n";
			
			
			sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFramePopup.setJInternalFrameParent(this);\r\n\r\n";
			
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFramePopup;\r\n";
			sColumna+="\t\t\t\t\t} else {\r\n";
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame;\r\n";
			sColumna+="\t\t\t\t\t}\r\n";
			
			sColumna+="\r\n\t\t\t\t\t"+strTypeCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
			
			sColumna+="\t\t\t\t\tif(!esRelacionado) {\r\n";
			sColumna+="\t\t\t\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);\r\n";
	        sColumna+="\t\t\t\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);\r\n";
			sColumna+="\t\t\t\t\t}\r\n\r\n";
			
			//CARGAR JINTERNALFRAME
			sColumna+="\t\t\t\t\tthis.cargar"+GetNombreClaseC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,this."+GetNombreClaseObjetoC(TablaBase.ToString())+","+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame,/*conInicializar,*/"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones(),"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado());\r\n\r\n\r\n";			
			
			/*
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(TablaBase.ToString())+strNombreAdicional.ToLower()+"sForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";			
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombos"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisibilidadBusquedasPara"+GetNombreClase(TablaBase.ToString())+"(true);\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombosFrame"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			*/
			
			//Trace.WriteLine("here");
			if(!GetEsAuxiliarFromPropertiesC(TablaBase) && !blnNoStandardTableFromProperties){
				if(TieneIndiceClaseRelacionadaForeignKeyC(tablaRelacionada,TablaBase)) {
					//sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetParameterClaseDeepRelacionadoC(collectionInfo)/*strIdGetSet+GetNombreClaseC(TablaBase.ToString())*/+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
				}
			} else if(blnNoStandardTableFromProperties) {
				TableKeySchema tableKeySchema=collectionInfo.TableKey;	
				
				//Trace.WriteLine("PK:"+tableKeySchema.PrimaryKeyTable.Name);
				//Trace.WriteLine("FK:"+tableKeySchema.ForeignKeyTable.Name);
				
				MemberColumnSchema memberColumnSchemaPK=null;
				MemberColumnSchema memberColumnSchemaFK=null;
				string strPrefijoTipo = "";
				string strNombre = "";
				
				if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
					System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
				}
				
				for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
					memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
					memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
					
					strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
					strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
	
					//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
				}
			}
			
			/*
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.procesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setsAccionBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";			
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.inicializarActualizarBindingTabla"+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.getjButtonRecargarInformacion"+GetNombreClaseC(tablaRelacionada.ToString())+"().setVisible(false);\r\n\r\n";
			*/
			
			sColumna+="\t\t\t\t\tif(!esRelacionado) {\r\n";
			//sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);\r\n";
	        //sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);\r\n\r\n";
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreClaseC(tablaRelacionada.ToString())+"(\"no_relacionado\");\r\n\r\n";
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.redimensionarTablaDatosConTamanio("+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.ITAMANIOFILATABLA + ("+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.ITAMANIOFILATABLA/2));\r\n\r\n";
			
	        sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));\r\n\r\n";
	        
			
			sColumna+="\t\t\t\t\t\tTitledBorder titledBorder"+GetNombreClaseC(table.ToString())+"=(TitledBorder)this.jScrollPanelDatos"+GetNombreClaseC(table.ToString())+".getBorder();\r\n";
			
			if(!table.Name.Equals(tablaRelacionada.Name)) {
				sColumna+="\t\t\t\t\t\tTitledBorder titledBorder"+GetNombreClaseC(tablaRelacionada.ToString())+"=(TitledBorder)"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tablaRelacionada.ToString())+".getBorder();\r\n\r\n";							
			}
			
			sColumna+="\t\t\t\t\t\ttitledBorder"+GetNombreClaseC(tablaRelacionada.ToString())+".setTitle(titledBorder"+GetNombreClaseC(table.ToString())+".getTitle() + \" -> "+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
		
		
			sColumna+="\t\t\t\t\t\tif(!Constantes.CON_VARIAS_VENTANAS) {\r\n";
			sColumna+="\t\t\t\t\t\t\tMainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n";
			sColumna+="\t\t\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";	        
			sColumna+="\t\t\t\t\t\tthis.jDesktopPane.add("+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n\r\n";	        
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setSelected(true);\r\n";
			
			sColumna+="\t\t\t\t\t}\r\n";
			
			sColumna+="\r\n\t\t\t\t} else {\r\n";//if
			sColumna+="\t\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+"SessionBean.getConGuardarRelaciones()) {\r\n";
			sColumna+="\t\t\t\t\t\tJOptionPane.showMessageDialog(this,\"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE "+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+"\",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);\r\n";
			sColumna+="\t\t\t\t\t}\r\n";
			sColumna+="\t\t\t\t}\r\n";			
			
		sColumna+="\t\t\t}";
		sColumna+=" catch(Exception e) {";
		sColumna+="\r\n";
			sColumna+="\t\t\t\tFuncionesSwing.manageException2(this, e,logger,"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.CLASSNAME);\r\n";
		sColumna+="\t\t\t}\r\n";
	sColumna+="\t\t}\r\n";
	
	}
	
	return sColumna;
}

public String GetSeleccionarActionRelacionesColumnsTableCellTablasClasesRelacionadas(TableSchema table) {
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			bool esPrimero=true;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;sClases= new String[1];
			//bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
								
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
					continue;
				}								
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)) {
						encontrado=true;
					}
				}
								
				if(!encontrado) {
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);										
					
					sTablaClaseRelacionada+=GetSeleccionarActionRelacionColumnsTableCellTablasClasesRelacionadas(table,tablaRelacionadaObjetivo,collectionInfo,esPrimero);
					
					if(esPrimero) {
						esPrimero=false;	
					}
				}													
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
	return sTablaClaseRelacionada; 
}

public String GetSeleccionarActionRelacionColumnsTableCellTablasClasesRelacionadas(TableSchema  table,TableSchema tablaRelacionada,CollectionInfo collectionInfo,bool esPrimero) 
{
	String sNombrePakage=GetPackageTableFromProperties(tablaRelacionada);
	
	String sColumna="";
	String sElse="";
	String strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		
	String strSufijoAutoReferenciada="";strSufijoAutoReferenciada+="";
	
	if(table.Name.Equals(tablaRelacionada.Name)) {
		strSufijoAutoReferenciada=strAutoRef;
	}
	
	if(!esPrimero) {
		sElse=" else ";
	}
	
	sColumna+="\r\n\t\t"+sElse+"if(sTipo.equals(\""+GetNombreClase(tablaRelacionada.ToString())+"\")) {\r\n";
	sColumna+="\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(evt,rowIndex,true,false,null);\r\n";
	sColumna+="\t\t}";
			
	
	return sColumna;
}

Stopwatch stopWatch = new Stopwatch();
	
public void IniciarTiempo() {
	IniciarTiempoC(stopWatch);
	/*
	if(IS_DEBUG) {
		stopWatch = new Stopwatch();
		stopWatch.Start();
	}
	*/
}	

public void DetenerTiempo(PaquetesGenerar paqueteGenerar,String strSubPaquete) {
	DetenerTiempoC(stopWatch,paqueteGenerar,strSubPaquete);
	
	/*
	if(IS_DEBUG) {
		stopWatch.Stop();	
		ImprimirTiempo(paqueteGenerar,strSubPaquete);
	}
	*/
}
</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresaC(Empresa,false);%>
<%=GetByDanLicence()%>
<%if(!EsSwing){%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%><%=GetEsPaqueteReporteC(TablaBase)%>;
<%}else{%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>;
<%}%>

<%=GetTimeTimestampImport()%>


<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ResumenUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Opcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilOpcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilCampo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilAccion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Modulo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Accion;

import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaReturnGeneralAdditional;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaReturnGeneral;

<%}else{%>
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ResumenUsuario;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Modulo;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Opcion;
<%}%>

<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
//<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilAccion;
<%//=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageServiceSeguridad%>.<%=strEjbSeguridad%>.<%=strEjbInterfaceSeguridad%>.SistemaAdditionable;
<%//=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageServiceSeguridad%>.<%=strEjbSeguridad%>.<%=strEjbInterfaceSeguridad%>.SistemaAdditionableHome;
<%//=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaConstantesFunciones;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaConstantesFuncionesAdditional;<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>
<%if(ConEjb){%>//<%}%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageLogicSeguridad%>.SistemaLogicAdditional;
<%}%>

<%=strCommentReporte%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageUtils%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClase(TablaBase.ToString())%><%=strReturnGeneral%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClase(TablaBase.ToString())%><%=strParameterGeneral%>;
<%//if(!blnSinUsoDatos){%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageReporte%>.<%=strPackageSource%>.<%=GetEsPaqueteImportReporteC(TablaBase)%><%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>;<%//}%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageDataAccess%>.ConstantesSql;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityParameterGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.OrderBy;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneralMinimo;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntity;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Mensajes;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.MaintenanceType;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.MaintenanceType;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.FuncionesReporte;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.DatosCliente;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.Pagination;

<%if(EsSwing){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%>.auxiliar<%=GetEsPaqueteReporteC(TablaBase)%>.*;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TablaGeneralTotalModel;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TablaGeneralOrderByModel;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateConverter;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateConverterFromDate;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateEditorRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.BooleanRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.BooleanEditorRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TextFieldRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TipoReporteDefaultListCellRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.*;
//import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TextFieldEditorRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.HeaderRenderer;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.JInternalFrameBase;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.FuncionesSwing;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.MainJFrame;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageResources%>.<%=strPackageImagenes%>.AuxiliarImagenes;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageResources%>.<%=strPackageReportes%><%=GetEsPaqueteReporteC(TablaBase)%>.AuxiliarReportes;
<%} else {%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageJSF%>.<%=strPackageWeb%>.<%=strPrefijoJSFFaces%>Base;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageJSF%>.<%=strPackageWeb%>.FuncionesFaces;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%>.FuncionesBeanFace;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%>.UsuarioSessionBeanFace;

<%if(TienePathImagenDocumento()){%>
import java.io.FileOutputStream;
//import org.richfaces.event.UploadEvent;
//import org.richfaces.model.UploadItem;

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Archivos;
<%}%>
<%}%>

<%if(blnEsReporte) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%>.*;
<%}%>

import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.*;
<%if(ConEjb){%>//<%}%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageLogic%><%=GetEsPaqueteReporteC(TablaBase)%>.*;
<%if(ConEjb){%>//<%}%><%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageLogic+".*;",ConEjb)%>

<%if(ConSessionBeans){%>
<%if(!blnEsReporte){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home;

<%if(blnConMaxCodigo) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home;
<%}%>
<%} else {%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetTablaModuloReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetTablaModuloReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home;
<%} %>
<%}%>
//EJB
<%if(ConSessionBeans){%>
<%=GetEjbTablasClasesRelacionadas()%> 
<%=GetEjbTablasClasesRelacionadasForeignKeys()%>
<%}%>

//PARAMETROS
<%=GetTablasClasesRelacionadasParametros()%>

//EJB PARAMETROS
<%if(ConSessionBeans){%>
<%=GetEjbTablasClasesRelacionadasParametros()%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageService+"."+strEjb+"."+strEjbInterface+".*;")%>
<%}%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.*;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.*;
<%=GetPackageClasesTableFromPropertiesC()%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;<%=GetEsImportPaqueteReporteParaEsReporteC(TablaBase,"import "+Empresa+"."+ Package+"."+Module+strPackageBusiness+"."+strPackageEntities)%>
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.ConexionBeanFace;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Mensajes;

<%if(EsSwing){%>
<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageSwing+"."+strPackageJInternalFrames+".*;")%>
<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageSwing+"."+strPackageJInternalFrames+".auxiliar.*;")%>
<%}%>

<%=strPackageEntitiesExtra%>
<%=strPackageUtilsExtra%>
<%=strPackageWebSessionExtra%>
<%=strPackageEjbInterfaceExtra%>

import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

<%if(ConPersistenciaAnotaciones) {%>
//import org.hibernate.collection.PersistentBag;
<%}%>

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Reporte;

<%if(!EsSwing){%>

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.context.ExternalContext;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletContext;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.bean.ManagedProperty;
import javax.annotation.PostConstruct;
//import javax.faces.bean.RequestScoped;

import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%><%=GetEsPaqueteReporteC(TablaBase)%>.*;

<% } else { %>

//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%>.*;
<% if(blnEsReporte){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;
<%}%>

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;
<%}%>

<%=GetEsquemasImportClasesRelacionadas()%>

<%if(ContieneImagenesC(TablaBase)){%>
	<%=GetFuncionesImagenesC(TablaBase)%>
<%}%>

<%if(!EsSwing){%>
@SuppressWarnings("unused")
@ManagedBean(name=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SREQUESTNAME, eager = true)
@ViewScoped
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%> extends <%=strPrefijoJSFFaces%>Base implements Serializable
<%}else{%>
@SuppressWarnings("unused")
public class <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame extends <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%>JInternalFrame implements WindowListener,WindowFocusListener
<%}%>
{		
	/*Hashtable hashtableEnv =null;
	InitialContext initialContext =null;*/
	
	<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
	<%if(!GetNombreClaseC(TablaBase.ToString()).Equals("Sistema")) { %>
	<%//=strGlobalSeguridadComment%>public static SistemaAdditionable sistemaAdditionable=SistemaConstantesFunciones.getSistemaAdditionableEjbReference(SistemaConstantesFunciones.SREMOTEEJBNAMEADDITIONAL<%=GetJBossSufijoC(JBoss_Version)%>);
	<%//=strGlobalSeguridadComment%>public static SistemaAdditionableHome sistemaAdditionableHome= SistemaConstantesFunciones.getSistemaAdditionableHomeEjbReference(SistemaConstantesFunciones.SLOCALEJBNAMEADDITIONAL<%=GetJBossSufijoC(JBoss_Version)%>);
	<%}%>
	<%}%>
	
	<%if(ConSessionBeans){%>
	public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%> <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>= <%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.get<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>EjbReference(<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SREMOTEEJBNAME<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>);
	public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home= <%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.get<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>HomeEjbReference(<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SLOCALEJBNAME<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>);		
	
	<%if(blnConMaxCodigo && !blnEsReporte) { %>
	public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%> <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>= <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.get<%=GetNombreClaseC(TablaBase.ToString())%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>EjbReference(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SREMOTEEJBNAMEADDITIONAL<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>);
	public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home= <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.get<%=GetNombreClaseC(TablaBase.ToString())%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>HomeEjbReference(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SLOCALEJBNAMEADDITIONAL<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>);		
	<%}%>
	
	<%if(blnEsReporte && blnConReportesPorModulo ){%>
	public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable= <%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.get<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>EjbReference(<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SREMOTEEJBNAME<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>);
	public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome= <%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.get<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>HomeEjbReference(<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SLOCALEJBNAME<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version)%>);		
	<%}%>
	<%}%>
	
	<%if(!EsSwing){%>
	private static final long serialVersionUID = 1L;
	public static Logger logger = Logger.getLogger(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.class);  
	public static Boolean ISLOAD_FKLOTE=<%if(!blnEsReporte){%>true;<%}else{%>false;<%}%>
	<%}else{%>
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame.class);  
	
	public static ClassValidator<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Validator = new ClassValidator<<%=GetNombreClase(TablaBase.ToString())%>>(<%=GetNombreClase(TablaBase.ToString())%>.class);
	
	public InvalidValue[] invalidValues=null;
		
	<%}%>

	//Ejb Foreign Keys
	<%if(ConSessionBeans){%>
	<%=GetVariablesEjbCargarCombosFuncionestrForeignKeys()%>
	
	//Ejb Parametros
	<%=GetVariablesEjbCargarCombosFuncioneParametros()%>
	<%}%>
	
	public <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;	
	public <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
	public <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Long <%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	public Long i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>=0L;
	public int rowIndexActual=0;
	
	<%if(blnNoStandardTableFromProperties) {%>	
	//VARIABLES PK ACTUAL
	<%=GetNoStandardVariablesParameterPKActual()%>
	<%}%>
	
	<%if(!EsSwing){%>
	public ListDataModel <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel;
	<%}%>
	
	<%=DefinirVariablesArrayForeignKeys()%>
		
	<%=DefinirVariablesArrayParametros()%>
	
	<%=DefinirVariablesActualForeignKeysConBusqueda()%>
	
	<%=GetDefinitionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase)%>
	
	<%if(!EsSwing){%>
	public HttpServletRequest httpServletRequest=null;
	public HttpServletResponse httpServletResponse=null;
	public HttpSession httpSession=null;
	public ServletContext servletContext =null;
	<%} else {%>
	<%}%>
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	<%if(blnConFuncionalidadVersion1) {%>
	public Boolean isTipoArchivoReporte=false;
	public Boolean conExportar=false;
	<%}%>	
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	<%if(!EsSwing){%>
	public Boolean isEditarEnTabla=false;
	public Boolean isDeveloping=false;
	<%}%>
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoPaginacionMedio<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoPaginacionAlto<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoPaginacionTodo<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoCopiar<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoDuplicar<%=GetNombreClase(TablaBase.ToString())%>;
	public Boolean isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>;
	
	<%if(blnEsAutoReferenciada) {%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjeto(TablaBase.ToString())%>sArbol;
	<%} %>
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
	<%if(!TablaBase.Name.Equals("Accion")){%>
	public List<Accion> accions;	
	<%}%>
	public List<Accion> accionsFormulario;
	<%}%>
	
	<%if(blnConTotales){%>
	<%if(!EsSwing){%>
	public ArrayList<DatoGeneral> arrDatoGeneralTotales;
	<%}%>
	<%}%>
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> tiposArchivosReportes;
	public ArrayList<SelectItem> tiposReportes;
	public ArrayList<SelectItem> tiposGraficosReportes;
	public ArrayList<SelectItem> tiposPaginacion;
	public ArrayList<SelectItem> tiposRelaciones;
	public ArrayList<SelectItem> tiposAcciones;
	public ArrayList<SelectItem> tiposAccionesFormulario;
	public ArrayList<SelectItem> tiposSeleccionar;
	
	public ArrayList<SelectItem> tiposColumnasSelect;
	<%}else{%>
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	<%}%>
	
	<%if(blnTieneSeguridadCampo){%>
	public List<PerfilCampo> perfilCampos=null;	
	<%}%>
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoReporte="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	<%if(blnConFuncionalidadVersion1) {%>
	public Boolean isMostrarTodosResultadosReporte=false;
	public Boolean isEsReporteRelaciones=false;
	<%}%>
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public <%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral;
	public <%=GetNombreClaseC(TablaBase.ToString())%>ParameterGeneral <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral;
	
	<%=GetVariablesTablasClasesRelacionadas()%> 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
	public Boolean conTotales=false;
	//public Boolean esParaBusquedaForeignKey=false;
	
	//ESTA EN PADRE
	<%if(EsSwing){%>
	
	<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
	//<%if(ConEjb){%>//<%}%>public <%=strPaqueteJavaCompletoLogic%><%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	<%if(ConEjb){%>//<%}%>public <%=strPaqueteJavaCompletoLogic%>SistemaLogicAdditional sistemaLogicAdditional;
	<%}%>
	
	<%}else {%> 
	
		<%if(!blnEsReporte){%>
	<%if(ConEjb){%>//<%}%>public <%=strPaqueteJavaCompletoLogic%><%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	
		<%} else {%>
	<%if(ConEjb){%>//<%}%>public <%=strPaqueteJavaCompletoLogic%><%=GetTablaModuloReporteC(TablaBase)%>LogicAdditional <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	
		<%} %>
	
	<%if(ConEjb){%>//<%}%>public SistemaLogicAdditional sistemaLogicAdditional;
	
	<%if(EsVersionRichFaces4C(RichFaces_Version)){%>
	@ManagedProperty(value=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SSESSIONNAME_FACE)<%}%>
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>;
	
	<%=GetNavegacionTablasRelacionadasClasesRelacionadasControllerC(TablaBase,false,true,false,ConEjb,EsSwing,GeneracionPorModuloUnico)%>
	
	<%=GetNavegacionTablasRelacionadasClasesRelacionadasControllerC(TablaBase,false,true,true,ConEjb,EsSwing,GeneracionPorModuloUnico)%>
	
	//SESSION FK
	<%=GetNavegacionTablasClasesFkControllerC(TablaBase,false,true,false,ConEjb,EsSwing,GeneracionPorModuloUnico)%>
	
	<%=GetNavegacionTablasClasesFkControllerC(TablaBase,false,true,true,ConEjb,EsSwing,GeneracionPorModuloUnico)%>
	<%}%>		
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>;
	//public <%=GetNombreClaseC(TablaBase.ToString())%><%=strReturnGeneral%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>;
	
	//FK
	<%=DefinirVariablesLogicForeignKeys()%>
	
	//PARAMETROS
	<%=DefinirVariablesLogicParametros()%>
	
	<%if(EsSwing){%>
	//public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;	
	//public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados;
	//public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux;
	<%}else {%>
	public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;	
	public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados;
	public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux;	
	
	public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s(<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
	}
	
	public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux(<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux;
	}
	
	public <%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados;
	}

	public void set<%=GetNombreClaseC(TablaBase.ToString())%>sEliminados(<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados;
	}
	<%}%>
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	<%if(!EsSwing){%>
	public FacesMessage facesMessage;
	
	public FacesMessage getFacesMessage() {
		return facesMessage;
	}

	public void setFacesMessage(FacesMessage facesMessage) {
		this.facesMessage = facesMessage;
	}
	
	public String getRegexCadena() {return Constantes.SREGEXCADENA;}	
	public String getRegexTodos() { return Constantes.SREGEXCADENATODOS;}	
	public String getRegexEnteros() {return Constantes.SREGEXNUMEROENTERO;}
	<%}%>
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	<%if(!EsSwing){%>
	public String sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	public String sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public String sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public String sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	public String sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;	
	
	public Integer maximumSeverity;
	public String sAuxiliarUrlPagina="";		
	
	public Integer getMaximumSeverity() {
		this.maximumSeverity=-1;
		
		if(FacesContext.getCurrentInstance().getMaximumSeverity()!=null) {
			this.maximumSeverity=FacesContext.getCurrentInstance().getMaximumSeverity().getOrdinal();
		}

		return this.maximumSeverity;
	}

	public void setMaximumSeverity(Integer maximumSeverity) {
		this.maximumSeverity = maximumSeverity;
	}
	
	<%if(blnEsAutoReferenciada) {%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> get<%=GetNombreClase(TablaBase.ToString())%>sArbol() throws Exception {		
		return <%=GetNombreClaseObjeto(TablaBase.ToString())%>sArbol;
	}
	
	public void set<%=GetNombreClase(TablaBase.ToString())%>sArbol(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> new<%=GetNombreClase(TablaBase.ToString())%>sArbol) {
		this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>sArbol = new<%=GetNombreClase(TablaBase.ToString())%>sArbol;
	}
	<%} %>
	
	public void setsAuxiliarUrlPagina(String sAuxiliarUrlPagina) {
		this.sAuxiliarUrlPagina = sAuxiliarUrlPagina;
	}
	
	public String getsAuxiliarUrlPagina() {	
		return this.sAuxiliarUrlPagina;
	}	
	
	<%}else{%>
	public Boolean isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
	public Boolean isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
	public Boolean isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>=true;
	public Boolean isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
	public Boolean isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;	
	public Boolean isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;	
	<%}%>		
	
	<%=GetIndicesVariablesVisibilidadTablasClases()%>
	
	public Long geti<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>() {
		return this.i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>;
	}

	public void seti<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>(Long i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>) {
		this.i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%> = i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>;
	}
	
	public Long get<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual() {
		return this.<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	}

	public void set<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual(Long <%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual) {
		this.<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual = <%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	<%if(blnNoStandardTableFromProperties) {%>	
	//VARIABLES PK ACTUAL
	<%=GetNoStandardVariablesGetSetParameterPKActual()%>
	<%}%>
	
	public <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
	}
	
	public <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
	}				
	
	public <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior;
	}	
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%> = <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>;
	}	
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strReturnGeneral%> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>;
	}

	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strReturnGeneral%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%> = <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>;
	}	
	
	<%=GetIndicesVariablesTablasClases()%>		
	
	//ELEMENTOS TABLAS PARAMETOS
	<%=GetParameterClaseTablasParametrosC(TablaBase)%>
	
	<%=GetParameterClaseMethodTablasParametrosC(TablaBase)%>
	
	<%=GetParameterClaseSetMethodTablasParametrosC(TablaBase)%>
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	<%if(ConEjb){%>/*<%}%>
	<%if(!blnEsReporte){%>
	public <%=GetNombreClaseC(TablaBase.ToString())%>Logic get<%=GetNombreClaseC(TablaBase.ToString())%>Logic()	{		
		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}

	public void set<%=GetNombreClaseC(TablaBase.ToString())%>Logic(<%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}
	<%} else {%>
	public <%=GetTablaModuloReporteC(TablaBase)%>Logic<%=GetAdditionalTablaModuloReporteC(TablaBase)%> get<%=GetNombreClaseC(TablaBase.ToString())%>Logic()	{		
		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}

	public void set<%=GetNombreClaseC(TablaBase.ToString())%>Logic(<%=GetTablaModuloReporteC(TablaBase)%>Logic<%=GetAdditionalTablaModuloReporteC(TablaBase)%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	}
	<%} %>
	<%if(ConEjb){%>*/<%}%>
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getEsParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public void setEsParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%> = esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	<%=GetFuncionesCargarCombosFuncionestrForeignKeys()%>
	
	<%=GetFuncionesSetActualComboForeignKeys()%>
	
	<%if(EsSwing){%>
	<%=GetFuncionesSetActualParaGuardarForeignKeys()%>
	<%}%>
	
	<%if(!EsSwing){%>
	<%=DefinirFuncionesListItemsArrayForeignKeys()%>
	<%}else{%>
	<%=CargarCombosFrameColumnsVariablestrForeignKeys()%>
	<%=SetSelectedItemCombosFrameColumnsVariablestrForeignKeys()%>
	<%=DefinirClassDefaultListCellRendererColumnsVariablestrForeignKeys(false)%>
	<%}%>	
	
	public void refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		<%=GetClassClasesRelacionadasForeigKeys()%>
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			<%if(ConEjb){%>//<%}%>//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClaseC(TablaBase.ToString())%>s(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deepLoadsWithConnection(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s, false, DeepLoadType.INCLUDE, classes,"", datosCliente);
			<%}%>
		} else if(Constantes.ISUSAEJBHOME) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deepLoadsWithConnection(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s, false, DeepLoadType.INCLUDE, classes,"", datosCliente);
			<%}%>
		}
		*/				
		<%}%>
	}	
	
	<%if(!EsSwing){%>
	public DataModel get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel()throws Exception {		
		try {			
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.setWrappedData(new ArrayList<<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				<%if(ConEjb){%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.setWrappedData(new ArrayList<<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s));<%}%>
			}
			//ARCHITECTURE
		} catch (Exception e) {
			FuncionesFaces.manageException(this, e,logger);
		}

		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel;
	}
	<%}%>
	
	<%if(!EsSwing){%>
	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel(ListDataModel <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel;
	}
	<%}%>		
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	<%if(blnConFuncionalidadVersion1) {%>
	public Boolean getIsTipoArchivoReporte() {
		return isTipoArchivoReporte;
	}

	public void setIsTipoArchivoReporte(Boolean isTipoArchivoReporte) {
		this.isTipoArchivoReporte = isTipoArchivoReporte;
	}	
	
	public Boolean getConExportar() {
		return this.conExportar;
	}

	public void setConExportar(Boolean conExportar) {
		this.conExportar = conExportar;
	}
	<%}%>		
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	<%if(!EsSwing){%>
	public Boolean getIsEditarEnTabla() {
		return isEditarEnTabla;
	}

	public void setIsEditarEnTabla(Boolean isEditarEnTabla) {
		this.isEditarEnTabla = isEditarEnTabla;
	}
	
	public Boolean getIsDeveloping() {
		return isDeveloping;
	}

	public void setIsDeveloping(Boolean isDeveloping) {
		this.isDeveloping = isDeveloping;
	}
	<%}%>
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposArchivosReportes() {
	<%}else{%>
	public ArrayList<Reporte> gettiposArchivosReportes() {
	<%}%>	
		return this.tiposArchivosReportes;
	}
	
	<%if(!EsSwing){%>
	public void settiposArchivosReportes(ArrayList<SelectItem> tiposArchivosReportes) { 
	<%}else{%>
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
	<%}%>
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS REPORTES
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposReportes() { 
	<%}else{%>
	public ArrayList<Reporte> gettiposReportes() {
	<%}%>
		return this.tiposReportes;
	}
	
	<%if(!EsSwing){%>
	public void settiposReportes(ArrayList<SelectItem> tiposReportes) { 
	<%}else{%>
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
	<%}%>
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS GRAFICOS REPORTES
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposGraficosReportes() {
	<%}else{%>
	public ArrayList<Reporte> gettiposGraficosReportes() {
	<%}%>
		return this.tiposGraficosReportes;
	}
	
	<%if(!EsSwing){%>
	public void settiposGraficosReportes(ArrayList<SelectItem> tiposGraficosReportes) {
	<%}else{%>
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
	<%}%>
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposPaginacion() {
	<%}else{%>
	public ArrayList<Reporte> gettiposPaginacion() {
	<%}%>
		return this.tiposPaginacion;
	}
	
	<%if(!EsSwing){%>
	public void settiposPaginacion(ArrayList<SelectItem> tiposPaginacion) {
	<%}else{%>
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
	<%}%>
		this.tiposPaginacion = tiposPaginacion;
	}
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposRelaciones() {
	<%}else{%>
	public ArrayList<Reporte> gettiposRelaciones() {
	<%}%>
		return this.tiposRelaciones;
	}
	
	<%if(!EsSwing){%>
	public void settiposRelaciones(ArrayList<SelectItem> tiposRelaciones) {
	<%}else{%>
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
	<%}%>
		this.tiposRelaciones= tiposRelaciones;
	}
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposAcciones() {
	<%}else{%>
	public ArrayList<Reporte> gettiposAcciones() {
	<%}%>
		return this.tiposAcciones;
	}
	
	<%if(!EsSwing){%>
	public void settiposAcciones(ArrayList<SelectItem> tiposAcciones) {
	<%}else{%>
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
	<%}%>
		this.tiposAcciones = tiposAcciones;
	}
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposAccionesFormulario() {
	<%}else{%>
	public ArrayList<Reporte> gettiposAccionesFormulario() {
	<%}%>
		return this.tiposAccionesFormulario;
	}
	
	<%if(!EsSwing){%>
	public void settiposAccionesFormulario(ArrayList<SelectItem> tiposAccionesFormulario) {
	<%}else{%>
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
	<%}%>
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposSeleccionar() {
	<%}else{%>
	public ArrayList<Reporte> gettiposSeleccionar() {
	<%}%>
		return this.tiposSeleccionar;
	}
	
	<%if(!EsSwing){%>
	public void settiposSeleccionar(ArrayList<SelectItem> tiposSeleccionar) {
	<%}else{%>
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
	<%}%>
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	<%if(!EsSwing){%>
	public ArrayList<SelectItem> gettiposColumnasSelect() {
	<%}else{%>
	public ArrayList<Reporte> gettiposColumnasSelect() {
	<%}%>
		return this.tiposColumnasSelect;
	}
	
	<%if(!EsSwing){%>
	public void settiposColumnasSelect(ArrayList<SelectItem> tiposColumnasSelect) {
	<%}else{%>
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
	<%}%>
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	<%if(blnTieneSeguridadCampo){%>
	public List<PerfilCampo> getPerfilCampos() {
		return perfilCampos;
	}

	public void setPerfilCampos(List<PerfilCampo> perfilCampos) {
		this.perfilCampos = perfilCampos;
	}
	<%}%>
	
	<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	<%}%>
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}

	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	<%if(blnConFuncionalidadVersion1) {%>
	public Boolean getisMostrarTodosResultadosReporte() {
		return isMostrarTodosResultadosReporte;
	}

	public void setisMostrarTodosResultadosReporte(Boolean isMostrarTodosResultadosReporte) {
		this.isMostrarTodosResultadosReporte = isMostrarTodosResultadosReporte;
	}
	
	public Boolean getIsEsReporteRelaciones() {
		return isEsReporteRelaciones;
	}

	public void setIsEsReporteRelaciones(Boolean isEsReporteRelaciones) {
		this.isEsReporteRelaciones = isEsReporteRelaciones;
	}
	<%}%>
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public <%=GetNombreClaseC(TablaBase.ToString())%>ParameterGeneral get<%=GetNombreClaseC(TablaBase.ToString())%>ParameterGeneral() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral;
	}
	
	public void set<%=GetNombreClaseC(TablaBase.ToString())%>ParameterGeneral(<%=GetNombreClaseC(TablaBase.ToString())%>ParameterGeneral <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoTodo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoReporte<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoPaginacionMedio<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoPaginacionMedio<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoPaginacionMedio<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoPaginacionMedio<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoPaginacionMedio<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoPaginacionMedio<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoPaginacionTodo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoPaginacionTodo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoPaginacionTodo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoPaginacionTodo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoPaginacionTodo<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoPaginacionTodo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoPaginacionAlto<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoPaginacionAlto<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoPaginacionAlto<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoPaginacionAlto<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoPaginacionAlto<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoPaginacionAlto<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%> = isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	<%if(!EsSwing){%>
	public String getsVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() { 
		return sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(String sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getsVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(String sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getsVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>(String sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getsVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>(String sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%> = sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public String getsVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>(String sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> = sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	<%}else{%>
	public Boolean getIsVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public Boolean getIsVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setIsVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%> = isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	<%}%>
		
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>;
	}
	
	public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>) {
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>;
	}
	
	<%=GetIndicesGetSetVariablesVisibilidadTablasClases()%>
	
	<%if(!EsSwing){%>
	public <%=GetNombreClaseC(TablaBase.ToString())%> get<%=GetNombreClaseC(TablaBase.ToString())%>ActualFromListDataModel() throws Exception {
		try	{
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>= (<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.getRowData();
			
			return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
			
		} catch(Exception e) {
			throw e;
		}
	}
	<%}%>
	
	<%if(EsSwing){%>
	public void setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjeto(TablaBase.ToString())%>)throws Exception {
		try {
			<%=GetCallFuncionesSetActualParaGuardarForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}
	}
	<%}%>		
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=Funciones2.parseXml(reportFile);
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		<%=strCommentMinCodigoWebIni%>
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		<%=strCommentMinCodigoWebFin%>
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
		<%if(!EsSwing){%>
			//CLIENTE WEB
			this.datosCliente.setIsClienteWeb(true);
			
			if(httpServletRequest.getRemoteUser()!=null){datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());}
			if(httpServletRequest.getRemoteHost()!=null){datosCliente.setsNamePC(httpServletRequest.getRemoteHost());}
			if(httpServletRequest.getRemoteAddr()!=null){datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());}			
		<%} else {%>
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			<%=strCommentMinCodigoWebIni%>
			this.cargarLicenciaCliente(this.datosCliente);
			<%=strCommentMinCodigoWebFin%>
		<%}%>
	}
	
	public void bugActualizarReferenciaActual(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginal<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setId(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId());
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setVersionRow(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>							
		try	{								
			
			<%if(EsSwing){%>
			//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>	
		
			<%if(EsSwing){%>			
			int intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			}
			<%}%>
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			<%if(!EsSwing){%>
			if(httpServletRequest.getRemoteUser()!=null){datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());}
			if(httpServletRequest.getRemoteHost()!=null){datosCliente.setsNamePC(httpServletRequest.getRemoteHost());}
			if(httpServletRequest.getRemoteAddr()!=null){datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());}			
			<%} else {%>
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Validator.getInvalidValues(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			<%} %>
			
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=new  <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsNew(true);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsChanged(true);
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.set<%=GetNombreClaseC(TablaBase.ToString())%>Original(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesBeanToTable(TablaBase.Columns[i]) %>	
				<% } %>
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(EsSwing){//NO ESTOY SEGURO%>
					//NO ENTENDIBLE PORQUE PONER
					//if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
					//	|| this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
					<%}%>
						<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					<%if(EsSwing){//NO ESTOY SEGURO%>
					//}
					<%}%>
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					<%//if(!EsSwing){%>
					actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
					<%// } %>
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
						&& !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						<%if(!EsSwing){%>
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
						//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
						<%}else{%>
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
						//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
						<%}%>
					} else if(Constantes.ISUSAEJBREMOTE) {
						<%if(ConSessionBeans){%>
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						<%}%>
					} else if(Constantes.ISUSAEJBHOME) {
						<%if(ConSessionBeans){%>
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						<%}%>
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					
					<%if(TieneForeignKeyC(TablaBase)) {%>
					this.refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>();
					<%}%>
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
					<%if(EsSwing){%>
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						<%if(blnConMaxCodigo) { %>
						<%//if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							<%=GetActualizarListasEliminadosParametroTablesRelacionadas(TablaBase,true,ConEjb)%>
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							<%=GetActualizarListasEliminadosParametroTablesRelacionadas(TablaBase,false,ConEjb)%>
						}
						//ARCHITECTURE	
						
						if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							<%=GetEliminarFilaTotalTablesRelacionadas(TablaBase,true,ConEjb,true,"","")%>
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							<%=GetEliminarFilaTotalTablesRelacionadas(TablaBase,false,ConEjb,true,"","")%>	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%if(!EsSwing){%>
								<%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnection(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,false)%>);
								//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
								<%}else{%>
								<%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnection(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,false)%>);
								//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
								<%}%>
							} else if(Constantes.ISUSAEJBREMOTE) {
								<%if(ConSessionBeans){%>
								<%=strCommentAdditional%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false,false,false,false,false,false)%>,datosCliente);
								//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
								<%}%>
							} else if(Constantes.ISUSAEJBHOME) {
								<%if(ConSessionBeans){%>
								<%=strCommentAdditional%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false,false,false,false,false,false)%>,datosCliente);
								//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
								<%}%>
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%=GetInicializarListasEliminadosParametroTablesRelacionadas(TablaBase,true,ConEjb)%>
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								<%=GetInicializarListasEliminadosParametroTablesRelacionadas(TablaBase,false,ConEjb)%>
							}
							//ARCHITECTURE	
						} else {
							
							<%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,true)%>
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%if(EsSwing){//NO ESTOY SEGURO%>
								if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
									|| this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
								<%}%>
									<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
								<%if(EsSwing){//NO ESTOY SEGURO%>
								}
								<%}%>
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								<%//if(!EsSwing){%>
								actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
								<%// } %>
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);												
						}
						<%//}%>		
						<%}%>
					}
					<%}%>
					<%}%>	
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=new  <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado() 
					|| (this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado() && this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.get<%=strIdGetSet%>()>=0)) {
						
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsNew(false);
				}
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsDeleted(false);
			
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesBeanToTable(TablaBase.Columns[i]) %>	
				<% } %>
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					<%//if(!EsSwing){%>
					actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
					<%//} %>
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
						&& !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						<%if(!EsSwing){%>
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
						//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
						<%}else{%>
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
						//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
						<%}%>
					} else if(Constantes.ISUSAEJBREMOTE) {
						<%if(ConSessionBeans){%>
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						<%}%>
					} else if(Constantes.ISUSAEJBHOME) {
						<%if(ConSessionBeans){%>
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						<%}%>
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					
					<%if(TieneForeignKeyC(TablaBase)) {%>
					this.refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>();
					<%}%>
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
					<%if(EsSwing){%>
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						<%if(blnConMaxCodigo) { %>
						<%//if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							<%=GetActualizarListasEliminadosParametroTablesRelacionadas(TablaBase,true,ConEjb)%>
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							<%=GetActualizarListasEliminadosParametroTablesRelacionadas(TablaBase,false,ConEjb)%>
						}
						//ARCHITECTURE
						
						if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							<%=GetEliminarFilaTotalTablesRelacionadas(TablaBase,true,ConEjb,true,"","")%>
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							<%=GetEliminarFilaTotalTablesRelacionadas(TablaBase,false,ConEjb,true,"","")%>	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%if(!EsSwing){%>
								<%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,false)%>);
								//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
								<%}else{%>
								<%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,false)%>);
								//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
								<%}%>
							} else if(Constantes.ISUSAEJBREMOTE) {
								<%if(ConSessionBeans){%>
								<%=strCommentAdditional%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false,false,false,false,false,false)%>,datosCliente);
								//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
								<%}%>
							} else if(Constantes.ISUSAEJBHOME) {
								<%if(ConSessionBeans){%>
								<%=strCommentAdditional%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false,false,false,false,false,false)%>,datosCliente);
								//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
								<%}%>
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%=GetInicializarListasEliminadosParametroTablesRelacionadas(TablaBase,true,ConEjb)%>
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								<%=GetInicializarListasEliminadosParametroTablesRelacionadas(TablaBase,false,ConEjb)%>
							}
							//ARCHITECTURE
						} else {
							
							<%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,true)%>
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%if(EsSwing){//NO ESTOY SEGURO%>
								if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
									|| this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
								<%}%>
									<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
								<%if(EsSwing){//NO ESTOY SEGURO%>
								}
								<%}%>
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								<%//if(!EsSwing){%>
								actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
								<%// } %>
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					
						}
						<%//}%>		
						<%}%>
					}
					<%}%>
					<%}%>
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=new  <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsNew(false);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsChanged(false);
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsDeleted(true);
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%= GetSetVariablesBeanToTable(TablaBase.Columns[i]) %>	
				<% } %>
				
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.get<%=strIdGetSet%>()>=0) {	
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					<%//if(!EsSwing){%>
					actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
					<%//} %>
				}
				//ARCHITECTURE
				
				<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired){continue; } %>
				<%if(EsPathImagenDocumentoColumn(TablaBase.Columns[i])){ %>
				//ELIMINAR ARCHIVOS
				<%= EliminarArchivoGetVariablesBean(TablaBase.Columns[i]) %>	
				<% } %>
				<% } %>												
				
				if(!isGuardarCambiosEnLote && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
						&& !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						<%if(!EsSwing){%>
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
						//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
						<%}else{%>
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
						//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
						<%}%>
					} else if(Constantes.ISUSAEJBREMOTE) {
						<%if(ConSessionBeans){%>
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						<%}%>
					} else if(Constantes.ISUSAEJBHOME) {
						<%if(ConSessionBeans){%>
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
						<%}%>
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
					<%if(EsSwing){%>
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						<%if(blnConMaxCodigo) { %>
						<%//if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							<%=GetActualizarListasEliminadosParametroTablesRelacionadas(TablaBase,true,ConEjb)%>
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							<%=GetActualizarListasEliminadosParametroTablesRelacionadas(TablaBase,false,ConEjb)%>
						}
						//ARCHITECTURE
						
						
						if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							<%=GetEliminarFilaTotalTablesRelacionadas(TablaBase,true,ConEjb,true,"","")%>
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							<%=GetEliminarFilaTotalTablesRelacionadas(TablaBase,false,ConEjb,true,"","")%>	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%if(!EsSwing){%>
								<%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,false)%>);
								//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
								<%}else{%>
								<%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,false)%>);
								//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
								<%}%>
							} else if(Constantes.ISUSAEJBREMOTE) {
								<%if(ConSessionBeans){%>
								<%=strCommentAdditional%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false,false,false,false,false,false)%>,datosCliente);
								//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
								<%}%>
							} else if(Constantes.ISUSAEJBHOME) {
								<%if(ConSessionBeans){%>
								<%=strCommentAdditional%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>RelacionesWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=GetListasParametroTablesRelacionadas(TablaBase,false,false,false,false,false,false)%>,datosCliente);
								//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
								<%}%>
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								<%=GetInicializarListasEliminadosParametroTablesRelacionadas(TablaBase,true,ConEjb)%>
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								<%=GetInicializarListasEliminadosParametroTablesRelacionadas(TablaBase,false,ConEjb)%>
							}
							//ARCHITECTURE
						}
						<%//}%>	
						<%}%>
					}  else {
							
						<%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,false,false,true)%>
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							<%if(EsSwing){//NO ESTOY SEGURO%>
							if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
								|| this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
							<%}%>
								<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
							<%if(EsSwing){//NO ESTOY SEGURO%>
							}
							<%}%>
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							<%//if(!EsSwing){%>
							actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
							<%// } %>
						}
						//ARCHITECTURE
					}
					<%}%>
					<%}%>
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().addAll(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados);
					
					<%if(!EsSwing){%>
					<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
					//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
					<%}else{%>
					<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();
					//<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnection();
					<%}%>
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%if(ConSessionBeans){%>
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.addAll(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados);
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
					//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
					<%}%>
				} else if(Constantes.ISUSAEJBHOME) {
					<%if(ConSessionBeans){%>
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.addAll(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados);
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnectionWithReturn(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
					//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getSetVersionRow<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
					<%}%>
				}	
				//ARCHITECTURE
				<%if(TieneForeignKeyC(TablaBase)) {%>
				this.refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>();
				<%}%>
				
				this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>sEliminados= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>>();		
			}
			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			<%if(blnConTotales){%>
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=strCommentReporte%>this.arrDatoGeneralTotales=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getTotalesLista<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getTotalesLista<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			}
			<%}%>					
			
			<%if(blnEsAutoReferenciada) {%>
			//ACTUALIZA ARBOL
			this.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>Arbol();
			
			//TO_OPTIMIZE POR TIPO FK NO TODOS
			this.inicializarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas();
			
			<%if(EsSwing){%>
			this.cargarCombosForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			<%}%>
			<%}%>
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					<%if(EsSwing){%>
					JOptionPane.showMessageDialog(this,"<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> GUARDADO CORRECTAMENTE","MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
					<%}%>
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			<%if(EsSwing){%>
			this.inicializarInvalidValues();
			<%}%>
		<%if(EsSwing){%>
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
		<%}%>
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			throw e;
		} finally {
			<%if(EsSwing){%>
      		//this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
      	}
		
		<%}%>
	}	
	
	<%if(EsSwing){%>
	public Boolean validar<%=GetNombreClase(TablaBase.ToString())%>Actual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Validator.getInvalidValues(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	<%}%>
	
	public void actualizarLista(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) throws Exception {
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		try	{		
			<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
		<%}%>
	}		
	
	<%if(blnConSeleccionar) {%>
	public void actualizarSelectedLista(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) throws Exception {
		try	{			
			<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.actualizarSelectedLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		} catch(Exception e) {
			throw e;
		}
	}	
	<%}%>
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
			}
			//ARCHITECTURE
		
			for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal) {
				if(this.permiteMantenimiento(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local) && <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	<%if(EsSwing){%>
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.get<%=GetNombreClaseC(TablaBase.ToString())%>LabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			<%if(GenerarMe) {%>
			//MOSTRAR CAMPOS INVALIDOS
			<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||(TablaBase.Columns[i].Name==strId && !TablaBase.Columns[i].IsForeignKeyMember)||TablaBase.Columns[i].Name==strVersionRow || GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])){continue; } %>
			<%= GetInvalidoParameterClase(TablaBase.Columns[i],"",false) %>
			<% } %>
			<%}%>
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		<%if(GenerarMe) {%>
		//MOSTRAR CAMPOS INVALIDOS
		<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||(TablaBase.Columns[i].Name==strId && !TablaBase.Columns[i].IsForeignKeyMember)||TablaBase.Columns[i].Name==strVersionRow || GetEsReporteParametroFromPropertiesC(TablaBase.Columns[i])){continue; } %>
		<%= GetInvalidoParameterClase(TablaBase.Columns[i],"",true) %>
		<% } %>
		<%}%>
	}
	<%}%>
	
	<%=DefinirFuncionesGuardarForeignKeys()%>
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		<%=GetNavegacionColumnsTablaTablasClasesRelacionadasC(TablaBase,false,false,false,true,false,false,false,EsSwing)%>
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>--;		
		<%if(!EsSwing){%>
		//Session
		//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>", true);
		this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
		
		//ACTUALIZO VERDADERO ESTADO DEL PERMISO DE MODIFICACION TOMANDO EN CUENTA EL PERMISO MODIFICACION ORIGINAL
		this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%> || this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>;
		
		this.inicializar<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		<%if(blnEsTablaUnoAUnoFk) {%>
		//PARA RELACION DE UNO A UNO
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.set<%=strIdGetSet%>(<%=strId%>_<%=strNombreTablaUnoAUnoPk.ToLower()%><%=strFK%>_<%=strIdGetSet%><%=strNombreTablaUnoAUnoPk%>);
		<%}%>
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO (ParametroGeneralUsuario)
		this.setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
		
		ArrayList<Classe> classes=new ArrayList<Classe>();							
		
		<%=GetRelacionesEventoNuevoPreparar()%>
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		<%if(!blnEstablaModulo) {%>
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.sTipoAccion,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);
						
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.sTipoAccion,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);
			<%}%>
						
		} else if(Constantes.ISUSAEJBHOME) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.sTipoAccion,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);
			<%}%>
		}
		//ARCHITECTURE
		<%}%>
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC
		//this.setVariablesObjetoReturnGeneralToBean<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,false);
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES FK
			this.setVariablesCombosForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>());
		}
		
		//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();	
		
		this.sVisibilidadTablaElementos="table-row";
		this.sVisibilidadTablaAcciones="table-row";
		
		
		<%=SetSeguridadNuevoPrepararCampoVariablesClase(TablaBase)%>
		
		if(esNuevoGuardarCambios) {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			}
			//ARCHITECTURE
		}
		
		<%} else {%>
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=new <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.set<%=strIdGetSet%>(this.i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
		}
		//ARCHITECTURE
		
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
		
		if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
		}
				
		//this.setDefaultControles<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		<%if(blnEsTablaUnoAUnoFk) {%>
		//PARA RELACION DE UNO A UNO
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.set<%=strIdGetSet%>(this.<%=strId%>_<%=strNombreTablaUnoAUnoPk.ToLower()%><%=strFK%>_<%=strIdGetSet%><%=strNombreTablaUnoAUnoPk%>);
		<%}%>
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		<%if(!blnEstablaModulo && !blnEsReporte) {%>
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}	
		
		<%=GetRelacionesEventoNuevoPreparar()%>
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);
			<%}%>
						
		} else if(Constantes.ISUSAEJBHOME) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);
			<%}%>
		}
		//ARCHITECTURE
		<%}%>
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBean<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,false);
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormulario<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>());
		}
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>(),classes);//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			<%if(blnConAdditional && strSufijoVersion.Equals("")){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.RecargarForm<%=GetNombreClaseC(TablaBase.ToString())%>(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
			<%} %>
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
						
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
				<%=GetCargarTablesRelacionadas(TablaBase,true)%>
			}
				
			//SI ES MANUAL
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			
			this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setRowSelectionInterval(this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(), this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>());
			<%} %>
			
			this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		<%if(EsSwing){%>
		}		
		<%} %>
	}
	
	<%if(EsSwing){%>				
	public void habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean isHabilitar) throws Exception {
		<% =SetVariablesHabilitarDeshabilitarSwing() %>	
		<% =SetVariablesHabilitarDeshabilitarSwingForeigKeys()%>
	};
	
	public void setDefaultControles<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		<% =SetVariablesDefaultSwing() %>	
	};
	
	<%} else {%>
		
	
	<%}%>
	
	public void habilitarDeshabilitarTipoMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setConGuardarRelaciones(true);			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEstaModoGuardarRelaciones(true);				
			<%if(EsSwing){%>
			this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			
			<%=GetHabilitarDeshabilitarTablesRelacionadas(TablaBase,true)%>		
			<%}%>
		} else {
			//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setConGuardarRelaciones(false);			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEstaModoGuardarRelaciones(false);						
			<%if(EsSwing){%>
			this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			
			<%=GetHabilitarDeshabilitarTablesRelacionadas(TablaBase,false)%>
			<%}%>
		}
	};
	
	public int getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s()) {
			<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(this.i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>)) {
			<%if(ConEjb){%>//<%}%>		existe=true;
			<%if(ConEjb){%>//<%}%>		break;
			<%if(ConEjb){%>//<%}%>	}
				
			<%if(ConEjb){%>//<%}%>	iIndice++;
			<%if(ConEjb){%>//<%}%>}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(this.i<%=strIdGetSet%>Nuevo<%=GetNombreClase(TablaBase.ToString())%>)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActual<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s()) {
			<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId())) {
			<%if(ConEjb){%>//<%}%>		existe=true;
			<%if(ConEjb){%>//<%}%>		break;
			<%if(ConEjb){%>//<%}%>	}
				
			<%if(ConEjb){%>//<%}%>	iIndice++;
			<%if(ConEjb){%>//<%}%>}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginal<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s()) {
			<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.get<%=GetNombreClaseC(TablaBase.ToString())%>Original().getId().equals(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original.getId())) {
			<%if(ConEjb){%>//<%}%>		existe=true;
			<%if(ConEjb){%>//<%}%>		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original.setId(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId());
			<%if(ConEjb){%>//<%}%>		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original.setVersionRow(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getVersionRow());
			<%if(ConEjb){%>//<%}%>		break;
			<%if(ConEjb){%>//<%}%>	}
				
			<%if(ConEjb){%>//<%}%>}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.get<%=GetNombreClaseC(TablaBase.ToString())%>Original().getId().equals(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original.getId())) {
					existe=true;
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original.setId(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId());
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Original.setVersionRow(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	<%if(EsSwing){%>
	public void cancelarNuevos<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esParaCancelar) throws Exception {
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux=new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=new <%=GetNombreClaseC(TablaBase.ToString())%>();
		
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s()) {
				<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId()<0) {
				<%if(ConEjb){%>//<%}%>		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
				<%if(ConEjb){%>//<%}%>	}		
				<%if(ConEjb){%>//<%}%>}
				<%if(ConEjb){%>//<%}%>this.i<%=strIdGetSet%>Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>=0L;
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().removeAll(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
					if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId()<0) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					}		
				}
				this.i<%=strIdGetSet%>Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>=0L;
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.removeAll(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%> 
					<%if(ConEjb){%>//<%}%>&& this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().size()>0
					) {
					<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().get(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().size() - 1);
				
					if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId()<0) {
						<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().remove(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size()>0) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.get(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size() - 1);
				
					if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId()<0) {
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.remove(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId()<0) {
			<%if(ConEjb){%>//<%}%>	this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().remove(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId()<0) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.remove(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			}
		}			
	}
	<%}%>
	
	public void setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux) throws Exception {
		<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux);
	}
	
	public void setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux) throws Exception {
		<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//<%if(EsSwing){%>if(this.validar<%=GetNombreClase(TablaBase.ToString())%>Actual()) {<%}%>
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
				<%if(!EsSwing){%>
				facesMessage=new FacesMessage(FacesMessage.SEVERITY_INFO,ConstantesJsp.SMENSAJEDATOSINGRESADOS,ConstantesJsp.SOK);				
				FacesContext.getCurrentInstance().addMessage(ConstantesJsp.SMENSAJES + <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME,facesMessage);
				this.sCssClassMensaje=ConstantesJsp.SCSSMENSAJEINFO;
				<%}%>
			//<%if(EsSwing){%>}<%}%>
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			<%if(EsSwing){%>if(this.validar<%=GetNombreClase(TablaBase.ToString())%>Actual()) {<%}%>
				if(!this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
					<%if(!EsSwing){%>
					facesMessage=new FacesMessage(FacesMessage.SEVERITY_INFO,ConstantesJsp.SMENSAJEDATOSACTUALIZADOS,ConstantesJsp.SOK);				
					FacesContext.getCurrentInstance().addMessage(ConstantesJsp.SMENSAJES + <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME,facesMessage);
					this.sCssClassMensaje=ConstantesJsp.SCSSMENSAJEINFO;
					<%}%>
				} else {					
					this.nuevo();
					this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			<%if(EsSwing){%>}<%}%>		
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			<%if(EsSwing){%>if(this.validar<%=GetNombreClase(TablaBase.ToString())%>Actual()) {<%}%>
				<%if(EsSwing){%>if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA <%=GetTituloNombreTableFromPropertiesC(TablaBase)%> ?", "MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>", JOptionPane.OK_CANCEL_OPTION) == 0) {<%}%>
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				<%if(EsSwing){%>}<%}%>
			
			<%if(!EsSwing){%>
			facesMessage=new FacesMessage(FacesMessage.SEVERITY_INFO,ConstantesJsp.SMENSAJEDATOSELIMINADOS,ConstantesJsp.SOK);				
			FacesContext.getCurrentInstance().addMessage(ConstantesJsp.SMENSAJES + <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME,facesMessage);
			this.sCssClassMensaje=ConstantesJsp.SCSSMENSAJEINFO;
			<%}%>
			<%if(EsSwing){%>}<%}%>
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
			<%if(!EsSwing){%>
			facesMessage=new FacesMessage(FacesMessage.SEVERITY_INFO,ConstantesJsp.SMENSAJEDATOSGUARDADOS,ConstantesJsp.SOK);				
			FacesContext.getCurrentInstance().addMessage(ConstantesJsp.SMENSAJES + <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME,facesMessage);
			this.sCssClassMensaje=ConstantesJsp.SCSSMENSAJEINFO;
			this.isEditarEnTabla=false;
			<%}%>			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>) throws Exception {
		<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.seleccionarAsignar(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>;
			
			<%if(!EsSwing){%>
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>= (<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.getRowData();
			<%}%>
			
			this.seleccionarAsignar(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			<%= UsarFuncionesSeleccionarActualComoAuxiliarForeignKeysConBusqueda()%>
			
			<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.quitarEspacios<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.arrDatoGeneral);
			<%}%>
			
			<%if(!EsSwing){%>			
			this.sVisibilidadTablaElementos="table-row";
			this.sVisibilidadTablaAcciones="table-row";
			<%}%>
			
			this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			<%=SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TablaBase)%>			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setsFuncionBusquedaRapida(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	<%=DefinirFuncionesSeleccionarActualForeignKeysConBusqueda()%>
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
			<%if(!EsSwing){%>
			if(this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.equals(true))	{	
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			}
			<%}%>
														
			<%if(!EsSwing){%>
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			<%}%>
			
			<%if(EsSwing){%>
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevos<%=GetNombreClaseC(TablaBase.ToString())%>(esParaCancelar);				
				this.cancelarNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(esParaCancelar);								
			}
			<%}%>
			
			<%if(EsSwing){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
			<%}%>
			
			this.inicializar<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializar<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		try {
			<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.inicializar<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			<%if(ConEjb){%>//<%}%>if(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().size()>0) {
			<%if(ConEjb){%>if(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.size()>0) {	<%}%>		
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporte<%=GetNombreClase(TablaBase.ToString())%>s(String sAccionBusqueda,<%=strTypeCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes<%if(ConSessionBeans){%>,<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%> <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>,<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home<%}%>) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		<%if(!EsSwing){%>
		Usuario usuarioActual=null;	
		FuncionesBeanFace funcionesBeanFace=new FuncionesBeanFace();
		
		if(httpSession.getAttribute(Usuario.class.getSimpleName().toLowerCase()+ConstantesServlet.SACTUAL)!=null) {
			usuarioActual=(Usuario)httpSession.getAttribute(Usuario.class.getSimpleName().toLowerCase()+ConstantesServlet.SACTUAL);
		<%}%>			
		
		
		<%if(EsSwing){%>
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		<%}%>
		
		iIdUsuarioSesion=usuarioActual.get<%=strIdGetSetSeguridad%>();
		<%if(!EsSwing){%>	
		} 
		<%}%>
		
		String sPathReportes="";
		
		<%if(!EsSwing){%>
		File reportFile=null;
		File imageFile=null;
		
		<%if(!EsSwing){%>
		imageFile= new File(servletContext.getRealPath("/Imagenes/Logos/LogoReporte.jpg"));
		<%}%>
	
		
		<%}else {%>
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		<%}%>
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(true) {//!isEsReporteRelaciones
				<%if(!EsSwing){%>
				if(!this.esReporteDinamico) {
					sPathReporteFinal="/Reportes/<%= Package%>/<%=Module.Replace(".","/").ToLower()%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetEsPaqueteRelativePathReporteParaReporteC(TablaBase,false)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = new File(servletContext.getRealPath(sPathReporteFinal));
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
				//reportFile = new File(servletContext.getRealPath(funcionesBeanFace.getAbsoluteApplicationUrl()+"/Reportes/<%=Module.Replace(".","/").ToLower()%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper"));
				<%}else{%>
				if(!this.esReporteDinamico) {
					sPathReporteFinal="<%//=Module.Replace(".","/")%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
				<%}%>
			} else {
				<%if(!EsSwing){%>
				sPathReporteFinal="Reportes/<%= Package%>/<%=Module.Replace(".","/")%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetNombreClase(TablaBase.ToString())%>MasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = new File(servletContext.getRealPath(sPathReporteFinal));
				//reportFile = new File(servletContext.getRealPath("Reportes/<%=Module.Replace(".","/")%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetNombreClase(TablaBase.ToString())%>MasterRelaciones"+this.sTipoReporteExtra+"Design.jasper"));
				sPathReportes=reportFile.getPath().replace(funcionesBeanFace.getAbsoluteApplicationUrl()+"/<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper", "");
				<%}else{%>
				sPathReporteFinal="<%//=Module.Replace(".","/")%><%=GetNombreClase(TablaBase.ToString())%>MasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("<%=GetNombreClase(TablaBase.ToString())%>MasterRelacionesDesign.jasper", "");
				<%}%>
			}
		} else {
			<%if(!EsSwing){%>
				sPathReporteFinal="/Reportes/<%= Package%>/<%=Module.Replace(".","/").ToLower()%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetEsPaqueteRelativePathReporteParaReporteC(TablaBase,false)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = new File(servletContext.getRealPath(sPathReporteFinal));				
				//reportFile = new File(servletContext.getRealPath(funcionesBeanFace.getAbsoluteApplicationUrl()+"/Reportes/<%=Module.Replace(".","/").ToLower()%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper"));
			<%}else{%>
				sPathReporteFinal="<%//=Module.Replace(".","/")%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
			<%}%>
		}
		
		<%if(!EsSwing){%>
		if (!reportFile.exists()) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		<%}else {%>
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		<%}%>
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.<%=strCorreccionGetUserName%>();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		<%}else{%>
		parameters.put("titulo","");
		<%}%>		
		parameters.put("subtitulo", "<%=strReporteDe%> <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>");		
		parameters.put("busquedapor", <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		<%if(!EsSwing){%>
		parameters.put("PATH_IMAGEN", imageFile.getPath());		
			<%if(blnTieneImagen){%>
		parameters.put("PATH_BASE_IMAGEN", imageFile.getPath().replace("/Imagenes/Logos/LogoReporte.jpg", ""));
			<%}%>
		<%}%>
		
		if(false) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		<%if(!EsSwing){%>
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile.getPath());
		<%}else {%>
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
		<%}%>
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(false) {//isEsReporteRelaciones
			<%if(blnTieneRelacionesFinal) {%>			
			<%//=GetClassClasesForeigKeysC(TablaBase,"\t")%>
			<%=GetClassClasesRelacionadasC(TablaBase,"\t",false,false,false)%>
			
			<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					<%if(ConEjb){%>/*<%}%>
					<%=GetNombreClase(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAuxiliar=new <%=GetNombreClase(TablaBase.ToString())%>Logic();
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAuxiliar.setDatosCliente(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getDatosCliente());				
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAuxiliar.set<%=GetNombreClaseC(TablaBase.ToString())%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes);
					
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAuxiliar.cargarRelacionesLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAuxiliar.get<%=GetNombreClaseC(TablaBase.ToString())%>s();
					
					//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getNewConnexionToDeep();
					
					//for (<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjeto(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes) {
					//	<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.deepLoad(<%=GetNombreClaseObjeto(TablaBase.ToString())%>, false, DeepLoadType.INCLUDE, classes);
					//}						
					//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.commitNewConnexionToDeep();
					<%if(ConEjb){%>*/<%}%>
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					<%if(ConEjb){%>//<%}%>//<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%if(ConSessionBeans){%>
				//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deepLoadsWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes, false, DeepLoadType.INCLUDE, classes,"", datosCliente);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.cargarRelacionesLote<%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes, datosCliente);
				<%}%>
			} else if(Constantes.ISUSAEJBHOME) {
				<%if(ConSessionBeans){%>
				//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deepLoadsWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes, false, DeepLoadType.INCLUDE, classes,"", datosCliente);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.cargarRelacionesLote<%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes, datosCliente);
				<%}%>
			}
			//ARCHITECTURE		
			
			<%}%>
		
			<%}%>
			
			<%if(EsSwing){%>
			<%=GetReporteClasesRelacionadas(TablaBase,"\t")%>
			<%}%>
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			<%//=GetClassClasesForeigKeysC(TablaBase,"\t")%>
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(true) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSource<%=GetNombreClase(TablaBase.ToString())%>=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			<%if(!blnEsReporteVista && !blnSinUsoDatos){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
			<%}%>
		} else {
			<%if(!blnEsReporteVista && !blnSinUsoDatos){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>.S_TIPOREPORTE_EXTRA="";
			<%}%>
		}
		
		<%if(!blnSinUsoDatos){%>
		jrbeanArrayDataSource<%=GetNombreClase(TablaBase.ToString())%>=new JRBeanArrayDataSource(<%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>.Traer<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>s(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes,classes).toArray());
		<%}%>
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSource<%=GetNombreClase(TablaBase.ToString())%>);
				
		<%if(!EsSwing){%>
		FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put(BaseHttpServlet.DEFAULT_JASPER_PRINT_SESSION_ATTRIBUTE, jasperPrint);
		
		if(sTipoArchivoReporte.equals("HtmlGenerar")) {
			
			PrintWriter out = httpServletResponse.getWriter();
			JRHtmlExporter exporter = new JRHtmlExporter();
				
			exporter.setParameter(JRExporterParameter.JASPER_PRINT, httpServletRequest.getSession().getAttribute(BaseHttpServlet.DEFAULT_JASPER_PRINT_SESSION_ATTRIBUTE));
			exporter.setParameter(JRExporterParameter.OUTPUT_WRITER, out);
			
			exporter.exportReport();
			
		}
		<%}else{%>
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(<%=GetNombreClaseC(TablaBase.ToString())%>Bean.Traer<%=GetNombreClaseC(TablaBase.ToString())%>Beans(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
		<%}%>
	}
	
	<%if(EsSwing){%>
	public void startProcess<%=GetNombreClase(TablaBase.ToString())%>() throws Exception {		
		this.startProcess<%=GetNombreClase(TablaBase.ToString())%>(true);
	}
	
	public void startProcess<%=GetNombreClase(TablaBase.ToString())%>(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,<%=GetPaneBusquedas(true)%> ,this.jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>, this.jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>,this.jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>, this.jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>, this.jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>,this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>,this.jmenuBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);		
		
		<%if(!blnConMinCodigoWeb) {%>	
		final JTabbedPane jTabbedPaneBusquedas<%=GetNombreClase(TablaBase.ToString())%>=<%=GetPaneBusquedas(true)%>; 
		<%} else {%>
		final JTabbedPane jTabbedPaneBusquedas<%=GetNombreClase(TablaBase.ToString())%>=new JTabbedPane();
		<%}%>
		
		final JPanel jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>;
		//final JScrollPane jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>=this.jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>;
		final JTable jTableDatos<%=GetNombreClase(TablaBase.ToString())%>=this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelCampos<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelCampos<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>;
		//final JScrollPane jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>=this.jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelAccionesFormulario<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelAccionesFormulario<%=GetNombreClase(TablaBase.ToString())%>;
		
		<%if(!blnConMinCodigoWeb) {%>		
		final JMenuBar jmenuBar<%=GetNombreClase(TablaBase.ToString())%>=this.jmenuBar<%=GetNombreClase(TablaBase.ToString())%>;
		final JMenuBar jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=this.jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>;
		final JToolBar jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>=this.jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>;
		final JToolBar jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=this.jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>;
		<%} else {%>
		final JMenuBar jmenuBar<%=GetNombreClase(TablaBase.ToString())%>=new JMenuBar();
		final JMenuBar jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=new JMenuBar();
		final JToolBar jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>=new JToolBar();
		final JToolBar jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=new JToolBar();		
		<%}%>
		
		FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedas<%=GetNombreClase(TablaBase.ToString())%> ,jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>,jTableDatos<%=GetNombreClase(TablaBase.ToString())%>, /*jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>,*/jPanelCampos<%=GetNombreClase(TablaBase.ToString())%>,jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>, /*jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>,*/ jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>,jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>,jmenuBar<%=GetNombreClaseC(TablaBase.ToString())%>,jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,jTtoolBar<%=GetNombreClaseC(TablaBase.ToString())%>,jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		startProcess();//this.
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,<%=GetPaneBusquedas(false)%> ,jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>, jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>,jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>, jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>, jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>,jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>,jmenuBar<%=GetNombreClaseC(TablaBase.ToString())%>,jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,jTtoolBar<%=GetNombreClaseC(TablaBase.ToString())%>,jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcess<%=GetNombreClase(TablaBase.ToString())%>() {// throws Exception 
		this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>(true);
	}
	
	public void finishProcess<%=GetNombreClase(TablaBase.ToString())%>(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,<%=GetPaneBusquedas(true)%> ,this.jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>, this.jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>,this.jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>, this.jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>, this.jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>,this.jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>,this.jmenuBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBar<%=GetNombreClaseC(TablaBase.ToString())%>,this.jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);		
		
		<%if(!blnConMinCodigoWeb) {%>
		final JTabbedPane jTabbedPaneBusquedas<%=GetNombreClase(TablaBase.ToString())%>=<%=GetPaneBusquedas(true)%>; 
		<%} else {%>
		final JTabbedPane jTabbedPaneBusquedas<%=GetNombreClase(TablaBase.ToString())%>=new JTabbedPane();
		<%}%>
		
		final JPanel jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>;
		//final JScrollPane jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>=this.jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>;
		final JTable jTableDatos<%=GetNombreClase(TablaBase.ToString())%>=this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelCampos<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelCampos<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>;
		//final JScrollPane jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>=this.jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>;
		final JPanel jPanelAccionesFormulario<%=GetNombreClase(TablaBase.ToString())%>=this.jPanelAccionesFormulario<%=GetNombreClase(TablaBase.ToString())%>;
		
		<%if(!blnConMinCodigoWeb) {%>
		final JMenuBar jmenuBar<%=GetNombreClase(TablaBase.ToString())%>=this.jmenuBar<%=GetNombreClase(TablaBase.ToString())%>;
		final JMenuBar jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=this.jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>;
		final JToolBar jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>=this.jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>;
		final JToolBar jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=this.jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>;
		<%} else {%>
		final JMenuBar jmenuBar<%=GetNombreClase(TablaBase.ToString())%>=new JMenuBar();
		final JMenuBar jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=new JMenuBar();
		final JToolBar jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>=new JToolBar();
		final JToolBar jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>=new JToolBar();		
		<%}%>
		
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(true,jTabbedPaneBusquedas<%=GetNombreClase(TablaBase.ToString())%> ,jPanelParametrosReportes<%=GetNombreClase(TablaBase.ToString())%>, jTableDatos<%=GetNombreClase(TablaBase.ToString())%>,/*jScrollPanelDatos<%=GetNombreClase(TablaBase.ToString())%>,*/jPanelCampos<%=GetNombreClase(TablaBase.ToString())%>,jPanelPaginacion<%=GetNombreClase(TablaBase.ToString())%>, /*jScrollPanelDatosEdicion<%=GetNombreClase(TablaBase.ToString())%>,*/ jPanelAcciones<%=GetNombreClase(TablaBase.ToString())%>,jPanelAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>,jmenuBar<%=GetNombreClaseC(TablaBase.ToString())%>,jmenuBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>,jTtoolBar<%=GetNombreClaseC(TablaBase.ToString())%>,jTtoolBarDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);		
						
							finishProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
	}
	
	/*
	public void habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenu<%=GetNombreClaseC(TablaBase.ToString())%>(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBar<%=GetNombreClase(TablaBase.ToString())%>,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalle<%=GetNombreClase(TablaBase.ToString())%>,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenu<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBar<%=GetNombreClase(TablaBase.ToString())%>,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalle<%=GetNombreClase(TablaBase.ToString())%>,esHabilitar,1,1);
		}
	}
	*/
	
	<%}%>
	
	<%if(blnEsAutoReferenciada) {%>
	public void getTodos<%=GetNombreClaseC(TablaBase.ToString())%>Arbol() throws Exception {	
		ArrayList<String> arrColumnasGlobales=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getArrayColumnasGlobales<%=GetNombreClaseC(TablaBase.ToString())%>(this.arrDatoGeneral);
		
		String  finalQueryGlobal=Funciones.GetWhereGlobalConstants(<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>this.parametroGeneralUsuario,this.moduloActual,<%}%>true,false,arrColumnasGlobales);
		
		this.pagination=new Pagination();
		
		this.pagination.setiFirstResult(-1);
		this.pagination.setiMaxResults(-1);
		
		this.cargarDatosCliente();
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(finalQueryGlobal+"",this.pagination);	
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sArbol=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s();
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sArbol=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(finalQueryGlobal+"",this.pagination,this.datosCliente);
			this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sArbol);
			<%}%>
		} else if(Constantes.ISUSAEJBHOME) {
			<%if(ConSessionBeans){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sArbol=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(finalQueryGlobal+"",this.pagination,this.datosCliente);
			this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sArbol);
			<%}%>
		}
		//ARCHITECTURE
	}
	<%}%>		
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		<%if(true/*!GetEsReporteFromPropertiesC(TablaBase)*/) { //SI ES REPORTE DESHABILITO%>		
		String  finalQueryPaginacion=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>.getsFinalQuery<%=GetNombreClaseC(TablaBase.ToString())%>();
		String  finalQueryPaginacionTodos=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>.getsFinalQuery<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=<%=GetNombreClase(TablaBase.ToString())%><%=strClaseConstantesFunciones%>.getArrayColumnasGlobalesNo<%=GetNombreClaseC(TablaBase.ToString())%>(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=<%=GetNombreClase(TablaBase.ToString())%><%=strClaseConstantesFunciones%>.getArrayColumnasGlobales<%=GetNombreClaseC(TablaBase.ToString())%>(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
		<%if(!GetModuloDominioConstanteFromTableFromPropertiesC(TablaBase).Equals(String.Empty)) {%>
			//SE CAMBIA FUNCIONALIDAD DE MODULO POR ALGUNO PRIORITARIO
			Modulo moduloActualAux=new Modulo();
			
			moduloActualAux.setId(ModuloConstantesFuncionesAdditional.<%=GetModuloDominioConstanteFromTableFromPropertiesC(TablaBase)%>);
		<%}%>
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,<%if(GetModuloDominioConstanteFromTableFromPropertiesC(TablaBase).Equals(String.Empty)) {%>this.moduloActual<%}else{%>moduloActualAux<%}%>,!esBusqueda,esBusqueda,arrColumnasGlobales);
		
		String sOrderBy="";
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		}
		<%=strCommentMinCodigoWebFin%>
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		<%if(!EsSwing){%>
		<%=GetSessionKeyQuery()%>
		<%}%>
		
		//INICIALIZA ELIMINADOS
		this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>sEliminados= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
		<%if(!EsSwing){%>
		//HttpSession httpSession = httpServletRequest.getSession();
		<%}%>
				
		try	{		
			
			<%if(EsSwing){%>
			//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
		
			<%if(!EsSwing){%>
			
			<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>");
			<%}%>
			
			<%} else {%>
				///*<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>*/this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
			<%}%>
			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getClassesForeignKeysOf<%=GetNombreClaseC(TablaBase.ToString())%>(new ArrayList<Classe>(),DeepLoadType.NONE);
			
			<%//=GetClassClasesRelacionadasForeigKeys()%>
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/<%=GetNombreClaseObjetoC(TablaBase.ToString())%>."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
			
			<%if(!EsSwing){%>
			if(httpServletRequest.getRemoteUser()!=null){datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());}
			if(httpServletRequest.getRemoteHost()!=null){datosCliente.setsNamePC(httpServletRequest.getRemoteHost());}
			if(httpServletRequest.getRemoteAddr()!=null){datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());}							
			<%}%>
				
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosCliente(this.datosCliente);
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosDeep(this.datosDeep);
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setIsConDeep(true);
			
			<%if(blnTieneProcesoBusqueda) {%>
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setIsConProcesoBusqueda(true);
			<%}%>
			
			<%if(!blnEsReporte){%>
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>DataAccess().setIsForForeingsKeysDataRelationships(true);
			<%}%>
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					this.sFinalQueryGeneral="";
				}
				
				<%if(!(blnEsProceso /*|| GetSinRecargarInformacionTableFromPropertiesC(TablaBase)*/)) {%>					
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%if(ConEjb){%>//<%}%><%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(this.sFinalQueryGeneral + <%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryGlobal + finalQueryPaginacionTodos,pagination<%if(blnEsReporte){%>,this.parametroGeneralUsuario,this.moduloActual<%}%>);
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%if(ConSessionBeans){%>
					<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.sFinalQueryGeneral + <%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryGlobal + finalQueryPaginacionTodos,this.pagination,this.datosCliente<%if(blnEsReporte){%>,this.parametroGeneralUsuario,this.moduloActual<%}%>);
					this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
					<%}%>
				} else if(Constantes.ISUSAEJBHOME) {
					<%if(ConSessionBeans){%>
					<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.sFinalQueryGeneral + <%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryGlobal + finalQueryPaginacionTodos,this.pagination,this.datosCliente<%if(blnEsReporte){%>,this.parametroGeneralUsuario,this.moduloActual<%}%>);
					this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
					<%}%>
				}
				//ARCHITECTURE
				
				<%if(ConEjb){%>//<%}%>if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()==null|| <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size()==0)	{
				<%if(ConEjb){%>if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s==null|| <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size()==0) {	<%}%>	
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
							<%if(ConEjb){%>//<%}%><%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux.addAll(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
							<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux.addAll(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							<%if(ConEjb){%>//<%}%><%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryGlobal+"",this.pagination<%if(blnEsReporte){%>,this.parametroGeneralUsuario,this.moduloActual<%}%>);												
						} else if(Constantes.ISUSAEJBREMOTE) {
							<%if(ConSessionBeans){%>
							<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryGlobal+"",this.pagination,this.datosCliente<%if(blnEsReporte){%>,this.parametroGeneralUsuario,this.moduloActual<%}%>);
							this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
							<%}%>
						} else if(Constantes.ISUSAEJBHOME) {
							<%if(ConSessionBeans){%>
							<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(<%=GetNombreOrderColumnFromPropertiesC(TablaBase)%>finalQueryGlobal+"",this.pagination,this.datosCliente<%if(blnEsReporte){%>,this.parametroGeneralUsuario,this.moduloActual<%}%>);
							this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
							<%}%>
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporte<%=GetNombreClase(TablaBase.ToString())%>s("Todos",<%if(ConEjb){%>/*<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()<%if(ConEjb){%>*/ <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s <%}%> <%if(ConSessionBeans){%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome<%}%>);
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClaseC(TablaBase.ToString())%>s(new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>);					
							<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().addAll(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
							<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.addAll(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
				<%}%>
			}
			<%if(!blnEsReporte){%>
			else if(sAccionBusqueda.equals("Por<%=strIdGetSet%>")) {
				Long <%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=this.idActual;
				
				} else if(this.<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual!=null && this.<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual!=0L) {
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual;
				}
				
				<%if(!EsSwing){%>
				
				if(!<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey().equals(0L)) {
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey();	
				
					//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey");					
				
				} else if(!<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras().equals(0L)) {
					<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras();	
				
					//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras");
				}
				<%}%>
					
				this.sDetalleReporte=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getDetalleIndicePor<%=strIdGetSet%>(<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>);
				
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					<%if(ConEjb){%>//<%}%><%=strCommentReporte%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getEntityWithConnection(<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>);
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%if(ConSessionBeans){%>
					<%=strCommentReporte%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getEntity(<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>,this.datosCliente);
					this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					<%}%>
				} else if(Constantes.ISUSAEJBHOME) {
					<%if(ConSessionBeans){%>
					<%=strCommentReporte%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getEntity(<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>,this.datosCliente);
					this.setEstadosIniciales<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					<%}%>
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%><%=strCommentReporte%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClaseC(TablaBase.ToString())%>s(new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>);
					<%if(ConEjb){%>//<%}%><%=strCommentReporte%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				}
				
				<%if(ConEjb){%>//<%}%><%=strCommentReporte%>if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>()==null)	{
				<%if(ConEjb){%>if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>==null) {	<%}%>	
				
				<%=strCommentReporte%>}			
			}
			<%}%>
			
		<%=GetXmlBusquedasIndicesTablas()%> 
		
		<%if(!ConEjb){%>		
		<%//=GetXmlBusquedasIndicesTablasCompuestos()%> 	
		<%}%>
		
		<%if(GetConSeleccionarTodosDefectoTableFromPropertiesC(TablaBase)){%>
		this.seleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>(true);
		<%}%>
		
		<%if(EsSwing){%>
		this.redimensionarTablaDatos();
		<%}%>		
		//this.refrescarForeignKeysDescripciones<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		<%if(blnConTotales){%>
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%><%=strCommentReporte%>this.arrDatoGeneralTotales=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getTotalesLista<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getTotalesLista<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		}
		*/
		<%}%>				
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		<%if(!EsSwing){%>
		
			<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
			FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>",<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			<%}%>			
		<%} else {%>
		<%if(blnEsReporte && blnEsProceso && blnSinUsoDatos) {%>
		JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","PROCESOS",JOptionPane.INFORMATION_MESSAGE);
		
		<%} %>
		<%} %>	
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
			<%if(EsSwing){%>
      		//this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
      	}
		
		<%} else if(false){%>
		
		this.pagination=new Pagination();
		this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
		this.pagination.setiMaxResults(this.iNumeroPaginacion);
				
		this.cargarDatosCliente();
		
		//AQUI SE USA PARA REPORTE
		<%=strCommentReporte%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%>Additionable.get<%=GetNombreClase(TablaBase.ToString())%>sBusquedaPorParamFechaInicioPorParamFechaFinWithConnection("", this.pagination, datosCliente, this.timParamFechaInicioBusquedaPorParamFechaInicioPorParamFechaFin, this.timParamFechaFinBusquedaPorParamFechaInicioPorParamFechaFin);
	
		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			this.generarReporte<%=GetNombreClase(TablaBase.ToString())%>s("Todos",/*<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s()*/ <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s<%if(ConSessionBeans){%>, <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%>Additionable,<%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%>AdditionableHome<%}%>);		
		}
		
		<%}%>
	}				
	<%if(EsSwing){%>
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			<%if(ConEjb){%>//<%}%>iSizeTabla=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			<%if(ConEjb){%>//<%}%>iSizeTabla=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	<%}%>
	
	<%=GetSetNoStandardParametrosIndiceFk()%>		
	public Boolean permiteMantenimiento(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>) {
		Boolean permite=true;
		
		if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		<%if(blnConTotales){%>
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%><%=strCommentReporte%>this.arrDatoGeneralTotales=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getTotalesLista<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getTotalesLista<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
		}
		<%}%>
	}
	
	<%=strCommentMinCodigoWebIni%>
	public void traerValoresTablaOrderBy() throws Exception {
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.arrOrderBy=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getOrderByLista<%=GetNombreClaseC(TablaBase.ToString())%>();							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrOrderBy=<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.getOrderByLista<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
		}
	}
	<%=strCommentMinCodigoWebFin%>
	
	public void crearFilaTotales() throws Exception {
		//SI NO ES UNO A UNO SE CREA FILA TOTALES
		<%if(!blnEsTablaUnoAUnoFk) {%>
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux=new <%=GetNombreClaseC(TablaBase.ToString())%>();
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setsType(Constantes2.S_TOTALES);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsNew(false);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsChanged(false);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsDeleted(false);
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%><%=strCommentReporte%><%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.TotalizarValoresFila<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
			
			<%if(ConEjb){%>//<%}%><%=strCommentReporte%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.TotalizarValoresFila<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
		}
		<%}%>
	}
	
	public void quitarFilaTotales() throws Exception {
		<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales=new <%=GetNombreClaseC(TablaBase.ToString())%>();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
			<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getsType().equals(Constantes2.S_TOTALES)) {
			<%if(ConEjb){%>//<%}%>		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
			<%if(ConEjb){%>//<%}%>		existe=true;
			<%if(ConEjb){%>//<%}%>		break;
			<%if(ConEjb){%>//<%}%>	}
			<%if(ConEjb){%>//<%}%>}
			
			<%if(ConEjb){%>//<%}%>if(existe) {
			<%if(ConEjb){%>//<%}%>	this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().remove(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales);
			<%if(ConEjb){%>//<%}%>}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getsType().equals(Constantes2.S_TOTALES)) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.remove(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales=new <%=GetNombreClaseC(TablaBase.ToString())%>();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
			<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getsType().equals(Constantes2.S_TOTALES)) {
			<%if(ConEjb){%>//<%}%>		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
			<%if(ConEjb){%>//<%}%>		existe=true;
			<%if(ConEjb){%>//<%}%>		break;
			<%if(ConEjb){%>//<%}%>	}
			<%if(ConEjb){%>//<%}%>}
			
			<%if(ConEjb){%>//<%}%>if(existe) {
			<%if(ConEjb){%>//<%}%>	<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.TotalizarValoresFila<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales);
			<%if(ConEjb){%>//<%}%>}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getsType().equals(Constantes2.S_TOTALES)) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.TotalizarValoresFila<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Totales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}	
	}		
	
	<%if(!blnConMinCodigoWeb){%>
	<%= GetIndicesTablasFacesClases() %>
	<%}%>
	
	<%if(EsSwing){%>
	<%if(!blnConMinCodigoWeb){%>
	<%= GetIndicesTablasClases() %>
	<%}%>
	<%}%>
	
	<% if(!blnEsReporte){%>
	<%if(!ConEjb){%>
	<%if(GenerarTipoGeneracionC(strTipoGeneracionCompuestos,TiposGeneracion)) {%>
	
	<%= GetIndicesTablasClasesCompuestos() %>
		
	<%=GetDefinicionVariableClasesCompuestos() %>
	
	<%}%>
	<%}%>	
	<%}%>	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			<%=strCommentReporte%>this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
	public void inicializarPermisos<%=GetNombreClase(TablaBase.ToString())%>() {
		this.isPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoPaginacionMedio<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoPaginacionAlto<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoPaginacionTodo<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoCopiar<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoDuplicar<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=false;		
	}
	<%} else { %>
	public void inicializarPermisos<%=GetNombreClase(TablaBase.ToString())%>() {
		this.isPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=true;
		this.isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=true;
		this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=true;
		this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoPaginacionMedio<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoPaginacionAlto<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoPaginacionTodo<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoCopiar<%=GetNombreClase(TablaBase.ToString())%>=false;		
		this.isPermisoDuplicar<%=GetNombreClase(TablaBase.ToString())%>=false;
		this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=false;
	}
	<%}%>
	
	public void setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>(Boolean isPermiso) {
		this.isPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		this.isPermisoPaginacionMedio<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		this.isPermisoPaginacionAlto<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		this.isPermisoPaginacionTodo<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		this.isPermisoCopiar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		this.isPermisoDuplicar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuario<%=GetNombreClase(TablaBase.ToString())%>(Boolean isPermiso) {
		//this.isPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		this.isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		//this.isPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		//this.isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		//this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		//this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		//this.isPermisoPaginacionMedio<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		//this.isPermisoPaginacionAlto<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		//this.isPermisoPaginacionTodo<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		//this.isPermisoCopiar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;		
		//this.isPermisoDuplicar<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
		//this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=isPermiso;
	}
	
	public void inicializarSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas() throws Exception {
		<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		<%=GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase,"")%>
		
		if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistema<%=strReturnGeneral%>.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
				opcionsFinal=sistemaAdditionable.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBHOME) {
				opcionsFinal=sistemaAdditionableHome.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		<%=GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(TablaBase)%>
		
		<%//if(!EsSwing){%>
		<%//=GetSetVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase)%>
		<%//}%>
		<%}%>
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWeb<%=GetNombreClase(TablaBase.ToString())%>(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
			tienePermisos=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBHOME) {
			tienePermisos=sistemaAdditionableHome.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas(Boolean conPermiso) throws Exception {
		<%=GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(TablaBase,true)%>
	}
	
	public Boolean verificarGetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcion<%=GetNombreClase(TablaBase.ToString())%>ClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas() throws Exception {
		<%if(EsSwing){%>
		<%=GetSetVariablesTabsNavegacionTablasClasesRelacionadas(TablaBase)%>
		<%}%>
	}
	
	public void setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>() throws Exception {
		<%//if(!GetEsReporteFromPropertiesC(TablaBase) && !EsSwing) { //SI ES REPORTE DESHABILITO%>
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistema<%=strReturnGeneral%>.getPerfilOpcion();
			
		} else {
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				<%if(ConEjb){%>//<%}%><%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>perfilOpcionUsuario=sistemaAdditionable.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>perfilOpcionUsuario=sistemaAdditionableHome.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION,idOpcion);				
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.get<%=strIdGetSetSeguridad%>()>0) {
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>ingreso()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>modificacion()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>;
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>eliminacion()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>guardar_cambios()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoConsulta<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>consulta()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>busqueda()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoTodo<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>todo()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>reporte()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>orden()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoPaginacionMedio<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>paginacion_medio()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoPaginacionAlto<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>paginacion_alto()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoPaginacionTodo<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>paginacion_todo()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoCopiar<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>copiar()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoDuplicar<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>duplicar()||perfilOpcionUsuario.get<%=strField_%>todo();
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoOrden<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get<%=strField_%>orden()||perfilOpcionUsuario.get<%=strField_%>todo();
			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		<%=strGlobalSeguridadCommentNo%>
		//BYDAN_COMENTAR
		//this.setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>(true);		
		<%//}%>
	}
	
	public void setAccionesUsuario<%=GetNombreClase(TablaBase.ToString())%>(Boolean esParaAccionesFormulario) throws Exception {
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>				
			this.accions=new ArrayList<Accion>();
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistema<%=strReturnGeneral%>.getAccions();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%if(ConEjb){%>//<%}%>this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
					this.accions=sistemaAdditionable.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBHOME) {
					this.accions=sistemaAdditionableHome.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					<%if(EsSwing){%>
					this.tiposAcciones.add(reporte);
					<%} else {%>
					this.tiposAcciones.add(FuncionesJsp.traerSelectItemJspFromReporte(reporte));
					<%}%>
				}
			}	
			
			<%=GetAccionesFromDescripcion(TablaBase,false)%>
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistema<%=strReturnGeneral%>.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%if(ConEjb){%>//<%}%>this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
					this.accionsFormulario=sistemaAdditionable.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBHOME) {
					this.accionsFormulario=sistemaAdditionableHome.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					<%if(EsSwing){%>
					this.tiposAccionesFormulario.add(reporte);
					<%} else {%>
					this.tiposAccionesFormulario.add(FuncionesJsp.traerSelectItemJspFromReporte(reporte));
					<%}%>
				}
			}	
			<%}%>
			
			<%=GetAccionesFromDescripcion(TablaBase,true)%>
		}				
	}	 	
	
	public void setRelacionesUsuario<%=GetNombreClase(TablaBase.ToString())%>() throws Exception {
		Reporte reporte=null;
		
		<%=GetNavegacionColumnsTablaTablasClasesRelacionadasC(TablaBase,false,false,false,false,false,true,false,EsSwing)%>
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		<%if(EsSwing){%>
		this.tiposRelaciones.add(reporte);
		<%} else {%>
		this.tiposRelaciones.add(FuncionesJsp.traerSelectItemJspFromReporte(reporte));
		<%}%>			
		*/
	}	
	
	<%if(blnTieneSeguridadCampo){%>
	public void setPermisosUsuarioCampos<%=GetNombreClase(TablaBase.ToString())%>() throws Exception {
		this.perfilCampos=new ArrayList<PerfilCampo>();
		
		
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			<%if(ConEjb){%>//<%}%><%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.perfilCampos==sistemaLogicAdditional.traerPermisosPaginaWebPerfilCampo(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION);				
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.perfilCampos=sistemaAdditionable.traerPermisosPaginaWebPerfilCampo(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION);				
		} else if(Constantes.ISUSAEJBHOME) {
			<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.perfilCampos=sistemaAdditionableHome.traerPermisosPaginaWebPerfilCampo(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION);				
		}
			
		if(this.perfilCampos!=null && this.perfilCampos.size()>0) {
			//<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get"+strField_+"isIngreso()||perfilOpcionUsuario.get"+strField_+"isTodo();
			//<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=perfilOpcionUsuario.get"+strField_+"isModificacion()||perfilOpcionUsuario.get"+strField_+"isTodo();
			
			<%=SetSeguridadCampoVariablesClase(TablaBase)%>
		}
		
	}	 	
	
	<%=GetSeguridadCampoVariablesClase(TablaBase)%>
	<%}%>
		
	<%if(blnTieneForeignKey){%>
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	<%}%>
	public void inicializarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas()throws Exception {
		try	{						
			<%=CallInicializarFuncionesArrayForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			Modulo  moduloActualAux=new Modulo();
			<%}%>
			
			<%if(EsSwing){%>
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISLOAD_FKLOTE) {
			<%} else {%>
			if(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.ISLOAD_FKLOTE) {
			<%}%>	
				<%if(!blnEsReporte){%>
				this.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(false);
				<%}%>
			} else {
			<%//=CallFuncionesArrayForeignKeysV0()%>
			<%=CallFuncionesForeignKeysLlamar("Listas","\t\t\t")%>
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	<%=CallFuncionesArrayForeignKeys()%>
	
	<%if(!blnEsReporte){%>
	public void cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			Modulo  moduloActualAux=new Modulo();
			<%}%>
			
			<%if(blnTieneForeignKey) {%>
			
			<%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%>();
						
			<%=CallFuncionesArrayForeignKeysLote()%>
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(<%=VariablesStringForeignKeysLote(false)%>);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%if(ConSessionBeans){%>
				<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(this.datosCliente,<%=VariablesStringForeignKeysLote(false)%>);
				<%}%>
			} else if(Constantes.ISUSAEJBHOME) {
				<%if(ConSessionBeans){%>
				<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(this.datosCliente,<%=VariablesStringForeignKeysLote(false)%>);
				<%}%>
			}			
			//ARCHITECTURE
			
			<%=SetGetVariablesForeignKeys()%>
			
			<%}%>
			
		} catch(Exception e) {
			throw e;
		}		
	}
	<%}%>
	
	public void addItemDefectoCombosTodos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try {
			<%=CallFuncionesForeignKeysLlamar("AddDefecto","\t\t")%>
			<%//=GetAddItemDefectoFrameColumnsVariablestrForeignKeysV0()%>
		} catch(Exception e) {
			throw e;
		}		
	}
	
	<%=GetAddItemDefectoFrameColumnsVariablestrForeignKeys()%>
	
	public void initActionsCombosTodos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try {
			<%if(EsSwing){%>
			<%=CallFuncionesForeignKeysLlamar("InitActions","\t\t")%>
			<%//=GetInitActionsFrameColumnsVariablestrForeignKeys(false)%>
			<%} else {%>
			<%}%>
		} catch(Exception e) {
			throw e;
		}		
	}
	
	<%=GetProcesarActionsFrameColumnsVariablestrForeignKeys()%>
	
	<%=GetInitActionsFrameColumnsVariablestrForeignKeys(false)%>
			
	public void setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			<%=GetCallFuncionesSetActualComboForeignKeys(true,true,false)%>
			
			<%=GetCallFuncionesSetActualFechas(true)%>
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormulario<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>)throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboForeignKeys(false,false,true)%>			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBean<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboForeignKeys(false,false,false)%>			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboGlobalAuxiliarForeignKeys()%>
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboDefaultForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboParametroForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}
	}		
	
	<%if(!EsSwing){%>
	<%if(EsVersionRichFaces4C(RichFaces_Version)){%>
	@ManagedProperty(value="#{usuarioSessionBeanFace}")
	protected UsuarioSessionBeanFace usuarioSessionBeanFace;

	public UsuarioSessionBeanFace getUsuarioSessionBeanFace() {
		return usuarioSessionBeanFace;
	}

	public void setUsuarioSessionBeanFace(UsuarioSessionBeanFace usuarioSessionBeanFace) {
		this.usuarioSessionBeanFace = usuarioSessionBeanFace;
	}
	
	@PostConstruct
    public void init() throws Exception {
		this.constructor<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>(true,true,false,true);
    }
	<%}%>
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>() throws Exception {
		//this(true,true,false);
	}
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>(Boolean cargarCombosDependencia,Boolean cargarTodosDatos,Boolean conGuardarRelaciones,Boolean blncargarCombostrForeignKey) throws Exception {
		this.constructor<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>(cargarCombosDependencia,cargarTodosDatos,conGuardarRelaciones,blncargarCombostrForeignKey);
	}		
	
	public void inicializarSessionVariables<%=GetNombreClase(TablaBase.ToString())%>(Boolean cargarCombosDependencia,Boolean cargarTodosDatos,Boolean conGuardarRelaciones,Boolean blncargarCombostrForeignKey) {		
		//VERIFICAR NUEVAMENTE, IGUAL SE DEBE EJECUTAR UNA VEZ EN CONSTRUCTOR
		if(this.usuarioSessionBeanFace.getIsLoadPageFromTree()) {				
			this.usuarioSessionBeanFace.setIsLoadPageFromTree(false);
				
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.inicializar<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
				
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setisPaginaPopup(true);
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setPaginaPopupVariables(false);
			
			//TEMPORAL HASTA DEFINIR MANTENIMIENTO RELACIONES
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setConGuardarRelaciones(conGuardarRelaciones);
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEstaModoGuardarRelaciones(conGuardarRelaciones);
								
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEsGuardarRelacionado(false);
			//TEMPORAL HASTA DEFINIR MANTENIMIENTO RELACIONES FIN
				
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setsPathNavegacionActual(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO);
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setisPermiteRecargarInformacion(true);				
			
			//INICIALIZAR SESSION RELACIONADAS
			<%=GetNavegacionTablasRelacionadasClasesRelacionadasControllerC(TablaBase,true,true,false,ConEjb,EsSwing,GeneracionPorModuloUnico)%>
		}		
	}
		
	<%=GetRecargarActionsFrameColumnsVariablestrForeignKeys()%>
	
	<%=GetCallInitActionsFrameColumnsVariablestrForeignKeys()%>		
	
	public void constructor<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>(Boolean cargarCombosDependencia,Boolean cargarTodosDatos,Boolean conGuardarRelaciones,Boolean blncargarCombostrForeignKey) throws Exception
	<%}else{%>					
	public void cargarCombos<%=strParametro%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			<%=CallFuncionesArrayParametros()%>
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	<%if(blnTieneForeignKey){%>
	<%}%>
	public void cargarCombosFrame<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try {
			<%=GetCargarCombosFrameColumnsVariablestrForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void setItemDefectoCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try {
			<%=GetSetItemDefectoFrameColumnsVariablestrForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	<%=GetCallInitActionsFrameColumnsVariablestrForeignKeys()%>
	
	<%=GetRecargarActionsFrameColumnsVariablestrForeignKeys()%>

	public <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>(); 
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>(); 
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strReturnGeneral%>(); 
		
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setConGuardarRelaciones(conGuardarRelaciones);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoBeanSwing%>JInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
	<%}%>
    {
		<%if(EsSwing){%>
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		<%}%>
		
		try {
			
			this.permiteRecargarForm=false;
			
			<%if(EsSwing){%>
			this.startProcess<%=GetNombreClase(TablaBase.ToString())%>(true);
			<%}%>
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			<%if(blnEsGuardarRelaciones){%>
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			<%}%>
			
			<%if(!EsSwing){%>
			this.inicializarSessionVariables<%=GetNombreClase(TablaBase.ToString())%>(cargarCombosDependencia,cargarTodosDatos,conGuardarRelaciones,blncargarCombostrForeignKey);
			<%}%>
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>(); 
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strReturnGeneral%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strReturnGeneral%>(); 
		
			<%if(EsSwing){%>
			<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>this.parametroGeneralSg,this.moduloActual,<%}%>this.usuarioActual,"<%=GetTituloNombreTableFromPropertiesC(TablaBase)%> <%=strMantenimiento%>",paginaTipo));			
			<%}%>
			
			this.conTotales=false;
			
			<%if(TieneFuncionalidadDatosTotalesC(TablaBase)){%>
			this.conTotales=true;
			<%}%>
			
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s = new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux = new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
			
			<%if(!blnEsReporte){%>
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
			<%} else {%>
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetTablaModuloReporteC(TablaBase)%>Logic<%=GetAdditionalTablaModuloReporteC(TablaBase)%>();
			<%} %>
			
			//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setConGuardarRelaciones(conGuardarRelaciones);
			//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setEsGuardarRelacionado(esGuardarRelacionado);
			
			<%if(EsSwing){%>
			this.jDesktopPane=jdesktopPane;
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
				
				if(!this.conCargarMinimo) {
					<%=strCommentMinCodigoWebIni%>
					if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>);	
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>);		
					}
					<%=strCommentMinCodigoWebFin%>
				}
				
				<%if(blnConTotales){%>
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>);
				<%}%>
				
				if(!this.conCargarMinimo) {
					<%=strCommentMinCodigoWebIni%>
					if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>);
					}
					<%=strCommentMinCodigoWebFin%>
				}
			}
			
			//DETALLE DATOS
			this.jDesktopPane.add(this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);						
			
			if(!this.conCargarMinimo) {
				<%=strCommentMinCodigoWebIni%>
					if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					//REPORTE DINAMICO
					this.jDesktopPane.add(this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>);
					this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
					this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
					
					//IMPORTACION
					this.jDesktopPane.add(this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>);
					this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
					this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
				}
				<%=strCommentMinCodigoWebFin%>
			}
			
			<%if(blnConTotales){%>
			//TOTALES
			this.jDesktopPane.add(this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
			<%}%>
			
			if(!this.conCargarMinimo) {
				<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					this.jDesktopPane.add(this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>);
					this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
					this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
				}
				<%=strCommentMinCodigoWebFin%>
			}
			
			<%if(blnEsAutoReferenciada){%>
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>sArbol= new <%=strTypeNewCollection%><<%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>);    		
			}
			
			this.jDesktopPane.add(this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);						
			
			if(!esParaBusquedaForeignKey) {
				this.getTodos<%=GetNombreClaseC(TablaBase.ToString())%>Arbol();
			}			
			<%}%>
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			<%}%>			
			
			<%if(!EsSwing){%>
			this.servletContext=(ServletContext)FacesContext.getCurrentInstance().getExternalContext().getContext();
			this.httpServletRequest=(HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();
			this.httpServletResponse=(HttpServletResponse)FacesContext.getCurrentInstance().getExternalContext().getResponse();
			this.httpSession=httpServletRequest.getSession();
			<%}%>
			
			this.<%=strId%><%=GetNombreClaseC(TablaBase.ToString())%>Actual=0L;
			this.rowIndexActual=0;
			
			<%if(blnNoStandardTableFromProperties) {%>	
			//VARIABLES PK ACTUAL
			<%=GetNoStandardVariablesInicializarParameterPKActual()%>
			<%}%>
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoReporte="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			<%if(blnConFuncionalidadVersion1) {%>
			this.isMostrarTodosResultadosReporte=false;
			this.isEsReporteRelaciones=conGuardarRelaciones;
			this.isTipoArchivoReporte=false;
			this.conExportar=false;
			<%}%>
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=new <%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral();
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral=new <%=GetNombreClaseC(TablaBase.ToString())%>ParameterGeneral();
			
			<%if(!EsSwing){%>
			this.isEditarEnTabla=false;
			this.isDeveloping=Constantes.ISDEVELOPING;
			<%}%>
						
			<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			<%if(ConEjb){%>//<%}%>this.sistemaLogicAdditional=new SistemaLogicAdditional();
			<%}%>
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();
			
			<%=strCommentMinCodigoWebIni%>
			if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%> 	this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>	throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>if(!sistemaAdditionable.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>}
				
				} else if(Constantes.ISUSAEJBHOME) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>if(!sistemaAdditionableHome.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>}
				}
			}
			<%=strCommentMinCodigoWebFin%>
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistema<%=strReturnGeneral%>=new Sistema<%=strReturnGeneral%>();
			
			Sistema<%=strReturnGeneral%>Additional.inicializarSinSeguridad(this.sistema<%=strReturnGeneral%>);
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strPrefijoSwingInternalFrame%>.CON_LLAMADA_SIMPLE) {
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				<%=GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase,"\t\t")%>
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>this.sistema<%=strReturnGeneral%>=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getConGuardarRelaciones(),arrPaginas);
					
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>if(!this.sistema<%=strReturnGeneral%>.getEsValidado()) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%> 	this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>	throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>}
				} else if(Constantes.ISUSAEJBREMOTE) {
					//FALTA
					
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%> 	this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>	throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>if(!sistemaAdditionable.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>}
				
				} else if(Constantes.ISUSAEJBHOME) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>if(!sistemaAdditionableHome.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> this.setVisible(false);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%> throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>}
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			<%if(!EsSwing){%>
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			<%}else{%>
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			<%}%>
			
			<%=GetIndicesInicializarVariablesVisibilidadTablasClases()%>
			
			//ELEMENTOS TABLAS PARAMETOS
			
			<%=GetValueDefaultParameterClaseParametrosC(TablaBase)%>
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			<%if(!GetEsReporteFromPropertiesC(TablaBase) && !EsSwing){%>			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>if(!sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION)) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>	throw new Exception(Mensajes.SNOPERMISOPAGINA);
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%><%if(ConEjb){%>//<%}%>}
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>if(!sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION)) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>	throw new Exception(Mensajes.SNOPERMISOPAGINA);
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>}
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>if(!sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, <%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SNOMBREOPCION)) {
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>	throw new Exception(Mensajes.SNOPERMISOPAGINA);
				<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>}
			}
			<%}%>
			
			this.inicializarPermisos<%=GetNombreClase(TablaBase.ToString())%>();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>(false);
			
			this.setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>();
			
			<%if(!GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			//TODOS LOS PERMISOS
			this.setPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>(true);
			<%}%>
			
			<%if(!EsSwing){%>
			//TEMPORAL SE DESHABILITA MANTENIMIENTO EN WEB
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getNoMantenimiento()) {
				this.isPermisoNuevo<%=GetNombreClase(TablaBase.ToString())%>=false;
				this.isPermisoActualizar<%=GetNombreClase(TablaBase.ToString())%>=false;
				this.isPermisoActualizarOriginal<%=GetNombreClase(TablaBase.ToString())%>=false;
				this.isPermisoEliminar<%=GetNombreClase(TablaBase.ToString())%>=false;					
				this.isPermisoGuardarCambios<%=GetNombreClase(TablaBase.ToString())%>=false;
			}
			<%}%>
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado() 
				|| (this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado() && this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas();
			}
			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas();
			}
			
			<%if(!GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			//TODOS LOS PERMISOS DE CLASES RELACIONADAS
			this.inicializarSetPermisosUsuario<%=GetNombreClase(TablaBase.ToString())%>ClasesRelacionadas(true);
			<%}%>
			
			<%if(blnTieneSeguridadCampo){%>
			this.setPermisosUsuarioCampos<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>						
			
			<%if(EsSwing){%>
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisos<%=GetNombreClaseC(TablaBase.ToString())%>();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			<%}%>
			
			if(!this.isPermisoBusqueda<%=GetNombreClase(TablaBase.ToString())%>) {
				<%if(blnTieneBusquedas && !blnEstablaModulo) {%>
				//BYDAN_BUSQUEDAS
				<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
				}
				<%=strCommentMinCodigoWebFin%>
				<%}%>
			}
			
			<%if(!EsSwing){%>
			
			//VARIABLE DE SESSION USUARIO
			
			<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
			if(FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(Usuario.class.getSimpleName().toLowerCase()+ConstantesServlet.SSESSIONACTUAL)!=null) {
			<%} else if(EsVersionRichFaces4C(RichFaces_Version)){%>
			if(this.usuarioSessionBeanFace!=null && this.usuarioSessionBeanFace.getUsuario()!=null && usuarioSessionBeanFace.getUsuario().getId()>0) {
			<%}%>
			
				<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
				usuarioActual=(Usuario)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(Usuario.class.getSimpleName().toLowerCase()+ConstantesServlet.SSESSIONACTUAL);
				
				<%} else if(EsVersionRichFaces4C(RichFaces_Version)){%>
				
				this.usuarioActual=usuarioSessionBeanFace.getUsuario();				
				this.parametroGeneralSg=usuarioSessionBeanFace.getParametroGeneralSg();
				this.parametroGeneralUsuario=usuarioSessionBeanFace.getParametroGeneralUsuario();
				<%}%>
				
				lIdUsuarioSesion=usuarioActual.get<%=strIdGetSetSeguridad%>();	
			} else {
				//throw new Exception("Reinicie la sesion");
				System.out.println(Mensajes.SSESSIONCADUCADA);
			}	
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				this.tiposArchivosReportes=FuncionesJsp.traerTiposReportes();
				this.tiposReportes=FuncionesJsp.traerTiposReportes();
				
				<%if(blnEsReporteParaGrupoReporte) {%>
				this.tiposReportes.add(new Reporte("LISTA_COLUMNAS","LISTA COLUMNAS"));
				<%}%>
				
				this.tiposGraficosReportes=FuncionesJsp.traerTiposGraficosReportes();
				this.tiposPaginacion=FuncionesJsp.traerTiposPaginacion(<%=GetParametrosTiposPaginacion()%>);
				this.tiposSeleccionar=FuncionesJsp.traerTiposSeleccionar();	
				this.tiposSeleccionar.addAll(FuncionesJsp.traerSelectItemsJspFromReportes(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>()));
			} else {
				this.tiposArchivosReportes=new ArrayList<SelectItem>();
				this.tiposReportes=new ArrayList<SelectItem>();
				this.tiposGraficosReportes=new ArrayList<SelectItem>();
				this.tiposPaginacion=new ArrayList<SelectItem>();
				this.tiposSeleccionar=new ArrayList<SelectItem>();		
				this.tiposColumnasSelect=new ArrayList<SelectItem>();
			}
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				this.tiposRelaciones=FuncionesJsp.traerTiposRelaciones();				
				this.setRelacionesUsuario<%=GetNombreClase(TablaBase.ToString())%>();					
				
				this.tiposAcciones=FuncionesJsp.traerTiposAcciones(<%=GetTiposAcciones()%>,<%=GetPermiteImportar()%>);				
				this.setAccionesUsuario<%=GetNombreClase(TablaBase.ToString())%>(false);					
				
				this.tiposAccionesFormulario=FuncionesJsp.traerTiposAccionesFormulario(<%=GetTiposAcciones()%>,<%=GetPermiteImportar()%>);				
				this.setAccionesUsuario<%=GetNombreClase(TablaBase.ToString())%>(true);
				
			} else {
				this.tiposAcciones=new ArrayList<SelectItem>();
				this.tiposAccionesFormulario=new ArrayList<SelectItem>();
			}
			
			
			<%}else{%>
			
			<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>");
			<%}%>									
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(<%=GetTiposAcciones()%>);
				
				<%if(blnEsReporteParaGrupoReporte) {%>
				this.tiposReportes.add(new Reporte("LISTA_COLUMNAS","LISTA COLUMNAS"));
				<%}%>
				
				<%if(blnTieneRelacionesReporte) {%>
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				<%}%>
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(<%=GetParametrosTiposPaginacion()%>);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>());
				
				this.tiposColumnasSelect=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuario<%=GetNombreClase(TablaBase.ToString())%>();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(<%=GetTiposAcciones()%>,<%=GetPermiteImportar()%>,<%=GetAccionConRecargarFk()%>);
				this.setAccionesUsuario<%=GetNombreClase(TablaBase.ToString())%>(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(<%=GetTiposAcciones()%>,<%=GetPermiteImportar()%>,<%=GetAccionConRecargarFk()%>);							
				this.setAccionesUsuario<%=GetNombreClase(TablaBase.ToString())%>(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAcciones<%=GetNombreClaseC(TablaBase.ToString())%>() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
			<%}%>
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			<%if(blnConTotales){%>
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			<%}%>
			
			<%=strCommentMinCodigoWebIni%>
			this.arrOrderBy= new  ArrayList<OrderBy>();
			<%=strCommentMinCodigoWebFin%>
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.traerValoresTablaOrderBy();
			}
			<%=strCommentMinCodigoWebFin%>
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			<%=GetVariablesTablasInicializarClasesRelacionadas()%> 
			jasperPrint = null;												
			
			//FK
			<%=DefinirVariablesLogicInicializarForeignKeys()%>
			
			//PARAMETROS
			<%=DefinirVariablesLogicInicializarParametros()%>
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable= (<%=GetNombreClase(TablaBase.ToString())%>Implementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome= (<%=GetNombreClase(TablaBase.ToString())%>ImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+<%=GetNombreClase(TablaBase.ToString())%>ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			<%if(!EsSwing){%>
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel=new ListDataModel();
			
			<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.setWrappedData(new ArrayList<<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()));
			<%if(ConEjb){%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.setWrappedData(new ArrayList<<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s));<%}%>		
					
			<%}%>		
			
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>>();
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>sEliminados= new <%=strTypeNewCollection%><<%=strPackageJava%><%=GetNombreClase(TablaBase.ToString())%>>();
						
			this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			<%=DefinirVariablesActualInicializarForeignKeysConBusqueda()%>
			
			//INICIALIZAR LISTAS FK
			<%=DefinirVariablesArrayForeignKeysInicializar()%>
			
			<%=DefinirVariablesArrayParametrosInicializar()%>
			
			<%if(!EsSwing){%>
			/*
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			Modulo moduloActualAux=new Modulo();
			*/
			
			<%//=CallFuncionesArrayForeignKeys()%>
			<%//=DefinirFuncionesListItemsArrayForeignKeysInicializacion()%>
			<%}%>
			
			<%if(EsSwing){%>
			if(blncargarCombostrForeignKey) {
				this.cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(this.isCargarCombosDependencia);
			}
			
			this.cargarCombos<%=strParametro%><%=GetNombreClaseC(TablaBase.ToString())%>();
			
			<%} else {%>
			if(blncargarCombostrForeignKey) {
				this.cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(this.isCargarCombosDependencia);
			}			
			<%}%>
			
			<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
			
			<%if(!EsSwing){%>
			
			<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
			this.<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>");
			<%}%>
			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
			}
																							
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>()) {
				if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey().equals(0L))	{
					this.sAccionBusqueda="Por<%=strIdGetSet%>";
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey());
				}
				
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras(true);
				//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>");
			
			} else if(this.httpServletRequest.getParameter("esCargarPagina")==null&&<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras()) {
				if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras().equals(0L))	{
					this.sAccionBusqueda="Por<%=strIdGetSet%>";					
				}				
				
				//FacesContext.getCurrentInstance().getExternalContext().getSessionMap().remove("BusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras");
			}
			
			<%=GetBusquedaFromForeigKeysSession()%>
			
			if(httpServletRequest.getParameter("ultimaBusqueda")!=null)	{
				sUltimaBusqueda=httpServletRequest.getParameter("ultimaBusqueda");
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>(sUltimaBusqueda);
			}
									
			if(false) {//this.isTipoArchivoReporte
				if(sTipoArchivoReporte.equals("HtmlGenerar")) {
					this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s(sAccionBusqueda,<%if(ConEjb){%>/*<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()<%if(ConEjb){%>*/ <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s<%}%> <%if(ConSessionBeans){%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome<%}%>);									
				} else if(sTipoArchivoReporte.equals("Html"))	{
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setsServletGenerarHtmlReporte("<%=GetNombreClaseC(TablaBase.ToString())%>Servlet");
				}
			}
			
			<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
			FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>",<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);
			<%}%>
			
			<%}%>
			
			<%}%>
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			<%if(EsSwing){%>
			<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			<%if(blnConAdditional){%>
			<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			<%}%>
			<%}%>
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			<%if(blnConFuncionalidadVersion1) {%>
			this.isTipoArchivoReporte=false;
			this.conExportar=false;
			<%}%>						
			
			this.initActions();
			
			<%=GetAccionesPanelesFinRelaciones("FUNCIONES_INICIAL")%>;
			
			this.cargarMenuRelaciones();
			
			this.updateControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			
			<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
			<%if(blnConAdditional){%>
			<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			<%}%>
			<%}%>
			
			<%}%>
			
			<%if(blnTieneBusquedas && !blnEstablaModulo) {%>
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					for(int i=0; i<this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.getTabCount(); i++) {
						this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(i);
						
						if(!existeTabBusqueda) {
							existeTabBusqueda=true;
						}
					}
					
					if(existeTabBusqueda) {
						this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);
					}
				}
				<%=strCommentMinCodigoWebFin%>
			}
			<%}%>
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			<%if(EsSwing){%>
			this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>(true);
			<%}%>
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga <%=GetNombreClaseC(TablaBase.ToString())%>: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}	 
    }

	<%if(!EsSwing){%>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
   	<%if(EsPathImagenDocumentoColumn(TablaBase.Columns[i])){//SOLO SI ES TIPO RARO COMO STRING IMAGEN%>
    <%= GetParameterClaseTypeSetMethodC(TablaBase.Columns[i]) %>
	<% } %>
	<% } %>
	
	public void cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(cargarCombosDependencia);
				
		this.addItemDefectoCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.initActionsCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
	}
	
	<% } %>
	
	
	<%if(EsSwing){%>
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			<%=GetNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase,false,false,true)%>
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		<%if(blnTieneRelacionesGlobal){%>
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			<%=GetNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase,true,false,false)%>
			}
		}
		<%}%>				
	}		
	
	public void cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.cargarCombosFrame<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();						
		
		if(conInitActions) {
			this.initActionsCombosTodos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>();
		}
	}
	
	<%=CallFuncionesForeignKeysLlamar("Todos","\t\t\t")%>
	
	public void jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			
			if(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>SessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			
			if(jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount()>=1) {
				jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.removeRowSelectionInterval(0, jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount()-1);						
			}
			
			this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(true);			
			//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>();
			//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>() ;
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>(esRelaciones);
			}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			if(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>SessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar <%=GetNombreClase(TablaBase.ToString())%>: " + this.dDif); 
				}
			}
				
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRows().length;			
			}
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevo<%=GetNombreClaseC(TablaBase.ToString())%>--;			
				//<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux= new <%=GetNombreClaseC(TablaBase.ToString())%>();			
				//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setId(this.iIdNuevo<%=GetNombreClaseC(TablaBase.ToString())%>);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen=new <%=GetNombreClaseC(TablaBase.ToString())%>();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen : <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					<%if(EsSwing){%>
					this.aumentarTamanioFilaNuevaTabla<%=GetNombreClaseC(TablaBase.ToString())%>();
					<%}%>
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true,true);
					
					<%if(EsSwing){%>
					this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					<%}%>
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);				
					}
					*/
				}
				
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setRowSelectionInterval(this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(), this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>());
				
				int iLastRow =  this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getCellRect(iLastRow, 0, true);
				
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.scrollRectToVisible(rectangle);
				<%}%>
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					<%if(EsSwing){%>
					this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
					<%}%>
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();									
		
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen=new <%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino=new <%=GetNombreClaseC(TablaBase.ToString())%>();
				
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen =<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.get(0);
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino =<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.get(1);
				
				this.setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino,true,false);
							
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Destino,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
				}
				//ARCHITECTURE
				
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				//this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setRowSelectionInterval(this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(), this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>());
				
				int iLastRow =  this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getCellRect(iLastRow, 0, true);
				
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.scrollRectToVisible(rectangle);
				<%}%>
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					<%if(EsSwing){%>
					this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
					<%}%>
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			
			<%if(blnTieneBusquedas) {%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(!isVisible);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(!isVisible);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(!isVisible);
			this.jPanelAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(!isVisible);
							
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrame<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			<%=strCommentMinCodigoWebIni%>
			this.cerrarFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%>
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			<%=strCommentMinCodigoWebIni%>
			this.cerrarFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%>
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	<%if(blnConTotales){%>
	public void jButtonAbrirTotales<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.abrirFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>();
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotales<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>();
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	<%}%>
	
	public void jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			<%=strCommentMinCodigoWebIni%>
			this.abrirFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			<%=strCommentMinCodigoWebIni%>
			this.cerrarFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%>
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.isMaximum()) {
					this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximum(false);
				}
					
	    		this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setSize(this.iWidthFormulario,this.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.isMaximum()) {
						this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximum(true);
					}
				}
				
				if(this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.getWidth() > this.getWidth()) {
					this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.getWidth(),<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>.ALTO_TABPANE_RELACIONES));
					this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.getWidth(),<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>.ALTO_TABPANE_RELACIONES));
					this.jTabbedPaneRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(this.jContentPaneDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.getWidth(),<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%>.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					<%if(!GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals(strNINGUNO)) {%>
					<%=GetRedimensionarTablaPanelsRelacionadas(TablaBase)%>
					<%}%>
					
				}
	    	}
						
	       	this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
	        this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>);
			
	       	this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
			
			//this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.dispose();
			//this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }
	}
	
	<%=strCommentMinCodigoWebIni%>
	public void abrirFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
	        this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }		
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=strCommentMinCodigoWebIni%>
	public void abrirFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
	        this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }		
	}	
	<%=strCommentMinCodigoWebFin%>
	
	<%if(blnConTotales){%>
	public void abrirFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        
	    try {
			this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
	        this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        
	    try {
			this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameTotales<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
		
		} catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }
	}
	<%}%>
	
	
	<%=strCommentMinCodigoWebIni%>
	public void abrirFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
	        this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }		
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=strCommentMinCodigoWebIni%>
	public void cerrarFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);			
		
		} catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }		
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=strCommentMinCodigoWebIni%>
	public void cerrarFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);			
		
		} catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }		
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=strCommentMinCodigoWebIni%>
	public void cerrarFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
		
		} catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }		
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%if(blnEsAutoReferenciada) {%>
	 public void abrirFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>(String sTipoProceso) { //throws Exception	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>);
			
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setsTipoProceso(sTipoProceso);
			
			if(sTipoProceso.equals("BUSQUEDA_FK")) {
				this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.sTipoBusqueda="<%=GetNombreClaseC(TablaBase.ToString())%>";
			}
			
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.set<%=GetNombreClaseC(TablaBase.ToString())%>s(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>sArbol);
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.CargarTree<%=GetNombreClaseC(TablaBase.ToString())%>();
			
	       	this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
	        this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
			e.getStackTrace();
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>);
			
	       	this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
	        this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(false);
			
			//this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.dispose();
			//this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
	    }
	}
	<%} %>
	<%//Trace.WriteLine("INICIO");%>
	<%=CallArbolBusquedaFuncionesArrayForeignKeys()%>
	
	public void jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,-1,false);
		
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificar<%=GetNombreClaseC(TablaBase.ToString())%>(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			//this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
			
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
			<%=GetCargarTablesRelacionadas(TablaBase,false)%>
			}
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
		
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			//this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.set<%=strIdGetSet%>CombosCodigoDesdeBusquedaForeignKey(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.get<%=strIdGetSet%>(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
		
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void set<%=strIdGetSet%>CombosCodigoDesdeBusquedaForeignKey(Long <%=strId%>,String sType)throws Exception{
		
		try {
			<% for (int i = 0; i < TablaBase.Columns.Count; i++){%>
			<%if(GetBusquedaForeignKeyColumnFromPropertiesC(TablaBase.Columns[i])) {%>
			<%= CallFuncionBusquedaControlesVariables(TablaBase,TablaBase.Columns[i])%>
			<%}%>
			<%}%>
		} catch(Exception e) {
			throw e;
		}
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){%>
	<%if(TablaBase.Columns[i].IsForeignKeyMember) {%>
	<%if(EsColumnaVariableGlobalDataBaseFromPropertiesC(TablaBase.Columns[i]) || EsColumnaVariableModuloGlobalC(TablaBase.Columns[i])) {continue;%><%}%>
	<% =GetFuncionesRecargarControlesTablasVariables(TablaBase,TablaBase.Columns[i])%>	
	<%}%>
	<%}%>
	
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){%>
	<%if(GetBusquedaForeignKeyColumnFromPropertiesC(TablaBase.Columns[i])) {%>
	<%= GetSetFuncionBusquedaControlesVariables(TablaBase,TablaBase.Columns[i])%>
	<%}%>
	<%}%>		
	
	public void jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			this.inicializarActualizarBindingParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//if(!this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
				int intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	
					
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
			//}
				
			if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true);
				this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				
				<%if(blnEsTablaUnoAUnoFk) {%>
				//OTRA VEZ SE EJECUTA ESTO
				//PARA RELACION DE UNO A UNO
				if(this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.set<%=strIdGetSet%>(this.<%=strId%>_<%=strNombreTablaUnoAUnoPk.ToLower()%><%=strFK%>_<%=strIdGetSet%><%=strNombreTablaUnoAUnoPk%>);
				}
				<%}%>
			}
			
			if(this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
						
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				this.habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
				<%=GetParentJInternalFramaEvent(TablaBase)%>								
				
				if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,intSelectedRow);
						
						this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
						this.jButton<%=strIdGetSet%>ActionPerformed(evt,intSelectedRowActual,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getConGuardarRelaciones(),false);
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			int intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				this.habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				
				<%=GetParentJInternalFramaEvent(TablaBase)%>
				
				if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}		
	}
		
	public void jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount()>=1) {
				jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.removeRowSelectionInterval(0, jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControles<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
			
			this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(<%if(EsSwing){%>ActionEvent evt<%}%>) throws Exception {    		
		try	{
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				<%if(EsSwing){%>
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				<%}%>
				
				//SI ES MANUAL
				<%if(EsSwing){%>
				if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>();				
				}
				<%}%>
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(<%if(EsSwing){%>ActionEvent evt<%}%>) throws Exception {    		
		try	{			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevo<%=GetNombreClaseC(TablaBase.ToString())%>--;			
			//<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux= new <%=GetNombreClaseC(TablaBase.ToString())%>();			
			//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setId(this.iIdNuevo<%=GetNombreClaseC(TablaBase.ToString())%>);
		
			<%if(EsSwing){%>
			this.aumentarTamanioFilaNuevaTabla<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%}%>
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			<%if(EsSwing){%>
			this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			<%}%>
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);				
			}
			*/
			
			<%if(EsSwing){%>
			this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setRowSelectionInterval(this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>(), this.getIndiceNuevo<%=GetNombreClaseC(TablaBase.ToString())%>());
			
			int iLastRow =  this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getCellRect(iLastRow, 0, true);
			
			this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.scrollRectToVisible(rectangle);
			<%}%>
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				<%}%>
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//SI ES MANUAL
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			
			//this.abrirFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>();
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	<%=strCommentMinCodigoWebIni%>
	public void jButtonGenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			<%if(!blnEsReporte){%>
			<%if(EsSwing){%>
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase).ToUpper()%> ?", "MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>", JOptionPane.OK_CANCEL_OPTION) == 0) {
			<%}%>	
				bufferedReader = new BufferedReader(new FileReader(this.fileImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.procesarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%if(ConSessionBeans){%>
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.procesarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>);
					<%}%>
						
				} else if(Constantes.ISUSAEJBHOME) {
					<%if(ConSessionBeans){%>
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.procesarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>);
					<%}%>
				}
				//ARCHITECTURE
						
				this.procesar<%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral();
			<%if(EsSwing){%>
			}
			<%}%>
			<%}%>
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=strCommentMinCodigoWebIni%>
	public void jButtonAbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jFileChooserImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.fileImportacion<%=GetNombreClaseC(TablaBase.ToString())%>= this.jFileChooserImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedFile();
            	
				this.jTextFieldPathArchivoImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setText(this.fileImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jTextFieldPathArchivoImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	<%=strCommentMinCodigoWebFin%>
	
	public void jButtonGenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		

		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		//this.sTipoReporteExtra="Base";
		
		<%if(!EsSwing){%>
		File reportFile=null;
		File imageFile=null;
		<%if(!EsSwing){%>
		imageFile= new File(servletContext.getRealPath("/Imagenes/Logos/LogoReporte.jpg"));
		<%}%>
	
		
		<%}else {%>
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		<%}%>
		
		
			<%if(!EsSwing){%>
			reportFile = new File(servletContext.getRealPath("/Reportes/<%= Package%>/<%=Module.Replace(".","/").ToLower()%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetEsPaqueteRelativePathReporteParaReporteC(TablaBase,false)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper"));
			//reportFile = new File(servletContext.getRealPath(funcionesBeanFace.getAbsoluteApplicationUrl()+"/Reportes/<%=Module.Replace(".","/").ToLower()%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase,true)%><%=GetNombreClase(TablaBase.ToString())%>"+this.sTipoReporteExtra+"Design.jasper"));
			<%}else{%>
			reportFile = AuxiliarReportes.class.getResourceAsStream("<%//=Module.Replace(".","/")%><%//=GetRelativePathNavegacionFromTableFromPropertiesC(TablaBase)%><%=GetNombreClase(TablaBase.ToString())%>BaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"<%=GetNombreClaseC(TablaBase.ToString())%>BaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			<%=strCommentMinCodigoWebIni%>
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			<%=strCommentMinCodigoWebFin%>
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				<%if(EsSwing){%>
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
				<%}%>
			}
			<%}%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			<%if(blnConFuncionalidadVersion1) {%>
			this.isEsReporteRelaciones=false;
			<%}%>
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			<%if(blnConFuncionalidadVersion1) {%>
			this.isEsReporteRelaciones=false;
			<%}%>
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			<%if(blnConFuncionalidadVersion1) {%>
			this.isEsReporteRelaciones=false;
			<%}%>
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	<%=strCommentMinCodigoWebIni%>
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedIndices()) {
			reporte=(Reporte)jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				<%=GetSwitchTiposColumnsReporteDinamico()%>					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		<%if(EsSwing){%>
		if(this.jCheckBoxConGraficoDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		<%}%>				
		
		return sXmlStringFile;
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=strCommentMinCodigoWebIni%>
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jComboBoxColumnaCategoriaGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			<%=GetSwitchTipoColumnCategoriaReporteDinamico(false)%>					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jComboBoxColumnaCategoriaValor<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			<%=GetSwitchTipoColumnCategoriaReporteDinamico(true)%>					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jListColumnasValoresGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedIndices()) {
			reporte=(Reporte)jListColumnasValoresGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				<%=GetSwitchTipoColumnValorReporteDinamico()%>					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%if(blnTieneColumnasDatos) {%>
	//@SuppressWarnings("deprecation")
	<%}%>
	<%=strCommentMinCodigoWebIni%>
	public void jButtonGenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("<%=GetNombreClaseC(TablaBase.ToString())%>s");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedIndices()) {
				reporte=(Reporte)jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					<%=GetSwitchExcelTiposColumnsReporteDinamico()%>					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(row);				
			//	iRow++;
			//}				
			
			//for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
				<%}%>
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	<%=strCommentMinCodigoWebFin%>
	
	<% if(blnEsProceso){%>
	public void jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			<%if(blnConAdditional){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>(this);
			<%}%>
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	<%} %>
	
	<%if(blnEsAutoReferenciada) {%>
	public void jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.abrirFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>("BUSQUEDA_NORMAL");
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	<%} %>
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda("Por<%=strIdGetSet%>");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//SI ES MANUAL
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//SI ES MANUAL
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			//SI ES MANUAL
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}		
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void aumentarTamanioFilaNuevaTabla<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(dimensionMinimum);
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(dimensionMaximum);
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(esInicializar,true);
	}
	
	public void inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(esInicializar);
		}
		
		this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAcciones<%=GetNombreClaseC(TablaBase.ToString())%>(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL_TABLA ||
			   	!<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL) {
			   	
				<%if(blnConBindingComplejo) {%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.bind();
				<%}%>
			}
		}
	}
	
	public void inicializarActualizarBindingManual<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.inicializarActualizarBindingBusquedasManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			<%=strCommentMinCodigoWebFin%>
			
			//this.inicializarActualizarBindingtiposArchivosReportesAcciones<%=GetNombreClaseC(TablaBase.ToString())%>() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;			
			<%=GetBindingsVariablesManualTablasClasesParametrosC(TablaBase)%>
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManual<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				<%if(blnConFuncionalidadVersion1) {%>
				this.isTipoArchivoReporte=this.jCheckBoxGenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				this.isEsReporteRelaciones=this.jCheckBoxGenerarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				this.isMostrarTodosResultadosReporte=this.jCheckBoxTodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				this.conExportar=this.jCheckBoxExportar<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				<%}%>				
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionados<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				
				<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					this.conGraficoReporte=this.jCheckBoxConGraficoReporte<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();											
				}
				<%=strCommentMinCodigoWebFin%>
				
				this.isPostAccionNuevo=this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				this.isPostAccionSinCerrar=this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				this.isPostAccionSinMensaje=this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>.isSelected();
				
			} else {
				<%if(blnConFuncionalidadVersion1) {%>
				this.jCheckBoxGenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isTipoArchivoReporte);
				this.jCheckBoxGenerarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isEsReporteRelaciones);
				this.jCheckBoxTodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isMostrarTodosResultadosReporte);
				this.jCheckBoxExportar<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.conExportar);
				<%}%>				
				this.jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionados<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isSeleccionados);
				
				<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					this.jCheckBoxConGraficoReporte<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.conGraficoReporte);
				}
				<%=strCommentMinCodigoWebFin%>
				
				this.jCheckBoxPostAccionNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isPostAccionNuevo);
				this.jCheckBoxPostAccionSinCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isPostAccionSinCerrar);
				this.jCheckBoxPostAccionSinMensaje<%=GetNombreClaseC(TablaBase.ToString())%>.setSelected(this.isPostAccionSinMensaje);
			}
			
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();
			}
			<%=strCommentMinCodigoWebFin%>
			
			this.sTipoAccionFormulario=((Reporte)this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();
			
			
			<%=strCommentMinCodigoWebIni%>
			if(!this.conCargarMinimo) {
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();			
													
					this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();
									
					this.sTipoAccion=((Reporte)this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();
													
					this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();
									
					this.sTipoReporte=((Reporte)this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();							
					
					this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem()).getsCodigo();							
				}
			}			
			
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.sValorCampoGeneral=this.jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.getText();						
			}
			<%=strCommentMinCodigoWebFin%>
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esInicializar) throws Exception {
		try	{	
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManual<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			} else {
				<%if(blnConBindingComplejo){%>
				/*
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("GenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				*/
				//CREO REPETIDO A ANTERIOR
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("GenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}		
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,  this.jCheckBoxGenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selected}"),this,ELProperty.create("${isTipoArchivoReporte}"),"GenerarReporte<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				//REPORTE RELACIONES
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("GenerarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,  this.jCheckBoxGenerarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selected}"),this,ELProperty.create("${isEsReporteRelaciones}"),"GenerarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				//TODOS
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("TodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.jCheckBoxTodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selected}"),this,ELProperty.create("${isMostrarTodosResultadosReporte}"),"TodosResultados<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				//TIPOS REPORTES
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("tiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selectedItem.sCodigo}"), this,ELProperty.create("${sTipoArchivoReporte}"), "tiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				//this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.bind();
				
				//TIPOS PAGINACION
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("TiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selectedItem.sCodigo}"), this,ELProperty.create("${sTipoPaginacion}"), "TiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				//this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.bind();
				
				//TIPOS ACCIONES
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("TiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selectedItem.sCodigo}"), this,ELProperty.create("${sTipoAccion}"), "TiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>");
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selectedItem.sCodigo}"), this,ELProperty.create("${sTipoAccionFormulario}"), "TiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>");
				
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();						
				
				//TIPOS SELECCIONAR
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("TiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selectedItem.sCodigo}"), this,ELProperty.create("${sTipoSeleccionar}"), "TiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				
				//SELECCIONAR TODOS
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("SeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}		
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,  this.jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${selected}"),this,ELProperty.create("${isSeleccionarTodos}"),"SeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
				
				//VALOR CAMPO GENERAL
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.getBinding("ValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>");		
				
				if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				}		
				
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,  this.jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${text}"),this,ELProperty.create("${sValorCampoGeneral}"),"ValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%if(blnConListenerBindingComplejo) {%>
				this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
				
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>BusquedasParametros.bind();
				
				<%}%>
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	<%if(blnConBindingComplejo){%>
	@SuppressWarnings({ "unchecked", "rawtypes" })
	<%}%>
	public void inicializarActualizarBindingtiposArchivosReportesAcciones<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		try	{
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			} else {
				<%if(blnConBindingComplejo){%>
				//TIPOS REPORTES
				JComboBoxBinding jcomboBoxBindingtiposArchivosReportes = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.tiposArchivosReportes, this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>);
				<%if(blnConListenerBindingComplejo) {%>
				jcomboBoxBindingtiposArchivosReportes.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				jcomboBoxBindingtiposArchivosReportes.bind();
				
				//TIPOS PAGINACION
				JComboBoxBinding jcomboBoxBindingTiposPaginacion = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.tiposPaginacion, this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>);
				<%if(blnConListenerBindingComplejo) {%>
				jcomboBoxBindingTiposPaginacion.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				jcomboBoxBindingTiposPaginacion.bind();
				
				//TIPOS ACCIONES
				JComboBoxBinding jcomboBoxBindingTiposAcciones = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.tiposAcciones, this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>);
				<%if(blnConListenerBindingComplejo) {%>
				jcomboBoxBindingTiposAcciones.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				jcomboBoxBindingTiposAcciones.bind();
				
				//TIPOS ACCIONES FORMULARIO
				JComboBoxBinding jcomboBoxBindingTiposAccionesFormulario = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.tiposAccionesFormulario, this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>);
				<%if(blnConListenerBindingComplejo) {%>
				jcomboBoxBindingTiposAccionesFormulario.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				jcomboBoxBindingTiposAccionesFormulario.bind();
				
				//TIPOS SELECCIONAR
				JComboBoxBinding jcomboBoxBindingTiposSeleccionar = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.tiposSeleccionar, this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>);
				<%if(blnConListenerBindingComplejo) {%>
				jcomboBoxBindingTiposSeleccionar.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
				<%}%>
				this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				jcomboBoxBindingTiposSeleccionar.bind();
				<%}%>
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManual<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		try	{
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				//TIPOS ARCHIVOS REPORTES
				this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposArchivosReportes) {
					this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				
				this.jComboBoxTiposArchivosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
					
				
				//TIPOS REPORTES
				this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposReportes) {
					this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				
				this.jComboBoxTiposReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				//TIPOS GRAFICOS REPORTES
				this.jComboBoxTiposGraficosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposGraficosReportes) {
					this.jComboBoxTiposGraficosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				
				this.jComboBoxTiposGraficosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				//TIPOS PAGINACION
				this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposPaginacion) {
					this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				
				this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()) {
					this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
				} else {
					this.jComboBoxTiposPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
				}
				
				<%if(intNumeroPaginacion>0){%>
				//DEFECTO
				FuncionesSwing.setDefectoReporteGenerico("<%=intNumeroPaginacion%>", this.jComboBoxTiposPaginacionNotaDestreza);	
				this.sTipoPaginacion="<%=intNumeroPaginacion%>";
				<%}%>	
				
				//TIPOS ACCIONES	
				this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposRelaciones) {
					this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				
				this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				//TIPOS ACCIONES
				
				
				//TIPOS ACCIONES	
				this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposAcciones) {
					this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				
				this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				//TIPOS ACCIONES
			}
			<%=strCommentMinCodigoWebFin%>
			
			
			//TIPOS ACCIONES FORMULARIO	
			this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
			
			for(Reporte reporte:this.tiposAccionesFormulario) {
				this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
			}
			
			this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
			//TIPOS ACCIONES FORMULARIO
			
			
			<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				//TIPOS SELECCIONAR
				this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				for(Reporte reporte:this.tiposSeleccionar) {
					this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
				}
				this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				
				if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
					this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(1);
				}
				
				//REPORTE DINAMICO
				DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
				
				//TIPOS COLUMNAS SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					this.jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.removeAll();
					
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
					
					this.jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.setModel(defaultListModel);									
					
					this.jListColumnasSelectReporte<%=GetNombreClaseC(TablaBase.ToString())%>.setCellRenderer(new TipoReporteDefaultListCellRenderer());						
				}	
							
				<%if(blnTieneCampoTotalizar){%>
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jComboBoxColumnaCategoriaGrafico<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					this.jComboBoxColumnaCategoriaGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
					
					ArrayList<Reporte> tiposColumnasCategoria=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(true,true,false,true,true);
					
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jComboBoxColumnaCategoriaGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
					}
					this.jComboBoxColumnaCategoriaGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				}
				
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jComboBoxColumnaCategoriaValor<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					this.jComboBoxColumnaCategoriaValor<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
					
					ArrayList<Reporte> tiposColumnasCategoriaValor=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,true,false,false);
					
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jComboBoxColumnaCategoriaValor<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
					}
					this.jComboBoxColumnaCategoriaValor<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				}
				
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
				
				if(this.jListColumnasValoresGrafico<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					this.jListColumnasValoresGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.removeAll();
					
					ArrayList<Reporte> tiposColumnasValor=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(false,false,true,false,false);
					
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
					
					this.jListColumnasValoresGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.setModel(defaultListModel);									
					
					this.jListColumnasValoresGrafico<%=GetNombreClaseC(TablaBase.ToString())%>.setCellRenderer(new TipoReporteDefaultListCellRenderer());												
				}
				
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jComboBoxTiposGraficosReportesDinamico<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					this.jComboBoxTiposGraficosReportesDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
					
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jComboBoxTiposGraficosReportesDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(reporte);
					}
					
					this.jComboBoxTiposGraficosReportesDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new TipoReporteDefaultListCellRenderer());
				}	
				<%}%>
			}
			<%=strCommentMinCodigoWebFin%>
		} catch(Exception e) {
			throw e;
		}
	}		
	
	<%=strCommentMinCodigoWebIni%>
	public void inicializarActualizarBindingBusquedasManual<%=GetNombreClaseC(TablaBase.ToString())%>()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		<%=GetIndicesInicializacionBindingsVariablesManualTablasClasesC(TablaBase)%>		
	}
	<%=strCommentMinCodigoWebFin%>
	
	<%=GetInicializacionBindingsVariablesManualTablasClasesParametrosC(TablaBase)%>
	
	<%if(blnTieneBusquedas && ExisteColumnaIndiceTiempoBusquedaC(TablaBase) && blnConBindingComplejo){%>
	@SuppressWarnings("unchecked")
	<%}%>
	public void inicializarActualizarBindingBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esInicializar) throws Exception {				
		if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.inicializarActualizarBindingBusquedasManual<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			<%=strCommentMinCodigoWebFin%>
		} else {
			<%if(blnConBindingComplejo){%>
			<%=GetIndicesInicializacionBindingsVariablesTablasClasesC(TablaBase)%>
			
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Busquedas.bind();
			<%}%>
		}
	}		
		
	public void inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
	}
	
	<%if(blnConBindingComplejo){%>
	@SuppressWarnings({ "rawtypes", "unchecked" })
	<%}%>
	public void inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(true) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%>isNoExiste=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setModel(new <%=GetNombreClaseC(TablaBase.ToString())%>Model(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setModel(new <%=GetNombreClaseC(TablaBase.ToString())%>Model(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this));
			}
			//ARCHITECTURE
			
			<%if(blnConTotales){%>
			//TABLA TOTALES
			this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales.setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
			
			//DEFINIR RENDERERS TOTALES
			tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales,Constantes2.S_TIPO));			
			<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
			
			
			tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales,Constantes2.S_TOTAL));
			<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
			
			<%}%>
				
			//TABLA OrderBy			
			Integer iWidthTableDefinicionOrderBy=0;
			
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy.setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
				
				//DEFINIR RENDERERS OrderBy
				tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy,OrderBy.ISSELECTED));			
				<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
				
				tableColumn.setPreferredWidth(50); 	 
				tableColumn.setWidth(50); 	 
				tableColumn.setMinWidth(50);
				
				iWidthTableDefinicionOrderBy+=50;
				
				tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy,OrderBy.NOMBRE));
				<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
				
				tableColumn.setPreferredWidth(150); 	 
				tableColumn.setWidth(150); 	 
				tableColumn.setMinWidth(150);
				
				iWidthTableDefinicionOrderBy+=150;
				
				//tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy,OrderBy.NOMBREDB));			
				//<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
							
				tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>OrderBy,OrderBy.ESDESC));
				<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
				
			}
			<%=strCommentMinCodigoWebFin%>
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50);
			
			iWidthTableDefinicionOrderBy+=50;
			
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>,Constantes2.S_SELECCIONAR));
			<%=strCommentListener%>tableColumn.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"<%=strSeleccion%> "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>.resaltarSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%><%=strParametroSizeTablaTieneTotalizar%>,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"<%=strSeleccion%> "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>.resaltarSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			<%=GetColumnsSetRendererEditorTableModel()%>
			
		} else {
			<%if(blnConBindingComplejo){%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =(org.jdesktop.beansbinding.Binding)this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>");
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			<%if(blnConTotales){%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =(org.jdesktop.beansbinding.Binding)this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Total");
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			<%}%>
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(!CON_OPTIMIZE_V0){%>
				<%if(ConEjb){%>//<%}%>this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%> = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(), this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>,"TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%}%>
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				<%if(!CON_OPTIMIZE_V0){%>
				this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%> = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s, this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>,"TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>");
				<%}%>
			}
			//ARCHITECTURE
			
			//NO FUNCIONA
			/*
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>=jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.addColumnBinding(ELProperty.create("${isSelected}"),"isSelected");
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnName(Constantes2.S_SELECCIONAR);
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setEditable(false);
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnClass(Boolean.class);
			*/
			
			//COLUMNA SELECCIONAR
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>=jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.addColumnBinding(ELProperty.create("${isSelected}"),"isSelected");
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnName("<%=strSel%>");
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setEditable(true);
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnClass(Boolean.class);
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new BooleanRenderer(true,"<%=strSeleccion%> "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO));
			columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setEditor(new BooleanEditorRenderer(true,"<%=strSeleccion%> "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO));
			
			<%if(blnConTotales){%>
			//TOTALES
			<%if(!CON_OPTIMIZE_V0){%>
			this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE,this.arrDatoGeneralTotales, this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Totales,"TableDatos<%=GetNombreClaseC(TablaBase.ToString())%>Total");
			<%}%>
			
			<%}%>
				
				<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
				<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
				<%= GetParameterBindingClase(TablaBase.Columns[i]) %>
				<% } %>
				
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.addBinding(jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>);
				//this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();						
			
				<%if(blnConTotales){%>
				//TOTALES
				//ANTES SE COPIABA DEFINICION PRINCIPAL
				/*
				List<ColumnBinding> columnsBinding=jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnBindings();
				
				for(ColumnBinding columnBinding:columnsBinding) {
					BeanProperty beanProperty = BeanProperty.create(columnBinding.getName());
					jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total.addColumnBinding(beanProperty).setColumnName(columnBinding.getName());
				}
				
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.addBinding(jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total);
				//this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total.refresh();
				*/
				
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>=jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total.addColumnBinding(ELProperty.create("${sDescripcion}"),"sDescripcion");
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnName("TIPO");
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setEditable(false);
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnClass(String.class);
				<%if(blnConListenerBindingComplejo) {
				  if(blnTieneListener) {%>
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListenerTabla());
				<% } }%>
				<%=strCommentListener%>columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
				
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>=jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total.addColumnBinding(ELProperty.create("${dValorDouble}"),"dValorDouble");
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnName("TOTAL");
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setEditable(false);
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.setColumnClass(Double.class);
				<%if(blnConListenerBindingComplejo) {
				  if(blnTieneListener) {%>
				columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListenerTabla());
				<% } }%>
				<%=strCommentListener%>columnBinding<%=GetNombreClaseC(TablaBase.ToString())%>.addPropertyChangeListener(new <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener());
				
				this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.addBinding(jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total);
				
				this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total.bind();
				
				<%}%>
				
				this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.bind();
				
				//this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.bind();
			
			
			//PRIMERA VERSION DE FOREIGN KEYS				
				
			/*
			<%=ReDefinirColumnsTableVariablestrForeignKeys()%>
			*/
			
			<%}%>
		}			
					
		if(!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			<%=GetNavegacionColumnsTablaTablasClasesRelacionadas(TablaBase,false,false,false) %>
		}
		
		if(true) {
			String sLabelColumnAccion="<%=strEditar%>";
			String sLabelColumnAccionEli="<%=strEli%>";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="<%=strSeleccion%>";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new <%=strIdGetSet%>TableCell(this,false,false,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()<%=strParametroSizeTablaTieneTotalizar%>));
				tableColumn.setCellEditor(new <%=strIdGetSet%>TableCell(this,false,false,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()<%=strParametroSizeTablaTieneTotalizar%>));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addColumn(tableColumn);
			
			} else {				
				<%if(GetPermiteEditarFromPropertiesC(TablaBase)){%>												
				
				//LO MISMO QUE IF
				
				<%=strCommentEsGuardarRelaciones%>tableColumn= new TableColumn();
				<%=strCommentEsGuardarRelaciones%>tableColumn.setIdentifier(sLabelColumnAccion);
				<%=strCommentEsGuardarRelaciones%>tableColumn.setHeaderValue(sLabelColumnAccion);
				<%=strCommentEsGuardarRelaciones%>tableColumn.setCellRenderer(new <%=strIdGetSet%>TableCell(this,false,false,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()<%=strParametroSizeTablaTieneTotalizar%>));
				<%=strCommentEsGuardarRelaciones%>tableColumn.setCellEditor(new <%=strIdGetSet%>TableCell(this,false,false,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()<%=strParametroSizeTablaTieneTotalizar%>));
		
				<%=strCommentEsGuardarRelaciones%>tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				<%=strCommentEsGuardarRelaciones%>tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				<%=strCommentEsGuardarRelaciones%>tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
				<%=strCommentEsGuardarRelaciones%>this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				<%=strCommentEsGuardarRelaciones%>this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>) {
					<%=strCommentEsGuardarRelaciones%>tableColumn= new TableColumn();
					<%=strCommentEsGuardarRelaciones%>tableColumn.setIdentifier(Constantes2.S_ELI);
					<%=strCommentEsGuardarRelaciones%>tableColumn.setHeaderValue(sLabelColumnAccionEli);
					<%=strCommentEsGuardarRelaciones%>tableColumn.setCellRenderer(new <%=strIdGetSet%>TableCell(this,false,true,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()<%=strParametroSizeTablaTieneTotalizar%>));
					<%=strCommentEsGuardarRelaciones%>tableColumn.setCellEditor(new <%=strIdGetSet%>TableCell(this,false,true,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getEsGuardarRelacionado()<%=strParametroSizeTablaTieneTotalizar%>));
			
					<%=strCommentEsGuardarRelaciones%>tableColumn.setPreferredWidth(65); 	 
					<%=strCommentEsGuardarRelaciones%>tableColumn.setWidth(65); 	 
					<%=strCommentEsGuardarRelaciones%>tableColumn.setMinWidth(65); 
						
					<%=strCommentEsGuardarRelaciones%>this.iWidthTableDefinicion+=65;
						
					<%=strCommentEsGuardarRelaciones%>this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addColumn(tableColumn);
				}
				<%}%>
			}			
						
			<%if((GenerarMe || GetEsGuardarRelacionesFromPropertiesC(TablaBase))&& intNumeroClasesRelacionadasFinal>0 ) {%>
			if(this.conMaximoRelaciones && this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("<%=strEditarRelaciones%>");
					tableColumn.setHeaderValue("<%=strEditarRelaciones%>");
					tableColumn.setCellRenderer(new <%=strIdGetSet%>TableCell(this,true,false<%=strParametroSizeTablaTieneTotalizar%>));
					tableColumn.setCellEditor(new <%=strIdGetSet%>TableCell(this,true,false<%=strParametroSizeTablaTieneTotalizar%>));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
						
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addColumn(tableColumn);
				}
			}
			<%}%>
			
			<%if(blnConSeleccionar){%>
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new <%=strIdGetSet%>SeleccionarTableCell(this));
			tableColumn.setCellEditor(new <%=strIdGetSet%>SeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addColumn(tableColumn);
			*/
			<%}%>
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		<%if(GetPermiteEditarFromPropertiesC(TablaBase)){%>
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>) {
				<%=strCommentEsGuardarRelaciones%>iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		<%=strCommentEsGuardarRelaciones%>iUltimaColumna++;	
		
		<%}%>
				
		<%if((GenerarMe || GetEsGuardarRelacionesFromPropertiesC(TablaBase)) && intNumeroClasesRelacionadasFinal>0) {%>
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		<%}%>
		
		<%if(blnConSeleccionar){%>
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		<%}%>		
		
		<%if(GetPermiteEditarFromPropertiesC(TablaBase)){%>
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>) {
				<%=strCommentEsGuardarRelaciones%>//REUBICA ELIMINAR SIMPLE
				<%=strCommentEsGuardarRelaciones%>jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.moveColumn(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				<%=strCommentEsGuardarRelaciones%>iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		<%=strCommentEsGuardarRelaciones%>jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.moveColumn(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		<%}%>
		
		<%if((GenerarMe || GetEsGuardarRelacionesFromPropertiesC(TablaBase)) && intNumeroClasesRelacionadasFinal>0 ) {%>
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.moveColumn(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		<%}%>
		
		
		<%if(blnConSeleccionar) {%>
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.moveColumn(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		<%}%>
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getTableHeader().getDefaultRenderer();
		
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getTableHeader().setDefaultRenderer(new TableCellRenderer() {
	        @Override
	        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
	            JLabel jLabel = (JLabel) tableHeaderDefaultCellRenderer.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
	            
				jLabel.setBorder(BorderFactory.createCompoundBorder(jLabel.getBorder(), BorderFactory.createEmptyBorder(0, 5, 0, 0)));
	            jLabel.setHorizontalAlignment(SwingConstants.LEFT);
	            
				Font newTableFont=new Font(jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getFont().getName(),Font.BOLD,jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getFont().getSize() + 1);
				
				jLabel.setFont(newTableFont);
				
				if (isSelected) {
	                jLabel.setForeground(Color.YELLOW);
					jLabel.setFont(newTableFont);
	                //jLabel.setFont(new Font("Arial", Font.BOLD, 12));
	            } else {
	                //jLabel.setForeground(Color.BLACK);
	                //jLabel.setFont(new Font("Arial", Font.PLAIN, 10));
	            }
				
	            return jLabel;
	        }
	    });
	    
		TableColumn column=null;
		
		for(int i = 0; i < this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumnCount(); i++) { 
			column = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumn(i); 
			
			if(column.getIdentifier()!=null) {
				//SI SE UTILIZA UN HEADER ES GENERICO
				//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
			}
			
			if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
				continue;
			}
			
			if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
				if(!<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL_TABLA) {
					column.setPreferredWidth(50); 	 
					column.setWidth(50); 	 
					column.setMinWidth(50); 	
					
					this.iWidthTableDefinicion+=50;
				}
				
			} else {
				if(!<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL_TABLA) {
					column.setPreferredWidth(<%=intTamColumnaTablaSwing%>); 	 
					column.setWidth(<%=intTamColumnaTablaSwing%>); 	 
					column.setMinWidth(<%=intTamColumnaTablaSwing%>); 	
					
					this.iWidthTableDefinicion+=<%=intTamColumnaTablaSwing%>;
				}
			}
		}
		
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
						<%if(!blnEsTablaUnoAUnoFk) {%>
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							<%if(ConEjb){%>//<%}%><%=strCommentReporte%>iSize=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
						<%}%>
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			<%if(!CON_OPTIMIZE_V0){%>
			this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.refreshAndNotify();	
			<%}%>
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButton<%=strIdGetSet%>ActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				this.inicializarInvalidValues();
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();				
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId()>=0 && 
				   !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getIsNew()) {
					
					this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				} else {
					this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				}
								
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>(esRelaciones);						
				
				this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.get<%=strIdGetSet%>()<0) {
					this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,rowIndex);
				}	
				
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion <%=GetNombreClaseC(TablaBase.ToString())%>: " + this.dDif); 
					}
				}
			} else {
				this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.get<%=strIdGetSet%>()>0) {
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsDeleted(true);
						
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().remove(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.remove(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);				
					}
					
					this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	<%if(false) {//blnConSeleccionar%>
	public void jCheckBox<%=strIdGetSet%>SelActionPerformed(ActionEvent evt,int rowIndex) { 
		try {
			
			//this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,null,rowIndex);			
			//this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,rowIndex);
			JCheckBox  jCheckBox=(JCheckBox)evt.getSource();
			
			int intSelectedRow = 0;
				
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
				this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
			} else {	
				intSelectedRow=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	       
			}
				
			//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
			if(intSelectedRow<0) {
				return;
			}
				
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
			}			
			
			if(jCheckBox.isSelected()) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsSelected(true);
			} else {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsSelected(false);
			}
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>this.actualizarSelectedLista(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.actualizarSelectedLista(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			;
		}
	}
	<%}%>
	
	public void seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>) {
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				}
				
				//ARCHITECTURE
				try {
					<%=GetCallFuncionesSetActualComboForeignKeys(false,true,false)%>
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>() ;
			//}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			<%=GetSetVariablesClaseToFormularioTableModel(false)%>
			
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean conColumnasBase) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			this.inicializarInvalidValues();
			
			<%=GetSetVariablesFormularioToClaseTableModel()%>
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			<%=GetSetVariablesClaseReturnToBean(false,true,false)%>
			
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetos<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Origen,<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			<%=GetSetVariablesClaseReturnToBean(false,false,true)%>
			
		} catch(Exception e) {
			throw e;
			//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>) throws Exception { 
		try {
			<%=GetSetVariablesClaseToFormularioTableModel(false)%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>) throws Exception { 
		try {
			<%=GetSetVariablesClaseToFormularioTableModel(true)%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBean<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,<%=GetNombreClaseC(TablaBase.ToString())%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,Boolean conDefault) throws Exception { 
		try {
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local=new <%=GetNombreClaseC(TablaBase.ToString())%>();
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			<%=GetSetVariablesClaseReturnToBean(true,false,false)%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBox<%=GetNombreClaseC(TablaBase.ToString())%>Generico(Long id<%=GetNombreClaseC(TablaBase.ToString())%>Seleccionado,JComboBox jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>,List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal)throws Exception {
		try {
			<%=GetNombreClaseC(TablaBase.ToString())%>  <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Temp=null;

			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sLocal) {
				if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId()!=null && <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(id<%=GetNombreClaseC(TablaBase.ToString())%>Seleccionado)) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Temp=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
					break;
				}
			}

			jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedItem(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Temp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBox<%=GetNombreClaseC(TablaBase.ToString())%>Generico(JComboBox jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
				<%if(blnEsAutoReferenciada) {%>				
				//AUTOREFERENCIADA
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ARBOL");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ARBOL");
				
				jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Arbol"));			
				//AUTOREFERENCIADA
				<%}%>
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		<%=GetSeleccionarActionRelacionesColumnsTableCellTablasClasesRelacionadas(TablaBase)%>
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>=(<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		<%=GetDescripcionColumnsTableVariablestrForeignKeys(false)%>
		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Row=new <%=GetNombreClaseC(TablaBase.ToString())%>();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Row=(<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Row=(<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		<%=GetDescripcionColumnsTableVariablestrForeignKeys(true)%>
		
		return color;
	}
	
	<%=ReDefinirTableCellColumnsTableVariablestrForeignKeys(false)%>
	
	<%=GetNavegacionColumnsTableCellTablasClasesRelacionadas(TablaBase,false,true)%>
	
	<%=GetAbrirVentanaBotonForeignsKeysTablasClases()%>
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
		<%if(!CON_OPTIMIZE_V0){%>
		this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		<%if(blnConTotales){%>this.jTableBinding<%=GetNombreClaseC(TablaBase.ToString())%>Total.refresh();<%}%>
		<%}%>
	}
	
	public void inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>));			
			this.jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>));			
			this.jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>));
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>));
			}
			<%=strCommentMinCodigoWebFin%>
			this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>));			
			this.jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));						
			this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>));	
			this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>));	
			this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>));
			this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>);				
			this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));			
			this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));							
			
			//TOOLBAR
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jButtonNuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>));						
				this.jButtonDuplicarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>));						
				this.jButtonCopiarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jButtonAbrirOrderByToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>));
				this.jButtonNuevoRelacionesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jButtonNuevoGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jButtonModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>));	
				this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>  && this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>));	
				this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>));
				this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>);				
				this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));									
				this.jButtonGuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));						
			}
			<%=strCommentMinCodigoWebFin%>
			//TOOLBAR
			
			//MENUS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jMenuItemDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jMenuItemCopiar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jMenuItemAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>));			
				//this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>));
				this.jMenuItemDetalleAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>));			
				//this.jMenuItemDetalleMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jMenuItemNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>));			
				this.jMenuItemNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));									
				this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>));	
				this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>));	
				this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>));
				this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>);				
				this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));						
				this.jMenuItemGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible((this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%> && this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>));			
			}
			<%=strCommentMinCodigoWebFin%>
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.isVisibilidadCeldaOrden<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			}
			<%=strCommentMinCodigoWebFin%>
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
			
			//TOOLBAR
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonNuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonNuevoRelacionesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=this.jButtonGuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();			
			}
			<%=strCommentMinCodigoWebFin%>
			//TOOLBAR
			
			//MENUS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();
				this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=this.jMenuItemGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.isVisible();			
			}
			<%=strCommentMinCodigoWebFin%>
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean esInicializar) {
		if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
				//if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
			
			this.inicializarActualizarBindingBotonesManual<%=GetNombreClaseC(TablaBase.ToString())%>(true);
			
		} else {	
			<%if(blnConBindingComplejo){%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
					
			//NUEVO RELACIONES		
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
					
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
					
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
				
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>");//enabled
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();		
					
					
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.bind();
			
			<%}%>
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManual<%=GetNombreClaseC(TablaBase.ToString())%>() {
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>);			
		this.jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>);			
		this.jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoCopiar<%=GetNombreClaseC(TablaBase.ToString())%>);			
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoOrden<%=GetNombreClaseC(TablaBase.ToString())%>);			
		}
		<%=strCommentMinCodigoWebFin%>
		this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>);			
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>);	
		this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>);	
		this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>);
		this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>);			
		this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>);						
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(this.isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>);
	}
	
	public void inicializarActualizarBindingBotonesPermisos<%=GetNombreClaseC(TablaBase.ToString())%>() {
		if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManual<%=GetNombreClaseC(TablaBase.ToString())%>();
		} else {
			<%if(blnConBindingComplejo){%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
					
			
			//NUEVO RELACIONES
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isPermisoNuevo<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			/*
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.isPermisoConsulta<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			*/
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isPermisoActualizar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isPermisoEliminar<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this,ELProperty.create("${isPermisoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>}"), this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>Permiso");
			<%if(blnConListenerBindingComplejo) {%>
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			<%}%>
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			//this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
					
			this.bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.bind();
			
			/*
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.getBinding("ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");		
			
			if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.removeBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			}
			
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%> = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>, ELProperty.create("${visible}"),"ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.addBindingListener(new <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener());
			bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>Botones.addBinding(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>);
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
			*/
			<%}%>
		}
	}
	
	
	public void refrescarBindingBotones<%=GetNombreClaseC(TablaBase.ToString())%>() {
		<%if(blnConBindingComplejo){%>
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
			
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
					
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
				
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}
				
		this.binding<%=GetNombreClaseC(TablaBase.ToString())%> =bindingGroup<%=GetNombreClaseC(TablaBase.ToString())%>.getBinding("ButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>");		
		
		if(this.binding<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.binding<%=GetNombreClaseC(TablaBase.ToString())%>.refresh();
		}	
		<%}%>
	}
	
	public void jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>ListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(null,evt,-1);
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	<%if(blnConFuncionalidadAccionesCampoVersion1){%>
	<%=GetFunctionsInicializacionButtonsForeignKeysTablaClaseC(TablaBase,ConEjb)%>
	<%}%>
	
	<%if(!blnConMinCodigoWeb){%>
	<%=GetIndicesFunctionsInicializacionButtonsTablasClasesC(TablaBase)%>
	<%}%>
	
	public void closingInternalFrame<%=GetNombreClaseC(TablaBase.ToString())%>() {
		<%=GetEliminarLiberarTablesRelacionadas(TablaBase)%>	
		
		<%=GetEliminarLiberarTablesRelacionadasForeignsKeys(TablaBase)%>
		
		if(this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);	    			
			this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.dispose();
			this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>=null;
		}
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			if(this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);	    			
				this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.dispose();
				this.jInternalFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>=null;
			}
		
			if(this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
				this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);	    			
				this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.dispose();
				this.jInternalFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>=null;
			}
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	<%if(blnEsAutoReferenciada) {%>
	public void closingTreeFrame<%=GetNombreClaseC(TablaBase.ToString())%>() {
		<%//=GetEliminarLiberarTablesRelacionadas(TablaBase)%>
		
		if(this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);	    			
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>.dispose();
			this.jInternalFrameTree<%=GetNombreClaseC(TablaBase.ToString())%>=null;
		}
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	<%} %>
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			<%if(EsSwing){%>
			this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			
			if(sTipo.equals("Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
			} else if(sTipo.equals("Duplicar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
			} else if(sTipo.equals("Copiar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);
			} else if(sTipo.equals("Modificar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("Actualizar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("Eliminar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("Cancelar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("Cerrar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			}
			<%if(blnEsAutoReferenciada) {%>
			else if(sTipo.equals("Arbol<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} 
			<%} %>
			else if(sTipo.equals("Anteriores<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriore<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("Siguientes<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>") || sTipo.equals("MenuItemDetalleAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>") || sTipo.equals("MenuItemDetalleMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} 
			<% if(blnEsProceso){%>
			else if(sTipo.equals("ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} 
			<%} %>
			else if(sTipo.equals("CerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				<%=strCommentMinCodigoWebIni%>
				jButtonGenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				<%=strCommentMinCodigoWebFin%>
			} else if(sTipo.equals("CerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				<%=strCommentMinCodigoWebIni%>
				jButtonGenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				<%=strCommentMinCodigoWebFin%>
			} else if(sTipo.equals("AbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				<%=strCommentMinCodigoWebIni%>
				jButtonAbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				<%=strCommentMinCodigoWebFin%>
			} else if(sTipo.equals("TiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(evt,false);
			} else if(sTipo.equals("TiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				<%=strCommentMinCodigoWebIni%>
				jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(evt);
				<%=strCommentMinCodigoWebFin%>
			} else if(sTipo.equals("ValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(evt);
			}
			
			<% if(blnConTotales){%>
			else if(sTipo.equals("AbrirTotales<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAbrirTotales<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotales<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrarTotales<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} 
			<%} %>
			
			else if(sTipo.equals("AbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrarOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			} 
						
			<%=GetSeleccionarActionsElementosSwingForeignKeysTablaClaseC(TablaBase)%>
			
			<%if(blnConFuncionalidadAccionesCampoVersion1){%>
			<%=GetIndicesActionsSeleccionarButtonsTablasClasesC(TablaBase)%>
			<%}%>	
			
			<%if(!blnConMinCodigoWeb){%>
			<%=GetSetIndicesActionsButtonsTablasClasesC(TablaBase)%>
			<%}%>	
			
			<%=GetAccionesPanelesFinRelaciones("EJECUTAR")%>;
			
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>						
			
		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			<%if(EsSwing){%>
      		this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			Container containerParent=null;
			JTextField jTextField=null;
			
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
				esControlTabla=true;
			}
					
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(true,false,false,false,false)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>	
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
						id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
			} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(true,false,false,false,false)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>	
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
						id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(true,false,false,false,false)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			*/
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			Container containerParent=null;
			Container containerParentAux=null;
			JFormattedTextField JFormattedTextField=null;
			Component componentOpposite=null;
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			JFormattedTextField=(JFormattedTextField)evt.getSource();
			
			containerParentAux=JFormattedTextField.getParent();
			
			if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
				containerParent=containerParentAux.getParent();
			}
			
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
					
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,false,false,false,true)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>	
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
						id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
		} catch(Exception e) {
  				e.printStackTrace();
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			JTextField jTextField=null;
			Container containerParent=null;
			Container containerParentAux=null;
			Component componentOpposite=null;
			
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jTextField=(JTextField)evt.getSource();
			
			containerParentAux=jTextField.getParent();
					
			if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
				containerParent=containerParentAux.getParent();
			}
			
			componentOpposite=evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,false,false,false,true)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>	
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
						id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,true,false,false,false)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>	
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
						id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,true,false,false,false)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			*/
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
		
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			JLabel jLabel=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jLabel=(JLabel)evt.getSource();
			
			containerParent=jLabel.getParent();
					
			componentOpposite=evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,false,true,false,false)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>	
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
						id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
		
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void recargarForm<%=GetNombreClase(TablaBase.ToString())%>(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarForm<%=GetNombreClase(TablaBase.ToString())%>(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarForm<%=GetNombreClase(TablaBase.ToString())%>(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm) {
			if(!esControlTabla) {
				if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true);
					this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);			
				}
				
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActual<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,classes);				
				}
			
				if(conIrServidorAplicacion) {
					<%if(!blnEstablaModulo && !blnEsReporte) {%>
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
						<%if(ConSessionBeans){%>
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//sTipoGeneral
						<%}%>
									
					} else if(Constantes.ISUSAEJBHOME) {
						<%if(ConSessionBeans){%>
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//sTipoGeneral
						<%}%>
					}
					//ARCHITECTURE
					<%}%>
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBean<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBean<%=GetNombreClase(TablaBase.ToString())%>(classes,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,false);
					}
						
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormulario<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>());	
					}
						
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>(),classes);//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,classes);//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>);									
				}
			
				if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActual<%=GetNombreClaseC(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,true);
					this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior!=null) {
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Anterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					<%if(!blnEstablaModulo && !blnEsReporte) {%>
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
						<%if(ConSessionBeans){%>
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//sTipoGeneral
						<%}%>
									
					} else if(Constantes.ISUSAEJBHOME) {
						<%if(ConSessionBeans){%>
						this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.procesarEventos<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>,this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>,classes);//sTipoGeneral
						<%}%>
					}
					//ARCHITECTURE
					<%}%>
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(EsSwing){//NO ESTOY SEGURO%>
					//NO ENTENDIBLE PORQUE PONER
					//if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEstaModoGuardarRelaciones() 
					//	|| this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado())	{
					<%}%>
						<%if(ConEjb){%>//<%}%>actualizarLista(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					<%if(EsSwing){//NO ESTOY SEGURO%>
					//}
					<%}%>
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					<%//if(!EsSwing){%>
					actualizarLista(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);
					<%// } %>
				}
				//ARCHITECTURE
				
				//this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.repaint();
				
				//((AbstractTableModel) this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>();
			}
		}
	}
	
	public void actualizarVisualTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>() {
		((AbstractTableModel) this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getModel()).fireTableDataChanged();
	}
	
	public void setVariablesRelacionesObjetoActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,ArrayList<Classe> classes) throws Exception { 
		try {
			<%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,true,false,false)%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
			
			//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			Boolean conTodasRelaciones=false;
			
			this.esUsoDesdeHijo=esUsoDesdeHijo;
									
			<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),generalEntityParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			for(String sClasse:arrClasses) {
				if(sClasse.equals("TODOS")) {
					conTodasRelaciones=true;
					break;
				}
			}
			
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>SessionBean.getConGuardarRelaciones()) {
				if(conTodasRelaciones) {
					classes=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getClassesRelationshipsOf<%=GetNombreClaseC(TablaBase.ToString())%>(new ArrayList<Classe>(),DeepLoadType.NONE);
				} else {
					classes=<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.getClassesRelationshipsFromStringsOf<%=GetNombreClaseC(TablaBase.ToString())%>(arrClasses,DeepLoadType.NONE);
				}
			}

			this.classesActual=new ArrayList<Classe>();
			this.classesActual.addAll(classes);

			this.recargarForm<%=GetNombreClaseC(TablaBase.ToString())%>(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
			
			 			
			<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),generalEntityParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormulario<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>) throws Exception { 
		try {
			<%=GetListasParametroTablesRelacionadas(TablaBase,true,false,false,true,false,false)%>
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBean<%=GetNombreClase(TablaBase.ToString())%>(ArrayList<Classe> classes,<%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral <%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral,<%=GetNombreClaseC(TablaBase.ToString())%><%=strClaseBean%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strClaseBean%>,Boolean conDefault) throws Exception {
		<%=GetListasParametroTablesRelacionadas(TablaBase,true,false,true,false,false,false)%>
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActual<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjeto(TablaBase.ToString())%>,ArrayList<Classe> classes) throws Exception {
		<%=GetListasParametroTablesRelacionadas(TablaBase,true,true,false,false,false,false)%>
	}
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			JCheckBox jCheckBox=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
						
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jCheckBox=(JCheckBox)evt.getSource();
			
			containerParent=jCheckBox.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			if(sTipo.equals("SeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(evt);
			
			} else if(sTipo.equals("Seleccionados<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jCheckBoxSeleccionados<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(evt);
			
			} else if(sTipo.equals("NuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				
			}
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,false,false,true,false)%>
			<%} else {%>
			<%}%>			
			
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
						id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			Boolean esControlTabla=false;
			JCheckBox jCheckBox=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			
			//PARAMETROS LLAMAR FUNCION PARENT
			GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
			Boolean esUsoDesdeHijoLocal=false;
			Boolean conIrServidorAplicacionParent=false;	
			ArrayList<String> arrClasses=new ArrayList<String>();			
			//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
			/*
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			*/
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			jCheckBox=(JCheckBox)evt.getSource();
			
			containerParent=jCheckBox.getParent();
					
			componentOpposite=evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariables(false,false,false,true,false)%>
			<%} else {%>
			<%}%>			
			
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			
			<%if(EsSwing){%>			
			if(esUsoDesdeHijoLocal) {
				Long id=0L;
			
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
						id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
						evt,generalEntityParameterGeneral,null);
				}
			}			
			<%} else {%>
			
			<%}%>
			
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			if(sTipo.equals("CloseInternalFrame<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				closingInternalFrame<%=GetNombreClaseC(TablaBase.ToString())%>();
				
			} else if(sTipo.equals("jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				JInternalFrameBase jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = (JInternalFrameBase)evt.getSource();
	            	
	            <%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame jInternalFrameParent=(<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame)jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(null);
			}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			if(sTipo.equals("TableDatosSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				//BYDAN_DESHABILITADO
	            //try {jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>ListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
				
				//SOLO CUANDO MOUSE ES SOLTADO
				if (!evt.getValueIsAdjusting()) {
					//SELECCIONA FILA A OBJETO ACTUAL
					Integer intSelectedRow = this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow();
					
					if(intSelectedRow!=null && intSelectedRow>-1) {
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
							this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%> =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
						}
						//ARCHITECTURE
						
						//System.out.println(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					}
				}
				
			} else if(sTipo.equals("jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
			
			}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			if(sTipo.equals("DatosSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
			
			}
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	<%=GetAccionesPanelesFinRelaciones("FUNCIONES")%>;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			<%if(EsSwing){%>
			this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			if(sTipo.equals("Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
				
			} else if(sTipo.equals("Duplicar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);
				
			} else if(sTipo.equals("Copiar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);
				
			} else if(sTipo.equals("Modificar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("Actualizar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("Eliminar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("Cancelar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("Cerrar<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);
			
			} else if(sTipo.equals("Anteriores<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);			
			
			}  else if(sTipo.equals("Siguientes<%=GetNombreClaseC(TablaBase.ToString())%>")) {
				jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);			
			} 
			
			<%=GetSeleccionarActionsElementosSwingForeignKeysTablaClaseC(TablaBase)%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
  		} catch(Exception e) {
  			e.printStackTrace();
			
  		}  finally {
			<%if(EsSwing){%>
      		this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>();
			<%}%>
      	}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
			<%if(EsSwing){%>
			<%//=GetInitActionsFrameColumnsVariablestrForeignKeys(true)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			<%}%>
			
			String sFinalQueryCombo="";
			
			<%if(EsSwing){%>
			<%=GetInitActionsFrameColumnsVariablestrForeignKeys(true)%>
			<%} else {%>
			<%}%>
			
			<%if(!EsSwing){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}else{%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
			<%}%>
			*/						
  		} catch(Exception e) {
  			e.printStackTrace();
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED) {
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				<%if(!EsSwing){%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				
				<%}else{%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				<%}%>
				
				String sFinalQueryCombo="";
				
				<%if(EsSwing){%>
				<%=GetInitActionsFrameColumnsVariablestrForeignKeys(true)%>
				<%} else {%>
				<%}%>
				
				<%if(!EsSwing){%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				<%}else{%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				<%}%>
				
				<%if(EsSwing){%>			
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				<%} else {%>
				
				<%}%>
			}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				<%if(!EsSwing){%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				
				<%}else{%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				<%}%>
				
				String sFinalQueryCombo="";
				
				<%if(EsSwing){%>
				<%=GetInitActionsFrameColumnsVariablestrForeignKeys(true)%>
				<%} else {%>
				<%}%>
				
				<%if(!EsSwing){%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>Additional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				<%}else{%>
				<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,new Object(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ParameterGeneral,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral);
				<%}%>
				
				
				<%if(EsSwing){%>			
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(<%=GetNombreClase(TablaBase.ToString())%>.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",<%=GetNombreClase(TablaBase.ToString())%>.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				<%} else {%>
				
				<%}%>
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>Anterior =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrame<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jButtonDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"Duplicar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jButtonCopiar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"Copiar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonNuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"NuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jButtonDuplicarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"DuplicarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"NuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonNuevoRelacionesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"Modificar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"ModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"MenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Actualizar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this,"ActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Eliminar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"EliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
					
			this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Cancelar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>"));		
			
			this.jButtonMostrarOcultarTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Cerrar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonCerrarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CerrarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
					
			this.jButtonCopiarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CopiarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemCopiar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemCopiar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonGuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"RecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>"));
					
			this.jButtonRecargarInformacionToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		<%if(blnEsAutoReferenciada) {%>
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Arbol<%=GetNombreClaseC(TablaBase.ToString())%>"));
		<%} %>
		
		this.jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Anteriores<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonAnterioresToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"AnterioresToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"Siguientes<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonSiguientesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"SiguientesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemDetalleAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemDetalleMostarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultar<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		this.jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jButtonNuevoGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jMenuItemNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		<% if(blnEsProceso){%>
		this.jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>"));
		<%} %>
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>"));

		this.jCheckBoxSeleccionados<%=GetNombreClaseC(TablaBase.ToString())%>.addItemListener(new CheckBoxItemListener(this,"Seleccionados<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"TiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"TiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"TiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>"));
					
			this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"TiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
			this.jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"ValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>"));
		}
		<%=strCommentMinCodigoWebFin%>
		
		<%=GetActionsElementosSwingTablaClaseC(TablaBase)%>
		
		<%=GetActionsElementosSwingForeignKeysTablaClaseC(TablaBase)%>
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
			<%=GetIndicesActionsInicializacionButtonsTablasClasesC(TablaBase,"\t")%>
		}
		<%=strCommentMinCodigoWebFin%>
		
			//REPORTE DINAMICO
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jButtonCerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>"));
				
				this.jButtonGenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>"));
				
				this.jButtonGenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>"));
				
				
				//IMPORTACION
				this.jButtonCerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>"));
				
				this.jButtonGenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"GenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>"));
				
				this.jButtonAbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"AbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>"));
				
				//ORDER BY
				this.jButtonAbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"AbrirOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>"));
			
				this.jButtonAbrirOrderByToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBar<%=GetNombreClaseC(TablaBase.ToString())%>"));			
				
				this.jButtonCerrarOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CerrarOrderBy<%=GetNombreClaseC(TablaBase.ToString())%>"));	
			}
			<%=strCommentMinCodigoWebFin%>
			
		}
		
		<%if(blnConTotales){%>
		this.jButtonAbrirTotales<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"AbrirTotales<%=GetNombreClaseC(TablaBase.ToString())%>"));
		
		this.jButtonCerrarTotales<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ButtonActionListener(this,"CerrarTotales<%=GetNombreClaseC(TablaBase.ToString())%>"));
		<%}%>
		
		
		if(!this.conCargarMinimo) {
			<%=GetAccionesPanelesFinRelaciones("DEFINIR")%>;
		}
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrame<%=GetNombreClaseC(TablaBase.ToString())%>();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%> = (JInternalFrameBase)event.getSource();
	            	
	            <%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame jInternalFrameParent=(<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame)jInternalFrameDetalle<%=GetNombreClaseC(TablaBase.ToString())%>.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>ListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "Nuevo<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "Modificar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "Actualizar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "Eliminar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "Cancelar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "Cerrar<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTabla<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>";
		inputMap = this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		<%if(blnEsAutoReferenciada) {%>
		this.jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonArbol<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		<%} %>
		
		this.jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		<% if(blnEsProceso){%>
		this.jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		<%} %>
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		<%=GetActionsElementosSwingForeignKeysTablaClaseC(TablaBase)%>
		
		<%=GetIndicesActionsInicializacionButtonsTablasClasesC(TablaBase,"")%>
		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	<%=strCommentMinCodigoWebIni%>
	public void jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionar<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}	
	<%=strCommentMinCodigoWebFin%>
	
	<%} else {%>
	//WEB BOTONES ACTIONS
	public void nuevo<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {   
		try {
			this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			//this.habilitarDeshabilitarTipoMantenimiento<%=GetNombreClaseC(TablaBase.ToString())%>(esRelaciones);
			
			this.nuevoPreparar(false); 
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {   
		try	{
			//if(this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
						
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				
			//} else {
				//JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			//}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {   
		try	{
			
			//if(this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				
			//} else {
				//JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			//}	
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}		
	}
	
	public void cancelar<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {                                         	   	       
	  	try {
			this.cancelar(true);			
			
			this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {    		
		try	{
	    	this.guardarCambios();
			
			this.procesarBusqueda(this.sAccionBusqueda);
														
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void nuevoGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {    		
		try	{			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevo<%=GetNombreClaseC(TablaBase.ToString())%>--;			
			//<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux= new <%=GetNombreClaseC(TablaBase.ToString())%>();			
			//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setId(this.iIdNuevo<%=GetNombreClaseC(TablaBase.ToString())%>);					
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			//this.setVariablesFormularioToObjetoActualForeignKeys<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);			
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);				
			}
			*/
						
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();				
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminarGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() { 
		try {
			//SWING
			//this.seleccionar<%=GetNombreClaseC(TablaBase.ToString())%>(evt,null,rowIndex);
			
			//WEB
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>= (<%=GetNombreClaseC(TablaBase.ToString())%>) <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sListDataModel.getRowData();
			
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>;
			
			//NO FUNCIONA EN WEB
			//this.seleccionarAsignar(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			if(this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {
				if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.get<%=strIdGetSet%>()>=0) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsDeleted(true);
						
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sEliminados.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				}
					
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().remove(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.remove(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);				
				}
				
				//SWING
				//this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			}			
		} catch(Exception e) {
			;
		}
	}
	
	public void anteriores<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {    		
		try	{
			//ESTA EN ANTERIORES
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			this.anteriores();
											
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {    		
		try	{
			//ESTA EN SIGUIENTES
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;	
			
			this.siguientes();
						
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void recargarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed() throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
	    	this.recargarInformacion();						
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	<%}%>
	
	public void seleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
				<%if(ConEjb){%>//<%}%>	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(conSeleccionarTodos);
				<%if(ConEjb){%>//<%}%>}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(<%if(EsSwing){%>ItemEvent evt<%}%>) throws Exception {    		
		try {			
			<%if(EsSwing){%>
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);
			<%}%>
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
					<%if(ConEjb){%>//<%}%>	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(this.isSeleccionarTodos);
					<%if(ConEjb){%>//<%}%>}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
					<%=GetColumnsSeleccionarTodos()%>
					<%if(ConEjb){%>//<%}%>}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
						<%=GetColumnsSeleccionarTodos()%>
					}
				}
			}
					
			if(existe) {
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				<%} else {%>
				//BINDING YA REALIZADO
				<%}%>
			} else {
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				<%} else {%>
				throw new Exception("NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA");
				<%}%>
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionados<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(<%if(EsSwing){%>ItemEvent evt<%}%>) throws Exception {    		
		try {			
			<%if(EsSwing){%>
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);
			<%}%>
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			arrNumRowsSeleccionados=this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedRows();

			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local=new <%=GetNombreClaseC(TablaBase.ToString())%>();
			
			//this.seleccionarTodos<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local =(<%=strPackageJava%><%=GetNombreClaseC(TablaBase.ToString())%>) this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.toArray()[this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Local.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
					<%if(ConEjb){%>//<%}%>	<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(this.isSeleccionados);
					<%if(ConEjb){%>//<%}%>}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				<%} else {%>
				//BINDING YA REALIZADO
				<%}%>
			/*
			} else {
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				<%} else {%>
				throw new Exception("NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA");
				<%}%>
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatos<%=GetNombreClaseC(TablaBase.ToString())%>,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActual<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(<%if(EsSwing){%>ItemEvent evt,<%}%>Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliar<%=GetNombreClaseC(TablaBase.ToString())%>ParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(<%if(EsSwing){%>ActionEvent evt<%}%>) throws Exception {    		
		try {
			<%if(EsSwing){%>this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);<%}%>
			
			//System.out.println(this.jTextFieldValorCampoGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
				<%=GetColumnsSetValorGeneralTodos()%>
				<%if(ConEjb){%>//<%}%>}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
					<%=GetColumnsSetValorGeneralTodos()%>
				}
			}
								
			if(existe) {
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				<%} else {%>
				//BINDING YA REALIZADO
				<%}%>
			} else {
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				<%} else {%>
				throw new Exception("NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA");
				<%}%>
			}			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(<%if(EsSwing){%>ActionEvent evt<%}%>,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			<%if(EsSwing){%>
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);
			<%}%>
			
			<%if(EsSwing){%>
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				<%=strCommentMinCodigoWebIni%>
				reporte=(Reporte)this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem();
				<%=strCommentMinCodigoWebFin%>
			} else {
				reporte=(Reporte)this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem();
			}
			<%}%>
			
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>) {				
					conSplash=true;//false;
					
					<%if(EsSwing){%>
					//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>(conSplash);
					<%}%>
				
					this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
				} else {
				<%if(EsSwing){%>
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				<%}%>	
				}
				<%if(EsSwing){%>
				if(!esParaAccionDesdeFormulario) {
					<%=strCommentMinCodigoWebIni%>
					this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
					<%=strCommentMinCodigoWebFin%>
				} else {
					this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				}
				<%}%>
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
				<%if(EsSwing){%>
				//this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				<%}%>
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(false);
				<%if(EsSwing){%>
				//this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				<%}%>
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
				<%if(EsSwing){%>
				//this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				<%}%>
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				<%if(EsSwing){%>
				//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
				<%}%>
				
				this.exportar<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
				<%if(EsSwing){%>
				if(!esParaAccionDesdeFormulario) {
					<%=strCommentMinCodigoWebIni%>
					this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
					<%=strCommentMinCodigoWebFin%>
				} else {
					this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				}					
				<%}%>
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>s();
				//this.importar<%=GetNombreClaseC(TablaBase.ToString())%>s();
				<%if(EsSwing){%>
				if(!esParaAccionDesdeFormulario) {
					<%=strCommentMinCodigoWebIni%>
					this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
					<%=strCommentMinCodigoWebFin%>
				} else {
					this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				}					
				<%}%>					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				<%if(EsSwing){%>
				//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
				<%}%>
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
				<%if(EsSwing){%>
				//this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				<%}%>					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				<%if(EsSwing){%>
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>", JOptionPane.OK_CANCEL_OPTION) == 0) {
				<%}%>
				
				<%if(EsSwing){%>
				//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
				<%}%>
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevo<%=GetNombreClaseC(TablaBase.ToString())%>)) {
						this.esRecargarFks=true;
						this.cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>(false,false,false);
						this.esRecargarFks=false;
						
						<%if(EsSwing){%>
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
						<%}%>
					} else {
						<%if(EsSwing){%>
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
						<%}%>
					}
					
					
				<%if(EsSwing){%>
				}
				
				if(!esParaAccionDesdeFormulario) {
					<%=strCommentMinCodigoWebIni%>
					this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
					<%=strCommentMinCodigoWebFin%>
				} else {
					this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
				}	
				<%}%>								
			} else if(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporte<%=GetNombreClase(TablaBase.ToString())%>) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						<%if(EsSwing){%>
						//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>(conSplash);
						<%}%>
					
						//this.actualizarParametrosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>();
						
						this.generarReporteProcesoAccion<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(reporte.getsCodigo());
						
						<%if(EsSwing){%>
						if(!esParaAccionDesdeFormulario) {
							<%=strCommentMinCodigoWebIni%>
							this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
							<%=strCommentMinCodigoWebFin%>
						} else {
							this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
						}
						<%}%>
					} else {
						<%if(EsSwing){%>
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
						<%} else {%>
						throw new Exception("NO SE HA SELECCIONADO ALGUN ELEMENTO");
						<%}%>
					}
				} else {
				<%if(EsSwing){%>
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				<%}%>	
				}
			} else if(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					<%if(EsSwing){%>
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase).ToUpper()%> SELECCIONADOS?", "MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>", JOptionPane.OK_CANCEL_OPTION) == 0) {
					<%}%>	
						<%if(EsSwing){%>
						//this.startProcess<%=GetNombreClase(TablaBase.ToString())%>();
						<%}%>
				
						this.actualizarParametrosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							<%if(ConEjb){%>//<%}%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.procesarAccion<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s(),this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
							<%if(ConSessionBeans){%>
							this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.procesarAccion<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>);
							<%}%>
						
						} else if(Constantes.ISUSAEJBHOME) {
							<%if(ConSessionBeans){%>
							this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.procesarAccion<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection(this.datosCliente,this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strParameterGeneral%>);
							<%}%>
						}
						//ARCHITECTURE
						
						this.procesar<%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral();
					
					<%if(EsSwing){%>
					if(!esParaAccionDesdeFormulario) {
						<%=strCommentMinCodigoWebIni%>
						this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
						<%=strCommentMinCodigoWebFin%>
					} else {
						this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
					}
					}
					<%}%>
				} else {
					<%if(EsSwing){%>
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					<%} else {%>
					throw new Exception("NO SE HA SELECCIONADO ALGUN ELEMENTO");
					<%}%>
				}
				
			} else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>();
					
					<%if(blnConAdditional){%>
					<%//if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
					<%if(EsSwing){%>
					<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					<%} else {%>
						<%if(blnConMaxCodigo){%>
					<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>Additional.ProcesarAccion(sTipoAccionLocal,sTipoAccionLocal,this);
						<%}%>						
					<%}%>
					<%//}%>
					
					this.procesar<%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral();
					
					<%if(EsSwing){%>
					if(!esParaAccionDesdeFormulario) {
						<%=strCommentMinCodigoWebIni%>
						this.jComboBoxTiposAcciones<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
						<%=strCommentMinCodigoWebFin%>
					} else {
						this.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedIndex(0);					
					}
					<%}%>
					<%}%>
				} else {
					<%if(EsSwing){%>
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					<%} else {%>
					throw new Exception("NO SE HA SELECCIONADO ALGUN ELEMENTO");
					<%}%>
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		
		}  finally {
			<%if(EsSwing){%>
      		//this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>(conSplash);
			<%}%>
      	}
	}
	
	public void jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>ActionListener(<%if(EsSwing){%>ActionEvent evt<%}%>) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcess<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
			<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>=new <%=GetNombreClaseC(TablaBase.ToString())%>();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			<%if(EsSwing){%>
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);
			<%}%>
			
			<%if(EsSwing){%>
			Reporte reporte=new Reporte();
			
			<%=strCommentMinCodigoWebIni%>
			reporte=(Reporte)this.jComboBoxTiposRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem();
			<%=strCommentMinCodigoWebFin%>
			
			<%}%>
			
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
			//this.sTipoAccion;
			
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.size()==1) {
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
					<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				<%=GetNavegacionColumnsTablaTablasClasesRelacionadasC(TablaBase,false,false,false,false,false,false,true,EsSwing)%>
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		
		}  finally {
			<%if(EsSwing){%>
			this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>();
			
      		//this.finishProcess<%=GetNombreClase(TablaBase.ToString())%>(conSplash);
			<%}%>
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesar<%=GetNombreClaseC(TablaBase.ToString())%>ReturnGeneral() throws Exception {
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		}
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRetornoLista() || this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRetornoObjeto()) {
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%if(ConEjb){%>//<%}%><%=strCommentProceso%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>s(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%if(ConSessionBeans){%>
					<%=strCommentProceso%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>s();
					<%}%>
				} else if(Constantes.ISUSAEJBHOME) {
					<%if(ConSessionBeans){%>
					<%=strCommentProceso%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>s();
					<%}%>
				}
				//ARCHITECTURE
			}
			
			<%if(!blnEsReporte){%>
			if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					<%if(ConEjb){%>//<%}%><%=strCommentProceso%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.set<%=GetNombreClase(TablaBase.ToString())%>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>());
				} else if(Constantes.ISUSAEJBREMOTE) {
					<%if(ConSessionBeans){%>
					<%=strCommentProceso%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>();
					<%}%>
				} else if(Constantes.ISUSAEJBHOME) {
					<%if(ConSessionBeans){%>
					<%=strCommentProceso%>this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ReturnGeneral.get<%=GetNombreClaseC(TablaBase.ToString())%>();
					<%}%>
				}
				//ARCHITECTURE
			}
			<%}%>
			
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		}
	}
	
	public void actualizarParametrosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>() throws Exception {
		<%if(blnEsReporte && arrayTablasRelacionadasParametros.Count>0){%>
		this.inicializarActualizarBindingTablasParametrosManual<%=GetNombreClaseC(TablaBase.ToString())%>();
		<%}%>
		
		<%=GetSetTablasParametrosVariablesControllerTablasClasesC(TablaBase)%>
	}
	
	public ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormulario<%=GetNombreClaseC(TablaBase.ToString())%>) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
					if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getIsSelected()) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);				
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
				<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getIsSelected()) {
				<%if(ConEjb){%>//<%}%>		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux);				
				<%if(ConEjb){%>//<%}%>	}
				<%if(ConEjb){%>//<%}%>}
			}
			
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.addAll(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.addAll(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s);				
					}
				}
			}
		} else {
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados.add(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
		}
		
		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados;
	}
	
	public void generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL")) {
			existe=true;								
			<%if(!blnEsReporteParaGrupoReporte) {%>
			this.generarReporteNormal<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
			<%} else {%>
			//SI ES GROUP REPORTE NO ES NORMAL, NORMAL ES AGRUPADO
			this.generarReporteGroupReporte<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
			<%}%>
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		}
		<%if(blnTieneRelacionesReporte) {%>
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
		}					
		<%}%>
		<%if(blnEsReporteParaGrupoReporte) {%>
		else if(this.sTipoReporte.equals("LISTA_COLUMNAS")) {
			//SI ES GROUP REPORTE LISTA_COLUMNAS ES NORMAL
			existe=true;
			this.generarReporteNormal<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
		}					
		<%}%>
		
		if(!existe) {
			<%if(EsSwing){%>
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.ERROR_MESSAGE);
			<%}%>
		}
	}
	
	public void generarReporteRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
						
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		<%if(blnConFuncionalidadVersion1) {%>
		this.isEsReporteRelaciones=true;
		<%}%>
		
		this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
		
		<%if(blnConFuncionalidadVersion1) {%>
		this.isEsReporteRelaciones=false;
		<%}%>
	}	
	
	public void generarReporteNormal<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
						
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
	}		
	
	public void generarReporteProcesoAccion<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
		this.esReporteAccionProceso=false;
	}
	
	<%if(blnEsReporteParaGrupoReporte) {%>
	public void generarReporteGroupReporte<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		//GROUP REPORTE
		this.sTipoReporteExtra="GroupReporte";
			
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
	}	
	<%}%>
	
	public void mostrarReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		<%=strCommentMinCodigoWebIni%>
		this.abrirFrameReporteDinamico<%=GetNombreClaseC(TablaBase.ToString())%>();
		<%=strCommentMinCodigoWebFin%>
		
		//this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
	}
	
	public void mostrarImportacion<%=GetNombreClaseC(TablaBase.ToString())%>s() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		<%=strCommentMinCodigoWebIni%>
		this.abrirFrameImportacion<%=GetNombreClaseC(TablaBase.ToString())%>();
		<%=strCommentMinCodigoWebFin%>
			
		//this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
	}
	
	public void importar<%=GetNombreClaseC(TablaBase.ToString())%>s() throws Exception {		
	
	}
	
	public void exportar<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTexto<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXml<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados();
		} 
		
		if(!existe) {
			<%if(EsSwing){%>
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.ERROR_MESSAGE);
			<%}%>
		}
	}
	
	public void exportarTexto<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"<%=GetNombreClaseObjetoC(TablaBase.ToString())%>."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		
		bufferedWriter = new BufferedWriter(new FileWriter(sPath));
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportar<%=GetNombreClaseC(TablaBase.ToString())%>(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
				sFilaDatos=this.getFilaDatosExportar<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setsDetalleGeneralEntityReporte(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
				<%}%>
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportar<%=GetNombreClaseC(TablaBase.ToString())%>(String sDelimiter) {
		String sFilaCabecera="";
		
		<%=GetFilaCabecera()%>
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportar<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		<%=GetFilaDatos()%>
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("<%=GetNombreClaseC(TablaBase.ToString())%>s");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(row);				
				iRow++;
			}				
			
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
				<%}%>
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXml<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados() throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();		
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>");
			//elementRoot.appendChild(element);
		
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
				element = document.createElement("<%=GetNombreClaseObjetoC(TablaBase.ToString())%>");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXml<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE <%=GetTituloNombreTableFromPropertiesC(TablaBase)%>",JOptionPane.INFORMATION_MESSAGE);
				<%}%>
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(HSSFRow row) {
		Integer iColumn=0;
		
		<%=GetFilaCabeceraExcel()%>
	}
	
	<%if(blnTieneStringColumn || blnTieneForeignKey){%>
	//@SuppressWarnings("deprecation")
	<%}%>
	public void getFilaDatosExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,HSSFRow row) {
		Integer iColumn=0;
		
		<%=GetFilaDatosExcel()%>				
	}
	
	public void setFilaDatosExportarXml<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		<%=GetFilaDatosXml()%>
	}
	
	public void generarReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
		
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados=this.get<%=GetNombreClaseC(TablaBase.ToString())%>sSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados);
		
		this.generarReporte<%=GetNombreClaseC(TablaBase.ToString())%>s("Todos",<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados ,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome);
	}
	
	public void setColumnaDescripcionReporteGroupGenerico<%=GetNombreClaseC(TablaBase.ToString())%>(ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setsDetalleGeneralEntityReporte(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.toString());
			<%=GetColumnsDescripcionReporteGroupGenerico()%>
			}	
											
			if(!existe) {
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				<%} else {%>
				throw new Exception("NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA");
				<%}%>
			}										
		} catch(Exception e) {
			Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
		}
	}
	
	<%if(!EsSwing){%>
	public void actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) {
		if(sAccion=="n") {
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				} else {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}			
		} else if(sAccion=="a")	{
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			
			if(isEsMantenimientoRelacionado==false)	{
				if(isGuardarCambiosEnLote==true) {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				} else {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		} else if(sAccion=="ae") {
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
				} else {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			
			if(isEsMantenimientoRelacionado==false)	{
				if(isGuardarCambiosEnLote==true) {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				} else {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		} else if(sAccion=="c") {
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			
			if(isEsMantenimientoRelacionado==false)	{
				if(isGuardarCambiosEnLote==true) {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="visible";
					
				} else {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		} else if(sAccion=="t") {
			this.sVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			this.sVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
			
			if(isEsMantenimientoRelacionado==false)	{
				if(isGuardarCambiosEnLote==true) {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				} else {
					this.sVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>="hidden";
				}
			}
		}
	}	
	<%}else{%>
	
	public void actualizarEstadoCeldasBotones<%=GetNombreClaseC(TablaBase.ToString())%>(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			}
			
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				} else {
					this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=true;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=true;
		} else {
			this.actualizarEstadoPanels<%=GetNombreClaseC(TablaBase.ToString())%>(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaDuplicar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		} else {
			this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			if(!<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;												
			}
			
			this.jButtonCerrar<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		}
		
		if(!this.permiteMantenimiento(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>)) {
			this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		}
		
		<%if(blnEsTablaUnoAUnoFk) {%>
		//SI ES UNO A UNO FK
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			<%if(ConEjb){%>//<%}%>if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s().size()>0) {
									this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;	
									this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
									this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			<%if(ConEjb){%>//<%}%>}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size()>0) {
				this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;	
				this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
				this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
			}
		}
		//ARCHITECTURE
		<%}%>
		
		<%if(blnEsReporte) {%>
		//SE DESHABILITA SIEMPRE
		this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		this.isVisibilidadCeldaNuevoRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		//this.isVisibilidadCeldaModificar<%=GetNombreClaseC(TablaBase.ToString())%>=true;
		this.isVisibilidadCeldaActualizar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		this.isVisibilidadCeldaEliminar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		//this.isVisibilidadCeldaCancelar<%=GetNombreClaseC(TablaBase.ToString())%>=true;			
		this.isVisibilidadCeldaGuardar<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		<%}%>
		
		<%if(!GetPermiteInsertarFromPropertiesC(TablaBase)){%>
		this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		<%}%>
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelaciones<%=GetNombreClaseC(TablaBase.ToString())%>() {
		<%if((GenerarMe || GetEsGuardarRelacionesFromPropertiesC(TablaBase)) && intNumeroClasesRelacionadasFinal>0) {%>
		this.isVisibilidadCeldaNuevo<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		this.isVisibilidadCeldaGuardarCambios<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		<%}%>
	}
	
	public void actualizarEstadoPanels<%=GetNombreClaseC(TablaBase.ToString())%>(String sAccion) {
		if(sAccion=="n") {
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);			
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);		    
			
		} else if(sAccion=="a") {	
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);			
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
						
		} else if(sAccion=="ae") {		
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);		
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);			
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
						
		} else if(sAccion=="c") {	
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);			
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
						
		} else if(sAccion=="t") {
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.jScrollPanelDatosEdicion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			}
			<%=strCommentMinCodigoWebFin%>
			<%}%>
			this.jScrollPanelDatos<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelPaginacion<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			
		} 
		
		if(sAccion.equals("relacionado") || this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				<%=strCommentMinCodigoWebIni%>
				if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
					this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
				}
				<%=strCommentMinCodigoWebFin%>
			}
			
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(false);
			<%}%>
		
		} else if(sAccion.equals("no_relacionado") && !this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getEsGuardarRelacionado()) {
			<%if(GetExisteBusquedasTablaC(TablaBase)){%>
			//BYDAN_BUSQUEDAS
			<%=strCommentMinCodigoWebIni%>
			if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
				this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			}
			<%=strCommentMinCodigoWebFin%>
			this.jPanelParametrosReportes<%=GetNombreClaseC(TablaBase.ToString())%>.setVisible(true);
			<%}%>
		}
	}	
	<%}%>
	
	<%=GetFuncionesIndicesFKVisibilidadTablasClases()%>
	
	<%=GetFuncionesAccionesNavegacionTablasClasesRelacionadasC()%>
	
	<%=GetFuncionesBusquedaTablasClasesFk()%>
	
	<%if(!EsSwing){%>
	public String irA<%=GetNombreClaseC(TablaBase.ToString())%>FkActual() throws Exception {
		String sClavePaginaFk="null";
		
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		
		<%if(!EsSwing){%>
		
		<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SSESSIONNAME);
		<%}%>
		
		<%} else {%>
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		<%}%>
		
		if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getisPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>()) {
			<%=GetClaveNavigationRuleFK()%>
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setisPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>(false);
		}
		
		<%}%>
		
		return sClavePaginaFk;
	}
	<%}%>
	
	public void guardarDatosBusquedaSession() throws Exception {
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>
		
		<%if(!EsSwing){%>		
		<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
		<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SSESSIONNAME);
		<%}%>
		
		<%} else {%>
		//<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		<%}%>
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		}
		
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>(this.getsAccionBusqueda());
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		<%=GetGuardarIndicesVariablesSessionTablasClases()%>
		
		<%if(!EsSwing){%>		
		<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
		FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SSESSIONNAME,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);		
		<%}%>		
		<%}%>
		<%}%>
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		<%if(!GetEsReporteFromPropertiesC(TablaBase)) { //SI ES REPORTE DESHABILITO%>		
		<%if(!EsSwing){%>		
		<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
		<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>)FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SSESSIONNAME);
		<%}%>
		
		<% } else{%>
		//<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		<%}%>
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>==null) {
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
		}
		
		if(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>()!=null&&!this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>().equals("")) {
			this.setsAccionBusqueda(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>());
			this.setiNumeroPaginacion(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			<%=GetTraerIndicesVariablesSessionTablasClases()%>
		}
		
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>("");
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setiNumeroPaginacion(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.INUMEROPAGINACION);
		this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>.setiNumeroPaginacionPagina(0);
		
		<%if(!EsSwing){%>
		
		<%if(EsVersionRichFaces3C(RichFaces_Version)){%>
		FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SSESSIONNAME,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>);		
		<%}%>
		
		<%}%>
		<%}%>
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			<%if(EsSwing){%>
			this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
			<%}%>	
			
			<%=GetParentJInternalFramaEvent(TablaBase)%>
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	<%if(EsSwing){%>	
	
	public void updateBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
		this.updateBorderResaltarBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
		this.updateVisibilidadBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
		this.updateHabilitarBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
	}
	
	public void updateBorderResaltarBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
	<%if(GetExisteBusquedasTablaC(TablaBase)){%>
	//BYDAN_BUSQUEDAS
	<%=strCommentMinCodigoWebIni%>
	if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
		int index=0;
		
		if(this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.getComponents().length>0) {
		<%=GetUpdateVisibilidadHabilitarResaltarIndicesVariablesTablasClases(TablaBase,false,false,true)%>
		}
	}
	<%=strCommentMinCodigoWebFin%>
	<%}%>
	}
	
	public void updateVisibilidadBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
	<%if(GetExisteBusquedasTablaC(TablaBase)){%>
	//BYDAN_BUSQUEDAS
	<%=strCommentMinCodigoWebIni%>
	if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
		int index=0;
		JPanel jPanel=null;
		
		if(this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.getComponents().length>0) {
		<%=GetUpdateVisibilidadHabilitarResaltarIndicesVariablesTablasClases(TablaBase,true,false,false)%>
		}
	}
	<%=strCommentMinCodigoWebFin%>
	<%}%>
	}
	
	public void updateHabilitarBusquedasFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
	<%if(GetExisteBusquedasTablaC(TablaBase)){%>
	<%=strCommentMinCodigoWebIni%>
		if(!Constantes2.ISDEVELOPING3_LOAD_WEB_MIN) {
		//BYDAN_BUSQUEDAS		
			int index=0;
			JPanel jPanel=null;
			
			if(this.jTabbedPaneBusquedas<%=GetNombreClaseC(TablaBase.ToString())%>.getComponents().length>0) {
		<%=GetUpdateVisibilidadHabilitarResaltarIndicesVariablesTablasClases(TablaBase,false,true,false)%>
			}
		}
	<%=strCommentMinCodigoWebFin%>
	<%}%>
	}
	
	<%if(GetExisteBusquedasTablaC(TablaBase)){%>
	<%=GetResaltarIndicesVariablesTablasClases(TablaBase)%>	
	<%}%>
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
		this.updateBorderResaltarControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
		this.updateVisibilidadResaltarControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
		this.updateHabilitarResaltarControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>();
	}
	
	public void updateBorderResaltarControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
	<%=GetSetUpdateBorderElementosSwingTablaClase(TablaBase,false,false,true)%>
	}
	
	public void updateVisibilidadResaltarControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
	<%=GetSetUpdateBorderElementosSwingTablaClase(TablaBase,true,false,false)%>
	}
	
	public void updateHabilitarResaltarControlesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>() {
	<%=GetSetUpdateBorderElementosSwingTablaClase(TablaBase,false,true,false)%>
	}
	<%}%>
	
	<%=GetExtra1Faces(TablaBase,EsSwing,CodigoEmpresa)%>	
}
