<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="TablasBaseForReporte" Type="SchemaExplorer.TableSchemaCollection" Category="Context" Description="Select a set of tables." Optional="true"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="ConStoreProcedures" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsSessionBean" Type="System.Boolean" Default="true" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsConstantesFunciones" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsReportBean" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsDataAccess" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsParameterGeneral" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsReturnGeneral" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>

<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>

<script runat="template">
//GetConListaColumnFromPropertiesC

public String GetListaValoresColumns() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strListaValores=string.Empty;
			//blnNoStandardTableFromProperties=true;
			Trace.WriteLine("h");
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{		
				if(EsCharColumn(columnSchema) || EsVarCharColumn(columnSchema)){
					strListaValores=GetConListaValoresColumnFromPropertiesC(columnSchema);
					
					if(!strListaValores.Equals(string.Empty)) {						
						//strTablaClaseRelacionada+="\r\n\tpublic "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+";";						
						strTablaClaseRelacionada+="\r\n\tpublic static List<ListaValor> getListaValores"+GetNombreColumnaClaseC(columnSchema)+"() {";
						strTablaClaseRelacionada+="\r\n\t\tList<ListaValor> listavalores"+GetNombreColumnaClaseC(columnSchema)+"=new List<ListaValor>();";	
						strTablaClaseRelacionada+="\r\n\t\tListaValor listavalor = new ListaValor();";
						
						strTablaClaseRelacionada+=GetListaValoresColumn(strListaValores);
						
						strTablaClaseRelacionada+="\r\n\r\n\t\treturn listavalores"+GetNombreColumnaClaseC(columnSchema)+";";
						strTablaClaseRelacionada+="\r\n\t}";
					}
				}
			}
											
			return strTablaClaseRelacionada; 
		}
	
public String GetListaValoresColumn(String strListaValores){ 
	String strReturn=string.Empty;
	
	String[] arrListaValores=strListaValores.Split(',');
	String[] arrListaValor=null;
	
	String strCodigo=string.Empty;
	String strNombre=string.Empty;
	
	foreach(String strListaValor in arrListaValores) {
		strCodigo=string.Empty;
		arrListaValor=strListaValor.Split('@');
		
		strNombre=arrListaValor[0];
		
		if(arrListaValor.Length>1) {
			strCodigo=arrListaValor[1];
		} else {
			strCodigo=strNombre;
		}
		
		strReturn+="\r\n\r\n\t\tlistavalor = new ListaValor();";
		strReturn+="\r\n\t\tlistavalor.setSCodigo(\""+strCodigo+"\");";	
		strReturn+="\r\n\t\tlistavalor.setSNombre(\""+strNombre+"\");";	
		strReturn+="\r\n\t\tlistavalores.add(listavalor);";
	}
	
	
	return strReturn;
}

public String GetVariablesTablasClasesReportes() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
				strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
				strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
				strEndFuncion+="";
			strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{
				strFuncion+="\r\n\r\n\tpublic static String QUERYSELECT"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString())+" from "+GetNombreClase(TablasBaseForReporte[i].ToString())+" "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString());
				strFuncion+="\r\n\tpublic static String QUERYSELECTNATIVE"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select"; 
				
				strFuncion+="\r\n\r\n\tpublic static String FINALQUERYSELECT"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString())+" from "+GetNombreClase(TablasBaseForReporte[i].ToString())+" "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString());
				strFuncion+="\r\n\tpublic static String FINALQUERYSELECTNATIVE"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select"; 
				
				/*
				for (int j = 0; j < TablasBaseForReporte[i].Columns.Count; j++){ 
					strFuncion+=GetSqlParameterSelectC(TablasBaseForReporte[i].Columns[j],TablasBaseForReporte[i],Schema); 
					if (j < TablasBaseForReporte[i].Columns.Count - 1) { strFuncion+=",";}  
				
				} 
				
				strFuncion+="from "+GetNombreClase(TablasBaseForReporte[i].ToString())+strClaseConstantesFunciones+".SCHEMA+\".\"+"+GetNombreClase(TablasBaseForReporte[i].ToString())+strClaseConstantesFunciones+".TABLENAME;";
				*/
				
				//strFuncion+="\r\n\r\n\tvoid getEntities"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";
				//strFuncion+="\r\n\tvoid getEntitiesNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"WithConnection(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception;";			 			
			}
								
			return strFuncion; 
	}
	
public String GetFuncionesTablasClasesReportes() 
	{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";
				strInitFuncion+="";
			String strInit2Funcion="";//" get"+GetPrefijoRelacionC();
				strInit2Funcion+="";
			String strEndFuncion="";//"\r\n\t} catch(Exception e) {\r\n\t;\r\n}\r\n\t}";
				 strEndFuncion+="";
			strFuncion+="\r\n\r\n\t//FUNCIONES PARA REPORTES";
			for(int i=0;i<TablasBaseForReporte.Count;i++)
			{
				strFuncion+="\r\n\r\n\tpublic static String getQuery"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(ArrayList<Object> parametros"+GetNombreClaseC(TablasBaseForReporte[i].ToString())+") {";
				strFuncion+="\r\n\t\tString sQuery=\"\";";	
				strFuncion+="\r\n\t\treturn sQuery;";
				strFuncion+="\r\n\t}";
				
				strFuncion+="\r\n\r\n\tpublic static String getFinalQuery"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(ArrayList<Object> parametros"+GetNombreClaseC(TablasBaseForReporte[i].ToString())+") {";
				strFuncion+="\r\n\t\tString sQuery=\"\";";	
				strFuncion+="\r\n\t\treturn sQuery;";
				strFuncion+="\r\n\t}";
				
				
				strFuncion+="\r\n\r\n\r\n\tpublic static String getQueryNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(ArrayList<Object> parametros"+GetNombreClaseC(TablasBaseForReporte[i].ToString())+") {";
				strFuncion+="\r\n\t\tString sQuery=\"\";";	
				strFuncion+="\r\n\t\treturn sQuery;";
				strFuncion+="\r\n\t}";
				
				strFuncion+="\r\n\r\n\tpublic static String getFinalQueryNative"+GetNombreClase(TablasBaseForReporte[i].ToString())+"(ArrayList<Object> parametros"+GetNombreClaseC(TablasBaseForReporte[i].ToString())+") {";
				strFuncion+="\r\n\t\tString sQuery=\"\";";	
				strFuncion+="\r\n\t\treturn sQuery;";
				strFuncion+="\r\n\t}";
				
				//strFuncion+="\r\n\r\n\tpublic static String QUERYSELECT"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString())+" from "+GetNombreClase(TablasBaseForReporte[i].ToString())+" "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString());
				//strFuncion+="\r\n\tpublic static String QUERYSELECTNATIVE"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select"; 
				
				//strFuncion+="\r\n\r\n\tpublic static String FINALQUERYSELECT"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString())+" from "+GetNombreClase(TablasBaseForReporte[i].ToString())+" "+GetNombreClaseObjetoC(TablasBaseForReporte[i].ToString());
				//strFuncion+="\r\n\tpublic static String FINALQUERYSELECTNATIVE"+GetNombreClase(TablasBaseForReporte[i].ToString()).ToUpper()+"=\"\";";//\"select"; 
				
				
			}
								
			return strFuncion; 
	}

public string GetExtendsFromVariables()
{
	String strExtendsFromEsConstantesFunciones="";
	
	if(EsSessionBean) {
		strExtendsFromEsConstantesFunciones=" extends GeneralEntitySessionBean implements Serializable";
		
	} else if(EsDataAccess){
		//PARA NO CREAR TODO EL DATAACCESSHELPER PARA OTRO GENERALENTITY MEJOR COMENTO O QUITO 
		//if(GetNewCodeTableFromPropertiesC(TablaBase).Equals("")) {
		strExtendsFromEsConstantesFunciones=" extends DataAccessHelper"+GetNewCodeTableFromPropertiesC(TablaBase)+"<"+GetNombreClaseC(TablaBase.ToString())+"> ";
		//}
	} else if(EsConstantesFunciones){
		strExtendsFromEsConstantesFunciones=" extends GeneralEntityConstantesFunciones ";
		//implements Serializable
		
	} else if(EsReportBean){
		strExtendsFromEsConstantesFunciones=" extends "+GetNombreClaseC(TablaBase.ToString())+" ";
		
	} else if(EsParameterGeneral) {
		strExtendsFromEsConstantesFunciones=" extends GeneralEntityParameterGeneral implements Serializable";
		
	} else if(EsReturnGeneral) {
		strExtendsFromEsConstantesFunciones=" extends GeneralEntityReturnGeneral implements Serializable";
	}
	
	return strExtendsFromEsConstantesFunciones;
}

public string GetThrowsException()
{
	String strExtendsFromEsConstantesFunciones="";
	
	if(EsReportBean || EsParameterGeneral || EsReturnGeneral){
		strExtendsFromEsConstantesFunciones=" throws Exception ";
	}
	
	return strExtendsFromEsConstantesFunciones;
}

public string GetSerialVersion()
{
	String strExtendsFromEsConstantesFunciones="";
	
	//|| EsConstantesFunciones
	if(EsReportBean || EsParameterGeneral || EsReturnGeneral || EsSessionBean){
		strExtendsFromEsConstantesFunciones="private static final long serialVersionUID = 1L;";
	}
	
	return strExtendsFromEsConstantesFunciones;
}

public string GetPackageFromVariables()
{
	String strClaseFromEsConstantesFunciones="";
	strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean;
	
	if(EsSessionBean) {
		strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean+GetEsPaqueteReporteC(TablaBase);
		
	}else if(EsConstantesFunciones){
		strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackageUtils;
		
	}else if(EsReportBean){
		strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackagePresentation+"."+strPackageReporte+"."+strPackageSource+GetEsPaqueteReporteC(TablaBase);
	
	}else if(EsDataAccess){
		strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackageBusiness+"."+strPackageDataAccess;
	
	} else if(EsParameterGeneral) {
		strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackageUtils;
		
	} else if(EsReturnGeneral) {
		strClaseFromEsConstantesFunciones=Empresa+"."+Package+"."+Module+strPackageUtils;
	}
	
	return strClaseFromEsConstantesFunciones;
}

public string GetClaseFromVariables()
{
	String strClaseFromEsConstantesFunciones="";
	strClaseFromEsConstantesFunciones=strPrefijoJSFSessionFaces;
	
	if(EsSessionBean) {
		strClaseFromEsConstantesFunciones=strPrefijoJSFSessionFaces;
		
	} else if(EsConstantesFunciones){
		strClaseFromEsConstantesFunciones=strClaseConstantesFunciones;	
		
	} else if(EsReportBean){
		strClaseFromEsConstantesFunciones=strClaseBean;	
		
	} else if(EsDataAccess) {
		strClaseFromEsConstantesFunciones=strPrefijoDataAccess;	
	
	} else if(EsParameterGeneral) {
		strClaseFromEsConstantesFunciones=strParameterGeneral;
		
	} else if(EsReturnGeneral) {
		strClaseFromEsConstantesFunciones=strReturnGeneral;
	}
	
	return strClaseFromEsConstantesFunciones;
}

public void TestExtend() 
		{
			String strExtend=string.Empty;
			/*							 			
			strExtend=TablaBase.Description;
			
			System.Windows.Forms.MessageBox.Show(strExtend);
			
			
			foreach(ExtendedProperty extendedProperty in TablaBase.ExtendedProperties)
			{	
				
					if(extendedProperty.Name.Contains("Me_"))
					{
						System.Windows.Forms.MessageBox.Show(extendedProperty.Name);
				
						System.Windows.Forms.MessageBox.Show(extendedProperty.Value.ToString());
				
					}
			}
			*/
			
			/*
			ArrayList arrAccionExtendsProperty=new ArrayList();
			arrAccionExtendsProperty=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendsProperty)
			{
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			*/
			/*
			ArrayList arrAccionPropertyValues=new ArrayList();
			arrAccionPropertyValues=GetPropertyAccionsTableFromPropertiesC(TablaBase,"NOMBRE");
			
			foreach(String  value in arrAccionPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(value);
				
			}
			*/
			
			ArrayList arrAccionExtendPropertyValues=new ArrayList();
			arrAccionExtendPropertyValues=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(GetPropertyAccionTableFromPropertiesC(meExtendProperty,"NOMBRE"));
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			
			//return strExtend; 
		}


		
public String GetTablasClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\tprivate "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasForeigKeysInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					
					if(GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))==GetNombreClaseObjetoC(TablaBase.ToString()))
					{
						continue;
					}
					
					strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"=new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"();";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  void  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+") {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"="+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
					strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			
				}
				
			}
						
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion="";
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\tpublic ";// void  getTR[";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
						strInitFuncion="\r\n\t@ManyToOne(fetch = FetchType.LAZY)";
						strInitFuncion+="\r\n\t@JoinColumn(name = \""+GetNombreColumnFromProperties(columnSchema)+"\", nullable = true,insertable=false, updatable=false)";
						strInitFuncion+="\r\n\tpublic ";
					
					
						strInitFuncion+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" get"+GetPrefijoRelacionC()+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"() {\r\n";
						strTablaClaseRelacionada="\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
					
			    		strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
				}
			}
								
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";// void  getTR_";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strInitFuncion="\r\n\t@OneToOne(fetch = FetchType.LAZY)";//, mappedBy = \""+GetNombreTableFromProperties(TablaBase)+"\")";
					strInitFuncion+="\r\n\tpublic ";	
					strInitFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"() {";
					strTablaClaseRelacionada="\r\n\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
						strInitFuncion="\r\n\t@OneToMany(fetch = FetchType.LAZY, mappedBy = \""+GetPrefijoRelacionC().ToLower()+GetNombreClaseC(TablaBase.ToString())+ "\")";
					} else {
						strInitFuncion="\r\n\t@ManyToMany(fetch = FetchType.LAZY)";//, mappedBy = \""+GetPrefijoRelacionC().ToLower()+GetNombreClaseC(TablaBase.ToString())+ "s\")";
						strInitFuncion+="\r\n\t@JoinTable(";
						strInitFuncion+="\r\n\t\tname=\""+GetNombreTableFromProperties(collectionInfo.JunctionTableSchema)+"\",";
						strInitFuncion+="\r\n\t\tjoinColumns=@JoinColumn(name=\""+strIdDB+GetNombreTableFromProperties(TablaBase)+"\", referencedColumnName=\""+strIdDB+"\"),";
						strInitFuncion+="\r\n\t\tinverseJoinColumns=@JoinColumn(name=\""+strIdDB+GetNombreTableFromProperties(collectionInfo.SecondaryTableSchema)+"\", referencedColumnName=\""+strIdDB+"\")";
						strInitFuncion+="\r\n\t\t)";
					}
					
					strInitFuncion+="\r\n\tpublic ";
					strInitFuncion+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s() {";
					strTablaClaseRelacionada="\r\n\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  void  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+") {\r\n\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\tthis."+GetPrefijoRelacionC().ToLower()+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s("+""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s) {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\tthis."+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s;";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					continue;
					//strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s=new "+strTypeNewCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetNombreClase(string strTablaBase)
{	
		return GetNombreClaseC(strTablaBase);
}

public string GetCampoTabla(ColumnSchema column)
{
	string strPrefijo = column.Name;
	return strPrefijo;
	}

</script>
<%=GetByDanLicence()%>
package <%=GetPackageFromVariables()%>;

import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneral;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClase(TablaBase.ToString())%>;

<%if(EsParameterGeneral){%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityParameterGeneral;
<%}%>

<%if(EsReturnGeneral){%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityReturnGeneral;
<%}%>

<%if(EsDataAccess){%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageDataAccess%>.*;//DataAccessHelper<%=GetNewCodeTableFromPropertiesC(TablaBase)%>;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;<%//=GetNombreClase(TablaBase.ToString())%>
<%}%>

<%if(EsConstantesFunciones){%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityConstantesFunciones;
<%}%>

<%if(EsSessionBean){%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntitySessionBean;
<%}%>

@SuppressWarnings("unused")
public class <%=GetNombreClase(TablaBase.ToString())%><%=GetClaseFromVariables()%>Additional <%=GetExtendsFromVariables()%>{		
	<%=GetSerialVersion()%>
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=GetClaseFromVariables()%>Additional () <%=GetThrowsException()%>{
		
    } 
	
	<%if(EsConstantesFunciones) { %>		
		<%if(TablasBaseForReporte!=null&&TablasBaseForReporte.Count>0){%>
		<%= GetVariablesTablasClasesReportes() %>	
		<%}%>
	<%}%>
	
	<%if(EsConstantesFunciones) { %>		
		<%if(TablasBaseForReporte!=null&&TablasBaseForReporte.Count>0){%>
		<%= GetFuncionesTablasClasesReportes() %>	
		<%}%>
	<%}%>
	
	<%if(EsConstantesFunciones) { %>		
		<%= GetListaValoresColumns() %>	
	<%}%>
}
