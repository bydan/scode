<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="ConStoreProcedures" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="EsSwing" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>

<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Collections.Generic" %>

<script runat="template">
public string GetExtendClase()
{
	String strExtendClase="";
	
	if(blnConAdditional) {
		strExtendClase+=" extends "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"Additional";	
	}
	
	
	return strExtendClase;
}

public String GetParameterPkActualParaForeigKeySession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			if(blnNoStandardTableFromProperties) {
				foreach(ColumnSchema columnSchemaPK in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					//sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//sTablaClaseRelacionada+="\r\n\t\t\tprivate "+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey;";
					sTablaClaseRelacionada+=GetParameterClaseC(columnSchemaPK,false,false,GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey") ;						
				}
			}
			return sTablaClaseRelacionada; 
		}

public String GetValueDefaultParameterPkActualParaForeigKeySession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(blnNoStandardTableFromProperties) {		
					foreach(ColumnSchema columnSchemaPK in columnSchemaCollectionPK) {
						sTablaClaseRelacionada+="\r\n\t\t"+GetValueDefaultParameterClaseC(columnSchemaPK,GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey") ;					
					} 	
			}
							
			return sTablaClaseRelacionada; 
		}
		
public String GetFuncionesGetSetParameterPkActualParaForeigKeySession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(blnNoStandardTableFromProperties) {					
				foreach(ColumnSchema columnSchemaPK in columnSchemaCollectionPK) {
					//true= simula que esta en pk clase para obtener get solamente y directamente sin pasar por pk clase
					sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchemaPK,false,true,false,GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey") ;
					sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchemaPK,false,GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey") ;					
				} 		
			}
			
				
			return sTablaClaseRelacionada; 
		}
		
public String GetParameterBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{										
						sTablaClaseRelacionada+="\r\n\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";							
						//sTablaClaseRelacionada+="\r\n\tLong l"+columnSchema.Name+GetNombreClaseRelacionadaFromColumn(columnSchema,true)+"Actual;";
						sTablaClaseRelacionada+="\r\n\tLong lid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual;";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
				
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					//INICIALIZA TABLA
					//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
					
					sTablaClaseRelacionada+="\r\n\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";							
					sTablaClaseRelacionada+="\r\n\tLong lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";	
					
					ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
					for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
						sTablaClaseRelacionada+=GetParameterClaseC(columnSchemaCollectionFK[i],false,false,GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual") ;					
					} 	
				}
			}
				
			return sTablaClaseRelacionada; 
		}

public String GetValueDefaultParameterBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{										
						sTablaClaseRelacionada+="\r\n\t\tisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"=false;";							
						//sTablaClaseRelacionada+="\r\n\t\tl"+columnSchema.Name+GetNombreClaseRelacionadaFromColumn(columnSchema,true)+"Actual=0L;";
						sTablaClaseRelacionada+="\r\n\t\tlid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual=0L;";
						
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
				
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					//INICIALIZA TABLA
					//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
					
					sTablaClaseRelacionada+="\r\n\t\tisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"=false;";							
					sTablaClaseRelacionada+="\r\n\t\tlid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual=0L;";	
					
					ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
					for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
						sTablaClaseRelacionada+="\r\n\t\t"+GetValueDefaultParameterClaseC(columnSchemaCollectionFK[i],GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual") ;					
					} 	
				}
			}
				
			return sTablaClaseRelacionada; 
		}
		
public String GetFuncionesGetSetParameterBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{										
						//sTablaClaseRelacionada+="\r\n\t\tisBusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"=false;";							
						//sTablaClaseRelacionada+="\r\n\t\tl"+columnSchema.Name+"Actual=0L;";
						
						sTablaClaseRelacionada+="\r\n\tpublic Boolean getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"() {";
						sTablaClaseRelacionada+="\r\n\t\treturn isBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic void setisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(";
						sTablaClaseRelacionada+="\r\n\t\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+") {";
						sTablaClaseRelacionada+="\r\n\t\tthis.isBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+" = isBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic Long getlid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual() {";
						sTablaClaseRelacionada+="\r\n\t\treturn lid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual;";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic void setlid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual(Long lid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual) {";
						sTablaClaseRelacionada+="\r\n\t\tthis.lid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual = lid"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual;";
						sTablaClaseRelacionada+="\r\n\t}";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						sTablaClaseRelacionada+="\r\n\tpublic Boolean getisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"() {";
						sTablaClaseRelacionada+="\r\n\t\treturn isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic void setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(";
						sTablaClaseRelacionada+="\r\n\t\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+") {";
						sTablaClaseRelacionada+="\r\n\t\tthis.isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+" = isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic Long getlid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual() {";
						sTablaClaseRelacionada+="\r\n\t\treturn lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";
						sTablaClaseRelacionada+="\r\n\t}";
				
						sTablaClaseRelacionada+="\r\n\r\n\tpublic void setlid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual(Long lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual) {";
						sTablaClaseRelacionada+="\r\n\t\tthis.lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual = lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";
						sTablaClaseRelacionada+="\r\n\t}";					
						
						ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
						for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
							//true= simula que esta en pk clase para obtener get solamente y directamente sin pasar por pk clase
							sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchemaCollectionFK[i],false,true,false,GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual") ;
							sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchemaCollectionFK[i],false,GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual") ;					
						} 	
				}
			}
			
				
			return sTablaClaseRelacionada; 
		}
		
		
		
public void TestExtend() 
		{
			String strExtend=string.Empty;
			/*							 			
			strExtend=TablaBase.Description;
			
			System.Windows.Forms.MessageBox.Show(strExtend);
			
			
			foreach(ExtendedProperty extendedProperty in TablaBase.ExtendedProperties)
			{	
				
					if(extendedProperty.Name.Contains("Me_"))
					{
						System.Windows.Forms.MessageBox.Show(extendedProperty.Name);
				
						System.Windows.Forms.MessageBox.Show(extendedProperty.Value.ToString());
				
					}
			}
			*/
			
			/*
			ArrayList arrAccionExtendsProperty=new ArrayList();
			arrAccionExtendsProperty=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendsProperty)
			{
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			*/
			/*
			ArrayList arrAccionPropertyValues=new ArrayList();
			arrAccionPropertyValues=GetPropertyAccionsTableFromPropertiesC(TablaBase,"NOMBRE");
			
			foreach(String  value in arrAccionPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(value);
				
			}
			*/
			
			ArrayList arrAccionExtendPropertyValues=new ArrayList();
			arrAccionExtendPropertyValues=GetAccionExtendsPropertyC(TablaBase);
			
			foreach(Me.MeExtendProperty meExtendProperty in arrAccionExtendPropertyValues)
			{
				System.Windows.Forms.MessageBox.Show(GetPropertyAccionTableFromPropertiesC(meExtendProperty,"NOMBRE"));
				System.Windows.Forms.MessageBox.Show(meExtendProperty.Name+"="+meExtendProperty.Value);
				
			}
			
			//return strExtend; 
		}


		
public String GetTablasClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\tprivate "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasForeigKeysInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
					
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					
					if(GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))==GetNombreClaseObjetoC(TablaBase.ToString()))
					{
						continue;
					}
					
					strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"=new "+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"();";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public String GetFuncionesTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  void  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" "+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+") {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"="+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";";
					strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			
				}
				
			}
						
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadasForeigKeys() 
		{
			String strFuncion="";
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\tpublic ";// void  getTR[";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				
				
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
						strInitFuncion="\r\n\t@ManyToOne(fetch = FetchType.LAZY)";
						strInitFuncion+="\r\n\t@JoinColumn(name = \""+GetNombreColumnFromProperties(columnSchema)+"\", nullable = true,insertable=false, updatable=false)";
						strInitFuncion+="\r\n\tpublic ";
					
					
						strInitFuncion+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+" get"+GetPrefijoRelacionC()+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"() {\r\n";
						strTablaClaseRelacionada="\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+";\r\n";
					
			    		strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
				}
			}
								
			return strFuncion; 
		}

public String GetFuncionesGetTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public ";// void  getTR_";
			
			String strEndFuncion="\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strInitFuncion="\r\n\t@OneToOne(fetch = FetchType.LAZY)";//, mappedBy = \""+GetNombreTableFromProperties(TablaBase)+"\")";
					strInitFuncion+="\r\n\tpublic ";	
					strInitFuncion+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"() {";
					strTablaClaseRelacionada="\r\n\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
						strInitFuncion="\r\n\t@OneToMany(fetch = FetchType.LAZY, mappedBy = \""+GetPrefijoRelacionC().ToLower()+GetNombreClaseC(TablaBase.ToString())+ "\")";
					} else {
						strInitFuncion="\r\n\t@ManyToMany(fetch = FetchType.LAZY)";//, mappedBy = \""+GetPrefijoRelacionC().ToLower()+GetNombreClaseC(TablaBase.ToString())+ "s\")";
						strInitFuncion+="\r\n\t@JoinTable(";
						strInitFuncion+="\r\n\t\tname=\""+GetNombreTableFromProperties(collectionInfo.JunctionTableSchema)+"\",";
						strInitFuncion+="\r\n\t\tjoinColumns=@JoinColumn(name=\""+strIdDB+GetNombreTableFromProperties(TablaBase)+"\", referencedColumnName=\""+strIdDB+"\"),";
						strInitFuncion+="\r\n\t\tinverseJoinColumns=@JoinColumn(name=\""+strIdDB+GetNombreTableFromProperties(collectionInfo.SecondaryTableSchema)+"\", referencedColumnName=\""+strIdDB+"\")";
						strInitFuncion+="\r\n\t\t)";
					}
					
					strInitFuncion+="\r\n\tpublic ";
					strInitFuncion+=""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s() {";
					strTablaClaseRelacionada="\r\n\t\treturn "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic  void  set"+GetPrefijoRelacionC();
			
			String strEndFuncion="\r\n\t\t} catch(Exception e) {\r\n\t\t\t;\r\n\t\t}\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+") {\r\n\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\tthis."+GetPrefijoRelacionC().ToLower()+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s("+""+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s) {\r\n\t\ttry {\r\n";
					strTablaClaseRelacionada+="\t\t\tthis."+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s;";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+";";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\tprivate "+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s;";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetTablasClasesRelacionadasInicializar() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					continue;
					//strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
				}
				else
				{
					strTablaClaseRelacionada+="\r\n\t\t"+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "s=new "+strTypeNewCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetNombreClase(string strTablaBase)
{	
		return GetNombreClaseC(strTablaBase);
}

public string GetCampoTabla(ColumnSchema column)
{
	string strPrefijo = column.Name;
	return strPrefijo;
	}

</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresa();%>
<%=GetByDanLicence()%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%><%=GetEsPaqueteReporteC(TablaBase)%>;

<%if(blnTieneTimestamp){%>
import java.sql.Timestamp;
<%}%>
import java.util.Set;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Date;
import java.io.Serializable;

<%if(!EsSwing){%>
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
<%}%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.Constantes;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;

<%if(!EsSwing){%>
@SuppressWarnings("unused")
@ManagedBean(name="<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>", eager = true)
@SessionScoped
<%}else{%>
@SuppressWarnings("unused")
<%}%>
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> <%=GetExtendClase()%> {
	private static final long serialVersionUID = 1L;
	
	protected Boolean isPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected Boolean isPermiteRecargarInformacion;
	protected String sNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected Boolean isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected Long l<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKey;	
	<%=GetParameterPkActualParaForeigKeySession()%>
	protected Long l<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras;
	protected Boolean isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras;
	protected String sUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected String sServletGenerarHtmlReporte;
	
	protected Integer iNumeroPaginacion;
	protected Integer iNumeroPaginacionPagina;
	
	protected String sPathNavegacionActual="";	
	<%if(!GetConPopupTableFromProperties(TablaBase)) {%>
	protected Boolean isPaginaPopup=false;	
	<%} else {%>
	protected Boolean isPaginaPopup=true;	
	<%}%>
	protected String sStyleDivArbol="";	
	protected String sStyleDivContent="";
	protected String sStyleDivOpcionesBanner="";	
	protected String sStyleDivExpandirColapsar="";	
	
	protected String sFuncionBusquedaRapida="";
	
	<%=GetParameterBusquedaFromForeigKeysSession()%>
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } //PARA RELACION UNO A UNO TablaBase.Columns[i].Name==strId||%>
	<%= GetParameterBusquedaClaseC(TablaBase.Columns[i]) %>
	<% } %>
	
	protected Boolean conGuardarRelaciones=false;
	protected Boolean estaModoGuardarRelaciones=false;
	protected Boolean esGuardarRelacionado=false;
	protected Boolean estaModoBusqueda=false;
	protected Boolean noMantenimiento=false;
	
	<%//for (int i = 0; i < TablaBase.Columns.Count; i++){ break;%>
	<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%//= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% //} %>
					
	<%//= GetTablasClasesRelacionadasForeigKeys() %>
	 	
	<%//= GetTablasClasesRelacionadas() %>
		
	<%if(blnConAdditional) {%>
	
	protected <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional=null;
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional get<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional() {
		return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional;
	}
	
	public void set<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional) {
		try {
			this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional=<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>Additional;
		} catch(Exception e) {
			;
		}
	}
	
	<%}%>
	
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> () {
		this.inicializar<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%>();
	}
	
	public void inicializar<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFSessionFaces%> () {	
		this.isPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		
		<%if(!GetEsInternoFromPropertiesC(TablaBase)) {%>			
		this.isPermiteRecargarInformacion=true;
		<%} else {%>
		this.isPermiteRecargarInformacion=false;
		<%}%>
		this.sNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>="";
		this.isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>=false;
		this.l<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKey=0L;
		this.l<%=strIdGetSet%><%=GetNombreClase(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras=0L;
		this.isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras=false;
		this.sUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%> ="";
		this.sServletGenerarHtmlReporte="";
		
		this.iNumeroPaginacion=10;
		this.iNumeroPaginacionPagina=0;
		this.sPathNavegacionActual="";
		this.sFuncionBusquedaRapida="";
		
		<%if(!GetConPopupTableFromProperties(TablaBase)) {%>
		this.sStyleDivArbol="display:table-row;width:20%;height:800px;visibility:visible";	
		this.sStyleDivContent="height:600px;width:80%";
		this.sStyleDivOpcionesBanner="display:table-row";
		this.sStyleDivExpandirColapsar="display:table-row";		
		this.isPaginaPopup=false;
		<%} else {%>
		this.sStyleDivArbol="display:none;width:0px;height:0px;visibility:hidden";
		this.sStyleDivContent="height:800px;width:100%";;
		this.sStyleDivOpcionesBanner="display:none";
		this.sStyleDivExpandirColapsar="display:none";
		this.isPaginaPopup=true;
		<%}%>
		
		this.estaModoGuardarRelaciones=true;
		
		<%if(GetEsGuardarRelacionesFromPropertiesC(TablaBase)) {%>
		this.conGuardarRelaciones=true;
		<% } else {%>
		this.conGuardarRelaciones=false;
		<% }%>
		
		<%if(GetEsGuardarRelacionesHijoFromPropertiesC(TablaBase)) {%>
		this.esGuardarRelacionado=true;
		<% } else {%>
		this.esGuardarRelacionado=false;
		<% }%>
		
		this.estaModoBusqueda=false;
		this.noMantenimiento=false;
		
		<%=GetValueDefaultParameterBusquedaFromForeigKeysSession()%> 
		
		<%=GetValueDefaultParameterPkActualParaForeigKeySession()%>
		
		<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
		<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } %>
 		<%= GetValueDefaultParameterBusquedaClaseC(TablaBase.Columns[i]) %>
		<% } %>
		
		
		<% //for (int i = 0; i < TablaBase.Columns.Count; i++){break; %>
		<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
 		<%//= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
		<%// } %>
		
		<%//= GetTablasClasesRelacionadasForeigKeysInicializar() %>
		
		<%//= GetTablasClasesRelacionadasInicializar() %>
		
    } 
	
	public void setPaginaPopupVariables(Boolean isPopupVariables) { 		
		if(isPopupVariables) {
			if(!this.isPaginaPopup) {
				this.sStyleDivArbol="display:none;width:0px;height:0px;visibility:hidden";
				this.sStyleDivContent="height:800px;width:100%";;
				this.sStyleDivOpcionesBanner="display:none";
				this.sStyleDivExpandirColapsar="display:none";
				this.isPaginaPopup=true;
			}
		} else {
			if(this.isPaginaPopup) {
				this.sStyleDivArbol="display:table-row;width:15%;height:600px;visibility:visible;overflow:auto;";	
				this.sStyleDivContent="height:600px;width:80%";
				this.sStyleDivOpcionesBanner="display:table-row";
				this.sStyleDivExpandirColapsar="display:table-row";
				this.isPaginaPopup=false;
			}
		}
	}
	
	public Boolean getisPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.isPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setisPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>(
			Boolean isPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>= isPermiteNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getisPermiteRecargarInformacion() {
		return this.isPermiteRecargarInformacion;
	}

	public void setisPermiteRecargarInformacion(
			Boolean isPermiteRecargarInformacion) {
		this.isPermiteRecargarInformacion=isPermiteRecargarInformacion;
	}
	
	public String getsNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return this.sNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>(String sNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%> = sNombrePaginaNavegacionHaciaForeignKeyDesde<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public Boolean getisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>(
			Boolean isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>= isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
					
	public Long getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey() {
		return lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey;
	}

	public void setlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey(
			Long lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey) {
		this.lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey = lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKey;
	}
				    
	public Long getlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras() {
		return lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras;
	}

	public void setlId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras(
			Long lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras) {
		this.lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras = lId<%=GetNombreClaseC(TablaBase.ToString())%>ActualForeignKeyParaPosibleAtras;
	}

	public Boolean getisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras() {
		return isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras;
	}

	public void setisBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras(
			Boolean isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras) {
		this.isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras = isBusquedaDesdeForeignKeySesionForeignKey<%=GetNombreClaseC(TablaBase.ToString())%>ParaPosibleAtras;
	}
	
	public String getsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>() {
		return sUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}

	public void setsUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>(String sUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>) {
		this.sUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%> = sUltimaBusqueda<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
	
	public String getsServletGenerarHtmlReporte() {
		return sServletGenerarHtmlReporte;
	}

	public void setsServletGenerarHtmlReporte(String sServletGenerarHtmlReporte) {
		this.sServletGenerarHtmlReporte = sServletGenerarHtmlReporte;
	}
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	public String getsPathNavegacionActual() {
		return this.sPathNavegacionActual;
	}

	public void setsPathNavegacionActual(String sPathNavegacionActual) {
		this.sPathNavegacionActual = sPathNavegacionActual;
	}
	
	public Boolean getisPaginaPopup() {
		return this.isPaginaPopup;
	}

	public void setisPaginaPopup(Boolean isPaginaPopup) {
		this.isPaginaPopup = isPaginaPopup;
	}	
	
	public String getsStyleDivArbol() {
		return this.sStyleDivArbol;
	}

	public void setsStyleDivArbol(String sStyleDivArbol) {
		this.sStyleDivArbol = sStyleDivArbol;
	}
	
	public String getsStyleDivContent() {
		return this.sStyleDivContent;
	}

	public void setsStyleDivContent(String sStyleDivContent) {
		this.sStyleDivContent = sStyleDivContent;
	}
	
	public String getsStyleDivOpcionesBanner() {
		return this.sStyleDivOpcionesBanner;
	}

	public void setsStyleDivOpcionesBanner(String sStyleDivOpcionesBanner) {
		this.sStyleDivOpcionesBanner = sStyleDivOpcionesBanner;
	}	
	
	public String getsStyleDivExpandirColapsar() {
		return this.sStyleDivExpandirColapsar;
	}

	public void setsStyleDivExpandirColapsar(String sStyleDivExpandirColapsar) {
		this.sStyleDivExpandirColapsar = sStyleDivExpandirColapsar;
	}		
	
	public String getsFuncionBusquedaRapida() {
		return this.sFuncionBusquedaRapida;
	}

	public void setsFuncionBusquedaRapida(String sFuncionBusquedaRapida) {
		this.sFuncionBusquedaRapida = sFuncionBusquedaRapida;
	}
	
	public Boolean getConGuardarRelaciones() {
		return this.conGuardarRelaciones;
	}

	public void setConGuardarRelaciones(Boolean conGuardarRelaciones) {
		this.conGuardarRelaciones = conGuardarRelaciones;
	}	
	
	public Boolean getEstaModoGuardarRelaciones() {
		return this.estaModoGuardarRelaciones;
	}

	public void setEstaModoGuardarRelaciones(Boolean estaModoGuardarRelaciones) {
		this.estaModoGuardarRelaciones = estaModoGuardarRelaciones;
	}	
	
	public Boolean getEsGuardarRelacionado() {
		return this.esGuardarRelacionado;
	}

	public void setEsGuardarRelacionado(Boolean esGuardarRelacionado) {
		this.esGuardarRelacionado = esGuardarRelacionado;
	}	
	
	public Boolean getEstaModoBusqueda() {
		return this.estaModoBusqueda;
	}

	public void setEstaModoBusqueda(Boolean estaModoBusqueda) {
		this.estaModoBusqueda = estaModoBusqueda;
	}
	
	public Boolean getNoMantenimiento() {
		return this.noMantenimiento;
	}

	public void setNoMantenimiento(Boolean noMantenimiento) {
		this.noMantenimiento = noMantenimiento;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } //PUEDE SER R UNO A UNO ||TablaBase.Columns[i].Name==strId%>
    <%= GetParameterBusquedaClaseMethodC(TablaBase.Columns[i],false) %>
		<%if(GetConRangoBusquedasColumnFromPropertiesC(TablaBase.Columns[i])||GetConRangoBusquedasIndicesColumnFromPropertiesC(TablaBase.Columns[i],"TODOS")){ %>
		<%= GetParameterBusquedaClaseMethodC(TablaBase.Columns[i],true) %>
		<% } %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strVersionRow||!GetEsColumnaIndiceC(TablaBase.Columns[i])){continue; } //PUEDE SER R UNO A UNO ||TablaBase.Columns[i].Name==strId %>
    <%= GetParameterBusquedaClaseSetMethodC(TablaBase.Columns[i],false) %>
		<%if(GetConRangoBusquedasColumnFromPropertiesC(TablaBase.Columns[i])||GetConRangoBusquedasIndicesColumnFromPropertiesC(TablaBase.Columns[i],"TODOS")){ %>
		<%= GetParameterBusquedaClaseSetMethodC(TablaBase.Columns[i],true) %>
		<% } %>
	<% } %>
	
	
	<%=GetFuncionesGetSetParameterBusquedaFromForeigKeysSession()%>
	
	<%=GetFuncionesGetSetParameterPkActualParaForeigKeySession() %>
	<% //for (int i = 0; i < TablaBase.Columns.Count; i++){ break;%>	
	<%//if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%// GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% //} %>
		
	<%// GetFuncionesGetTablasClasesRelacionadasForeigKeys() %>
	
	<%// GetFuncionesGetTablasClasesRelacionadas() %>	
}
