<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Ch?vez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="EntidadesNombre" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>

<script runat="template">

public String GetDetalleIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strUsoVariables="";
			
			String strIfFuncion=string.Empty;
			//strIfFuncion="\r\n\r\n\tpublic static String "+"getDetalleIndiceTodos(";
						
			strIfFuncion+="\r\n\r\n\tpublic static String "+"getDetalleIndicePor"+strIdGetSet+"(Long "+strId+")\r\n\t{";
			strIfFuncion+="\r\n\t\treturn \""+strParametrosBusqueda+strPor+strId+"=\"+"+strId+".toString();\r\n\t}";
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\r\n\tpublic static String "+"getDetalleIndice"+indexSchema.Name+"(";
						}
						else
						{
							strInitFuncion+="\r\n\r\n\tpublic static String "+"getDetalleIndice"+indexSchema.Name+"(";
						}
						
					int count=1;	
					
					strUsoVariables="";
					//strInitFuncion="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
							
							strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
							
							if(memberColumnSchema.IsForeignKeyMember)
							{
								strUsoVariables+=strCodigoDe;
							}
							
							strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"=\"+";
							strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetTipoColumnaToString(memberColumnSchema.Column)+";";
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+=",";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
								strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
								
								if(memberColumnSchema.IsForeignKeyMember)
								{
									strUsoVariables+=strCodigoDe;
								}
							
								strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"=\"+";
								strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetTipoColumnaToString(memberColumnSchema.Column)+";";
							
							}
							else
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
								strInitFuncion+=",";
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
								
								strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
								
								if(memberColumnSchema.IsForeignKeyMember)
								{
									strUsoVariables+=strCodigoDe;
								}
							
								strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Inicial=\"+";
								strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+GetTipoColumnaToString(memberColumnSchema.Column)+";";
								strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
								
								if(memberColumnSchema.IsForeignKeyMember)
								{
									strUsoVariables+=strCodigoDe;
								}
							
								strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Final=\"+";
								strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+GetTipoColumnaToString(memberColumnSchema.Column)+";";
								
								break;
							}
						}
						count++;
					}
					strInitFuncion+=")\r\n\t{\r\n\t\tString strDetalleIndice=\" "+strParametrosBusqueda+"\";"+strUsoVariables+" \r\n\r\n\t\treturn strDetalleIndice;\r\n\r\n\t}";																																			
				}
			}
			
								
			return strIfFuncion+strInitFuncion; 
		}
		
public String GetNombresBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic static String getNombreIndice(String strNombreIndice)\r\n\t{";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\t\tif(strNombreIndice.equals(\"Todos\"))\r\n\t\t{\r\n\t\t\tstrNombreIndice=\""+strTipoBusqueda+"Todos"+"\";\r\n\t\t}";
			strIfFuncion+="\r\n\t\telse if(strNombreIndice.equals(\"Por"+strIdGetSet+"\"))\r\n\t\t{\r\n\t\t\tstrNombreIndice=\""+strTipoBusqueda+strPor+" "+strIdGetSet+"\";\r\n\t\t}";
			
			String strFuncionBusqueda="";
				strFuncionBusqueda+="";
			String strDefinicionVariables="";
			String strUsoVariables="";
				strUsoVariables+="";
			String strXmlFuncion=string.Empty;
			
			
			
						
			strFuncion="";
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strFuncion+="\r\n\t\telse if(strNombreIndice.equals(\""+indexSchema.Name+"\"))\r\n\t\t{\r\n\t\t\tstrNombreIndice=\""+strTipoBusqueda+" ";
					
				}
				else
				{
					continue;
				}
				
							int count=1;
							strDefinicionVariables="";
							strUsoVariables="";							
							//strFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
										if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{								
											strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column);
											
											
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Inicial "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+" Final";
											}
											else
											{
												strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Inicial ";
												
												
												strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Final";
											}								
										}
										count++;
									}
									
				strFuncion+=strDefinicionVariables+"\";\r\n\t\t}";
			}								
			return  strInitFuncion+strIfFuncion+strFuncion+"\r\n\r\n\t\treturn strNombreIndice;\r\n\t}";
		}
		
public  string GetColumnaBooleanFuncionDescripcionC(ColumnSchema column)
	{
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	
	string strInitFuncion="\r\n\tpublic static String get";
	string strNombre="";
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	

		
	if(column.DataType==DbType.Boolean)
	{
		
	strNombre+=strInitFuncion+ strColumna+"Descripcion("+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString()) +")\r\n\t{\r\n";
	strNombre+="\r\n\t\tString strDescripcion=\"Verdadero\";\r\n";
	strNombre+="\r\n\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString()) +".getField_"+strPrefijo+ strColumna +"())\r\n\t\t{\r\n";
	strNombre+="\t\t\tstrDescripcion=\"Falso\";";
	strNombre+="\r\n\t\t}\r\n";
	strNombre+="\r\n\t\treturn strDescripcion;\r\n\t}";	
	}
		
	return strNombre;
	}
	
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="getTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strInitFuncion="getTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;						
			String strInitFuncion="getTR_";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="getTR_";
			String strInitFuncionGet="getTR_";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="getTR_";
			String strInitFuncionGet="getTR_";					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;				
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="getTR_";
			String strInitFuncionGet="getTR_";	
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="setTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="setTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="setTR_";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="setTR_";
			String strInitFuncionGet="getTR_";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="setTR_";
			String strInitFuncionGet="getTR_";					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="setTR_";
			String strInitFuncionGet="getTR_";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="classes.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String strInit="\r\n this.Save("+GetNombreClaseObjeto(TablaBase.ToString())+");\r\n";
						
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\t\t\tif(clas.equals(";
			
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
            strTablaClaseRelacionada2="\r\nelse\r\n{"+strInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			strFuncionInclude="";
			strFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}if(!existe)\r\n\t\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
					strTablaClaseRelacionada2+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
					strTablaClaseRelacionada2+="\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
					
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strFuncionExclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t\t}";
			
			
			}
			
				strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			// parte del no if deep
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="TraerTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0=strInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\t\t\t}if(!existe)\r\n\t\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada0+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
				
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
				
					strFuncionExclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
				
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			
			strIfFuncion=strInitIfFuncion+strTablaClaseRelacionada0+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\t\t\tif(clas.equals(";
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
            strTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String strInitFuncion=" TraerTR_";
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}if(!existe)\r\n\t\t\t{\r\n";
				
				strInitFuncion="setTR_";
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strTablaClaseRelacionada2+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";		
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t\t}";
				
			}
			
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			
			//Parte del no if del deep
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			strFuncion=string.Empty;
			
			strTablaClaseRelacionada=string.Empty;
			strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			strFuncion=strInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			strFuncionInclude="";
			strFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}if(!existe)\r\n\t\t\t{\r\n";
				
				strInitFuncion="setTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			strFuncionInclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			strFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}";
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo) 
		{
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\nParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\nparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+"+\"%\","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\nqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="public void "+"Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\ntry\r\n{\r\nconnexion=Connexion.getNewConnexion();";
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\nthrow ex;\r\n}\r\nfinally\r\n{\r\nconnexion.getConnection().close();\r\n}\r\n}\r\n";
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strInitFuncion+="public void "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						strInitFuncion+="public void "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						strBodyFuncion="\r\ntry\r\n{\r\nconnexion=Connexion.getNewConnexion();";
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strBodyFuncion+="\r\nqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n";		
						
						}
						else
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\nthrow ex;\r\n}\r\nfinally\r\n{\r\nconnexion.getConnection().close();\r\n}\r\n}\r\n";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\nthrow ex;\r\n}\r\nfinally\r\n{\r\nconnexion.getConnection().close();\r\n}\r\n}\r\n";
				
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
					strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					
					if(!count.Equals(indexSchema.MemberColumns.Count))
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false);
					}
					else
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true);
					}
					
					if(!indexSchema.MemberColumns.Count.Equals(count))
					{
					
					strParametersFuncion+=",";
					strParametersNameFuncion+=",";	
					}
					count++;
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception\r\n{"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  TraerTR_";
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}
</script>
<%=GetByDanLicence()%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageWebService%>;

import java.util.ArrayList;

import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageUtils%>.*;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%= strPackageBusiness%>.<%= strPackageLogic%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageLogic%>.*;

import javax.jws.WebMethod;
import javax.jws.WebService;
import javax.jws.Oneway;
import javax.jws.WebParam;
import javax.jws.WebResult;

import java.sql.SQLException;
import java.sql.Date;

public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoWebService%>Additional
{
	
	public  <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoWebService%>Additional()throws Exception
    {
		
    }
	
		
}

