<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Ch?vez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="EntidadesNombre" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>

<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="ConEjb" Type="System.Boolean" Default="false" Category="Options" Description="json or xml" %>
<%@ Property Name="EsSwing" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>
<%@ Property Name="EsParaTree" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>
<%@ Property Name="ConRMI" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="ConSessionBeans" Type="System.Boolean" Default="true" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="ConSessionBeansHome" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="JBoss_Version" Type="System.String" Default="5.1" Category="5.1 Versiones" Description="Nombre de la Entidad" %>

<script runat="template">
public string GetClaseAdditionalTree()
{
	String strClaseFromEsConstantesFunciones="";
	
	if(EsSwing) {
		if(!EsParaTree) {
			strClaseFromEsConstantesFunciones=GetNombreClase(TablaBase.ToString())+strPrefijoBeanSwing+"JInternalFrameAdditional extends JInternalFrameBase";	
			
		}else {
			strClaseFromEsConstantesFunciones=GetNombreClase(TablaBase.ToString())+strPrefijoBeanSwing+"JInternalFrameTree extends JInternalFrameBase implements TreeSelectionListener,TreeModelListener  ";	
		}
	}
	
	return strClaseFromEsConstantesFunciones;
}

public string GetClaseSufijoAdditionalTree()
{
	String strClaseFromEsConstantesFunciones="";
	
	if(EsSwing) {
		if(!EsParaTree) {
			strClaseFromEsConstantesFunciones="Additional";	
			
		}else {
			strClaseFromEsConstantesFunciones="Tree";	
		}
	}
	
	return strClaseFromEsConstantesFunciones;
}

public String GetDetalleIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strUsoVariables="";
			
			String strIfFuncion=string.Empty;
			//strIfFuncion="\r\n\r\n\tpublic static String "+"getDetalleIndiceTodos(";
						
			strIfFuncion+="\r\n\r\n\tpublic static String "+"getDetalleIndicePor"+strIdGetSet+"(Long "+strId+")\r\n\t{";
			strIfFuncion+="\r\n\t\treturn \""+strParametrosBusqueda+strPor+strId+"=\"+"+strId+".toString();\r\n\t}";
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							strInitFuncion+="\r\n\r\n\tpublic static String "+"getDetalleIndice"+indexSchema.Name+"(";
						}
						else
						{
							strInitFuncion+="\r\n\r\n\tpublic static String "+"getDetalleIndice"+indexSchema.Name+"(";
						}
						
					int count=1;	
					
					strUsoVariables="";
					//strInitFuncion="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
							
							strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
							
							if(memberColumnSchema.IsForeignKeyMember)
							{
								strUsoVariables+=strCodigoDe;
							}
							
							strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"=\"+";
							strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetTipoColumnaToString(memberColumnSchema.Column)+";";
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								strInitFuncion+=",";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
								strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
								
								if(memberColumnSchema.IsForeignKeyMember)
								{
									strUsoVariables+=strCodigoDe;
								}
							
								strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"=\"+";
								strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+GetTipoColumnaToString(memberColumnSchema.Column)+";";
							
							}
							else
							{
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
								strInitFuncion+=",";
								strInitFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
								
								strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
								
								if(memberColumnSchema.IsForeignKeyMember)
								{
									strUsoVariables+=strCodigoDe;
								}
							
								strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Inicial=\"+";
								strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+GetTipoColumnaToString(memberColumnSchema.Column)+";";
								strUsoVariables+="\r\n\t\tstrDetalleIndice+=\" ";
								
								if(memberColumnSchema.IsForeignKeyMember)
								{
									strUsoVariables+=strCodigoDe;
								}
							
								strUsoVariables+=GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Final=\"+";
								strUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+GetTipoColumnaToString(memberColumnSchema.Column)+";";
								
								break;
							}
						}
						count++;
					}
					strInitFuncion+=")\r\n\t{\r\n\t\tString strDetalleIndice=\" "+strParametrosBusqueda+"\";"+strUsoVariables+" \r\n\r\n\t\treturn strDetalleIndice;\r\n\r\n\t}";																																			
				}
			}
			
								
			return strIfFuncion+strInitFuncion; 
		}
		
public String GetNombresBusquedasIndicesTablas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n\tpublic static String getNombreIndice(String strNombreIndice)\r\n\t{";
			
			
			String strIfFuncion=string.Empty;
			strIfFuncion="\r\n\t\tif(strNombreIndice.equals(\"Todos\"))\r\n\t\t{\r\n\t\t\tstrNombreIndice=\""+strTipoBusqueda+"Todos"+"\";\r\n\t\t}";
			strIfFuncion+="\r\n\t\telse if(strNombreIndice.equals(\"Por"+strIdGetSet+"\"))\r\n\t\t{\r\n\t\t\tstrNombreIndice=\""+strTipoBusqueda+strPor+" "+strIdGetSet+"\";\r\n\t\t}";
			
			String strFuncionBusqueda="";
			strFuncionBusqueda+="";
			String strDefinicionVariables="";
			String strUsoVariables="";
			strUsoVariables+="";
			String strXmlFuncion=string.Empty;
			
			
			
						
			strFuncion="";
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strFuncion+="\r\n\t\telse if(strNombreIndice.equals(\""+indexSchema.Name+"\"))\r\n\t\t{\r\n\t\t\tstrNombreIndice=\""+strTipoBusqueda+" ";
					
				}
				else
				{
					continue;
				}
				
							int count=1;
							strDefinicionVariables="";
							strUsoVariables="";							
							//strFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
										if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{								
											strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column);
											
											
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Inicial "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+" Final";
											}
											else
											{
												strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Inicial ";
												
												
												strDefinicionVariables+=" "+strPor+" "+GetWebNombreTituloColumnFromPropertiesC(memberColumnSchema.Column)+"Final";
											}								
										}
										count++;
									}
									
				strFuncion+=strDefinicionVariables+"\";\r\n\t\t}";
			}								
			return  strInitFuncion+strIfFuncion+strFuncion+"\r\n\r\n\t\treturn strNombreIndice;\r\n\t}";
		}
		
public  string GetColumnaBooleanFuncionDescripcionC(ColumnSchema column)
	{
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	
	string strInitFuncion="\r\n\tpublic static String get";
	string strNombre="";
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);	
	String strIfElse="\r\nif(request.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||request.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	strIfElse+=strPrefijo+strColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	

		
	if(column.DataType==DbType.Boolean)
	{
		
	strNombre+=strInitFuncion+ strColumna+"Descripcion("+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString()) +")\r\n\t{\r\n";
	strNombre+="\r\n\t\tString strDescripcion=\"Verdadero\";\r\n";
	strNombre+="\r\n\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString()) +".getField_"+strPrefijo+ strColumna +"())\r\n\t\t{\r\n";
	strNombre+="\t\t\tstrDescripcion=\"Falso\";";
	strNombre+="\r\n\t\t}\r\n";
	strNombre+="\r\n\t\treturn strDescripcion;\r\n\t}";	
	}
		
	return strNombre;
	}
	
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="getTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strInitFuncion="getTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;						
			String strInitFuncion="getTR_";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="getTR_";
			String strInitFuncionGet="getTR_";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;							
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="getTR_";
			String strInitFuncionGet="getTR_";					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaSave=string.Empty;				
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="getTR_";
			String strInitFuncionGet="getTR_";	
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaSave+="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaSave+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="setTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="setTR_";
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;							
			String strInitFuncion="setTR_";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor;
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+"\t\t\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
			String strInitFuncion="setTR_";
			String strInitFuncionGet="getTR_";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionada+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionada+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;	
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			
			String strInitFuncion="setTR_";
			String strInitFuncionGet="getTR_";					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}\r\n";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaReturn=string.Empty;		
			String strTablaClaseRelacionadaLogicDeepSave=string.Empty;
			String strInitFuncion="setTR_";
			String strInitFuncionGet="getTR_";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					strTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion;						
					strTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					strTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					strTablaClaseRelacionada+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+"\r\n\t\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t\t{\r\n\t\t\t\texiste=true;\r\nbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\nif(!existe)\r\n\t\t\t\t{\r\n"+ strTablaClaseRelacionadaReturn+strTablaClaseRelacionadaLogicDeepSave+"\t\t\t\t}";
		
				}
			}
			
			
			return strTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String strTablaClaseRelacionada=string.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					strTablaClaseRelacionada+="classes.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return strTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String strInit="\r\n this.Save("+GetNombreClaseObjeto(TablaBase.ToString())+");\r\n";
						
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\t\t\tif(clas.equals(";
			
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
            strTablaClaseRelacionada2="\r\nelse\r\n{"+strInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			strFuncionInclude="";
			strFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}if(!existe)\r\n\t\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada2+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);";					
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);";										
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
					strTablaClaseRelacionada2+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
					strTablaClaseRelacionada2+="\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
					
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strFuncionExclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
				
				}
			
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t\t}";
			
			
			}
			
				strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ strFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			// parte del no if deep
			
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strInitFuncion="TraerTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//strInitFuncion=strInitFuncion;
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			strFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String strTablaClaseRelacionada0=string.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            strTablaClaseRelacionada0=strInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			strFuncionInclude="";
			strFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\t\t\t}if(!existe)\r\n\t\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					strFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada0+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
				
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
				
					strFuncionExclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.Save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
				
				}
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\r\n\t\t}";
				
			}
			
			strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+strFuncionExclude+"\r\n\t}\r\n}";
	
			
			strIfFuncion=strInitIfFuncion+strTablaClaseRelacionada0+"\t}\r\n"+strFuncionInclude+strFuncionExclude;//+"\r\n}\r\n"+strInitElseFuncion+strTablaClaseRelacionada0+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String strTablaClaseRelacionada2=string.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String strInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String strInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String strInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String strInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String strInitIfClass="\r\n\t\t\tif(clas.equals(";
			String strFuncionInclude=string.Empty;
			String strFuncionExclude=string.Empty;
			
			strFuncionInclude="";
			strFuncionExclude="";
			
            strTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+strInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String strInitFuncion=" TraerTR_";
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strTablaClaseRelacionadaAux=string.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor+strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}if(!existe)\r\n\t\t\t{\r\n";
				
				strInitFuncion="setTR_";
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";						
					strTablaClaseRelacionada2+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux+"\r\n";		
					strTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strTablaClaseRelacionada2+="\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionInclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					strTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionadaAux;	
					strFuncionExclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".getTR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					strFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.DeepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
				}
				
				//strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
				strFuncionInclude+="\t\t\t}";
				strFuncionExclude+="\t\t\t}";
				
			}
			
				strFuncionInclude=strInitInclude+strInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ strFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				strFuncionExclude=strInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ strFuncionExclude+ "\r\n\t}\r\n}";
				
			
			strTablaClaseRelacionada2=strTablaClaseRelacionada2+"\t}\r\n"+strFuncionInclude+strFuncionExclude;
			
			
			//Parte del no if del deep
			
			String strInitIfFuncion=string.Empty;
			String strIfFuncion=string.Empty;
			String strInitElseFuncion=string.Empty;
			String strElseFuncion=string.Empty;
			
			strFuncion=string.Empty;
			
			strTablaClaseRelacionada=string.Empty;
			strInitFuncion=" TraerTR_";
			
			strInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			strInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			strFuncion=strInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			strFuncionInclude="";
			strFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				strFuncionInclude+=strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\r\n\r\nexiste=false;\r\n\r\n"+strInitFor +strInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				strFuncionExclude+="\t\t\texiste=true;\r\nbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}if(!existe)\r\n\t\t\t{\r\n";
				
				strInitFuncion="setTR_";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.TraerTR_"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			strFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n";
			strFuncionInclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			strFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strInitFuncion+	strTablaClaseRelacionada+"\r\n\t\t\t}";
			
			}
			
			strFuncionInclude=strInitInclude+strInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +strFuncionInclude+ "\t\t}\r\n\t}\r\n";
			strFuncionExclude=strInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+strFuncionExclude+ "\r\n\t}\r\n}";
			
			strIfFuncion=strInitIfFuncion+strFuncion+"\t}\r\n"+strFuncionInclude+strFuncionExclude; //+strInitElseFuncion+strFuncion+strTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+strTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return strIfFuncion+strTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo) 
		{
			String strParameterSelection=String.Empty;
			strParameterSelection="\r\n\r\nParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			strParameterSelection+="\r\nparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+"+\"%\","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			strParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			strParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			strParameterSelection+="\r\nqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return strParameterSelection;
		}
	
public String GetIndicesTablasClases() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";
			String strBodyFuncion="";
			String strEndBodyFuncion="";
			String strEndFuncion="";
			String strParametersFuncion="";
			String strParametersNameFuncion="";
			String strParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					strParametersFuncion="";
					strParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						strInitFuncion+="public void "+"Traer"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						strBodyFuncion="\r\ntry\r\n{\r\nconnexion=Connexion.getNewConnexion();";
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntity(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\nthrow ex;\r\n}\r\nfinally\r\n{\r\nconnexion.getConnection().close();\r\n}\r\n}\r\n";
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strInitFuncion+="public void "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						}
						else
						{
						strInitFuncion+="public void "+"Traer"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						strBodyFuncion="\r\ntry\r\n{\r\nconnexion=Connexion.getNewConnexion();";
						
						if(indexSchema.Name.Contains("Busqueda"))
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						strBodyFuncion+="\r\nqueryWhereSelectParameters.setFinalQuery(strFinalQuery);\r\n";		
						
						}
						else
						{
						strBodyFuncion+="\r\nQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						strEndBodyFuncion="\r\n"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.GetEntities(connexion,queryWhereSelectParameters);";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\nthrow ex;\r\n}\r\nfinally\r\n{\r\nconnexion.getConnection().close();\r\n}\r\n}\r\n";
						strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\nthrow ex;\r\n}\r\nfinally\r\n{\r\nconnexion.getConnection().close();\r\n}\r\n}\r\n";
				
					}	
					int count=1;	
					strParametersFuncion="";
					strParametersNameFuncion="";	
					strParameterSelection="";
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
					strParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					strParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
					
					if(!count.Equals(indexSchema.MemberColumns.Count))
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false);
					}
					else
					{
					strParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true);
					}
					
					if(!indexSchema.MemberColumns.Count.Equals(count))
					{
					
					strParametersFuncion+=",";
					strParametersNameFuncion+=",";	
					}
					count++;
					}
					
					strInitFuncion+=strParametersFuncion+")throws Exception\r\n{"+strBodyFuncion+strParameterSelection+strEndBodyFuncion/*+strParametersNameFuncion+");"*/+strEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return strInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String strFuncion=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="public  void  TraerTR_";
			
			String strEndFuncion="\r\n}\r\ncatch(Exception ex)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					strTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ "ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					strTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion+"\r\n\r\n";
			}
								
			return strFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada=string.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					strTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					strTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return strTablaClaseRelacionada; 
		}
		
public string GetNombreClase(string strTablaBase)
{
		return GetNombreClaseC(strTablaBase);
}

public string GetNombreClaseObjeto(string strTablaBase)
{
		return GetNombreClaseObjetoC(strTablaBase);
}
</script>
<%=GetByDanLicence()%>
<%if(!EsSwing){%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%><%=GetEsPaqueteReporteC(TablaBase)%>;
<%}else{%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>;
<%}%>

<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilOpcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilCampo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilAccion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Modulo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Opcion;
<%}%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.*;
<%=strCommentReporte%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageUtils%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageBusiness%>.<%= strPackageEntities%>.<%=GetEsPaqueteImportReporteC(TablaBase)%><%=GetNombreClase(TablaBase.ToString())%>;

<%if(ConEjb){%>//<%}%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageLogic%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;

<%if(ConSessionBeans || ConRMI){%>
<%if(blnConMaxCodigo && !blnEsReporte) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;
<%}%>
<%}%>

<%if(ConSessionBeans || ConRMI){%>
<%=strCommentAdditional%><%=strCommentReporte%>//import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%>Additionable;
<%if(ConSessionBeansHome) { %>
<%=strCommentAdditional%><%=strCommentReporte%>//import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%>AdditionableHome;
<%}%>
<%}%>
//import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.QueryWhereSelectParameters;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.*;

//import java.util.ArrayList;

import java.util.List;
import java.util.Set;
import java.util.HashSet;
import java.util.ArrayList;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.GroupLayout.Alignment;

//import org.hibernate.collection.PersistentBag;

<%if(!EsSwing){%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageJSF%>.<%=strPackageWeb%>.<%=strPrefijoJSFFaces%>Base;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.context.ExternalContext;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletContext;
<%} else {%>
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.JInternalFrameBase;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.FuncionesSwing;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.*;

import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.MutableTreeNode;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;

<%}%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityParameterGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntityReturnGeneral;

<%if(ConSessionBeans){%>
<%if(blnConAdditional && !blnEsReporte){//!blnEsProceso%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>;
<%if(ConSessionBeansHome) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home;
<%}%>
<%}%>
<%}%>

//import javax.servlet.http.HttpSession;
//import javax.servlet.ServletConfig;

//CONTROL_INCLUDE

<%if(!EsSwing){%>
@SuppressWarnings("unused")
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>Additional extends <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>
{
	private static final long serialVersionUID = 1L;
<%}else{%>
@SuppressWarnings("unused")
public class <%=GetClaseAdditionalTree()%>//<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame
{
	private static final long serialVersionUID = 1L;
<%}%>
	
	<%if(ConSessionBeans){%>
	
	<%if(blnConMaxCodigo) { %>
	<%=strCommentReporte%>public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%> <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>= <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.get<%=GetNombreClaseC(TablaBase.ToString())%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>EjbReference(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SREMOTEEJBNAMEADDITIONAL<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version,ConRMI)%>);
	<%if(!ConSessionBeansHome) { %>//<%}%><%=strCommentReporte%>public static <%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home <%=GetEsTablaAuxiliarReporteC(TablaBase).ToLower()%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home= <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.get<%=GetNombreClaseC(TablaBase.ToString())%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>HomeEjbReference(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SLOCALEJBNAMEADDITIONAL<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version,ConRMI)%>);		
	<%}%>
	
	<%}%>
	
	//CONTROL_INICIO
	<%if(!EsSwing){%>
	//protected static <%=GetEsTablaAuxiliarReporteC(TablaBase)%>Additionable <%=GetEsTablaObjetoAuxiliarReporteC(TablaBase)%>Additionable= <%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.get<%=GetEsTablaAuxiliarReporteC(TablaBase)%>AdditionableEjbReference(<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SREMOTEEJBNAMEADDITIONAL);
	//protected static <%=GetEsTablaAuxiliarReporteC(TablaBase)%>AdditionableHome <%=GetEsTablaObjetoAuxiliarReporteC(TablaBase)%>AdditionableHome= <%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.get<%=GetEsTablaAuxiliarReporteC(TablaBase)%>AdditionableHomeEjbReference(<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SLOCALEJBNAMEADDITIONAL);
	
	String strAccion="";
	HttpServletRequest httpServletRequest;
	HttpServletResponse  httpServletResponse;
	String strXml ="";
	ServletContext servletContext;
	<%}else if(EsParaTree){%>
	protected JPanel jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JScrollPane jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>;
	public JScrollPane jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%>;
	private JTree tree<%=GetNombreClaseC(TablaBase.ToString())%>;
	protected GridBagConstraints gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>;	
	protected DefaultMutableTreeNode defaultMutableTreeNode;
	protected DefaultTreeModel defaultTreeModel;
	
	protected <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjeto(TablaBase.ToString())%>s;	
	<%}%>
	<%=strCommentReporte%><%if(ConEjb){%>//<%}%><%=GetNombreClaseC(TablaBase.ToString())%>Logic <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic;
	<%=strCommentReporte%><%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional <%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional;
	Mensaje mensaje;
	public static int openFrameCount = 0;
    public static final int xOffset = 10, yOffset = 35;
	
	<%if(!EsSwing){%>
	public  <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>Additional(HttpServletRequest request, HttpServletResponse response,String strAccion,ServletContext servletContext)throws Exception  
	{
		super();
		try 
		{			
			<%if(!EsSwing){%>
			httpServletRequest=request;
			httpServletResponse=response;
			this.strAccion=strAccion;
			strXml=Mensaje.getMensajeGeneraldefault();
			this.servletContext=servletContext;
			<%}%>
			
			<%=strCommentReporte%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
			<%=strCommentReporte%><%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional=new <%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional();
		} 		
		catch(Exception e)
		{
			throw e;
		}
    } 	
	 <%} %>
	
	<%if(!EsSwing){%>
	public  <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>Additional()throws Exception
    <%} else {%>
	public  <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame<%=GetClaseSufijoAdditionalTree()%>(PaginaTipo paginaTipo) throws Exception
	<%}%>
	{
		<%if(EsSwing){%>
		super(paginaTipo);
		<%} %>
		try 
		{			
			<%if(!EsSwing){%>
			//this.strAccion=strAccion;
			strXml=Mensaje.getMensajeGeneraldefault();
			//this.servletContext=servletContext;
			<%}else if(EsParaTree){%>
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s= new <%=strTypeNewCollection%><<%=GetNombreClase(TablaBase.ToString())%>><%=strTypeNewCollectionEnd%>;
			<%}%>
			
			<%=strCommentReporte%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic=new <%=GetNombreClaseC(TablaBase.ToString())%>Logic();
			<%=strCommentReporte%><%=strCommentAdditional%><%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional=new <%=GetNombreClaseC(TablaBase.ToString())%>LogicAdditional();
			
			<%if(EsSwing){%>
			<%if(EsParaTree){%>
			this.initialize();
			<%}%>
			<%}%>
		} 		
		catch(Exception e)
		{
			throw e;
		}
    } 	
	
	//CONTROL_FUNCION1
	
	<%if(!EsSwing){%>
	public void  Procesar()throws Exception
    {
		try
		{	
			if(strAccion.contains("proceso1"))
			{
				Proceso1();
			}
		}
	 	catch(Exception ex) 
		{
			throw ex;
	  	}	 
    }
	
	public void  Proceso1()throws Exception
    {
		try
		{			
			httpServletResponse.setContentType("text/xml");
			httpServletResponse.getWriter().write(strXml);
		}
	 	catch(Exception ex) 
		{
			throw ex;
	  	}	 
    }
	
	<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
	public static void ProcesarAccion(String sProceso,String sLabelProceso,RequestBeanBase requestBeanBase) throws Exception {
		//CONTROL_3
		Boolean esProcesado=false;
		<%if(ConEjb){%>//<%}%><%=GetNombreClase(TablaBase.ToString())%>LogicAdditional <%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional=new <%=GetNombreClase(TablaBase.ToString())%>LogicAdditional();
		
		<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>=(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>)requestBeanBase;
		
		//NO ES WINDOWS
		//if(JOptionPane.showConfirmDialog(requestBeanBase, "ESTA SEGURO DE PROCESAR "+sLabelProceso+" <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase).ToUpper()%> SELECCIONADOS?", "MANTENIMIENTO DE ACCION", JOptionPane.OK_CANCEL_OPTION) == 0) {
			//ARCHITECTURE
			<%if(EsSwing){%>
			if(Constantes.ISUSAEJBLOGICLAYER) {	//TO_COMMENT
				<%if(ConEjb){%>//<%}%>esProcesado=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional.ProcesarAccion(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getParametroGeneralUsuario(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getModuloActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getOpcionActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getUsuarioActual(),sProceso,<%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.get<%=GetNombreClase(TablaBase.ToString())%>Logic().get<%=GetNombreClase(TablaBase.ToString())%>s());
			} else if(Constantes.ISUSAEJBREMOTE) {//TO_COMMENT
				<%if(ConSessionBeans){%>
				esProcesado=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Additionable.ProcesarAccion(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getParametroGeneralUsuario(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getModuloActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getOpcionActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getUsuarioActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.datosCliente,sProceso,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s());//TO_COMMENT
				<%}%>
			} else if(Constantes.ISUSAEJBHOME) {//TO_COMMENT
				<%if(ConSessionBeans){%>
				<%if(!ConSessionBeansHome) { %>//<%}%>esProcesado=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>AdditionableHome.ProcesarAccion(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getParametroGeneralUsuario(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getModuloActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getOpcionActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getUsuarioActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.datosCliente,sProceso,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s());//TO_COMMENT
				<%}%>
			}//TO_COMMENT
			<%}%>
			//ARCHITECTURE
			
			if(esProcesado) {
				//JOptionPane.showMessageDialog(<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>,"PROCESO REALIZADO CORRECTAMENTE","PROCESO ",JOptionPane.INFORMATION_MESSAGE);		
				
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.setFacesMessage(new FacesMessage(FacesMessage.SEVERITY_INFO,ConstantesJsp.SMENSAJEDATOSINGRESADOS,ConstantesJsp.SOK));				
				//FacesContext.getCurrentInstance().addMessage(ConstantesJsp.SMENSAJES + <%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME,<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.getFacesMessage());
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoJSFFaces%>.setsCssClassMensaje(ConstantesJsp.SCSSMENSAJEINFO);
			}	
		//}
	}
		
	<%}%>
	
	public static Boolean EsProcesoAccionNormal(String sTipoProceso) throws Exception {
		//CONTROL_6
		Boolean esProcesoAccionNormal=true;

		if(sTipoProceso.equals("XYZ")) {
			//esProcesoAccionNormal=false;
		}

		return esProcesoAccionNormal;
	}
	
	<%} else {%>
	<%if(!EsParaTree){%>
	public static void	RecargarForm<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame,String sTipo,Object oValor,ArrayList<DatoGeneral> arrDatoGeneral) throws Exception {	
		//CONTROL_1
	}
	
	public static void	RecargarVentanaSegunOpcion(JInternalFrameBase jInternalFrameBase<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>,Opcion opcionActual<%}%>) throws Exception {	
		//CONTROL_2
	}
	
	/*
	public static void	ProcesarAccion(String sProceso,JInternalFrameBase jInternalFrameBase) throws Exception {	
		//CONTROL_3
	}
	*/
	
	public static void CargaInicial(JInternalFrameBase jInternalFrameBase,String sTipo,Object objectGeneral) throws Exception {
		//CONTROL_4
	}
	
	public static void CargaInicialInicio(JInternalFrameBase jInternalFrameBase,String sTipo,Object objectGeneral) throws Exception {
		//CONTROL_5
	}
	
	public static Boolean EsProcesoAccionNormal(String sTipoProceso) throws Exception {
		//CONTROL_6
		Boolean esProcesoAccionNormal=true;

		if(sTipoProceso.equals("XYZ")) {
			//esProcesoAccionNormal=false;
		}

		return esProcesoAccionNormal;
	}
	
	<% if(blnEsProceso){%>
	public static void ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame jBeanInternalFrame) throws Exception {
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	//TO_COMMENT
			<%if(ConEjb){%>//<%}%>jBeanInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.ProcesarInformacion<%=GetNombreClase(TablaBase.ToString())%>(jBeanInternalFrame.getParametroGeneralUsuario(),jBeanInternalFrame.getModuloActual(),jBeanInternalFrame.getOpcionActual(),jBeanInternalFrame.getUsuarioActual(),jBeanInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClase(TablaBase.ToString())%>s(),jBeanInternalFrame.sTipoBusqueda<%=GetVariablesTodosIndicesTablasC(TablaBase,true,true,"jBeanInternalFrame.")%>);
		} else if(Constantes.ISUSAEJBREMOTE) {//TO_COMMENT
			<%if(ConSessionBeans ){%>
			<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>(jBeanInternalFrame.datosCliente,jBeanInternalFrame.getParametroGeneralUsuario(),jBeanInternalFrame.getModuloActual(),jBeanInternalFrame.getOpcionActual(),jBeanInternalFrame.getUsuarioActual(),jBeanInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,jBeanInternalFrame.sTipoBusqueda<%=GetVariablesTodosIndicesTablasC(TablaBase,true,true,"jBeanInternalFrame.")%>);//TO_COMMENT
			//((<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame)jBeanInternalFrame).<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>(jBeanInternalFrame.datosCliente,jBeanInternalFrame.getParametroGeneralUsuario(),jBeanInternalFrame.getModuloActual(),jBeanInternalFrame.getOpcionActual(),jBeanInternalFrame.getUsuarioActual(),jBeanInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,jBeanInternalFrame.sTipoBusqueda<%=GetVariablesTodosIndicesTablasC(TablaBase,true,true,"jBeanInternalFrame.")%>);//TO_COMMENT
			<%}%>
		} else if(Constantes.ISUSAEJBHOME) {//TO_COMMENT
			<%if(ConSessionBeans){%>
			<%if(!ConSessionBeansHome) { %>//<%}%><%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>(jBeanInternalFrame.datosCliente,jBeanInternalFrame.getParametroGeneralUsuario(),jBeanInternalFrame.getModuloActual(),jBeanInternalFrame.getOpcionActual(),jBeanInternalFrame.getUsuarioActual(),jBeanInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,jBeanInternalFrame.sTipoBusqueda<%=GetVariablesTodosIndicesTablasC(TablaBase,true,true,"jBeanInternalFrame.")%>);//TO_COMMENT
			//((<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame)jBeanInternalFrame).<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.ProcesarInformacion<%=GetNombreClaseC(TablaBase.ToString())%>(jBeanInternalFrame.datosCliente,jBeanInternalFrame.getParametroGeneralUsuario(),jBeanInternalFrame.getModuloActual(),jBeanInternalFrame.getOpcionActual(),jBeanInternalFrame.getUsuarioActual(),jBeanInternalFrame.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,jBeanInternalFrame.sTipoBusqueda<%=GetVariablesTodosIndicesTablasC(TablaBase,true,true,"jBeanInternalFrame.")%>);//TO_COMMENT
			<%}%>
		}//TO_COMMENT
		//ARCHITECTURE
	}
	<%}%>
	
	<%//if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
	public static void ProcesarAccion(String sProceso,String sLabelProceso,JInternalFrameBase jInternalFrameBase) throws Exception {
		//CONTROL_3
		<%if(blnConAdditional){%>		
		Boolean esProcesado=false;
		<%if(ConEjb){%>//<%}%><%=GetNombreClase(TablaBase.ToString())%>LogicAdditional <%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional=new <%=GetNombreClase(TablaBase.ToString())%>LogicAdditional();
		
		<%=GetNombreClase(TablaBase.ToString())%>BeanSwingJInternalFrame <%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame=(<%=GetNombreClase(TablaBase.ToString())%>BeanSwingJInternalFrame)jInternalFrameBase;
		
		if(JOptionPane.showConfirmDialog(jInternalFrameBase, "ESTA SEGURO DE PROCESAR "+sLabelProceso+" <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase).ToUpper()%> SELECCIONADOS?", "MANTENIMIENTO DE ACCION", JOptionPane.OK_CANCEL_OPTION) == 0) {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {	//TO_COMMENT
				<%if(ConEjb){%>//<%}%>esProcesado=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>LogicAdditional.ProcesarAccion(<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getParametroGeneralUsuario(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getModuloActual(),<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getOpcionActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getUsuarioActual(),sProceso,<%=GetNombreClaseObjeto(TablaBase.ToString())%>BeanSwingJInternalFrame.get<%=GetNombreClase(TablaBase.ToString())%>Logic().get<%=GetNombreClase(TablaBase.ToString())%>s());
			} else if(Constantes.ISUSAEJBREMOTE) {//TO_COMMENT
				<%if(!blnEsReporte){%>
				<%if(ConSessionBeans){%>
				<%if(blnConMaxCodigo && GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
				//esProcesado=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Additionable.ProcesarAccion(<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getParametroGeneralUsuario(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getModuloActual(),<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getOpcionActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getUsuarioActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.datosCliente,sProceso,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s());//TO_COMMENT
				<%}%>
				<%}%>
				<%}%>
			} else if(Constantes.ISUSAEJBHOME) {//TO_COMMENT
				<%if(!blnEsReporte){%>
				<%if(ConSessionBeans){%>
				<%if(blnConMaxCodigo && GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
				<%if(!ConSessionBeansHome) { %>//<%}%>esProcesado=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>AdditionableHome.ProcesarAccion(<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getParametroGeneralUsuario(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getModuloActual(),<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getOpcionActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.getUsuarioActual(),<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.datosCliente,sProceso,<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame.get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s());//TO_COMMENT
				<%}%>
				<%}%>
				<%}%>
			}//TO_COMMENT
			//ARCHITECTURE
			
			if(esProcesado) {
				JOptionPane.showMessageDialog(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame,"PROCESO REALIZADO CORRECTAMENTE","PROCESO ",JOptionPane.INFORMATION_MESSAGE);		
			}	
		}
		<%}%>
	}
	<%//}%>
	
	public static GeneralEntityReturnGeneral procesarEventosVista(ParametroGeneralUsuario parametroGeneralUsuario,Modulo modulo,Opcion opcion,Usuario usuario,JInternalFrameBase jInternalFrameBase,FuncionTipo funcionTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipo,Object object,Object objects,GeneralEntityParameterGeneral generalEntityParameterGeneral,GeneralEntityReturnGeneral generalEntityReturnGeneral)throws Exception {
		try {
			//CONTROL_7
			if(controlTipo.equals(ControlTipo.WINDOW)) {

			} else if(controlTipo.equals(ControlTipo.PANEL)) {

			} else if(controlTipo.equals(ControlTipo.FORM)) {

			} else if(controlTipo.equals(ControlTipo.BUTTON)) {

			} else if(controlTipo.equals(ControlTipo.COMBOBOX)) {

			} else if(controlTipo.equals(ControlTipo.TEXTBOX)) {

			} else if(controlTipo.equals(ControlTipo.CHECKBOX)) {

			} else if(controlTipo.equals(ControlTipo.TEXTAREA)) {

			} else if(controlTipo.equals(ControlTipo.TREE)) {
			}

			return generalEntityReturnGeneral;

		} catch(Exception e) {
			throw e;
		} finally {

		}
	}
	
	<%} else {%>
	public <%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> get<%=GetNombreClase(TablaBase.ToString())%>s() throws Exception {			
		return this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s;
	}
	
	public void set<%=GetNombreClase(TablaBase.ToString())%>s(<%=strTypeCollection%><<%=GetNombreClase(TablaBase.ToString())%>> new<%=GetNombreClase(TablaBase.ToString())%>s) {
		this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>s = new<%=GetNombreClase(TablaBase.ToString())%>s;
	}
	
	private void initialize() throws Exception {	
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
			
		int iWidth=(screenSize.width-screenSize.width/3);
		int iHeight=(screenSize.height-screenSize.height/2);		
		
		this.setSize(iWidth,iHeight);
		
		this.setContentPane(this.getJContentPane(iWidth,iHeight));
	
		this.setResizable(true);
	    this.setClosable(true);
	    this.setMaximizable(true);
	    this.iconable=true;
		
		this.setLocation(xOffset*openFrameCount, yOffset*openFrameCount);
		
		if(Constantes.CON_VARIAS_VENTANAS) {
			openFrameCount++;
			
			if(openFrameCount==Constantes.INUM_MAX_VENTANAS) {
				openFrameCount=0;
			}
		}
	
	}
	
	public JScrollPane getJContentPane(int iWidth,int iHeight) throws Exception {	
		int iGridyPrincipal=0;
		
		this.defaultMutableTreeNode = new DefaultMutableTreeNode("ARBOL");
        //this.CargarTree<%=GetNombreClase(TablaBase.ToString())%>(defaultMutableTreeNode);
 
		this.defaultTreeModel = new DefaultTreeModel(this.defaultMutableTreeNode);
		this.defaultTreeModel.addTreeModelListener(this);
	
        //Create a tree that allows one selection at a time.
        this.tree<%=GetNombreClaseC(TablaBase.ToString())%> = new JTree(defaultTreeModel);//(defaultMutableTreeNode);
		
		this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(iWidth,iHeight));
		this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(iWidth,iHeight));
		this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(iWidth,iHeight));
		
        this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
 
        //Listen for when the selection changes.
        this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.addTreeSelectionListener(this);
		
		this.jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%> = new JScrollPane(this.tree<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		this.jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(iWidth,iHeight));
		this.jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(iWidth,iHeight));
		this.jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(iWidth,iHeight));
		
		this.setContentPane(new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true));
		this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%> = new JPanelMe(FuncionesSwing.getFondoImagen(parametroGeneralUsuario.getid_tipo_fondo()),true);
		this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%> = new JScrollPane();		                 
						       	
		//MUCHOS TITULOS
		//this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("ARBOL"));
        this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText("ARBOL");
        this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>.setName("ARBOL"); 
		
		GridBagLayout gridaBagLayoutPrincipal<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagLayout();		
		this.getContentPane().setLayout(gridaBagLayoutPrincipal<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		GridBagLayout gridaBagLayoutTree<%=GetNombreClaseC(TablaBase.ToString())%>= new GridBagLayout();
		this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>.setLayout(gridaBagLayoutTree<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = 0;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx =0;
		
		this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>.add(this.jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%> = new GridBagConstraints();
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridy = iGridyPrincipal++;		
		this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.gridx = 0;
		//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.fill =GridBagConstraints.BOTH;
		//this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>.anchor=GridBagConstraints.NORTH;
		
		this.getContentPane().add(this.jPanelTree<%=GetNombreClaseC(TablaBase.ToString())%>, this.gridBagConstraints<%=GetNombreClaseC(TablaBase.ToString())%>);
		
		
		this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>=   new JScrollPane(this.getContentPane(),JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			
		this.jScrollPaneTree<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("ARBOL <%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase)%>"));		
		//MUCHOS TITULOS
		//this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(javax.swing.BorderFactory.createTitledBorder("DATOS"));
		
		this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setMinimumSize(new Dimension(iWidth,iHeight));
		this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setMaximumSize(new Dimension(iWidth,iHeight));
		this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>.setPreferredSize(new Dimension(iWidth,iHeight));
			
		return this.jScrollPaneDatosGeneral<%=GetNombreClaseC(TablaBase.ToString())%>;
	}
		
	public void CargarTree<%=GetNombreClase(TablaBase.ToString())%>() {
		//this.defaultMutableTreeNode = new DefaultMutableTreeNode("Arbol");
		
		//INICIALIZA
		this.defaultMutableTreeNode.removeAllChildren();
		
		this.CargarTree<%=GetNombreClase(TablaBase.ToString())%>(this.defaultMutableTreeNode);
	}
	
	public void CargarTree<%=GetNombreClase(TablaBase.ToString())%>(DefaultMutableTreeNode defaultMutableTreeNodeTree) {
		DefaultMutableTreeNode defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%> = null;
        DefaultMutableTreeNode defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%> = null;
 
        defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%> = new DefaultMutableTreeNode("<%=GetTituloNombreTableFromPropertiesC(TablaBase)%><%=GetPluralTituloNombreTableFromPropertiesC(TablaBase).ToUpper()%>");
        defaultMutableTreeNodeTree.add(defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%>);
		
		ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sPrimerNivel=this.getPrimerNivel<%=GetNombreClase(TablaBase.ToString())%>s();
		ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos=new ArrayList<<%=GetNombreClase(TablaBase.ToString())%>>();
		
		for(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sPrimerNivel){//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
			defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%> = new DefaultMutableTreeNode(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos=this.getHijos<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos.size()>0) {
				this.setHijosArbol<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos,defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>);
			}
			
			defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%>.add(defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>);
		}
	}	
	
	public void setHijosArbol<%=GetNombreClase(TablaBase.ToString())%>(ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux,DefaultMutableTreeNode defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>Padre) {
		ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos=new ArrayList<<%=GetNombreClase(TablaBase.ToString())%>>();
		DefaultMutableTreeNode defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%> = null;
				 
		for(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux) {
			defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%> = new DefaultMutableTreeNode(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos=this.getHijos<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos.size()>0) {
				this.setHijosArbol<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sHijos,defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>);
			}
			
			defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>Padre.add(defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>);
		}
	}
	
	public ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> getHijos<%=GetNombreClase(TablaBase.ToString())%>(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Padre) {
		ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux=new ArrayList<<%=GetNombreClase(TablaBase.ToString())%>>();
		
		for(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getid_<%=GetNombreTableFromProperties(TablaBase,false)%>()!=null && <%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getid_<%=GetNombreTableFromProperties(TablaBase,false)%>().equals(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Padre.getId())) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			}
		}
		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux;
	}
	
	public ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> getPrimerNivel<%=GetNombreClase(TablaBase.ToString())%>s() {
		ArrayList<<%=GetNombreClase(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux=new ArrayList<<%=GetNombreClase(TablaBase.ToString())%>>();
		
		for(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
			if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getid_<%=GetNombreTableFromProperties(TablaBase,false)%>()==null || <%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getid_<%=GetNombreTableFromProperties(TablaBase,false)%>()<=0) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux.add(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
			}
		}
		return <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sAux;
	}
	
	public void CargarTree<%=GetNombreClase(TablaBase.ToString())%>Test(DefaultMutableTreeNode defaultMutableTreeNodeTree) {
		DefaultMutableTreeNode defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%> = null;
        DefaultMutableTreeNode defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%> = null;
 
        defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%> = new DefaultMutableTreeNode("Root Arbol");
        defaultMutableTreeNodeTree.add(defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%>);
		
		for(int i=0;i<10;i++) {
			defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%> = new DefaultMutableTreeNode(i);
				
			defaultMutableTreeNodeRoot<%=GetNombreClase(TablaBase.ToString())%>.add(defaultMutableTreeNode<%=GetNombreClase(TablaBase.ToString())%>);
		}
		
		//NO NECESARIO
		//this.defaultTreeModel.reload();
	}	
	
	public void valueChanged(TreeSelectionEvent e) {
        DefaultMutableTreeNode defaultMutableTreeNode = (DefaultMutableTreeNode)this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.getLastSelectedPathComponent();
 
        if (defaultMutableTreeNode == null) return;
 
        Object userObject = defaultMutableTreeNode.getUserObject();
		
		<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%> = (<%=GetNombreClaseC(TablaBase.ToString())%>)userObject;
           
        if (defaultMutableTreeNode.isLeaf()) {
            //displayURL(book.bookURL);
            System.out.print(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId() + ":  \n    ");            
        } else {
            
        }
        
		//this.jInternalFrameParent.setIdActual(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId());
		
		try {
			//this.jInternalFrameParent.procesarBusqueda("Por<%=strIdGetSet%>");
			if(this.getsTipoProceso().equals("BUSQUEDA_NORMAL")) {
				this.jInternalFrameParent.buscarPorId(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId());			
			} else if(this.getsTipoProceso().equals("BUSQUEDA_FK")) {
				this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId(),this.sTipoBusqueda);			
			}
			
			//CERRAR VENTANA
			//this.jDesktopPane.add(this);			
	       	this.setVisible(false);
	        this.setSelected(false);			
			//this.dispose();
			//this=null;
			
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		System.out.println(userObject.toString());        
    }
	
	 public void clear() {
        this.defaultMutableTreeNode.removeAllChildren();
        this.defaultTreeModel.reload();
    }

	/** Remove the currently selected node. */
    public void removeCurrentNode() {
        TreePath currentSelection = this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionPath();
        if (currentSelection != null) {
            DefaultMutableTreeNode currentNode = (DefaultMutableTreeNode)
                         (currentSelection.getLastPathComponent());
            MutableTreeNode parent = (MutableTreeNode)(currentNode.getParent());
            if (parent != null) {
                this.defaultTreeModel.removeNodeFromParent(currentNode);
                return;
            }
        } 

        // Either there was no selection, or the root was selected.
        //toolkit.beep();
    }

    /** Add child to the currently selected node. */
    public DefaultMutableTreeNode addObject(Object child) {
        DefaultMutableTreeNode parentNode = null;
        TreePath parentPath = this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectionPath();

        if (parentPath == null) {
            parentNode = this.defaultMutableTreeNode;
        } else {
            parentNode = (DefaultMutableTreeNode)
                         (parentPath.getLastPathComponent());
        }

        return addObject(parentNode, child, true);
    }

    public DefaultMutableTreeNode addObject(DefaultMutableTreeNode parent,
                                            Object child) {
        return addObject(parent, child, false);
    }

    public DefaultMutableTreeNode addObject(DefaultMutableTreeNode parent,
                                            Object child, 
                                            boolean shouldBeVisible) {
        DefaultMutableTreeNode childNode = 
                new DefaultMutableTreeNode(child);

        if (parent == null) {
            parent = this.defaultMutableTreeNode;
        }
	
	//It is key to invoke this on the TreeModel, and NOT DefaultMutableTreeNode
        this.defaultTreeModel.insertNodeInto(childNode, parent, 
                                 parent.getChildCount());

        //Make sure the user can see the lovely new node.
        if (shouldBeVisible) {
            this.tree<%=GetNombreClaseC(TablaBase.ToString())%>.scrollPathToVisible(new TreePath(childNode.getPath()));
        }
        return childNode;
    }
	
	 public void treeNodesChanged(TreeModelEvent e) {
            DefaultMutableTreeNode node;
            node = (DefaultMutableTreeNode)(e.getTreePath().getLastPathComponent());

            /*
             * If the event lists children, then the changed
             * node is the child of the node we've already
             * gotten.  Otherwise, the changed node and the
             * specified node are the same.
             */

                int index = e.getChildIndices()[0];
                node = (DefaultMutableTreeNode)(node.getChildAt(index));

            System.out.println("The user has finished editing the node.");
            System.out.println("New value: " + node.getUserObject());
        }
        public void treeNodesInserted(TreeModelEvent e) {
        }
        public void treeNodesRemoved(TreeModelEvent e) {
        }
        public void treeStructureChanged(TreeModelEvent e) {
        }
		
	<%}%>
	<%}%>
	//CONTROL_FUNCION2
}

