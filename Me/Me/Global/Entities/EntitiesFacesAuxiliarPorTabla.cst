<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCodeProyecto.cs" Inherits="Me.CommonCodeProyecto" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import NameSpace="Me" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Text" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="CodigoEmpresa" Type="System.String" Default="ME" Category="Options" Description="Codigo de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="EsSwing" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>
<%@ Property Name="ConEjb" Type="System.Boolean" Default="false" Category="Options" Description="json or xml" %>
<%@ Property Name="TiposGeneracion" Type="System.String" Default=" " Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="GenerarMe" Type="System.Boolean" Default="false" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="ConSessionBeans" Type="System.Boolean" Default="true" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="ConRMI" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="ConSessionBeansHome" Type="System.Boolean" Default="false" Category="4. Service Architecture" Description="Nombre del Programdor" %>
<%@ Property Name="ConSwingCombosTabla" Type="System.Boolean" Default="false" Category="5. Presentation" Description="Nombre del Programdor" %>
<%@ Property Name="JBoss_Version" Type="System.String" Default="5.1" Category="5.1 Versiones" Description="Nombre de la Entidad" %>
<%@ Property Name="ConPersistenciaAnotaciones" Type="System.Boolean" Default="true" Category="1. General" Description="Nombre del Programdor" %>
<%@ Property Name="RichFaces_Version" Type="System.String" Default="4.3" Category="4.3 Versiones" Description="Nombre de la Entidad" %>
<%@ Property Name="GeneracionPorModuloUnico" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>

<%@ Property Name="ParaAbstractTableModel" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaBindingListener" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaBindingListenerTabla" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaPropertyChangeListener" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaPropertyValorChangeListener" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaDefaultCellEditorRelacion" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaDefaultCellEditorFk" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaDefaultListCellRendererFk" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>
<%@ Property Name="ParaFocusTraversal" Type="System.Boolean" Default="false" Category="0. Tipo Generacion" Description="Nombre del Programdor" %>

<%@ Property Name="ConSwingComboListCellRendererClase" Type="System.Boolean" Default="false" Category="4.1 Service Architecture Optimization" Description="Nombre del Programdor" %>
<%@ Property Name="ConSwingFocusTraversalPolicy" Type="System.Boolean" Default="false" Category="4.1 Service Architecture Optimization" Description="Nombre del Programdor" %>
<%@ Property Name="ConSwingPropertyValorChangeListener" Type="System.Boolean" Default="false" Category="4.1 Service Architecture Optimization" Description="Nombre del Programdor" %>
<%@ Property Name="ConTableCellRendererEditorFk" Type="System.Boolean" Default="false" Category="4.1 Service Architecture Optimization" Description="Nombre del Programdor" %>

<script runat="template">
int iPosicionInicialTablaModel=1;

public String GetTabElementoInicioFinSwingTablaClase(TableSchema TablaBase,bool esFinal) {
		String strSwing="";
		ColumnSchema columnSchemaInicioFin=null;
		ArrayList arrListColumnas=new ArrayList();
		
		int jAux=0;
		
		
			for (int i = 0 ;i < TablaBase.Columns.Count; i++) {
				columnSchemaInicioFin=TablaBase.Columns[i];
				
				if(columnSchemaInicioFin.Name.Equals(strVersionRow)
					|| (columnSchemaInicioFin.Name.Equals(strId) && TieneIdentityColumnC(columnSchemaInicioFin))) {
					continue;
				}		
				
				if(!esFinal) {
					strSwing=GetNombreControlVariablesSwingC(columnSchemaInicioFin,"","");
					return strSwing;
					//break;
				} else {
					strSwing=GetNombreControlVariablesSwingC(columnSchemaInicioFin,"","");
				}
			}			
		
		
		return strSwing;
}

public String GetSetTabElementosSwingTablaClase(TableSchema TablaBase,bool esBefore) {
		String strSwing="";
		ColumnSchema columnSchemaAfter=null;
		ColumnSchema columnSchemaBefore=null;
		ArrayList arrListColumnas=new ArrayList();
		
		int jAux=0;
		
		
			for (int i = 0,j=1 ;i < (TablaBase.Columns.Count-1); i++,j++) {
				columnSchemaBefore=TablaBase.Columns[i];
				
				if(columnSchemaBefore.Name.Equals(strVersionRow)
					|| (columnSchemaBefore.Name.Equals(strId) && TieneIdentityColumnC(columnSchemaBefore))
					|| GetReadOnlyColumnFromPropertiesC(columnSchemaBefore)
					) {
					continue;
				}		
					
				//SI USA ID, PERO NO DEBERIA USAR VERSIONROW
				if(TablaBase.Columns[j].Name.Equals(strVersionRow)
					|| GetReadOnlyColumnFromPropertiesC(TablaBase.Columns[j])) {
						
					jAux=j+1;
					
					if(jAux<TablaBase.Columns.Count) {
						columnSchemaAfter=TablaBase.Columns[jAux];
					}
				} else {			
					columnSchemaAfter=TablaBase.Columns[j];
				}
				
				if(!esBefore) {
					strSwing+=GetSetTabControlVariablesSwing(columnSchemaBefore,columnSchemaAfter,"","",false);						
				} else {
					//Trace.WriteLine("BEFORE:"+columnSchemaBefore.Name+"->AFTER:"+columnSchemaAfter.Name);
					
					strSwing+=GetSetTabControlVariablesSwing(columnSchemaAfter,columnSchemaBefore,"","",false);						
				}
			}			
		
		
		return strSwing;
}

public string GetSetTabControlVariablesSwing(ColumnSchema column,ColumnSchema columnAfter,String strIndexName,String strFinalName,bool esParaFk) {			
	String strControl="";
	String strNombreControl="";
	String strNombreControlAfter="";
	String strObjetoBean="";
	String sColumnName="";//GetNombreCompletoColumnaClaseC(column);
	String sBorderPainted="";
	
	//strControl+="\r\n\t\t//this."+GetNombreControlVariablesSwingC(column,"","")+".setVisible(."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
	
	strNombreControl=GetNombreControlVariablesSwingC(column,"","");
	strNombreControlAfter=GetNombreControlVariablesSwingC(columnAfter,"","");
	
	strObjetoBean="this."+GetNombreClaseObjeto(TablaBase.ToString())+"JInternalFrame.";//strPrefijoBeanSwing+
	
	strControl+="\r\n\r\n\t\tif(component!=null && component.equals("+strObjetoBean+strNombreControl+")) {";
	strControl+="\r\n\t\t\tcomponentTab="+strObjetoBean+strNombreControlAfter+";";
	strControl+="\r\n\t\t\treturn componentTab;";
	strControl+="\r\n\t\t}";
	
	//String strObjetoBean=GetObjetoBeanC(TablaBase);
	
	//strControl+="\r\n\t\t//this."+GetNombreControlVariablesSwingC(column,"","")+".setVisible("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
		
	/*
	strControl+="\r\n\t\tthis."+GetNombrePanelControlVariablesSwingC(column,"","",false)+".setVisible("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
		
	if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
		strControl+="\r\n\t\t\tthis.jButton"+GetNombreColumnaClaseC(column)+strIndexName+strFinalName+GetNombreClaseC(column.Table.ToString())+".setVisible("+strObjetoBean+"."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+");";
	}
	*/
	
	return strControl;
}

public String GetRedimensionarTablaPanelsRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	String sTab="";sTab+="";
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false,true);
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		//sTablaClaseRelacionada+="\r\n\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,intSelectedRow,false,true);";
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tdimension=this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".getPreferredSize();";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tdimension.setSize(this.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".getWidth(),dimension.getHeight());";
					
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".setMinimumSize(dimension);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".setMaximumSize(dimension);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.jScrollPanelDatos"+GetNombreClaseC(tableSchema.ToString())+".setPreferredSize(dimension);";
					
		/*
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+sTab+"//SOLO INICIALIZA SESSION (YA NO, CONSUME MUCHA MEMORIA)";
		sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"();";
		sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
		
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+sTab+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,true,false);";
		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,true);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.jInternalFrameParent=this;";
			
		//"+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."
		sTablaClaseRelacionada+="\r\n\r\n\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(true);";
			
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(true,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,true,false,false);";
			
			
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+"(this."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+");";
			
		sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+" = new GridBagConstraints();";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridy = iGridyRelaciones++;";//+intPosicionYPanelsRelaciones+";";		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t//this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+".gridx = 0;";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t//this.jContentPaneDetalle"+GetNombreClaseC(TablaBase.ToString())+".add(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane(), this.gridBagConstraints"+GetNombreClaseC(TablaBase.ToString())+");";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.jTabbedPaneRelaciones"+GetNombreClaseC(TablaBase.ToString())+".add(\""+GetTituloNombreTableFromPropertiesC(tableSchema)+GetPluralTituloNombreTableFromPropertiesC(tableSchema)+"\",this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane());";
			
		sTablaClaseRelacionada+="\r\n\t\t\t\t} else {";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;//new "+GetNombreClaseC(tableSchema.ToString())+"BeanSwingJInternalFrame(false,false,jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,false);";
		sTablaClaseRelacionada+="\r\n\t\t\t\t}";
		*/							
	}
	
	return sTablaClaseRelacionada;
}

public string GetSwitchTiposColumnsReporteDinamico()
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(GetEsReporteParametroFromPropertiesC(column)||/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			
			strElse="";
			
			/*
			strVariables+="\r\n\t\treporte=new Reporte();";
			strVariables+="\r\n\t\treporte.setsCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			strVariables+="\r\n\t\treporte.setsDescripcion("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";			
			strVariables+="\r\n\r\n\t\tarrTiposSeleccionarTodos.add(reporte);";						
			*/
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column,false,true)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			
			strVariables+="\r\n\r\n\t\t\t\t\tbreak;\r\n";
					
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetSwitchTipoColumnCategoriaReporteDinamico(bool esCategoriaValor)
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		string strVariableCategoria="sNombreCampoCategoria";
		
		if(esCategoriaValor) {
			strVariableCategoria="sNombreCampoCategoriaValor";
		}
		
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(GetEsReporteParametroFromPropertiesC(column)||/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			
			strElse="";
			
			/*
			strVariables+="\r\n\t\treporte=new Reporte();";
			strVariables+="\r\n\t\treporte.setsCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			strVariables+="\r\n\t\treporte.setsDescripcion("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";			
			strVariables+="\r\n\r\n\t\tarrTiposSeleccionarTodos.add(reporte);";						
			*/
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			strVariables+="\r\n\t\t\t\t\t"+strVariableCategoria+"=\""+GetNombreCompletoColumnaClaseC(column)+"\";";
			
			/*
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			*/
			
			strVariables+="\r\n\r\n\t\t\t\t\tbreak;\r\n";
					
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
	public string GetSwitchTipoColumnValorReporteDinamico()
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(GetEsReporteParametroFromPropertiesC(column)||/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			
			strElse="";
			
			/*
			strVariables+="\r\n\t\treporte=new Reporte();";
			strVariables+="\r\n\t\treporte.setsCodigo("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			strVariables+="\r\n\t\treporte.setsDescripcion("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";			
			strVariables+="\r\n\r\n\t\tarrTiposSeleccionarTodos.add(reporte);";						
			*/
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			//strVariables+="\r\n\t\t\t\t\tsNombreCampoCategoria=\""+GetNombreCompletoColumnaClaseC(column)+"\";";
			
			strVariables+="\r\n\t\t\t\t\tstrCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,\""+GetWebNombreTituloColumnFromPropertiesC(column)+"\",sNombreCampoCategoria,sNombreCampoCategoriaValor,\""+GetNombreCompletoColumnaClaseC(column)+"\");";
			
			/*
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			*/
			
			strVariables+="\r\n\r\n\t\t\t\t\tbreak;\r\n";
					
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetSwitchExcelTiposColumnsReporteDinamico()
	{		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\t\t\t\t\t";strTabsBase+="";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		
		string strToString="";strToString+="";
		string strGetColumn="";
	
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(/*column.IsForeignKeyMember || */column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			strToString="";
			strGetColumn="";
	
			//CUANDO SON CATALOGOS SIMPLES NO SE NECESITA CAMBIAR TODAS LAS COLUMNAS
			//SE QUITA CAMPO DE CAMBIO, PERO SE DEJA PARA REPORTES DINAMICOS
			/*
			if(!blnConMaxCodigo && !blnConAdditional && !EsBitColumn(column)) {
				continue;	
			}
			*/
			
			/*
			for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcel<%=GetNombreClaseC(TablaBase.ToString())%>(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux,row);
				
				iRow++;
			}
			*/
			
			strElse="";
			
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";//LABEL_
			strVariables+="\r\n\t\t\t\t\tiRow=0;";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(!existeFilas) {";
			strVariables+="row = sheet.createRow(iRow);";
			strVariables+="} else {";
			strVariables+="row=sheet.getRow(iRow);";
			strVariables+="}";
			
			strVariables+="\r\n\r\n\t\t\t\t\tcell = row.createCell(iCell);";
			
			strVariables+="\r\n\t\t\t\t\tcell.setCellValue("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
			
			strVariables+="\r\n\t\t\t\t\tiRow++;";
				
			strVariables+="\r\n\r\n\t\t\t\t\tfor("+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+"sSeleccionados) {";
			strVariables+="\r\n\t\t\t\t\t\tif(!existeFilas) {";
			strVariables+="row = sheet.createRow(iRow);";
			strVariables+="} else {";
			strVariables+="row=sheet.getRow(iRow);";
			strVariables+="}";
			
			strVariables+="\r\n\r\n\t\t\t\t\t\tcell = row.createCell(iCell);";
			
			
			if(!column.IsForeignKeyMember) {
				if(!EsStringColumnC(column)) {
					strToString=".toString()";
				}
				
				if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
					strGetColumn="get"+GetNombreColumnaClaseC(column)+"()";
				} else {
					if(column.Name.Equals(strId)) {
						strGetColumn="getId()";
						
					} else if(column.Name.Equals(strVersionRow)) {
						strGetColumn="getVersionRow()";
					}
				}
				
				//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
				
				strVariables+="\r\n\t\t\t\t\t\tcell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
				
			} else {			
				//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
				strVariables+="\r\n\t\t\t\t\t\tcell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
			}
			
												
			
			strVariables+="\r\n\t\t\t\t\t\tiRow++;";
			strVariables+="\r\n\t\t\t\t\t}\r\n";
			
			strVariables+="\r\n\t\t\t\t\texisteFilas=true;";
			
			strVariables+="\r\n\t\t\t\t\tiCell++;";
			
			strVariables+="\r\n\t\t\t\t\tbreak;\r\n";
			
			/*	
			strVariables+="\r\n\t\t\t\tcase "+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+":";			
			strVariables+="\r\n\t\t\t\t\tiAnchoColumna="+GetWidthXmlCabeceraReporteColumnaClaseC(column)+";";
			
			strVariables+="\r\n\r\n\t\t\t\t\tif(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"<!--col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col\", \"\");";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"col_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_col-->\", \"\");\r\n";						
			
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colancho_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colancho\", iAnchoColumna.toString());";
			strVariables+="\r\n\t\t\t\t\t\tsXmlStringFile=sXmlStringFile.replace(\"colx_"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"_colx\", iAnchoSum.toString());";
			strVariables+="\r\n\r\n\t\t\t\t\t\tiAnchoSum+=iAnchoColumna;";
			strVariables+="\r\n\t\t\t\t\t}";
			
			strVariables+="\r\n\r\n\t\t\t\t\tbreak;\r\n";
			*/
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public String GetSetUpdateBorderElementosSwingTablaClase(TableSchema TablaBase) {
		String strSwing="";
			
		for (int i = 0; i < TablaBase.Columns.Count; i++) {
			if(TablaBase.Columns[i].Name.Equals(strVersionRow)) {
				continue;
			}
			
			//if(!TablaBase.Columns[i].IsForeignKeyMember) {
				strSwing+=GetDefinicionUpdateBorderControlVariablesSwing(TablaBase.Columns[i],"","",false);
			//}
		}			
		
		return strSwing;
}

public string GetDefinicionUpdateBorderControlVariablesSwing(ColumnSchema column,String strIndexName,String strFinalName,bool esParaFk) {			
	String strControl="";
	String sColumnName=GetNombreCompletoColumnaClaseC(column);//column.Name;
	String sBorderPainted="";
	//strControl="\r\n\r\n\tpublic void setBorderResaltar"+sColumnName+"() {";	
	//strControl+="\r\n\t\tBorder borderResaltar=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
	//strControl+="\r\n\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(borderResaltar);";
	
	if(EsBitColumn(column)) {
		sBorderPainted="this."+GetNombreControlVariablesSwingC(column,"","")+".setBorderPainted(true);";
	}
	
	strControl+="\r\n\t\tif(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"!=null) {";
	strControl+=sBorderPainted+"this."+GetNombreControlVariablesSwingC(column,"","")+".setBorder(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+");";
	strControl+="}";
	
	return strControl;	
}

public String GetSetLoteVisibilidadElementosSwingTablaClase(TableSchema TablaBase,bool esParaBorder) {
		String strSwing="";
		String strSwing1="";
		String strSwing2="";
		
		for (int i = 0; i < TablaBase.Columns.Count; i++) {
			if(TablaBase.Columns[i].Name.Equals(strVersionRow)) {
				continue;
			}
			
			//if(!TablaBase.Columns[i].IsForeignKeyMember) {
				strSwing1+=GetDefinicionLoteVisibilidadControlVariablesSwing(TablaBase.Columns[i],"","",false,false,esParaBorder);
				strSwing2+=GetDefinicionLoteVisibilidadControlVariablesSwing(TablaBase.Columns[i],"","",false,true,esParaBorder);
			//}
		}			
		
		strSwing=strSwing1;
		
		strSwing+="\r\n\r\n\t\tfor(Classe campo:campos) {";
		strSwing+=strSwing2;		
		strSwing+="\r\n\t\t}";
		
		return strSwing;
}

public string GetDefinicionLoteVisibilidadControlVariablesSwing(ColumnSchema column,String strIndexName,String strFinalName,bool esParaFk,bool conForIf,bool esParaBorder) {			
	String strControl="";
	String strTabs="";
	String strTipo="";
	String strTrueFalse="";
	String sColumnName=GetNombreCompletoColumnaClaseC(column);//column.Name;
	
	if(!esParaBorder) {
		strTipo="Visibilidad";
	} else {
		strTipo="Border";
	}
	
	if(!conForIf) {
		strTrueFalse="esInicial";
		strTabs="";
	} else {
		strTrueFalse="esAsigna";
		strTabs="\t\t";
	}
	
	if(conForIf) {
		strControl+="\r\n\r\n\t\t\tif(campo.clase.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+")) {";
	}
	
	strControl+="\r\n\t\t"+strTabs+"this.set"+strTipo+"Resaltar"+sColumnName+"("+strTrueFalse+");";
	
	if(conForIf) {
		strControl+="\r\n\t\t\t\tcontinue;";
		strControl+="\r\n\t\t\t}";
	}
	/*
	strControl="\r\n\r\n\tpublic void setBorderResaltar"+sColumnName+"() {";	
	strControl+="\r\n\t\tBorder borderResaltar=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
	strControl+="\r\n\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(borderResaltar);";
	strControl+="\r\n\t\tthis."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"= borderResaltar;";		
	strControl+="\r\n\t}";
	
	
	strControl+="\r\n\r\n\tpublic void setVisibilidadResaltar"+sColumnName+"(Boolean "+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+") {";	
	strControl+="\r\n\t\tthis."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+"= "+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+";";		
	strControl+="\r\n\t}";
	*/
	
	return strControl;	
}

public String GetSetBorderVisibilidadElementosSwingTablaClase(TableSchema TablaBase) {
		String strSwing="";
			
		for (int i = 0; i < TablaBase.Columns.Count; i++) {
			if(TablaBase.Columns[i].Name.Equals(strVersionRow)) {
				continue;
			}
			
			//if(!TablaBase.Columns[i].IsForeignKeyMember) {
				strSwing+=GetDefinicionBorderVisibilidadControlVariablesSwing(TablaBase.Columns[i],"","",false);
			//}
		}			
		
		return strSwing;
}

public string GetDefinicionBorderVisibilidadControlVariablesSwing(ColumnSchema column,String strIndexName,String strFinalName,bool esParaFk) {			
	String strControl="";
	String sColumnName=GetNombreCompletoColumnaClaseC(column);//column.Name;
	
	strControl="\r\n\r\n\tpublic void setBorderResaltar"+sColumnName+"() {";	
	strControl+="\r\n\t\tBorder borderResaltar=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
	strControl+="\r\n\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(borderResaltar);";
	strControl+="\r\n\t\tthis."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"= borderResaltar;";		
	strControl+="\r\n\t}";
	
	strControl+="\r\n\r\n\tpublic void setBorderResaltar"+sColumnName+"(Border borderResaltar) {";	
	strControl+="\r\n\t\tthis."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"= borderResaltar;";		
	strControl+="\r\n\t}";
	
	strControl+="\r\n\r\n\tpublic void setVisibilidadResaltar"+sColumnName+"(Boolean "+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+") {";	
	strControl+="\r\n\t\tthis."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+"= "+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+";";		
	strControl+="\r\n\t}";
	
	return strControl;	
}

public String GetResaltarIndicesVariablesTablasClases(TableSchema TablaBase) {
			String strFuncion=string.Empty;
			String strElse=string.Empty;
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="\r\n";
			bool blnExisteBusqueda=false;
			bool blnExisteBusquedaFkVariableGlobal=false;
			bool esPrimero=true;
			
			String strTabPanel=string.Empty;
			String strPanelesBusquedas=string.Empty;
			String strPanelBusqueda=string.Empty;
			String strControlesPanelesBusquedas=string.Empty;
			
			//SIEMPRE DECLARAR PANE BUSQUEDA
			//strTabPanel="\r\n\tpublic JTabbedPane jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
			
			strPanelesBusquedas="\r\n\tpublic void resaltarPanelBusqueda"+GetNombreClaseC(TablaBase.ToString())+"(String sTipoBusqueda) {";
			strPanelesBusquedas+="\r\n\t\tint index=0;";
			strPanelesBusquedas+="\r\n\t\tBoolean existe=false;";
			strPanelesBusquedas+="\r\n\t\tBorder borderResaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,\"TAB\");\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				blnExisteBusquedaFkVariableGlobal=false;
				strPanelBusqueda="";
				
				if(!indexSchema.IsPrimaryKey) {
					strElse=string.Empty;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {						
						if(!blnExisteBusqueda) {
							blnExisteBusqueda=true;
							//strTabPanel="\r\n\tprotected JTabbedPane jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+";\r\n";
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							/*
							strPanelBusqueda="\tpublic JPanel jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							strPanelBusqueda+="\tpublic JButton jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							*/
							
							if(!esPrimero) {
								strElse="else ";
							}
							
							strPanelBusqueda="\r\n\t\t"+strElse+"if(sTipoBusqueda.equals(\""+indexSchema.Name+"\")) {";							
							strPanelBusqueda+="\r\n\t\t\tindex= this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".indexOfComponent(this.jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");";
							strPanelBusqueda+="\r\n\r\n\t\t\tthis.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(index);";
							strPanelBusqueda+="\r\n\r\n\t\t\tJPanel jPanel=(JPanel)this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".getComponent(index);";
							strPanelBusqueda+="\r\n\r\n\t\t\tjPanel.setBorder(borderResaltar);";
							strPanelBusqueda+="\r\n\t\t\texiste=true;";
							strPanelBusqueda+="\r\n\t\t}";
														
							//strPanelesBusquedas+="\tprotected JPanel jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strPanelesBusquedas+="\tprotected JButton jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+";\r\n";
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String strFinalQuery,";
						} else {
							//strInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {												
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 
															
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//strInitFuncion+=";\r\n";	
							}
						} else {
							if(!indexSchema.Name.Contains("BusquedaRango")) {
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 																
							} else {
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial",memberColumnSchema.IsForeignKeyMember)+"\r\n";								
								
								//strInitFuncion+=",";
								//strControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final",memberColumnSchema.IsForeignKeyMember)+"\r\n"; 																
								break;
							}
						}
						count++;
					}
					
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
					
					if(esPrimero) {
						esPrimero=false;	
					}
							
					//strInitFuncion+=")throws Exception;";																																			
					
					strPanelesBusquedas+=strPanelBusqueda;
				}
			}
			
			strInitFuncion=strTabPanel+strPanelesBusquedas+strControlesPanelesBusquedas;
			
			strInitFuncion+="\r\n\r\n\t\tif(existe) {";
			strInitFuncion+="\r\n\t\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(borderResaltar);";
			strInitFuncion+="\r\n\t\t}";			
			strInitFuncion+="\r\n\t}";
			
				
			
			return strInitFuncion; 
	}
	
public string GetAccionesFromDescripcion(TableSchema table){
	String strAccionesReturn="";
	
	String strAccionesDescripcion=GetAccionesFromTableFromPropertiesC(table);
				
	String[] strAcciones=strAccionesDescripcion.Split(',');
										
	foreach(String strAccion in strAcciones) {								
		strAccionesReturn="\r\n\r\n\t\t\treporte=new Reporte();";
		strAccionesReturn+="\r\n\t\t\treporte.setsCodigo(\""+strAccion+"\");";
		strAccionesReturn+="\r\n\t\t\treporte.setsDescripcion(\""+strAccion+"\");";						
		strAccionesReturn+="\r\n\r\n\t\t\tthis.tiposAcciones.add(reporte);";
	}
	
	return strAccionesReturn;
}

public string GetSetVariablesFormularioToClaseTableModel(){		
		string strVariables=GetSetVariablesFormularioToClaseTableModelC(TablaBase);
		
		/*
		string strElse=" else "; strElse+="";
		string strTabsBase="\r\n\t\t\t";
		string strSufijoVariables=""; strSufijoVariables+="";
			  
		bool esPrimero=false;
		string strCommentEjb="";strCommentEjb+="";
		
		String strControl="";strControl+="";
		String strTituloControl="";strTituloControl+="";
		String strTipoControlId="";
		String strTipoControClaselId="";strTipoControClaselId+="";
		String strColumna="";
		String strToString="";strToString+="";
		String strToStringBase=".toString()";strToStringBase+="";
		string strPrefijoTipo="";
		string strPrefijoTipoParse="";
		string strPrefijoTipoAux="";
		string strSufijoTipoAux="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)) {//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			strToString="";
			strPrefijoTipoAux="";
			strSufijoTipoAux="";
		
			strColumna=GetNombreColumnaClaseC(column);
			
			strPrefijoTipo =  GetTipoColumnaClaseC(column);			
			strPrefijoTipoParse=strPrefijoTipo;
			
			if(EsIntColumn(column)) {
				strPrefijoTipoParse="Int";
			}
			
			if(EsDateTimeColumn(column)) {
				strPrefijoTipoAux="new Timestamp(";
				strSufijoTipoAux=".getTime())";
			}
			
			if(column.Name.Equals(strId)) {
				strColumna=GetNombreColumnaClaseC(column);
				//strToString=strToStringBase;
				
				strTipoControlId="jLabel";
				strTipoControClaselId="JLabel";
				
				if(!TieneIdentityColumnC(column)) {
					strTipoControlId="jTextField";
					strTipoControClaselId="JTextFieldMe";
				}
				
				strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipo+".parse"+strPrefijoTipo+"(this."+strTipoControlId+GetNombreColumnaClaseC(column)+GetNombreClaseC(column.Table.ToString())+".getText()));";//strIdGetSet
				
			}  else if(column.Name.Equals(strVersionRow)) {
				//strToString=strToStringBase;
				strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipo+".parse"+strPrefijoTipo+"(this.jLabel"+strVersionRowGetSet+GetNombreClaseC(column.Table.ToString())+".getText()));";
				
			} else if(!column.IsForeignKeyMember) {
				if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
					if(column.Size<51) {	
						strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText());";						
						
					} else if(column.Size<200) {
						strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText());";												
					} else {
						strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText());";
					}
				} else if(column.DataType==DbType.Boolean) {
					strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".isSelected());";				
					
				} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
					//strToString=strToStringBase;
					strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipo+".parse"+strPrefijoTipoParse+"(this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".getText()));";					
					
				} else if(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column)) {
					strVariables+=strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strPrefijoTipoAux+"this.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".getDate()"+strSufijoTipoAux+");";					
					
				}
			}
		}
		*/
		
		return strVariables;
}

public string GetSetVariablesClaseToFormularioTableModel(){		
		string strVariables="";
		string strElse=" else ";strElse+="";
		string strTabsBase="\r\n\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		//bool esPrimero=false;
		string strCommentEjb="";strCommentEjb+="";
		
		String strControl="";strControl+="";
		String strTituloControl="";strTituloControl+="";
		String strTipoControlId="";
		String strTipoControClaselId="";strTipoControClaselId+="";
		String strColumna="";
		String strToString="";
		String strToStringBase=".toString()";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			strToString="";
			strColumna=GetNombreColumnaClaseC(column);
			
			if(column.Name.Equals(strId)) {
				strColumna=GetNombreColumnaClaseC(column);
				strToString=strToStringBase;
				
				strTipoControlId="jLabel";
				strTipoControClaselId="JLabel";
				
				if(!TieneIdentityColumnC(column)) {
					strTipoControlId="jTextField";
					strTipoControClaselId="JTextFieldMe";
				}
				
				strVariables+=strTabsBase+"this."+strTipoControlId+GetNombreColumnaClaseC(column)/*strIdGetSet*/+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
			
			}  else if(column.Name.Equals(strVersionRow)) {
				strToString=strToStringBase;
				strVariables+=strTabsBase+"this.jLabel"+strVersionRowGetSet+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";
				
			} else if(!column.IsForeignKeyMember) {
				if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
					if(column.Size<51) {	
						strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());";
						
					} else if(column.Size<200) {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					} else {
						strVariables+=strTabsBase+"this.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					}
				} else if(column.DataType==DbType.Boolean) {
					strVariables+=strTabsBase+"this.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setSelected("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
					strToString=strToStringBase;
					strVariables+=strTabsBase+"this.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"()"+strToString+");";	
					
				} else if(EsDateColumn(column) || EsDateTimeColumn(column) || EsTimeColumn(column)) {
					strVariables+=strTabsBase+"this.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".setDate("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());";	
					
				}
			}
		}
		
		return strVariables;
}

public bool EsColumnaOcultaTabla(ColumnSchema column) {
	bool esColumnaOculta=EsColumnaOcultaTablaC(column);
	
	/*
	if(GetEsReporteParametroFromPropertiesC(column) || !GetShowTableColumnFromPropertiesC(column) 
		|| column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)	{
		esColumnaOculta=true;
	}
	*/
	
	return esColumnaOculta;
}
	
public string GetFilaCabecera(){		
	string strFilaCabecera="";
	bool esPrimero=true;
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		if(column.Name.Equals(strVersionRow)) {
			strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
			strValidarColumnInit+="\r\n\t\tsFilaCabecera+=sDelimiter;";
			strValidarColumnFin="\r\n\t\t}\r\n";
		}
		
		if(!esPrimero && !column.Name.Equals(strVersionRow)) {
			strFilaCabecera+="\r\n\t\tsFilaCabecera+=sDelimiter;";
		} else {
			esPrimero=false;
		}
				
		strFilaCabecera+=strValidarColumnInit;
		strFilaCabecera+="\r\n\t\tsFilaCabecera+="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+";";
		strFilaCabecera+=strValidarColumnFin;
	}
			
	return strFilaCabecera;
}

public string GetFilaCabeceraExcel(){		
	string strFilaCabecera="";
	//bool esPrimero=true;
	int iColumna=0;
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	strFilaCabecera+="\r\n\t\tHSSFCell cell =null;";
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		/*
		if(!esPrimero) {
			//strFilaCabecera+="\r\n\t\tsFilaCabecera+=sDelimiter;";
		} else {
			esPrimero=false;
		}
		*/				
		
		if(column.Name.Equals(strVersionRow)) {
			strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
			strValidarColumnFin="\r\n\t\t}\r\n";
		}
		
		strFilaCabecera+=strValidarColumnInit;
		strFilaCabecera+="\r\n\t\tcell = row.createCell(iColumn++"+/*iColumna+*/");cell.setCellValue("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+");";
		//strFilaCabecera+="\r\n\t\tsFilaCabecera+="+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+";";
		strFilaCabecera+=strValidarColumnFin;
		
		iColumna++;
	}
			
	return strFilaCabecera;
}

public string GetFilaDatos(){		
	string strFilaCabecera="";
	string strToString="";
	string strGetColumn="";
	
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	bool esPrimero=true;
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strToString="";
		strGetColumn="";
		
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		if(!esPrimero && !column.Name.Equals(strVersionRow)) {
			strFilaCabecera+="\r\n\t\tsFilaDatos+=sDelimiter;";
		} else {
			esPrimero=false;
		}
				
		if(!column.IsForeignKeyMember) {
			if(!EsStringColumnC(column)) {
				strToString=".toString()";
			}
			
			if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
				strGetColumn="get"+GetNombreColumnaClaseC(column)+"()";
			} else {
				if(column.Name.Equals(strId)) {
					strGetColumn="getId()";
					
				} else if(column.Name.Equals(strVersionRow)) {
					strGetColumn="getVersionRow()";
					
					strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
					strValidarColumnInit+="\r\n\t\tsFilaDatos+=sDelimiter;";
					strValidarColumnFin="\r\n\t\t}\r\n";
				}
			}
			
			strFilaCabecera+=strValidarColumnInit;									
			strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+";";
			strFilaCabecera+=strValidarColumnFin;
			
		} else {
			strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"();";
		}
	}
			
	return strFilaCabecera;
}

public string GetFilaDatosExcel(){		
	string strFilaCabecera="";
	string strToString="";strToString+="";
	string strGetColumn="";
	string strValidarColumnInit="";
	string strValidarColumnFin="";
	
	//bool esPrimero=true;
	
	strFilaCabecera+="\r\n\t\tHSSFCell cell =null;";
	int iColumna=0;
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strToString="";
		strGetColumn="";
		
		strValidarColumnInit="";
		strValidarColumnFin="";
	
		/*
		if(!esPrimero) {
			strFilaCabecera+="\r\n\t\tsFilaDatos+=sDelimiter;";
		} else {
			esPrimero=false;
		}
		*/
		
		if(!column.IsForeignKeyMember) {
			if(!EsStringColumnC(column)) {
				strToString=".toString()";
			}
			
			if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
				strGetColumn="get"+GetNombreColumnaClaseC(column)+"()";
			} else {
				if(column.Name.Equals(strId)) {
					strGetColumn="getId()";
					
				} else if(column.Name.Equals(strVersionRow)) {
					strGetColumn="getVersionRow()";
					strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
					strValidarColumnFin="\r\n\t\t}\r\n";
				}
			}
								
			strFilaCabecera+=strValidarColumnInit;
			strFilaCabecera+="\r\n\t\tcell = row.createCell(iColumn++"+/*iColumna+*/");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
			strFilaCabecera+=strValidarColumnFin;
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+";";
		
		} else {			
			strFilaCabecera+="\r\n\t\tcell = row.createCell(iColumn++"+/*iColumna+*/");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"();";
		}
		
		iColumna++;
	}
			
	return strFilaCabecera;
}

public string GetFilaDatosXml(){		
	string strFilaCabecera="";
	string strToString="";
	string strGetColumn="";
	string strColumnName="";
	string strValidarColumnInit="";
	string strValidarColumnFin="";
		
	//bool esPrimero=true;
	
	//strFilaCabecera+="\r\n\t\tHSSFCell cell =null;";
	int iColumna=0;
	
	foreach(ColumnSchema column in TablaBase.Columns) {
		strToString="";
		strGetColumn="";
		strColumnName="";
		
		strValidarColumnInit="";
		strValidarColumnFin="";
					
		/*
		if(!esPrimero) {
			strFilaCabecera+="\r\n\t\tsFilaDatos+=sDelimiter;";
		} else {
			esPrimero=false;
		}
		*/
		
		if(!column.IsForeignKeyMember) {
			if(!EsStringColumnC(column)) {
				strToString=".toString().trim()";
			} else {
				strToString=".trim()";
			}
			
			if(!column.Name.Equals(strId) && !column.Name.Equals(strVersionRow)) {
				strColumnName=GetNombreColumnaClaseC(column);
				strGetColumn="get"+strColumnName+"()";
			} else {
				if(column.Name.Equals(strId)) {
					strColumnName="Id";
					strGetColumn="get"+strColumnName+"()";
					
				} else if(column.Name.Equals(strVersionRow)) {
					strColumnName="VersionRow";
					strGetColumn="get"+strColumnName+"()";
					
					strValidarColumnInit="\r\n\r\n\t\tif(parametroGeneralUsuario.getcon_exportar_campo_version()){";
					strValidarColumnFin="\r\n\t\t}\r\n";
				}
			}
			
			//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+");";
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+";";
			
			strFilaCabecera+=strValidarColumnInit;
			strFilaCabecera+="\r\n\r\n\t\tElement element"+strColumnName+" = document.createElement("+GetNombreClaseC(column.Table.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+");";
			strFilaCabecera+="\r\n\t\telement"+strColumnName+".appendChild(document.createTextNode("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+strGetColumn+strToString+"));";
			strFilaCabecera+="\r\n\t\telement.appendChild(element"+strColumnName+");";
			strFilaCabecera+=strValidarColumnFin;
			
		} else {			
			//strFilaCabecera+="\r\n\t\tcell = row.createCell("+iColumna+");cell.setCellValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
			//strFilaCabecera+="\r\n\t\tsFilaDatos+="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"();";
			
			strFilaCabecera+="\r\n\r\n\t\tElement element"+GetNombreColumnaClaseFkDescripcionC(column)+" = document.createElement("+GetNombreClaseC(column.Table.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+");";
			strFilaCabecera+="\r\n\t\telement"+GetNombreColumnaClaseFkDescripcionC(column)+".appendChild(document.createTextNode("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"()));";
			strFilaCabecera+="\r\n\t\telement.appendChild(element"+GetNombreColumnaClaseFkDescripcionC(column)+");";
		}
		
		iColumna++;
	}
			
	return strFilaCabecera;
}

public string GetColumnsSetRendererEditorTableModel(){		
		string strVariables="";
		string strVariable="";
		string strVariableDefinir="";
		string strVariableListener="";
		string strElse=" else ";
		string strTabsBase="\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		string strWidthColumn="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		String strSufijoListenerTotalizar="";
		String sParametro="";
		bool existeRender=false;
		String strSwingWidthControlExtra ="";//GetAnchoColumnSwingExtraC(SWING_WIDTH_CONTROL,null);

		foreach(ColumnSchema column in TablaBase.Columns) {			
			strSwingWidthControlExtra ="";
			
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strPrefijoTipo =  GetTipoColumnaClaseC(column);
			strSufijoListenerTotalizar="";			
			sParametro="";
			strVariable="";			
			strElse="";
			existeRender=false;
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			//IF VISIBILIDAD
			strVariableDefinir="\r\n\r\n\r\n"+strTabsBase+"tableColumn=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+","+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+"));";			
			strVariableDefinir+="\r\n\r\n\t\tif(this."+GetNombreVisibilidadControlVariablesSwingC(column,"","",false)+") {";
			
			//OJO
			//ERROR CUANDO HABILITO ESTO
			//existeRender=true; ACTUALIZA RENDER TOTALES
			
			if(column.Name!=strId) {
				if(!column.IsForeignKeyMember) {
					strWidthColumn=GetAnchoColumnFromPropertiesC(column);//"Constantes.ISWING_ANCHO_COLUMNA";
					
					if(ValidacionCampoTotalizarC(column)) {
						//LISTENER VALOR SE REALIZA EN DEFINICION DEL MODEL
						//strSufijoListenerTotalizar="Valor";
					}
			
					strVariableListener="\r\n"+strTabsBase+"tableColumn.addPropertyChangeListener(new Property"+strSufijoListenerTotalizar+"ChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());";
					
					if(ValidacionCampoTotalizarC(column)) {
						//existeRender=true;
					}
					
					if(EsStringColumnC(column)) {
						existeRender=true;
						strSwingWidthControlExtra =GetAnchoColumnSwingExtraC(SWING_WIDTH_CONTROL,column);
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new LabelRenderer(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
						
					} else if(EsDateColumn(column)) {
						existeRender=true;
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new DateRenderer(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new DateEditorRenderer());";
					
					} else if(EsBitColumn(column)) {
						existeRender=true;
						
						if(GetWebNombreTituloColumnFromPropertiesC(column).Length<=4) {
							strWidthColumn="50";
						}
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new BooleanRenderer(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new BooleanEditorRenderer());";
					
					} else if(EsTipoColumnaNumeroParaClaseC(column)) {
						existeRender=true;
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new TextFieldRenderer(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
						//strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new BooleanEditorRenderer());";							
					}
					
					strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 				
					strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+strSwingWidthControlExtra+";";
					
				} else {
					strWidthColumn=GetAnchoColumnFromPropertiesC(column);//"Constantes.ISWING_ANCHO_COLUMNA";
					
					//ES LA COLUMNA DESCRIPCION DEL FOREIGN KEY POR ESO EL TIPO ES STRING
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column) 
						|| EsColumnaVariableModuloGlobalC(column)
						|| GetNoInsertEditColumnFromPropertiesC(column)) {
						//sTabColumnaOculta="\t";
						//sIfColumnaOculta="\r\n\t"+sTabColumnaOculta+"if(Constantes.ISDEVELOPING) {\r\n";
						//sIfColumnaOcultaFin="\t"+sTabColumnaOculta+"}";	
					}	
					
					strSufijoListenerTotalizar="";
					strVariableListener="\r\n"+strTabsBase+"tableColumn.addProperty"+strSufijoListenerTotalizar+"ChangeListener(new PropertyChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());";
			
					//COMENTAR Y DESCOMENTAR PARA HABILITAR O NO TieneColumnaComboTablaNormalC(column)
					if(!(ConSwingCombosTabla && TieneColumnaComboTablaNormalC(column,false,false))) {
						Trace.WriteLine(column.Name+"-"+ConSwingCombosTabla);
					} else {
						//Trace.WriteLine(column.Name+"-"+ConSwingCombosTabla);
						
						existeRender=true;
						
						if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
							sParametro="this.jComboBox"+GetNombreCompletoColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla";	
						} else {
							sParametro="this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey";
						}
						
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new "+GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell("+sParametro+",this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
						strVariable+="\r\n"+strTabsBase+"tableColumn.setCellEditor(new "+GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell("+sParametro+",this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
					}
					
					strSwingWidthControlExtra =GetAnchoColumnSwingExtraC(SWING_WIDTH_CONTROL,column);
					
					strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 	 
					strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+strSwingWidthControlExtra+");"; 				
					strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+strSwingWidthControlExtra+";";
				}
			} else {
				existeRender=true;
				
				strWidthColumn="50";
				//strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.addPropertyChangeListener(new PropertyChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());"; 
				strVariable+="\r\n"+strTabsBase+"tableColumn.setCellRenderer(new TextFieldRenderer(this."+GetNombreBorderControlVariablesSwingC(column,"","",false)+"));";
				
				strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+");"; 	 
				strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+");"; 	 
				strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+");"; 				
				strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+";";
			}
			
			strVariable=strVariableDefinir+strVariable;
				
			if(existeRender) {
				strVariable+=strVariableListener;
				//strVariable=strVariableDefinir+strVariableListener+strVariable;								
			}
			
			//FIN IF VISIBILIDAD
			strVariable+="\r\n\t\t} else {";
			//strVariable+="\r\n"+/*"\r\n\r\n\r\n"+*/strTabsBase+"tableColumn=this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+","+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+"));";
			
			strVariable+="\r\n"+strTabsBase+"Funciones2.setTableColumnOcultar(tableColumn);";
			/*
			strWidthColumn="0";			
			strVariable+="\r\n\r\n"+strTabsBase+"tableColumn.setPreferredWidth("+strWidthColumn+");"; 	 
			strVariable+="\r\n"+strTabsBase+"tableColumn.setWidth("+strWidthColumn+");"; 	 
			strVariable+="\r\n"+strTabsBase+"tableColumn.setMinWidth("+strWidthColumn+");"; 				
			strVariable+="\r\n\r\n"+strTabsBase+"this.iWidthTableDefinicion+="+strWidthColumn+";";
			*/
			
			strVariable+="\r\n\t\t}";
			
			strVariables+=strVariable;
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsSetFuncionTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		string strProcesarTotales="";
		string strDescripcionFk="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strPrefijoTipo =  GetTipoColumnaClaseC(column);
			
			strElse="";
			strProcesarTotales="";
			strDescripcionFk="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			if(ValidacionCampoTotalizarC(column)) {
				strProcesarTotales="esCampoValor=true;";
			}
			
			
			if(column.IsForeignKeyMember) {
				//TableSchema tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);	
				
				strDescripcionFk=GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strDescripcion+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"BeanSwingJInternalFrame.getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyDescripcion((Long)value));";
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"try {"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(("+strPrefijoTipo+") value);"+strDescripcionFk+strProcesarTotales+"} catch (Exception e) {e.printStackTrace();} break;";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsGetFuncionTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			//string strValor =  "true";
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"return this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s.get(rowIndex).get"+GetNombreCompletoColumnaClaseC(column)+"();";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsEsEditableTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strValor =  "true";
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"return "+strValor+";";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsTipoTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="";//"\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		int iPosicion=iPosicionInicialTablaModel;
		
		foreach(ColumnSchema column in TablaBase.Columns) {						
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			string strPrefijoTipo =  GetTipoColumnaClaseC(column);
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+"case "+iPosicion+": "+/*strTabsBase+*/"return "+strPrefijoTipo+".class;";
			
			if(esPrimero) {
				esPrimero=false;
			}
			
			iPosicion++;
		}
		
		
		strElse+="";
		strCommentEjb+="";
		
		return strVariables;
}

public string GetColumnsNameTableModel(){		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t\t\t\t\t\t\t";
		//string strSufijoVariables="";
		bool esPrimero=false;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		
		strVariables+="\r\n"+strTabsBase+"Constantes2.S_SELECCIONAR";
		
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsColumnaOcultaTabla(column)){//column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow)) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=",";	
			}
			
			strVariables+="\r\n"+strTabsBase+strElse+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper();
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
				
		strCommentEjb+="";
		
		return strVariables;
	}
	
public  String SetGetVariablesForeignKeys() {
	String sVariablesArray="";
	String strComentarioParaEjb="";strComentarioParaEjb+="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;

	//bool blnVerificarDeshabilitarFk=false;
	String strVerificarDeshabilitarFk="";strVerificarDeshabilitarFk+="";
	//bool blnNoLoadFk=false;
	String strComentarioNoLoadFk="";strComentarioNoLoadFk+="";
	
	if(!blnNoStandardTableFromProperties) {			
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(column.IsForeignKeyMember) {
				strComentarioNoLoadFk="";
								
				//SI FUNCIONA PERO NO SIEMPRE				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				//FUNCIONA SIEMPRE
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
		
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
				//sVariablesArray+="\r\n\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"() {";
				sVariablesArray+="\r\n\r\n\t\t\tif(!finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +".equals(\"NONE\")) {";
				sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strForeignKey+".get"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"();";//"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">();";
				sVariablesArray+="\r\n\t\t\t}";
				//sVariablesArray+="\r\n\t}";
				
				/*
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n";
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.setConnexion(this.connexion);\r\n";
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(true);\r\n";
				
				String strQueryStringValoresLista="sFinalQuery";
					
				sVariablesArray+="\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"s(finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +",new Pagination());\r\n";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+""+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();";			
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		//bool blnAdmiteNulos=false;
		int cont=0;
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				cont++;
				//blnAdmiteNulos=false;										
		}
	}
	
	return sVariablesArray;
}

public string GetTiposAcciones() {
	String sTipo="false";
	
	if(TieneCampoTotalizarC(TablaBase)) {
		sTipo="true";
	}
	
	return sTipo;
}

public string GetPermiteImportar() {
	String sTipo="false";
	
	if(blnPermiteImportar) {
		sTipo="true";
	}
	
	return sTipo;
}


public string GetColumnsSeleccionarTodos()
	{		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(!EsBitColumn(column)) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=" else ";	
			}
			
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
			strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
			strVariables+="\r\n\t\t"+strTabsBase+strCommentEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetNombreColumnaClaseC(column)+"(this.isSeleccionarTodos);";
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+"}";
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetColumnsDescripcionReporteGroupGenerico()
	{		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";strCommentEjb+="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(ValidacionCampoTotalizarC(column) || column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=" else ";	
			}
			
			String strToString="";
			
			if(!column.IsForeignKeyMember && !EsBitColumn(column) && !EsDateColumn(column)) {//+GetNombreColumnaClaseC(column)
			
				if(!EsStringColumnC(column)) {
					strToString=".toString()";
				}
				
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetNombreColumnaClaseC(column)+"()"+strToString+");";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			
			} else if(column.IsForeignKeyMember){
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strDescripcion+"());";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			
			} else if(EsBitColumn(column)){
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetNombreColumnaClaseC(column)+"()));";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			
			} else if(EsDateColumn(column)){
				strVariables+="\r\n\t"+strTabsBase+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";
				strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
				strVariables+="\r\n\t\t"+strTabsBase+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetNombreColumnaClaseC(column)+"()));";				
				strVariables+="\r\n\t"+strTabsBase+"}";
			}
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public string GetColumnsSetValorGeneralTodos()
	{		
		string strVariables="";
		string strElse=" else ";
		string strTabsBase="\t\t\t\t\t";
		string strSufijoVariables="";strSufijoVariables+="";
		bool esPrimero=true;
		string strCommentEjb="";
		
		if(ConEjb){
			strCommentEjb="//";
		}
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsBitColumn(column) || column.IsForeignKeyMember || column.Name==strId ||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow) {
				continue;	
			}
			
			strElse="";
			
			if(!esPrimero) {
				 strElse=" else ";	
			}						
			
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+strElse+"if(sTipoSeleccionar.equals("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.LABEL_"+column.Name.ToUpper()+")) {";//sValorCampoGeneral,jTextFieldValorCampoGeneral"+GetNombreClaseC(TablaBase.ToString())+".getText()
			strVariables+="\r\n\t\t"+strTabsBase+"existe=true;";
			strVariables+="\r\n\t\t"+strTabsBase+strCommentEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetNombreColumnaClaseC(column)+"("+GetTipoColumnaParse(column,"this.sValorCampoGeneral")+");";
			strVariables+="\r\n\t"+strTabsBase+strCommentEjb+"}";
			
			if(esPrimero) {
				esPrimero=false;
			}
		}
		
		return strVariables;
	}
	
public String GetReporteClasesRelacionadas(TableSchema TablaBase,String strTab) {
	String strTablaClaseRelacionada=string.Empty;
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(TablaBase);
	//TableSchema tablaRelacionadaObjetivo;
							
	//foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
	foreach(TableSchema tablaRelacionadaObjetivo in tablasRelacionadasEncontradas) {									
		if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo)) {
			continue;
		}
					
		//strTablaClaseRelacionada+="\r\n\t\t"+strTab+"classes.add(new Classe("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+ ".class));";
		strTablaClaseRelacionada+="\r\n\r\n\t\t\tInputStream reportFile"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" = AuxiliarReportes.class.getResourceAsStream(\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"DetalleRelacionesDesign.jasper\");";			
		strTablaClaseRelacionada+="\r\n\t\t\tparameters.put(\"subreport_"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"\", reportFile"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+");";
	}
				
	return strTablaClaseRelacionada; 
}
			
public String GetListasParametroTablesRelacionadas(TableSchema table,bool esParaLogic) {
	String sTablaClaseRelacionada=String.Empty;
	
	//ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
	
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strNombreAdicional="";
	
	/*
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	*/
	
	/*
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		strTipoLista="this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.";
		
		if(!esParaLogic) {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"s";
		} else {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"Logic.get"+GetNombreClaseC(tableSchema.ToString())+"s()";
		}
		
		sTablaClaseRelacionada+=","+strTipoLista+ strTipoObjetos;					
	}
	*/
	
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {								
		strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		
		strTipoLista="";
		
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
		
			//strTipoLista=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" ";	
			
		
			if(!esParaLogic) {
				strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"";
			} else {
				strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()";
			}
		
			sTablaClaseRelacionada+=","+strTipoLista+ strTipoObjetos;
			
		
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {
			strTipoLista="this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"BeanSwingJInternalFrame.";
		
			//strTipoLista=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> ";	
						
			//sTablaClaseRelacionada+=","+strTipoLista+ GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";		
			if(!esParaLogic) {
				strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s";
			} else {
				strTipoObjetos=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s()";
			}
		
			sTablaClaseRelacionada+=","+strTipoLista+ strTipoObjetos;	
		}
	}
	
	return sTablaClaseRelacionada;
}

public String GetInicializarListasEliminadosParametroTablesRelacionadas(TableSchema table,bool esParaLogic,bool ConEjb) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strTipoComment="";
	
	if(ConEjb && esParaLogic) {
		strTipoComment="//";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		strTipoLista=strTipoComment+"this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.";
				
		if(!esParaLogic) {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"s= new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(tableSchema.ToString())+">();";
		} else {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"Logic.set"+GetNombreClaseC(tableSchema.ToString())+"s(new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(tableSchema.ToString())+">());";
		}		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t\t"+strTipoLista+ strTipoObjetos;		
		
		
				
	}
	
	return sTablaClaseRelacionada;
}

public String GetActualizarListasEliminadosParametroTablesRelacionadas(TableSchema table,bool esParaLogic,bool ConEjb) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false);
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strTipoComment="";
	
	if(ConEjb && esParaLogic) {
		strTipoComment="//";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		strTipoLista="this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.";
				
		if(!esParaLogic) {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"s.addAll("+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		} else {
			strTipoObjetos=GetNombreClaseObjetoC(tableSchema.ToString())+"Logic.get"+GetNombreClaseC(tableSchema.ToString())+"s().addAll("+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		}		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t\t"+strTipoComment+strTipoLista+ strTipoObjetos;		
		
		
				
	}
	
	return sTablaClaseRelacionada;
}

public String GetEliminarFilaTotalTablesRelacionadas(TableSchema table,bool esParaLogic,bool ConEjb) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false);
	
	//String strSelectedRow="intSelectedRow";
	String strTipoLista="";
	String strTipoObjetos="";
	String strTipoComment="";
	
	if(ConEjb && esParaLogic) {
		strTipoComment="//";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		strTipoLista="this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame";
				
		if(!esParaLogic) {
			strTipoObjetos=".quitarFilaTotales();";//+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		} else {
			strTipoObjetos=".quitarFilaTotales();";//+GetNombreClaseC(tableSchema.ToString())+"s().addAll("+strTipoLista+GetNombreClaseObjetoC(tableSchema.ToString())+"sEliminados);";
		}		
		
		sTablaClaseRelacionada+="\r\n\t\t\t\t\t\t\t"+strTipoComment+"if("+strTipoLista+"!=null && "+strTipoLista+".conTotales) {"+strTipoLista+ strTipoObjetos+"}";		
		
		
				
	}
	
	return sTablaClaseRelacionada;
}

public String GetCargarTablesRelacionadas(TableSchema table,bool esParaNuevo) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table,false);
	
	String strSelectedRow="intSelectedRow";
	
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		sTablaClaseRelacionada+="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame!=null && this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado()) {this.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";
	}
	
	return sTablaClaseRelacionada;
}

public String GetEliminarLiberarTablesRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	//String strSelectedRow="intSelectedRow";
	
	/*
	if(esParaNuevo) {
		strSelectedRow="-1";
	}
	*/
	
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		sTablaClaseRelacionada+="\r\n\r\n\r\n\r\n\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame!=null) {";
		//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";
		sTablaClaseRelacionada+="\r\n\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.setVisible(false);";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.dispose();";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame=null;";
		sTablaClaseRelacionada+="\r\n\t\t}";
		
		sTablaClaseRelacionada+="\r\n\r\n\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup!=null) {";
		//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.jButton"+GetNombreClaseC(tableSchema.ToString())+"ActionPerformed(null,"+strSelectedRow+",false,true);}";
		sTablaClaseRelacionada+="\r\n\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.setVisible(false);";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup.dispose();";
		sTablaClaseRelacionada+="\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFramePopup=null;";
		sTablaClaseRelacionada+="\r\n\t\t}";
	}
	
	return sTablaClaseRelacionada;
}

public String GetHabilitarDeshabilitarTablesRelacionadas(TableSchema table,bool esHabilitar) {
	String sTablaClaseRelacionada=String.Empty;
	
	ArrayList tablasRelacionadasEncontradas=GetTablasRelacionadasFinal(table);
	
	String strSelectedRow="true";
	
	if(!esHabilitar) {
		strSelectedRow="false";
	}
	//this.perfilBeanSwingJInternalFrame.getContentPane().setVisible(false);
	foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
		sTablaClaseRelacionada+="\r\n\r\n\t\t\tif(this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame!=null) {";
		sTablaClaseRelacionada+="\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchema.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado("+strSelectedRow+");";
		sTablaClaseRelacionada+="\r\n\t\t\t\t//this."+GetNombreClaseObjetoC(tableSchema.ToString())+"BeanSwingJInternalFrame.getContentPane().setVisible("+strSelectedRow+");";		
		sTablaClaseRelacionada+="\r\n\t\t\t}";
	}
	
	return sTablaClaseRelacionada;
}

	public string GetInvalidoParameterClase(ColumnSchema column,String strSufijo,bool esInicializar)
	{
		String strMostrar="";
		
		if((column.Name==strId /*&& !column.IsForeignKeyMember*/)||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)	{
			//Trace.WriteLine(column.Name);
			
			return "";
		}
		//Trace.WriteLine(column.Name);
		string strValidacion="";strValidacion+="";
		
		/*
		if(ConMostrarValidaciones) {
			strValidacion=GetValidacionParameterClaseC(column,ConValidaciones);
		}
		*/
		
		string strPrefijo=String.Empty;
		string strPrefijoTabla=GetPrefijoTablaC().ToLower();
		string strPrefijoTipo =GetPrefijoTipoC(column);
	
		strPrefijo=strPrefijoTabla+strPrefijoTipo;
		
		string strNombre = GetNombreColumnaClaseC(column);
		strPrefijo+=strNombre;
			
		string param =  GetTipoColumnaClaseC(column);
		
		String strCampo=GetNombreClase(TablaBase.ToString())+"ConstantesFunciones."+column.Name.ToUpper();
		String strLabelTitulo=GetNombreTituloControlVariablesSwingC(column,"","",false);
		//strCampo="\""+strPrefijo+"\"";
		
		if(!esInicializar) {
			strMostrar="if(invalidValue.getPropertyName().equals("+strCampo+")) {";
			strMostrar+="FuncionesSwing.mostrarCampoMensajeInvalido(false,this."+strLabelTitulo+",invalidValue.getMessage());}";
		} else {
			strMostrar="FuncionesSwing.mostrarCampoMensajeInvalido(true,this."+strLabelTitulo+",\"\");";
		}
		
		return strMostrar;
	}
	
public string GetControlesIndicesBusquedaVariables(TableSchema tablaBase,ColumnSchema columnSchema,String sNombreCompletoVariable) {
	string strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
		
	ArrayList arrCombosNamesFkBusquedas=GetCombosIndicesNamesFkBusquedasTableC(tablaBase,columnSchema);//GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	String sIndice="";
	String sCombo="";
	String strCommentWeb="";
	
	if(!EsSwing) {
		strCommentWeb="//";
	}
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		string[] arrIndiceCombo=strCombosNamesFkBusquedas.Split(',');
		
		sIndice=arrIndiceCombo[0];
		sCombo=arrIndiceCombo[1];
		
		strVariables+="\r\n\t\t\t\tif(sFormularioTipoBusqueda.equals(\""+sIndice+"\") || sFormularioTipoBusqueda.equals(\"Todos\")){";
		strVariables+="\r\n\t\t\t\t\t\t"+strCommentWeb+/*strCombosNamesFkBusquedas*/sCombo+".setSelectedItem("+sNombreCompletoVariable/*GetNombreClaseObjeto(tableSchemaFK.ToString())+"Temp"*/+");";
		strVariables+="\r\n\t\t\t\t}";
		//strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		//strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		//strVariables+="\r\n\t\t}";
	
	}			
	
	
	return strVariables;
}

public string CallFuncionBusquedaControlesVariables(TableSchema tablaBase,ColumnSchema columnSchema) {
	string strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
		
		
	strVariables+="\r\n\t\t\tif(sType.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"\")) {";	
	strVariables+="\r\n\t\t\t\tthis.setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(columnSchema)+" ("+strId+");";
	strVariables+="\r\n\t\t\t}";
	/*
	ArrayList arrCombosNamesFkBusquedas=GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		//strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		//strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		//strVariables+="\r\n\t\t}";
	
	}
	*/
	
	//strVariables+="\r\n\r\n\t};";
	
	
	return strVariables;
}

public string GetSetFuncionBusquedaControlesVariables(TableSchema tablaBase,ColumnSchema columnSchema) {
	string strVariables="";
	
	TableSchema tableSchemaFK=GetTableSchemaFromColumnForeignKey(columnSchema);	
	
	strVariables+="\r\n\r\n\tpublic void setCombosCodigoDesdeBusqueda"+GetNombreColumnaClaseC(columnSchema)+" (Long "+strId+") throws Exception {";
	strVariables+="\r\n\t\tthis.setActual"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)/*GetNombreClase(tableSchemaFK.ToString())*/+strForeignKey+"("+strId+",true,\"Todos\");";	
	
	ArrayList arrCombosNamesFkBusquedas=GetCombosNamesFkBusquedasTableC(tablaBase,columnSchema);
	
	foreach(string strCombosNamesFkBusquedas in arrCombosNamesFkBusquedas) {
		//strVariables+="\r\n\t\tif(document.getElementById(\""+strCombosNamesFkBusquedas+"\")!=null) {";
		//strVariables+="\r\n\t\t\tdocument.getElementById(\""+strCombosNamesFkBusquedas+"\").value="+GetNombreColumnaClaseJavaScriptC(columnSchema)+";";	
		//strVariables+="\r\n\t\t}";
	
	}
	
	strVariables+="\r\n\r\n\t};";
	
	
	return strVariables;
}

public string SetSeguridadSeleccionarActualizarPrepararCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				/*
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isIngreso() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isModificacion() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isConsulta() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				*/
				//NO FUNCIONA READONLY PARA INSERT UPDATE TOCA OCULTAR TODO
				strVariables+="\r\n\r\n\t\t\tif(!isPermisoTodo"+strSufijoVariables+"&&!isPermisoActualizarOriginal"+strSufijoVariables+") {";								
				strVariables+="\r\n\t\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";
				strVariables+="\r\n\t\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:none\";";
				strVariables+="\r\n\t\t\t} else {";								
				strVariables+="\r\n\t\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=true;";
				strVariables+="\r\n\t\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";
				strVariables+="\r\n\t\t\t}";

			}
		}
		
		return strVariables;
	}
	
public string SetSeguridadNuevoPrepararCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				/*
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isIngreso() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isModificacion() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isConsulta() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				*/
				
				strVariables+="\r\n\r\n\t\tif(!isPermisoTodo"+strSufijoVariables+"&&!isPermisoNuevo"+strSufijoVariables+") {";								
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:none\";";
				strVariables+="\r\n\t\t} else {";								
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=true;";
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";
				strVariables+="\r\n\t\t}";
			}
		}
		
		return strVariables;
	}
	
public string SetSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		//System.Windows.Forms.MessageBox.Show("here");
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				//System.Windows.Forms.MessageBox.Show(column.Name);
				
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);		
				strVariables+="\r\n\r\n\t\t\tPerfilCampo perfilcampo"+strSufijoVariables+"=new PerfilCampo();";
				strVariables+="\r\n\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"perfilcampo"+strSufijoVariables+"=SistemaConstantesFuncionesAdditional.getPerfilCampoEnPermisosCamposPaginaWeb("+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones."+column.Name.ToUpper()+",perfilCampos);";
				
				strVariables+="\r\n\t\t\tisPermisoTodo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoNuevo"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isIngreso() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				strVariables+="\r\n\t\t\tisPermisoActualizarOriginal"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isModificacion() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";				
				strVariables+="\r\n\t\t\tisPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\t\t\tisPermisoConsulta"+strSufijoVariables+"=perfilcampo"+strSufijoVariables+".get"+strField_+"isConsulta() || perfilcampo"+strSufijoVariables+".get"+strField_+"isTodo();";
				
				strVariables+="\r\n\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:table-row\";";								
				strVariables+="\r\n\r\n\t\t\tif(!isPermisoConsulta"+strSufijoVariables+") {";								
				strVariables+="\r\n\t\t\t\tsPermisoCssAuxiliar"+strSufijoVariables+"=\"display:none\";\r\n\t\t\t}";								
				
			}
		}
		
		return strVariables;
	}
	
	public string GetSeguridadCampoVariablesClase(TableSchema tableSchema)
	{		
		string strVariables="";
		string strSufijoVariables="";
		
		foreach(ColumnSchema column in tableSchema.Columns) {
			
			if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
			{
				continue;
			}
						
			if(GetConSeguridadColumnFromPropertiesC(column)) {
				strSufijoVariables=GetNombreClase(tableSchema.ToString())+ GetNombreColumnaClaseC(column);															
				strVariables+="\r\n\r\n\r\n\tpublic Boolean isPermisoTodo"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic Boolean isPermisoNuevo"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic Boolean isPermisoActualizarOriginal"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\tpublic Boolean isPermisoNuevoActualizar"+strSufijoVariables+"=false;";				
				strVariables+="\r\n\tpublic Boolean isPermisoConsulta"+strSufijoVariables+"=false;";
				strVariables+="\r\n\tpublic String sPermisoCssAuxiliar"+strSufijoVariables+"=\"\";";
				
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoTodo"+strSufijoVariables+"() {\r\n\t\treturn isPermisoTodo"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoTodo"+strSufijoVariables+"(Boolean isPermisoTodo"+strSufijoVariables+") {\r\n\t\tthis.isPermisoTodo"+strSufijoVariables+" = isPermisoTodo"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoNuevo"+strSufijoVariables+"() {\r\n\t\treturn isPermisoNuevo"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoNuevo"+strSufijoVariables+"(Boolean isPermisoNuevo"+strSufijoVariables+") {\r\n\t\tthis.isPermisoNuevo"+strSufijoVariables+" = isPermisoNuevo"+strSufijoVariables+";\r\n\t}";
								
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoActualizarOriginal"+strSufijoVariables+"() {\r\n\t\treturn isPermisoActualizarOriginal"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoActualizarOriginal"+strSufijoVariables+"(Boolean isPermisoActualizarOriginal"+strSufijoVariables+") {\r\n\t\tthis.isPermisoActualizarOriginal"+strSufijoVariables+" = isPermisoActualizarOriginal"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoNuevoActualizar"+strSufijoVariables+"() {\r\n\t\treturn isPermisoNuevoActualizar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoNuevoActualizar"+strSufijoVariables+"(Boolean isPermisoNuevoActualizar"+strSufijoVariables+") {\r\n\t\tthis.isPermisoNuevoActualizar"+strSufijoVariables+" = isPermisoNuevoActualizar"+strSufijoVariables+";\r\n\t}";
			
				strVariables+="\r\n\r\n\tpublic Boolean getIsPermisoConsulta"+strSufijoVariables+"() {\r\n\t\treturn isPermisoConsulta"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setIsPermisoConsulta"+strSufijoVariables+"(Boolean isPermisoConsulta"+strSufijoVariables+") {\r\n\t\tthis.isPermisoConsulta"+strSufijoVariables+" = isPermisoConsulta"+strSufijoVariables+";\r\n\t}";
				
				strVariables+="\r\n\r\n\tpublic String getsPermisoCssAuxiliar"+strSufijoVariables+"() {\r\n\t\treturn sPermisoCssAuxiliar"+strSufijoVariables+";\r\n\t}";		
				strVariables+="\r\n\r\n\tpublic void setsPermisoCssAuxiliar"+strSufijoVariables+"(String sPermisoCssAuxiliar"+strSufijoVariables+") {\r\n\t\tthis.sPermisoCssAuxiliar"+strSufijoVariables+" = sPermisoCssAuxiliar"+strSufijoVariables+";\r\n\t}";
			}
		}
		
		return strVariables;
	}
	
public String GetPackageClasesTableFromPropertiesC() 
{
	String sTablaClasesEntityExplicitReturn=String.Empty;
	
	String sTablaClasesEntityExplicit=String.Empty;										
			
	sTablaClasesEntityExplicit=GetPackageClasesTableFromPropertiesC(TablaBase);
	
	
	String [] arrClasesEntityExplicit=sTablaClasesEntityExplicit.Split(',');
	
	foreach(String strClasesEntityExplicit in arrClasesEntityExplicit) {
		if(!strClasesEntityExplicit.Equals("")) {
			sTablaClasesEntityExplicitReturn+="import "+Empresa+"."+Package+"."+Module+strPackageBusiness+"."+strPackageEntities+"."+strClasesEntityExplicit+";\r\n";
		}
	}
	
	return sTablaClasesEntityExplicitReturn; 
}
		
/*
public  String GetNoStandardFuncionesBuscarForeignKeys()
{
	String sTablaClaseRelacionada="";;
	
	
	if(blnNoStandardTableFromProperties) {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
				
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//INICIALIZA TABLA
			//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
					
			//sTablaClaseRelacionada+="\r\n\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";							
			//sTablaClaseRelacionada+="\r\n\tLong lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";	
			sTablaClaseRelacionada+="\r\n\tpublic void setVariables"+strFK+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"ParaBuscar"+GetNombreClaseC(TablaBase.ToString())+"s () {";
							
			ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
			for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
				sTablaClaseRelacionada+=GetParameterClaseC(columnSchemaCollectionFK[i],false,false,GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual") ;					
			} 	
			
			sTablaClaseRelacionada+="\r\n\t}";
		}
	}
			
	return sTablaClaseRelacionada;
}
*/

public String GetNoStandardSetVariablesActualSession(TableSchema tablaRelacionadaObjetivo,String strNombreAdicional) 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					
						
				}
	
			return sTablaClaseRelacionada; 
		}
		
public String GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(TableSchema tablaRelacionadaObjetivo,String strNombreAdicional) 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{	
					//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;									
					sTablaClaseRelacionada+="\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+GetNombreCompletoLowerColumnaClaseC(columnSchema)+GetNombreClaseC(TablaBase.ToString())+"Actual);";				
						
				}
	
			return sTablaClaseRelacionada; 
		}
		
public String GetNoStandardVariablesParameterPKActual() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
				foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
				{		
					sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
					//sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchema,false,true,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;
					//sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchema,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
					
				}
	
			return sTablaClaseRelacionada; 
		}

public String GetNoStandardVariablesGetSetParameterPKActual() 
{
	String sTablaClaseRelacionada=String.Empty;										
		
		foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
		{		
			//sTablaClaseRelacionada+=GetParameterClaseC(columnSchema,false,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
			sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseMethodC(columnSchema,false,true,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;
			sTablaClaseRelacionada+="\r\n\t\t"+GetParameterClaseSetMethodC(columnSchema,false,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
					
		}
	
	return sTablaClaseRelacionada; 
}

public String GetNoStandardVariablesInicializarParameterPKActual() 
		{
			String sTablaClaseRelacionada=String.Empty;										
			
			foreach(ColumnSchema columnSchema in columnSchemaCollectionPK)
			{		//INICIALIZA TABLA
					//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);

				sTablaClaseRelacionada+="\r\n\t\t\t"+GetValueDefaultParameterClaseC(columnSchema,GetNombreClaseC(TablaBase.ToString())+"Actual") ;					
				 					
			}
				
			return sTablaClaseRelacionada; 
		}
		
public  string GetSessionKeyQuery()
	{
		String strControl="";
		String strtSessionKeyQuery=GetSessionKeyQueryTableFromPropertiesC(TablaBase);
		
		if(!strtSessionKeyQuery.Equals("")) {
			strtSessionKeyQuery=strtSessionKeyQuery.ToUpper();
			strControl="\r\n\t\tString sSessionKeyQuery=\"\";";
			strControl+="\r\n\t\tsSessionKeyQuery=(String)httpSession.getAttribute(Constantes."+strtSessionKeyQuery+"+ConstantesServlet.SSESSIONACTUAL);";
			strControl+="\r\n\r\n\t\tif(sSessionKeyQuery!=null) {";
			strControl+="\r\n\t\t\tfinalQueryPaginacion=sSessionKeyQuery+finalQueryPaginacion;";
			strControl+="\r\n\t\t}";
			
			strControl+="\r\n\r\n\t\tsSessionKeyQuery=(String)httpSession.getAttribute(Constantes."+strtSessionKeyQuery+"PARAT0D0S+ConstantesServlet.SSESSIONACTUAL);";
			strControl+="\r\n\r\n\t\tif(sSessionKeyQuery!=null) {";
			strControl+="\r\n\t\t\tfinalQueryPaginacionTodos=sSessionKeyQuery+finalQueryPaginacionTodos;";
			strControl+="\r\n\t\t}";
		}
		
		return strControl;
	}
	
public bool TienePathImagenDocumento() {
	bool blnTienePathImagenDocumento=false;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(EsPathImagenDocumentoColumn(TablaBase.Columns[i])) {
			blnTienePathImagenDocumento=true;
		}
		
	}
	
	return blnTienePathImagenDocumento;
}
	
	
public String GetTimeTimestampImport() {
	String strIdName=string.Empty;
	
	bool blnTieneTime=false;
	bool blnTieneTimestamp=false;
	
	for (int i = 0; i < TablaBase.Columns.Count; i++){
		if(!blnTieneTime) {
			if(EsTimeColumn(TablaBase.Columns[i])) {
				strIdName="\r\nimport java.sql.Time;";
				blnTieneTime=true;
			}
		}
		
		if(!blnTieneTimestamp) {
			if(EsDateTimeColumn(TablaBase.Columns[i])) {
				strIdName="\r\nimport java.sql.Timestamp;";
				blnTieneTimestamp=true;
			}
		}
	}
	
	return strIdName;
				
}

public string GetClaveNavigationRuleFK() {
	String strTablaClaseRelacionada=string.Empty;
	TableSchema tableSchema=null;
	bool blnEsPrimero=true;
	String strCondicion="";
	
	foreach(ColumnSchema columnSchema in TablaBase.Columns) {	
		if(columnSchema.IsForeignKeyMember&&!columnSchema.Name.Equals(strId+TablaBase.Name)) {			
			tableSchema=GetNombreTablaRelacionadaFromColumn(columnSchema);
			
			if(blnEsPrimero) {
				strCondicion="if";
				blnEsPrimero=false;
			} else {
				strCondicion="else if";
			}
			
			strTablaClaseRelacionada+="\r\n\t\t\t"+strCondicion+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getsNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(TablaBase.ToString())+"().equals("+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.SNOMBREOPCION)) {";
			strTablaClaseRelacionada+="\r\n\t\t\t\tsClavePaginaFk=\""+GetNombreClaseObjetoC(tableSchema.ToString())+"\";";
			strTablaClaseRelacionada+="\r\n\t\t\t}";
			/*
			strTablaClaseRelacionada+="\r\n\t<navigation-case>";
			strTablaClaseRelacionada+="\r\n\t\t<from-outcome>"+GetNombreClaseObjetoC(tableSchema.ToString())+"</from-outcome>";
			strTablaClaseRelacionada+="\r\n\t\t<to-view-id>/Paginas/"+GetRelativePathNavegacionFromTableFromPropertiesC(tableSchema)+"Mantenimiento"+GetNombreClaseC(tableSchema.ToString())+".jsp</to-view-id>";
			strTablaClaseRelacionada+="\r\n\t\t<redirect/>";
			strTablaClaseRelacionada+="\r\n\t</navigation-case>";
			*/
		}
	}
	
	return  strTablaClaseRelacionada;
}

public String GetFuncionesGetTablasClasesRelacionadasForeigKeysDescription() 
		{
			String strFuncion=GetFuncionesGetTablasClasesRelacionadasForeigKeysDescriptionC(TablaBase);
			
			/*
			String strTablaClaseRelacionada=string.Empty;
			String strInitFuncion="";// void  getTR[";
			
			String strEndFuncion="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
					
			if(!blnNoStandardTableFromProperties) {										
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					
					
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
						{
						continue;
						}
							
							strInitFuncion="\r\n\t\t\t";//"\r\n\t@Transient";				
							
							strInitFuncion+="";//"\r\n\tpublic ";
						
						
							//strInitFuncion+="String get"+GetPrefijoRelacionC()+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+strDescripcion+"() {\r\n";
							//strTablaClaseRelacionada="\t\treturn this."+GetPrefijoRelacionC().ToLower()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+strDescripcion+";\r\n";
						
							strTablaClaseRelacionada=""+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+strDescripcion;
							strTablaClaseRelacionada+="("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"Descripcion"+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema))+"()));";
							
							strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion;
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()),tableSchemaForeignKey))
					{
						continue;
					}
							
					strInitFuncion="\r\n\t\t\t";//"\r\n\t@Transient";				
							
					strInitFuncion+="";//"\r\n\tpublic ";
																		
					strTablaClaseRelacionada=""+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+strDescripcion;
					strTablaClaseRelacionada+="("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion"+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+"()));";
							
					strFuncion+=strInitFuncion+	strTablaClaseRelacionada+strEndFuncion;							
				}
			}
			*/
			
			return strFuncion; 
		}
		
public static String getFrameworkDomain() {
	return strFrameworkDomain;
}

	public  string GetPaneBusquedas()
	{
		String strControl="";
		
		if(GetExisteBusquedasTablaC(TablaBase)) {
			strControl="this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString());
		} else {
			strControl="null";
		}
		
		return strControl;
	}
	
	public  string SetVariablesHabilitarDeshabilitarSwing()
	{
		String strControl="";
		String strComment="";
		
		foreach(ColumnSchema columnSchema in TablaBase.Columns) {
			//NO FOREIGN, LOS FOREIGN SE LO PROCESA CON NO STANDARD
			if(!columnSchema.IsForeignKeyMember) {
				strComment="";
				
				if( GetNoInsertEditColumnFromPropertiesC(columnSchema)
					||   GetReadOnlyColumnFromPropertiesC(columnSchema)
					||   GetNoEditColumnFromPropertiesC(columnSchema)){
					strComment="//";
				}
				
				strControl+=strComment+SetVariablesHabilitarDeshabilitarSwing(columnSchema);
			}
		}	
		
		return strControl;
	}

public  string SetVariablesDefaultSwing()
	{
		String strControl="";
		String strComment="";
		
		foreach(ColumnSchema columnSchema in TablaBase.Columns) {
			//NO FOREIGN, LOS FOREIGN SE LO PROCESA CON NO STANDARD
			if(!columnSchema.IsForeignKeyMember) {
				strComment="";
				
				if( GetNoInsertEditColumnFromPropertiesC(columnSchema)
					||   GetReadOnlyColumnFromPropertiesC(columnSchema)
					||   GetNoEditColumnFromPropertiesC(columnSchema)){
					continue;
					//strComment="//";
				}
				
				if(columnSchema.DataType==DbType.Date||columnSchema.DataType==DbType.DateTime) {
					strControl+=strComment+SetVariablesDefaultSwing(columnSchema);
				}
			}
		}	
		
		return strControl;
	}
	
	public  string SetVariablesDefaultSwing(ColumnSchema column) {
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);
	
	String strControl="";
	String strType="";
		strType+="";
	String strName="";strName+="";
	
	String strObjectFace="";
	String strValueFace="";
		strValueFace+="";
	String strPrefijoCampo="";
	
	
	strObjectFace=GetNombreClaseObjetoC(column.Table.ToString())+strPrefijoJSFFaces;
	strPrefijoCampo=GetPrefijoTablaC().ToLower();
	
	string strFieldColumnaclase=GetPrefijoTablaC().ToLower()+GetPrefijoTipoC(column)+strColumna;
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
			return string.Empty;
	}
		
	if(column.Name.Equals(strId)) {
		return string.Empty;		
		
	}
	if(column.Name.Equals(strVersionRow)) {
		return string.Empty;
	} else {
		if(!column.IsForeignKeyMember) {				
			if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength) {
				/*
				String strMaxLength="";
					strMaxLength+="";
				String strRows="";
				strRows+="";
				int numRows=0;
				numRows+=0;
				int numCols=0;
				numCols+=0;
				
				strName=" name=\""+GetNameControlHtml(column)+"\"";
				
				if(column.Size<51) {					
					strControl+="\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				} else if(column.Size<200) {
					strControl+="\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				} else {
					strControl+="\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				}
				*/
			} else if(column.DataType==DbType.Boolean) {
				//strControl+="\tthis.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n\r\n";
			} else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64) {
				//strControl+="\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
			} else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime) {
				//strControl+="\t\tthis.jFormattedTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setText(Funciones.getStringMySqlCurrentDate());\r\n";
			}
		} else {
			//strName=" id=\""+GetNameControlHtml(column)+"\"";
			//strControl+="\tthis.jComboBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";			
		}
	}
	
	return strControl;
}

	public  string SetVariablesHabilitarDeshabilitarSwingForeigKeys()
	{
		String strControl="";
		String strComment="";
		
		if(!blnNoStandardTableFromProperties) {	
			foreach(ColumnSchema columnSchema in TablaBase.Columns) {
				strComment="";
				if(EsColumnaVariableGlobalDataBaseFromPropertiesC(columnSchema) 
					|| EsColumnaVariableModuloGlobalC(columnSchema)
					|| GetNoInsertEditColumnFromPropertiesC(columnSchema)
					||   GetReadOnlyColumnFromPropertiesC(columnSchema)
					||   GetNoEditColumnFromPropertiesC(columnSchema)
					/*|| GetEsReporteParametroFromPropertiesC(columnSchema)*/){
					strComment="//";
				}
									
				//NO FOREIGN, LOS FOREIGN SE LO PROCESA CON NO STANDARD
				if(columnSchema.IsForeignKeyMember) {
					strControl+=strComment+SetVariablesHabilitarDeshabilitarSwing(columnSchema);
				}
			}	
		} else {
			ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
			foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				//strName=" id=\""+GetNameControlHtml(column)+"\"";
				strControl+="\tthis.jComboBox"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+".setEnabled(isHabilitar);\r\n";									
			}
		}
		
		return strControl;
	}
	
public  string SetVariablesHabilitarDeshabilitarSwing(ColumnSchema column)
	{
	
	String strTipo=GetTipoColumnaClaseC(column);	
	String strPrefijo=" "+GetPrefijoTipoC(column);	
	String strColumna=GetNombreColumnaClaseC(column);
	
	String strControl="";
	String strType="";
		strType+="";
	String strName="";
	
	String strObjectFace="";
	String strValueFace="";
		strValueFace+="";
	String strPrefijoCampo="";
	
	
	strObjectFace=GetNombreClaseObjetoC(column.Table.ToString())+strPrefijoJSFFaces;
	strPrefijoCampo=GetPrefijoTablaC().ToLower();
	
	string strFieldColumnaclase=GetPrefijoTablaC().ToLower()+GetPrefijoTipoC(column)+strColumna;
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return string.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return string.Empty;		
		
	}
	if(column.Name.Equals(strVersionRow))
	{
		return string.Empty;
	}
	else
	{
		if(!column.IsForeignKeyMember)
		{
		
		
			if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
			String strMaxLength="";
				strMaxLength+="";
			String strRows="";
			strRows+="";
			int numRows=0;
			numRows+=0;
			int numCols=0;
			numCols+=0;
			
			strName=" name=\""+GetNameControlHtml(column)+"\"";
			
				if(column.Size<51)
				{					
					strControl+="\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				}
				else if(column.Size<200)
				{
					strControl+="\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				}
				else
				{
					strControl+="\tthis.jTextArea"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
				}
			}
			
			else if(column.DataType==DbType.Boolean)
			{
				strControl+="\tthis.jCheckBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n\r\n";
			}
			else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64)
			{
				strControl+="\tthis.jTextField"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
			}
			else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
			{	//jFormattedTextField
				strControl+="\tthis.jDateChooser"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";
			}
		}
		else
		{

			strName=" id=\""+GetNameControlHtml(column)+"\"";
			strControl+="\tthis.jComboBox"+strColumna+GetNombreClaseC(column.Table.ToString())+".setEnabled(isHabilitar);\r\n";			
		}
	}
	
	return strControl;
}


public String GetTraerIndicesVariablesSessionTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					if(EsSwing) {
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						sInitFuncion+="\r\n\t\t\t else if(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\r\n\t\t\t\tthis.set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"());";
							sInitFuncion+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+");";
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\r\n\t\t\t\tthis.set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"());";
								sInitFuncion+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+");";
							}
							/*
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							*/
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+="";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\r\n\t\tthis.set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"());"; 
								sInitFuncion+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"("+GetDefaultValueColumna(memberColumnSchema.Column)+")";
								
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								
							}
							else
							{
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								break;
							}
						}
						count++;
					}
					//sInitFuncion+="\r\n\tif(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						sInitFuncion+="\r\n\r\n\t\t\t}";			
					}
				} else {
					continue;	
				}
			}
			
								
			return sInitFuncion; 
		}
		

public String GetGuardarIndicesVariablesSessionTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(EsSwing) {
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						//Trace.WriteLine(indexSchema.Name);
						sInitFuncion+="\r\n\t\telse if(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"(this.get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"());\t"; 
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+/*indexSchema.Name+*/"(this.get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"());\t"; 
							}
							/*
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							*/
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+="";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\r\n\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+/*indexSchema.Name+*/"(this.get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"());\r\n"; 
								
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								
							}
							else
							{
								/*
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								*/
								break;
							}
						}
						count++;
					}
					//sInitFuncion+="\r\n\tif(this.getsAccionBusqueda().equals(\""+indexSchema.Name+"\")) {";
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						sInitFuncion+="\r\n\r\n\t\t}";			
					}
				} else {
					continue;	
				}
			}
			
			//System.Windows.Forms.MessageBox.Show(sInitFuncion);					
			return sInitFuncion; 
		}
		
public String GetFuncionesAccionesNavegacionTablasClasesRelacionadasC() 
		{
			String strTablaClaseRelacionada=string.Empty;
			StringBuilder stringBuilder=new StringBuilder();
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			String sSchemaPadre=GetSchemaTableFromDBC(TablaBase,"");
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				strNombreAdicional="";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				if(!GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				if(GeneracionPorModuloUnico){
					String sSchemaRelacionada=GetSchemaTableFromDBC(tablaRelacionadaObjetivo,"");
					
					if(!sSchemaPadre.Equals(sSchemaRelacionada)) {
						continue;
					}
				}
				
				//Trace.WriteLine(collectionInfo.CollectionRelationshipType);
				
				/*
				TableKeySchema TableKey =collectionInfo.TableKey;
				
				
				foreach(ColumnSchema columnSchema in TableKey.PrimaryKeyMemberColumns) {
					Trace.WriteLine(columnSchema.Name);
				}
				
				foreach(String spkColName in collectionInfo.PkColNames) {
					Trace.WriteLine(tablaRelacionadaObjetivo.Name+"->"+spkColName+"-"+collectionInfo.PkIdxName);
				}
				
				if(collectionInfo.FkColNames!=null) {
					foreach(String spkColName in collectionInfo.FkColNames) {
						Trace.WriteLine(tablaRelacionadaObjetivo.Name+"->"+spkColName);
					}
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType!=RelationshipType.OneToOne) {
					
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					
					//DESHABILITADO
					//OJO USA PRIMARYTABLE Y NO SECONDARYTABLE COMO NORMALMENTE USABA
					//EN REEMPLAZO DE PASO 2 , TOMA A TODOS strNombreAdicional YA QUE ASI LO HACE EL FOREIGN KEY RELACIONADO
					//TOMA EL NOMBRE RESTANTE DE LA COLUMNA MAS DE 1 FOREIGN KEY DE UNA TABLA
					//strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					//CON DESORDEN NO FUNCIONA
					/*
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.PrimaryTable)) {
						//continue;
						//PASO 2
						//TOMA EL NOMBRE RESTANTE DE LA COLUMNA MAS DE 1 FOREIGN KEY DE UNA TABLA
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
					} else {
						strNombreAdicional="";
						arrayListRelaciones.Add(collectionInfo.PrimaryTable);
					}
					*/	
				} else {
					strNombreAdicional="";
				}
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					//&&strNombreAdicional.Equals("") SI NO ES VACIO SE PUEDE TRATAR DE MAS DE UNA RELACION FOREIGN KEY HACIA UNA TABLA
					if(tableSchema.Equals(tablaRelacionadaObjetivo)&&strNombreAdicional.Equals(""))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					String strComentarioParaEjb="";
					String strComentarioInicioParaEjb="";
					String strComentarioFinParaEjb="";
				
					if(ConEjb){
						strComentarioParaEjb="//";
						strComentarioInicioParaEjb="\r\n\t\t\t\t/*";
						strComentarioFinParaEjb="*/";
					}
					
					
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					
					strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
					
				
					stringBuilder.Append("\r\n\r\n\tpublic String registrarSesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Para"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+strPlural.ToLower()+"() throws Exception {");
					stringBuilder.Append("\r\n\t\tBoolean isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n");					
					
					if(!EsSwing){
						stringBuilder.Append("\r\n\t\tFuncionesBeanFace funcionesBeanFace=new FuncionesBeanFace();\r\n");
						stringBuilder.Append("\r\n\t\ttry {\r\n\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);");
					} else {
						stringBuilder.Append("\r\n\t\ttry {");
						//stringBuilder.Append("\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
					}
					stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {");
					stringBuilder.Append("\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
					stringBuilder.Append("\r\n\t\t\t}");
					
					if(!EsSwing){
						stringBuilder.Append("\r\n\r\n\t\t\t//"+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME);");
					} else {
						//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
					}
					
					
					stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"==null) {");
					stringBuilder.Append("\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
					stringBuilder.Append("\r\n\t\t\t}");
					
					stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setsPathNavegacionActual("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getsPathNavegacionActual()+Constantes.SHTMLFLECHA+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SCLASSWEBTITULO);");
					stringBuilder.Append("\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisPermiteRecargarInformacion(false);");
					
					stringBuilder.Append("\r\n\t\t\tisPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"="+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".getisPaginaPopup();");
					
					//stringBuilder.Append("\r\n\r\n\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual=Long.parseLong(httpServletRequest.getParameter(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\"));");
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					
					String strPermiteNavegacionHaciaForeignKeyDesde="";
					
					if(!GetConPopupTableFromProperties(tablaRelacionadaObjetivo)) {
						strPermiteNavegacionHaciaForeignKeyDesde="true";
						//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(false);");
					} else {
						strPermiteNavegacionHaciaForeignKeyDesde="false";
						stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(true);");
					}
					
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisPermiteNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+strPermiteNavegacionHaciaForeignKeyDesde+");");
					
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setsNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SNOMBREOPCION);");
					
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);");
					stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setl"+strId+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					
					//DESHABILITA MANTENIMIENTO HIJO
					if(blnTemporalWebNoActualizarDatos) {
						stringBuilder.Append("\r\n\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setNoMantenimiento(true);");
					}
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(tablaRelacionadaObjetivo,strNombreAdicional));
					}
					
					
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
					//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"(true);");
					stringBuilder.Append("\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setl"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
					
					//AQUI PARA NO STANDARD LOS CAMPO PK
					if(blnNoStandardTableFromProperties) {	
						stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSession(tablaRelacionadaObjetivo,strNombreAdicional));
					}
					
					stringBuilder.Append("\r\n\r\n\t\t\tString strPagina=Constantes.SNONE;");
					stringBuilder.Append("\r\n\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();");
					
					/*
					stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {");
					stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionable= (SistemaAdditionable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);");
					stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
					stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionableHome= (SistemaAdditionableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);");
					stringBuilder.Append("\r\n\t\t\t\t}");
					*/
					
					//stringBuilder.Append("\r\n\r\n\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))");
					
					String  strTablaClaseRelacionadaFunction=" "+strGlobalSeguridadComment+"{";					
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t\t//strPagina="+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SRELATIVEPATH + Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaObjetivo)+"\"+Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP;";
							strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"}";
					
					
					
					/* TEMPORAL ERA ANTERIOR
					//if(ConEjb){
						stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {";
						stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
						stringBuilder.Append(strTablaClaseRelacionadaFunction;
						stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
						stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
						stringBuilder.Append(strTablaClaseRelacionadaFunction;
						stringBuilder.Append("\r\n\t\t\t\t}";
					//}
					*/
					if(!EsSwing){
					stringBuilder.Append("\r\n\r\n\t\t\t//ARCHITECTURE");
					stringBuilder.Append("\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {");
					stringBuilder.Append("\r\n\t\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP
					stringBuilder.Append(strComentarioInicioParaEjb+strTablaClaseRelacionadaFunction+strComentarioFinParaEjb);
					stringBuilder.Append("\r\n\t\t\t}");
					
					
					//if(ConEjb){
						stringBuilder.Append(" else if(Constantes.ISUSAEJBREMOTE) {");
						stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
						stringBuilder.Append(strTablaClaseRelacionadaFunction);
						stringBuilder.Append("\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
						stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
						stringBuilder.Append(strTablaClaseRelacionadaFunction);
						stringBuilder.Append("\r\n\t\t\t}");
						stringBuilder.Append("\r\n\t\t\t//ARCHITECTURE");
					//}
					
					
						if(EsVersionRichFaces3C(RichFaces_Version)){
							stringBuilder.Append("\r\n\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+");");
							stringBuilder.Append("\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+");");
						}
					}
					
					stringBuilder.Append("\r\n\r\n\t\t\tguardarDatosBusquedaSession();");
					stringBuilder.Append("\r\n\r\n\t\t} catch(Exception e) {");
					stringBuilder.Append("\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);"); 
					stringBuilder.Append("\r\n\t\t}");
					
					
					//OJO SE REPITE sAuxiliarUrlPagina FINAL DE IF Y ELSE
					if(!EsSwing){
						stringBuilder.Append("\r\n\r\n\t\tif(!"+"isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+") {");
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=\"\";");
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
						stringBuilder.Append("\r\n\r\n\t\t\tFacesContext facesContext = FacesContext.getCurrentInstance();");
						stringBuilder.Append("\r\n\t\t\tExternalContext externalContext = facesContext.getExternalContext();");
						stringBuilder.Append("\r\n\r\n\t\t\texternalContext.redirect(sAuxiliarUrlPagina);");
						stringBuilder.Append("\r\n\r\n\t\t\treturn "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
						stringBuilder.Append("\r\n\r\n\t\t} else {");
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=Constantes.SHTTPINIT+Constantes.SDNSNAMESERVER+\":\"+Constantes.SPORTSERVER+\"/\"+Constantes.SCONTEXTSERVER+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHOPCION+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION;");					
						stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
						stringBuilder.Append("\r\n\t\t\treturn \"\";");//GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
						stringBuilder.Append("\r\n\t\t}");
					} else {
						stringBuilder.Append("\r\n\t\t\treturn \"\";");	
					}
					
					stringBuilder.Append("\r\n\t}");
				}
				
			}
								
			//return strTablaClaseRelacionada; 
			return stringBuilder.ToString();
		}
		
public String GetFuncionesBusquedaTablasClasesFk() {
			String strTablaClaseRelacionada=string.Empty;
			StringBuilder stringBuilder=new StringBuilder();
			//System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			TableSchema tablaRelacionadaObjetivo;
			String strPlural=string.Empty;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			String sSchemaPadre=GetSchemaTableFromDBC(TablaBase,"");
			String sSchemaRelacionada="";
			
			String sCommentRF3="";
			
			if(EsVersionRichFaces4C(RichFaces_Version)){
				sCommentRF3="//";
			}
			
			foreach(ColumnSchema column in TablaBase.Columns) {
				if(column.IsForeignKeyMember && GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					tablaRelacionadaObjetivo=GetNombreTablaRelacionadaFromColumn(column);
					
					if(GeneracionPorModuloUnico){
						sSchemaRelacionada=GetSchemaTableFromDBC(tablaRelacionadaObjetivo,"");
						
						if(!sSchemaPadre.Equals(sSchemaRelacionada)) {
							continue;
						}
					}
			/*
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				strNombreAdicional="";
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
					
				} else {
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				if(!GetPermiteClaseRelacionadaC(TablaBase,tablaRelacionadaObjetivo)) {
					continue;
				}
				
				
				
					if(GeneracionPorModuloUnico){
						String sSchemaRelacionada=GetSchemaTableFromDBC(tablaRelacionadaObjetivo,"");
						
						if(!sSchemaPadre.Equals(sSchemaRelacionada)) {
							continue;
						}
					}
									
					
					if(collectionInfo.CollectionRelationshipType!=RelationshipType.OneToOne) {
						
						strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
						
					} else {
						strNombreAdicional="";
					}
					
					
					encontrado=false;
					
					foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {
						//&&strNombreAdicional.Equals("") SI NO ES VACIO SE PUEDE TRATAR DE MAS DE UNA RELACION FOREIGN KEY HACIA UNA TABLA
						if(tableSchema.Equals(tablaRelacionadaObjetivo)&&strNombreAdicional.Equals("")) {
							encontrado=true;
						}
					}
					*/
								
					if(!encontrado) {
						String strComentarioParaEjb="";
						String strComentarioInicioParaEjb="";
						String strComentarioFinParaEjb="";
					
						if(ConEjb){
							strComentarioParaEjb="//";
							strComentarioInicioParaEjb="\r\n\t\t\t\t/*";
							strComentarioFinParaEjb="*/";
						}
										
						tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
						
						strPlural=GetPluralTituloNombreTableFromPropertiesC(tablaRelacionadaObjetivo);
						
						stringBuilder.Append("\r\n\r\n\tpublic String registrarSesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"ParaBusqueda"+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tablaRelacionadaObjetivo.ToString())*/+strPlural.ToLower()+"() throws Exception {");
						stringBuilder.Append("\r\n\t\tBoolean isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n");						
						
						if(!EsSwing){
							stringBuilder.Append("\r\n\t\tFuncionesBeanFace funcionesBeanFace=new FuncionesBeanFace();\r\n");
							stringBuilder.Append("\r\n\t\ttry {");
							
							stringBuilder.Append("\r\n\r\n\t\t\t"+sCommentRF3+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);");							
						} else {
							stringBuilder.Append("\r\n\t\ttry {");
							//stringBuilder.Append("\r\n\t\t\t"+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
						}
						
						stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {");
						stringBuilder.Append("\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();");
						stringBuilder.Append("\r\n\t\t\t}");
						
						if(!EsSwing){
							stringBuilder.Append("\r\n\r\n\t\t\t"+sCommentRF3+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME);");														
						} else {
							//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
						}
											
						stringBuilder.Append("\r\n\r\n\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"==null) {");
						stringBuilder.Append("\r\n\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=new "+GetNombreClase(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+"();");
						stringBuilder.Append("\r\n\t\t\t}");
						
						stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setsPathNavegacionActual("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getsPathNavegacionActual()+Constantes.SHTMLFLECHA+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SCLASSWEBTITULO);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPermiteRecargarInformacion(false);");
						
						//SIEMPRE ES POPUP POR BUSQUEDA
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPaginaPopup(true);");							
						stringBuilder.Append("\r\n\t\t\tisPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".getisPaginaPopup();");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPaginaPopup(false);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setEstaModoBusqueda(true);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setsFuncionBusquedaRapida(\"window.opener."+GetNombreClaseObjetoC(TablaBase.ToString())+"FuncionGeneral.setCombosCodigoDesdeBusqueda"+GetNombreCompletoColumnaClaseC(column)+"(TO_REPLACE);\");");
						
						//stringBuilder.Append("\r\n\r\n\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual=Long.parseLong(httpServletRequest.getParameter(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\"));");
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"Actual\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						
						String strPermiteNavegacionHaciaForeignKeyDesde="";
						
						if(!GetConPopupTableFromProperties(tablaRelacionadaObjetivo)) {
							strPermiteNavegacionHaciaForeignKeyDesde="true";
							//stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(false);");
						} else {
							strPermiteNavegacionHaciaForeignKeyDesde="false";
							stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setPaginaPopupVariables(true);");
						}
						
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setisPermiteNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+strPermiteNavegacionHaciaForeignKeyDesde+");");
						
						stringBuilder.Append("\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+".setsNombrePaginaNavegacionHaciaForeignKeyDesde"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SNOMBREOPCION);");
						
						stringBuilder.Append("\r\n\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"(true);");
						stringBuilder.Append("\r\n\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+".setl"+strId+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"Actual(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						
						//AQUI PARA NO STANDARD LOS CAMPO PK
						if(blnNoStandardTableFromProperties) {	
							stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSessionTablaClaseRelacionada(tablaRelacionadaObjetivo,strNombreAdicional));
						}
											
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\"BusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"\",true);");
						//stringBuilder.Append("\r\n\t\thttpSession.setAttribute(\""+strId+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey\", big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						stringBuilder.Append("\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesionForeignKey"+GetNombreClaseC(TablaBase.ToString())+"(true);");
						stringBuilder.Append("\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setl"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"ActualForeignKey(this."+strId+GetNombreClaseC(TablaBase.ToString())+"Actual);");
						
						//AQUI PARA NO STANDARD LOS CAMPO PK
						if(blnNoStandardTableFromProperties) {	
							stringBuilder.Append("\r\n\t\t\t"+GetNoStandardSetVariablesActualSession(tablaRelacionadaObjetivo,strNombreAdicional));
						}
						
						stringBuilder.Append("\r\n\r\n\t\t\tString strPagina=Constantes.SNONE;");
						stringBuilder.Append("\r\n\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();");
						
						/*
						stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {");
						stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionable= (SistemaAdditionable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);");
						stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
						stringBuilder.Append("\r\n\t\t\t\t\tsistemaAdditionableHome= (SistemaAdditionableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SistemaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);");
						stringBuilder.Append("\r\n\t\t\t\t}");
						*/
						
						//stringBuilder.Append("\r\n\r\n\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))");
						
						String  strTablaClaseRelacionadaFunction=" "+strGlobalSeguridadComment+"{";					
								strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t\t//strPagina="+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SRELATIVEPATH + Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+\""+GetRelativePathNavegacionFromTableFromPropertiesC(tablaRelacionadaObjetivo)+"\"+Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP;";
								strTablaClaseRelacionadaFunction+="\r\n\t\t\t\t"+strGlobalSeguridadComment+"}";
						
						
						
						/* TEMPORAL ERA ANTERIOR
						//if(ConEjb){
							stringBuilder.Append("\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBREMOTE) {";
							stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
							stringBuilder.Append(strTablaClaseRelacionadaFunction;
							stringBuilder.Append("\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
							stringBuilder.Append("\r\n\t\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL, Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP))";					
							stringBuilder.Append(strTablaClaseRelacionadaFunction;
							stringBuilder.Append("\r\n\t\t\t\t}";
						//}
						*/
						if(!EsSwing){
						stringBuilder.Append("\r\n\r\n\t\t\t//ARCHITECTURE");
						stringBuilder.Append("\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {");
						stringBuilder.Append("\r\n\t\t\t\t"+strComentarioParaEjb+strGlobalSeguridadComment+"if(sistemaLogicAdditional.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP
						stringBuilder.Append(strComentarioInicioParaEjb+strTablaClaseRelacionadaFunction+strComentarioFinParaEjb);
						stringBuilder.Append("\r\n\t\t\t}");
						
						
						//if(ConEjb){
							stringBuilder.Append(" else if(Constantes.ISUSAEJBREMOTE) {");
							stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionable.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
							stringBuilder.Append(strTablaClaseRelacionadaFunction);
							stringBuilder.Append("\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {");
							stringBuilder.Append("\r\n\t\t\t\t"+strGlobalSeguridadComment+"if(sistemaAdditionableHome.tienePermisosEnPaginaWeb(usuarioActual, Constantes.LIDSISTEMAACTUAL,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION))");//Constantes.SPREFIJOARCHIVOJSP+\""+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"\"+Constantes.SEXTENSIONARCHIVOJSP					
							stringBuilder.Append(strTablaClaseRelacionadaFunction);
							stringBuilder.Append("\r\n\t\t\t}");
							stringBuilder.Append("\r\n\t\t\t//ARCHITECTURE");
						//}
						
						
							if(EsVersionRichFaces3C(RichFaces_Version)){
								stringBuilder.Append("\r\n\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+");");
								stringBuilder.Append("\r\n\t\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().put("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SSESSIONNAME,"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+strPrefijoJSFSessionFaces+");");
							}
						}
						
						stringBuilder.Append("\r\n\r\n\t\t\tguardarDatosBusquedaSession();");
						stringBuilder.Append("\r\n\r\n\t\t} catch(Exception e) {");
						stringBuilder.Append("\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);"); 
						stringBuilder.Append("\r\n\t\t}");
						
						
						//OJO SE REPITE sAuxiliarUrlPagina FINAL DE IF Y ELSE
						if(!EsSwing){
							stringBuilder.Append("\r\n\r\n\t\tif(!"+"isPaginaPopup"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+") {");
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=\"\";");
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
							stringBuilder.Append("\r\n\r\n\t\t\tFacesContext facesContext = FacesContext.getCurrentInstance();");
							stringBuilder.Append("\r\n\t\t\tExternalContext externalContext = facesContext.getExternalContext();");
							stringBuilder.Append("\r\n\r\n\t\t\texternalContext.redirect(sAuxiliarUrlPagina);");
							stringBuilder.Append("\r\n\r\n\t\t\treturn "+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
							stringBuilder.Append("\r\n\r\n\t\t} else {");
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=Constantes.SHTTPINIT+Constantes.SDNSNAMESERVER+\":\"+Constantes.SPORTSERVER+\"/\"+Constantes.SCONTEXTSERVER+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHOPCION+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION;");					
							stringBuilder.Append("\r\n\t\t\tsAuxiliarUrlPagina=funcionesBeanFace.getAbsoluteApplicationUrl()+\"/\"+Constantes.SCARPETAPAGINAS+\"/\"+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SPATHMODULO+"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION+\"View.xhtml?id_modulo=\"+this.usuarioSessionBeanFace.getId_modulo();");
							stringBuilder.Append("\r\n\t\t\treturn \"\";");//GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class.getSimpleName().toLowerCase()+ConstantesJsp.SS;");
							stringBuilder.Append("\r\n\t\t}");
						} else {
							stringBuilder.Append("\r\n\t\t\treturn \"\";");	
						}
						
						stringBuilder.Append("\r\n\t}");
					}
				}				
			}
								
			//return strTablaClaseRelacionada; 
			return stringBuilder.ToString();
		}
		
public  String DefinirFuncionesListItemsArrayForeignKeys()
{
	String sVariablesArray="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();\r\n\r\n";
				sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
			
				sVariablesArray+="\t\tif(this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"!=null) {\r\n";
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"!=null) {\r\n";
				sVariablesArray+="\t\t\t\t\titem=new SelectItem();\r\n";
				sVariablesArray+="\t\t\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"));\r\n";///*GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +*/GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column),GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())+");\r\n";
				sVariablesArray+="\t\t\t\t\titem.setValue("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n\r\n";
					
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem.add(item);\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
			
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n";
				sVariablesArray+="\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem(ArrayList<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem) {";
				sVariablesArray+="\r\n\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem;";
				sVariablesArray+="\r\n\t}\r\n\r\n";
				
				
				
				
				//PARA COMBOS CON DEPENDENCIA EVENT, SON TEMPORALES
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
					
					sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItemAuxiliar("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tArrayList<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal=new ArrayList<SelectItem>();\r\n\r\n";
					sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
				
					sVariablesArray+="\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"!=null) {\r\n";
					//sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
					//sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
					sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"));\r\n";///*GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +*/GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column),GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())+");\r\n";
					sVariablesArray+="\t\t\titem.setValue("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
						
					sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal.add(item);\r\n";
					//sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t}\r\n\r\n";
				
					sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal;\r\n";
					sVariablesArray+="\t}\r\n\r\n";
					
					//DESDE PADRE
					sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItemAuxiliarDesdePadre("+GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tArrayList<SelectItem> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal=new ArrayList<SelectItem>();\r\n\r\n";
					sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
				
					sVariablesArray+="\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString()) +"!=null) {\r\n";
					//sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
					//sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\titem=new SelectItem();\r\n\r\n";
					
					sVariablesArray+="\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"()!=null && !"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"().equals(\"\")){\r\n";					
					sVariablesArray+="\t\t\t\titem.setLabel("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());\r\n";///*GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +*/GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column),GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower())+");\r\n";
					sVariablesArray+="\t\t\t} else {\r\n";
					sVariablesArray+="\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"()!=null) {\r\n";
					sVariablesArray+="\t\t\t\t\titem.setLabel("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().toString());\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"());\r\n\r\n";
					
					sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal.add(item);\r\n";
					//sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t}\r\n\r\n";
				
					sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItemLocal;\r\n";
					sVariablesArray+="\t}\r\n\r\n";
				}
				//PARA COMBOS CON DEPENDENCIA EVENT, SON TEMPORALES FIN
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"ListSelectItem() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();\r\n\r\n";
				sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
			
				sVariablesArray+="\t\tfor("+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +":this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
				sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseC(TablaBase.ToString()) +strClaseConstantesFunciones+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+strDescripcion+"("+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"));\r\n";
				///*GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +*/GetDescripcionComboColumnFromProperties(tableSchemaForeignKey,GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower())+");\r\n";
				sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseC(TablaBase.ToString()) +strClaseConstantesFunciones+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tableSchemaForeignKey.ToString())+strDescripcion+"("+GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"));\r\n";
					
				sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem.add(item);\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
			
				sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem;\r\n";
				sVariablesArray+="\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic void set"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"ListSelectItem(ArrayList<SelectItem> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem) {";
				sVariablesArray+="\r\n\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem;";
				sVariablesArray+="\r\n\t}\r\n\r\n";									
		}
	}
			
	return sVariablesArray;
}

public  String DefinirFuncionesListItemsArrayForeignKeysInicializacion()
{
	String sVariablesArray="";
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sVariablesArray+="\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();";
				/*
				sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();\r\n\r\n";
				sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
			
				sVariablesArray+="\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
				sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column))+");\r\n";
				sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
					
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem.add(item);\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
			
				sVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem;\r\n";
				sVariablesArray+="\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"ListSelectItem(ArrayList<SelectItem> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem) {";
				sVariablesArray+="\r\n\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +strForeignKey+"ListSelectItem;";
				sVariablesArray+="\r\n\t}\r\n\r\n";
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"ListSelectItem=new ArrayList<SelectItem>();";												
		}
	}
			
	return sVariablesArray;
}

public  String GetVariablesEjbCargarCombosFuncionestrForeignKeys()
{
	String sVariablesArray="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				TableSchema tableSchemaFk;
				tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);	
					
				//if(GetNombreClaseRelacionadaFromColumn(column)!=TablaBase.Name) {
				if(!GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).Equals(GetNombreClaseC(TablaBase.ToString()))) {
					//<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones.SREMOTEEJBNAME<%=GetAdditionalFromReporteC(TablaBase)%><%=GetJBossSufijoC(JBoss_Version,ConRMI)%>
					
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"Implementable "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SREMOTEEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version,ConRMI)+");";
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"ImplementableHome= "+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHomeEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SLOCALEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version,ConRMI)+");";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Implementable "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Implementable="+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);";
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableHome "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"ImplementableHome= "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableHomeEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);";									
		}
	}
			
	return sVariablesArray;
}

//GetVariablesEjbCargarCombosFuncioneParametros
public  String GetVariablesEjbCargarCombosFuncioneParametros()
{
	String sVariablesArray="";
	
	/*
	foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				//if(GetNombreClaseRelacionadaFromColumn(column)!=TablaBase.Name) {
				if(!GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).Equals(GetNombreClaseC(TablaBase.ToString()))) {
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"Implementable "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);";
					sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"ImplementableHome= "+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHomeEjbReference(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+"+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);";
				}
			}	
		}
	*/
	
	TableSchema tableSchemaEncontrada=null;
	String sClasesParametros=String.Empty;
	String[] sClases;
	
	
	sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
	
	//Trace.WriteLine(sClasesParametros);
	
	sClases=sClasesParametros.Split(',');
									
	foreach(String sClase in sClases){						
		tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
		
		//Trace.WriteLine(tableSchemaEncontrada.Name);
		
		if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"Implementable "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Implementable="+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ImplementableEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaEncontrada)+"ConstantesFunciones.SREMOTEEJBNAME"+GetAdditionalFromReporteC(tableSchemaEncontrada)+GetJBossSufijoC(JBoss_Version,ConRMI)+");";
			sVariablesArray+="\r\n\tpublic static "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ImplementableHome "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"ImplementableHome= "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.get"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ImplementableHomeEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaEncontrada)+"ConstantesFunciones.SLOCALEJBNAME"+GetAdditionalFromReporteC(tableSchemaEncontrada)+GetJBossSufijoC(JBoss_Version,ConRMI)+");";
		}
	}
					
	//sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"Implementable "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Implementable="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SREMOTEEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version,ConRMI)+");";
	//sVariablesArray+="\r\n\tpublic static "+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome "+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"ImplementableHome= "+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHomeEjbReference("+GetEsTablaAuxiliarReporteC(tableSchemaFk)+"ConstantesFunciones.SLOCALEJBNAME"+GetAdditionalFromReporteC(tableSchemaFk)+GetJBossSufijoC(JBoss_Version,ConRMI)+");";
				
	return sVariablesArray;
}

public  String GetFuncionesCargarCombosFuncionestrForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	bool blnVerificarDeshabilitarFk=false;
	String strVerificarDeshabilitarFk="";
	bool blnNoLoadFk=false;
	String strComentarioNoLoadFk="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				strComentarioNoLoadFk="";
				blnNoLoadFk=GetConNoLoadForeignKeyColumnFromPropertiesC(column);
				
				if(blnNoLoadFk) {
					strComentarioNoLoadFk="//";	
				}
				//SI FUNCIONA PERO NO SIEMPRE				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				//FUNCIONA SIEMPRE
				tableSchema=GetTableSchemaFromColumnForeignKey(column);
		
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				//SI EXISTE COINCIDENCIA Y AL QUERER CARGAR TODOS LOS FK SE DESHABILITA Y SE OCULTA
				blnVerificarDeshabilitarFk=VerificarClaseFkBusquedaTablaC(TablaBase,GetNombreCompletoClaseRelacionadaFromColumn(column) );
				
				if(blnVerificarDeshabilitarFk) {
					strVerificarDeshabilitarFk="";
				} else {
					strVerificarDeshabilitarFk="//";	
				}
				
				sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(String sFinalQuery)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				sVariablesArray+="\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
				
				if(column.AllowDBNull) {
					sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo = new "+GetNombreClaseRelacionadaFromColumn(column)+"();\r\n\r\n";
				}
				//sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo.set"+strField_+"sCodigo(Constantes.SCAMPONONE);";
			
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+GetNombreClaseRelacionadaFromColumn(column)+"DataAccess().setIsForForeingKeyData(true);\r\n\r\n";
				
				String strQueryStringValoresLista="sFinalQuery";			
				if(VerificarColumnaCatalogoGeneralC(column)) {
					sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"=\"\";\r\n";
					sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"="+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+column.Name.ToUpper()+"CODIGO);\r\n\r\n";
					
					strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString());
				}
				/*
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+strPrefijoJSFSessionFaces+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=("+GetNombreClaseRelacionadaFromColumn(column)+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
	
				sVariablesArray+="\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseRelacionadaFromColumn(column)+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				*/
				
				if(!EsSwing) {
					sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
				} else {
					//sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans || ConRMI ){
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans || ConRMI ){
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t}\r\n\r\n";
				
				if(column.AllowDBNull) {
					sVariablesArray+="\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add(0, "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo);\r\n";
				}
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				
				if(!blnVerificarDeshabilitarFk) {
					sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
					sVariablesArray+="\r\n\r\n\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(false);";		
					sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
				}
				
				//if busqueda session
				sVariablesArray+="\r\n\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE\r\n";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.getEntityWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"());";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual(),this.datosCliente));";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+".add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getEntity("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual(),this.datosCliente));";
				}
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
				
				//end else
				sVariablesArray+="\r\n\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		bool blnAdmiteNulos=false;
		int cont=0;
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				cont++;
				blnAdmiteNulos=false;
				
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				//SI EXISTE COINCIDENCIA Y AL QUERER CARGAR TODOS LOS FK SE DESHABILITA Y SE OCULTA
				blnVerificarDeshabilitarFk=VerificarClaseFkBusquedaTablaC(TablaBase,GetNombreClaseC(tableSchemaForeignKey.ToString()) );
				
				if(blnVerificarDeshabilitarFk) {
					strVerificarDeshabilitarFk="";
				} else {
					strVerificarDeshabilitarFk="//";	
				}
				
				sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString()) +"s"+strForeignKey+"Lista()throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				sVariablesArray+="\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">();\r\n\r\n";
				
				if(blnAdmiteNulos) {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Nulo = new "+GetNombreClaseC(tableSchemaForeignKey.ToString())+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Locic = new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Logic();\r\n\r\n";
				
				String strQueryStringValoresLista="\"\"";			
				if(VerificarTablaValorCatalogoGeneralC(tableSchemaForeignKey)) {
					sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"=\"\";\r\n";
					sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"="+GetNombreClase(tableSchemaForeignKey.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+cont.ToString()+"CODIGO);\r\n\r\n";
					
					strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchemaForeignKey.ToString());
				}
				
				if(!EsSwing) {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
				} else {
					sVariablesArray+="\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
				}
				
				sVariablesArray+="\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
				sVariablesArray+="\t\t\t}";
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"()) {\r\n";
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Locic.getTodos"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Locic.get"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"s();";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\t"+strVerificarDeshabilitarFk+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Implementable.getTodos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\t"+strVerificarDeshabilitarFk+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"ImplementableHome.getTodos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
				}
				sVariablesArray+="\r\n\t\t\t\t}";
				
				if(blnAdmiteNulos) {
					sVariablesArray+="\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()  +"s"+strForeignKey+".add(0, "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Nulo);\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				
				if(!blnVerificarDeshabilitarFk) {
					sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
					sVariablesArray+="\r\n\r\n\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(false);";		
					sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
				}
				
				String strParametrosNoStandardSession=GetParametrosCargarCombosFuncionestrForeignKeys(tableSchemaForeignKey);
				//if busqueda session
				sVariablesArray+="\r\n\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
				
				sVariablesArray+="\t\t\t\t//ARCHITECTURE\r\n";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				//GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Locic.getEntityWithConnection("+strParametrosNoStandardSession+");\r\n";
				sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"Locic.get"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"());";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Implementable.getEntityWithConnection("+strParametrosNoStandardSession+"));";
				}
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+".add("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"ImplementableHome.getEntityWithConnection("+strParametrosNoStandardSession+"));";
				}
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
				
				//end else
				sVariablesArray+="\r\n\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";									
		}
	}
	
	return sVariablesArray;
}

public  String GetParametrosCargarCombosFuncionestrForeignKeys(TableSchema tableSchemaForeignKey){
	//INICIALIZA TABLA
	//columnSchemaCollectionPK=GetColumnsPKC(tableSchemaForeignKey);
	String sTablaClaseRelacionada="";
	
	//sTablaClaseRelacionada+="\r\n\tBoolean isBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";							
	//sTablaClaseRelacionada+="\r\n\tLong lid"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual;";	
					
	ColumnSchemaCollection columnSchemaCollectionFK=GetColumnsPKC(tableSchemaForeignKey);
					
	for (int i = 0; i < columnSchemaCollectionFK.Count; i++){ 
		sTablaClaseRelacionada+=GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(columnSchemaCollectionFK[i])+GetNombreClaseC(tableSchemaForeignKey.ToString()+"Actual()") ;					
	} 	
	
	return sTablaClaseRelacionada;
}

public  String GetFuncionesSetActualComboForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic void setActual"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"(Long "+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				/*
				sVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
							
				sVariablesArray+="\r\n\r\n\t\t\t\t//ARCHITECTURE";
				sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection(\"\",new Pagination());\r\n\r\n";
				sVariablesArray+="\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();\r\n\r\n";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection(\"\",pagination,datosCliente);";
				sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
				sVariablesArray+="\r\n\t\t\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getTodos"+GetNombreClaseRelacionadaFromColumn(column)+"sWithConnection(\"\",pagination,datosCliente);";
				sVariablesArray+="\r\n\t\t\t\t}";
				sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
				*/
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"()!=null && "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t\tbreak;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				if(EsSwing) {
					sVariablesArray+="\t\t\tif(sFormularioTipoBusqueda.equals(\"Formulario\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n";
					sVariablesArray+="\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sVariablesArray+="\t\t\t\tjComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					}
					
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tif(conCombosBusquedas) {\r\n";
					//if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
						sVariablesArray+="\t\t\t\t"+GetControlesIndicesBusquedaVariables(TablaBase,column,GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp")+"\r\n";
					//}
					sVariablesArray+="\t\t\t}\r\n";
				
				} else {
					sVariablesArray+="\t\t\tif(sFormularioTipoBusqueda.equals(\"Formulario\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n";
					sVariablesArray+="\t\t\t\t//jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					
					sVariablesArray+="\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+"!=null) {\r\n";
					sVariablesArray+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"("+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado);\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sVariablesArray+="\t\t\t\t//jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
					}
					
					sVariablesArray+="\t\t\t}\r\n\r\n";
					
					sVariablesArray+="\t\t\tif(conCombosBusquedas) {\r\n";
					//if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
						sVariablesArray+="\t\t\t\t"+GetControlesIndicesBusquedaVariables(TablaBase,column,GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp")+"\r\n";
					//}
					sVariablesArray+="\t\t\t}\r\n";
				}
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
				
				
				//ACTUAL DESCRIPCION
				
				sVariablesArray+="\r\n\tpublic String getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"Descripcion(Long "+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\tString sDescripcion=\"\";\r\n\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"()!=null && "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t\tbreak;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\t\t\tsDescripcion="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);";
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\treturn sDescripcion;\r\n";
				
				sVariablesArray+="\t}\r\n";
				
				//GENERICO
				
				if(EsSwing){
				
				sVariablesArray+="\r\n\t@SuppressWarnings(\"rawtypes\")";
				sVariablesArray+="\r\n\tpublic void setActual"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"Generico(Long "+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado,JComboBox jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";				
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"()!=null && "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t\tbreak;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tjComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"Generico.setSelectedItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n";
				
				//sVariablesArray+="\r\n\t\t\tsDescripcion="+GetNombreClaseRelacionadaFromColumn(column)+"ConstantesFunciones.get"+GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Temp);";
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n\r\n";
								
				sVariablesArray+="\t}\r\n";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		String strPorTablaColumnsPKParametrosSinComaPrimeroFK="";
		String strConditions="";
		
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
				
				strPorTablaColumnsPKParametrosSinComaPrimeroFK=GetColumnsPKParametrosSinComaPrimeroC(tableSchemaForeignKey);
				
				sVariablesArray+="\r\n\tpublic void setActual"+GetNombreClaseC(tableSchemaForeignKey.ToString()) +strForeignKey+"("+ strPorTablaColumnsPKParametrosSinComaPrimeroFK +")throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"  "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Aux:"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+") {\r\n";
				strConditions=GetConditionsSetActualComboForeignKeys(tableSchemaForeignKey);
				
				sVariablesArray+="\t\t\t\tif("+strConditions+") {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Temp="+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				if(EsSwing) {
					sVariablesArray+="\t\t\tjComboBox"+GetNombreClaseC(tableSchemaForeignKey.ToString())+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"Temp);\r\n\r\n";
				}
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";									
		}
	}	
	
	return sVariablesArray;
}

public  String GetConditionsSetActualComboForeignKeys(TableSchema tableSchema)
{
	String strConditionsSetActualComboForeignKeys="";
	String strPrefijoTipo="";
	String strNombre="";
	bool blnEsPrimero=true;
	
	foreach(ColumnSchema columnSchema in tableSchema.Columns) {
		if(columnSchema.IsPrimaryKeyMember) {
			
			if(!blnEsPrimero) {
				strConditionsSetActualComboForeignKeys+="&&";
			}
			
			strPrefijoTipo = GetPrefijoTipoC(columnSchema);
			strNombre = GetNombreColumnaClaseC(columnSchema);	
					
			strConditionsSetActualComboForeignKeys+=GetNombreClaseC(tableSchema.ToString()).ToLower()+"Aux."+ GetParameterClaseMethodC(columnSchema,true,false,false,"")+".equals("+strPrefijoTipo+ strNombre+")";
			
			if(blnEsPrimero) {
				blnEsPrimero=false;
			}
		}
	}
	
	return strConditionsSetActualComboForeignKeys;
}

public  String GetFuncionesSetActualParaGuardarForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
			strComentarioParaEjb+="";
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				
				//if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)*/){
				//	continue;
				//}
				
				
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
	
				sVariablesArray+="\r\n\t@SuppressWarnings(\"rawtypes\")";
				sVariablesArray+="\r\n\tpublic void setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +strForeignKey+"("+ GetNombreClaseC(TablaBase.ToString())+" "+GetNombreClaseObjetoC(TablaBase.ToString())+",JComboBox jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"Generico)throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=new "+GetNombreClaseRelacionadaFromColumn(column)+"();\r\n\r\n"; //("+ GetNombreClaseRelacionadaFromColumn(column)+")"+"jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();\r\n\r\n";
				
				sVariablesArray+="\t\t\tif(jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"Generico==null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=("+ GetNombreClaseRelacionadaFromColumn(column)+")"+"jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();\r\n";
				sVariablesArray+="\t\t\t} else {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=("+ GetNombreClaseRelacionadaFromColumn(column)+")"+"jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(column)*/+GetNombreClaseC(TablaBase.ToString())+"Generico.getSelectedItem();\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux!=null) {\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strField_+""+sPrefijo+sColumna+"("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+strIdGetSet+"());\r\n";
				sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+strDescripcion+ "("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux));\r\n";
				sVariablesArray+="\t\t\t}";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =new ArrayList();//GetArrayListForeignKeys(TablaBase);
		String sPrefijo="";sPrefijo+="";
		String sColumna="";sColumna+="";
		
		MemberColumnSchema memberColumnSchemaPK=null;
		MemberColumnSchema memberColumnSchemaFK=null;
				
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {		
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				
				sVariablesArray+="\r\n\tpublic void setActualParaGuardar"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString()) +strForeignKey+"("+ GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+" "+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+")throws Exception\r\n";
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"  "+GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"Aux=("+ GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+")"+"jComboBox"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+".getSelectedItem();\r\n\r\n";
					
					
				
				string strPrefijoTipo = "";
				string strNombre = "";
				
				if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
					System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
				}
				
				for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
					memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
					memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
					
					strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
					strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
	
					//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
					sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+".set"+strField_+""+strPrefijoTipo+strNombre+"("+GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"Aux."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");";
				
				}	
					
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";			
			}
		}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualComboForeignKeys(bool esParaVariablesGlobalDataBase)
{
	String sVariablesArray="";	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	String sModuloDominio="";
	String sModuloDominioProperties="";
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sModuloDominio="this.moduloActual.getId()";
				
				if(blnEsReporte && GetEsReporteParametroFromPropertiesC(column)){
					continue;
				}
				
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!esParaVariablesGlobalDataBase) {
					sVariablesArray+="\r\n\t\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";
				} else {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						
						sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
						
						if(!sModuloDominioProperties.Equals(String.Empty)) {
							sModuloDominio="ModuloConstantesFuncionesAdditional."+sModuloDominioProperties;														
						}
						
						sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+sModuloDominio+",false,\"Formulario\");";
					}
				}
				/*
				sVariablesArray+="\t{\r\n";
				sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
				
				sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"  "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Temp=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux:"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+") {\r\n";
				sVariablesArray+="\t\t\t\tif("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux.get"+ strIdGetSet+"().equals("+ strId+GetNombreClaseRelacionadaFromColumn(column)+"Seleccionado)) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Temp="+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux;\r\n";
				sVariablesArray+="\t\t\t\t}\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tjComboBox"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(column)+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Temp);\r\n\r\n";
				
				
				sVariablesArray+="\r\n\t\t}\r\n";
				sVariablesArray+="\t\tcatch(Exception e)\r\n";
				sVariablesArray+="\t\t{\r\n";
				sVariablesArray+="\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t}\r\n";
				sVariablesArray+="\t}\r\n";
				*/
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			String sPrefijo="";//GetPrefijoTipoC(column);	
			String sColumna="";//GetNombreColumnaClaseC(column);	
	.
			sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableSchemaForeignKey.ToString())+strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+sColumna+"());";
													
		}
		*/
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
				if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
					arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
					strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
				}
			}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualFechas(bool esParaVariablesGlobalDataBase)
{
	String sVariablesArray="";	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	String sModuloDominio="";sModuloDominio+="";
	String sModuloDominioProperties="";sModuloDominioProperties+="";
		
	if(ConFechaSistemaDatabaseFromPropertiesC(TablaBase.Database)) {
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(EsDateColumn(column)) {
				sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreCompletoColumnaClaseC(column)+"(this.parametroGeneralUsuario.getfecha_sistema());";
			}	
		}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualComboGlobalAuxiliarForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(EsSwing) {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
							//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
							if(column.Name.Equals(strIdUsuario)) {	
								//Trace.WriteLine("ok");
								sVariablesArray+="\r\n\r\n\t\t\t\tthis.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,\"Formulario\");";						
							
							} else if(column.Name.Equals(strIdEjercicio)) {
								sVariablesArray+="\r\n\r\n\t\t\t\tEjercicio ejercicioActual=(Ejercicio)jComboBoxid_ejercicio"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdAnio)) {
									sVariablesArray+="\r\n\t\t\t\tthis.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,\"Formulario\");";
								}
							} else if(column.Name.Equals(strIdPeriodo)) {
								sVariablesArray+="\r\n\r\n\t\t\t\tPeriodo periodoActual=(Periodo)jComboBoxid_periodo"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdMes)) {
									sVariablesArray+="\r\n\t\t\t\tthis.setActualMesForeignKey(periodoActual.getid_mes(),false,\"Formulario\");";
								}
							}
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
					}	
				} else {
					if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
							//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.parametroGeneralUsuario.get"+strField_+""+sPrefijo+sColumna+"(),false,\"Formulario\");";						
							if(column.Name.Equals(strIdUsuario)) {	
								//<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>									
								sVariablesArray+="\r\n\r\n\t\t\t\tthis.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,\"Formulario\");";						
							} else if(column.Name.Equals(strIdEjercicio)) {
								sVariablesArray+="\r\n\r\n\t\t\t\t//Ejercicio ejercicioActual=(Ejercicio)jComboBoxid_ejercicio"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdAnio)) {
									//sVariablesArray+="\r\n\t\t\t\tthis.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,\"Formulario\");";
									sVariablesArray+="\r\n\t\t\t\tthis.setActualAnioForeignKey(this."+GetNombreClaseObjeto(TablaBase.ToString())+".getid_anio(),false,\"Formulario\");";
								}
							} else if(column.Name.Equals(strIdPeriodo)) {
								sVariablesArray+="\r\n\r\n\t\t\t\t//Periodo periodoActual=(Periodo)jComboBoxid_periodo"+GetNombreClaseC(TablaBase.ToString())+".getSelectedItem();";
								
								if(ContieneColumna(TablaBase,strIdMes)) {
									//sVariablesArray+="\r\n\t\t\t\tthis.setActualMesForeignKey(periodoActual.getid_mes(),false,\"Formulario\");";
									sVariablesArray+="\r\n\t\t\t\tthis.setActualMesForeignKey(this."+GetNombreClaseObjeto(TablaBase.ToString())+".getid_mes(),false,\"Formulario\");";
								}
							}
					} else if(EsColumnaVariableModuloGlobalC(column)) {
						//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
					}	
				}
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
				sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
			}
		}
	}
	
	return sVariablesArray;
}

//GetCallFuncionesSetActualComboDefaultForeignKeys
public  String GetCallFuncionesSetActualComboDefaultForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!GetDefaultValueColumna(column,true).Equals("")) {
					sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+GetDefaultValueColumna(column)+",false,\"Formulario\");";
				}
				
				/*
				if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						
				} else if(EsColumnaVariableModuloGlobalC(column)) {
					//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
				}	
				*/
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
				sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
			}
		}
	}
	
	return sVariablesArray;
}

public  String GetCallFuncionesSetActualComboParametroForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
				
				if(!GetColumnClaseParametroColumnFromPropertiesC(column).Equals("")) {
					String[] sObjetoCampo=GetColumnClaseParametroColumnFromPropertiesC(column).Split('.');
					String sObjeto=sObjetoCampo[0];
					
					sVariablesArray+="\r\n\t\t\t\tif("+sObjeto+"!=null){";
					sVariablesArray+="\r\n\t\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"("+GetColumnClaseParametroColumnFromPropertiesC(column)+"(),false,\"Formulario\");";
					sVariablesArray+="\r\n\t\t\t\t}";
				}
				
				/*
				if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column)) {
						
				} else if(EsColumnaVariableModuloGlobalC(column)) {
					//sVariablesArray+="\r\n\t\t\t\tthis.setActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this.moduloActual.getId(),false,\"Formulario\");";
				}	
				*/
			}	
		}
	} else {
		//UTILIZAR LA FORMA DETALLADA
		
		ArrayList arrayListForeignKeys =new ArrayList();
		String strParametersSetActualComboForeignKeys="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				strParametersSetActualComboForeignKeys=GetSetParametersSetActualComboForeignKeys(tableKeySchema.ForeignKeyTable,tableKeySchema.ForeignKeyMemberColumns);
					
				sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+strForeignKey+"("+strParametersSetActualComboForeignKeys+");";
			}
		}
	}
	
	return sVariablesArray;
}

public  String GetSetParametersSetActualComboForeignKeys(TableSchema foreignKeyTable,MemberColumnSchemaCollection foreignKeyMemberColumns)
{
	String strConditionsSetActualComboForeignKeys="";
	String strPrefijoTipo="";
	String strNombre="";
	bool blnEsPrimero=true;
	ColumnSchema columnSchema=null;
	
	foreach(MemberColumnSchema memberColumnSchema in foreignKeyMemberColumns) {
		columnSchema=memberColumnSchema.Column;
				
			if(!blnEsPrimero) {
				strConditionsSetActualComboForeignKeys+=",";
			}
			
			strPrefijoTipo = GetPrefijoTipoC(columnSchema);
			strNombre = GetNombreColumnaClaseC(columnSchema);	
					
			strConditionsSetActualComboForeignKeys+="this."+GetNombreClaseC(foreignKeyTable.ToString()).ToLower()+"."+ GetParameterClaseMethodC(columnSchema,true,false,false,"")+"";
			
			if(blnEsPrimero) {
				blnEsPrimero=false;
			}		
	}
	
	return strConditionsSetActualComboForeignKeys;
}

public  String GetCallFuncionesSetActualParaGuardarForeignKeys()
{
	String sVariablesArray="";
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				String sPrefijo=GetPrefijoTipoC(column);	
				String sColumna=GetNombreColumnaClaseC(column);	
	
				sVariablesArray+="\r\n\t\t\t\tthis.setActualParaGuardar"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)) +strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",null);";
	
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\t\t\tthis.setActualParaGuardar"+GetNombreClaseC(tableSchemaForeignKey.ToString())+strForeignKey+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",null);";										
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesArrayForeignKeys()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";
	String sModuloDominio="this.moduloActual";
	String sModuloDominioProperties="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				sModuloDominio="this.moduloActual";
				
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				if(EsSwing)
				{
					strCargarDependencia="";
					
					if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
						strCargarDependencia="cargarCombosDependencia && ";
					}
					
					sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
				}
				
				sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral);";		
				
				//SI TIENE MODULO DINAMICO
				sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
				if(!sModuloDominioProperties.Equals(String.Empty)) {
					sModuloDominio="moduloActualAux";
					
					sVariablesArray+="\r\n\t\t\t\t\tmoduloActualAux.setId(ModuloConstantesFuncionesAdditional."+sModuloDominioProperties+");\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,"+sModuloDominio+",true,false,arrColumnasGlobales);";
				
				
				sVariablesArray+="\r\n\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, \""+GetFinalQueryColumnFromPropertiesC(column)+"\");";
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesArrayForeignKeysLote() {
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";
	String sModuloDominio="this.moduloActual";
	String sModuloDominioProperties="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(column.IsForeignKeyMember) {
				sModuloDominio="this.moduloActual";
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				//if(EsSwing) {
					strCargarDependencia="";
					
					if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
						strCargarDependencia="cargarCombosDependencia && ";
					}
					
					sVariablesArray+="\r\n\r\n\r\n\t\t\t\tString finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=\"\";";
					sVariablesArray+="\r\n\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
				//}
				
				sVariablesArray+="\r\n\t\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
				sVariablesArray+="\r\n\t\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\r\n\t\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral);";		
				
				//SI TIENE MODULO DINAMICO
				sModuloDominioProperties=GetModuloDominioConstanteFromColumnFromPropertiesC(column);				
				if(!sModuloDominioProperties.Equals(String.Empty)) {
					sModuloDominio="moduloActualAux";
					
					sVariablesArray+="\r\n\t\t\t\t\t\tmoduloActualAux.setId(ModuloConstantesFuncionesAdditional."+sModuloDominioProperties+");\r\n";
				}
				
				sVariablesArray+="\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,"+sModuloDominio+",true,false,arrColumnasGlobales);";
				
				
				sVariablesArray+="\r\n\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=Funciones.GetFinalQueryAppend(finalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +", \""+GetFinalQueryColumnFromPropertiesC(column)+"\");";
				sVariablesArray+="\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
				
				sVariablesArray+=strBusquedaFKComment+"\t//this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
				
				sVariablesArray+="\r\n\t\t\t\t\t} else {";
				sVariablesArray+="\r\n\t\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=\" WHERE \" + ConstantesSql.ID + \"=\"+"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual();";
				sVariablesArray+="\r\n\t\t\t\t\t}";
				
				//if(EsSwing)
				//{
					sVariablesArray+="\r\n\t\t\t\t} else {";
					sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"=\"NONE\";";
					sVariablesArray+="\r\n\t\t\t\t}";
				//}
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String VariablesStringForeignKeysLote(bool conInicializar) {
	String sVariablesArray=VariablesStringForeignKeysLoteC(TablaBase,conInicializar);	
	
	return sVariablesArray;
}

public  String CallInicializarFuncionesArrayForeignKeys()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";strCargarDependencia+="";
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
				
				/*
				if(GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
					strBusquedaFKComment="\r\n\t\t\t\t\t//";
				} else {
					strBusquedaFKComment="\r\n\t\t\t\t\t";
				}
				*/
				
				if(EsSwing)
				{
					strCargarDependencia="";
					/*
					if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
						strCargarDependencia="cargarCombosDependencia && ";
					}
					*/
					
					//sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
					
					sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey=new ArrayList();";
				}
				/*
				sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"(this.arrDatoGeneral);";		
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales);";
				sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+"ConstantesFunciones.SFINALQUERY;";
		
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
				
				
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallArbolBusquedaFuncionesArrayForeignKeys()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";
	String strCargarDependencia="";strCargarDependencia+="";
	String strNombreCompletoClaseRelacionadaFromColumn="";
	
	if(!blnNoStandardTableFromProperties) {	
		
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				TableSchema tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);
				//Trace.WriteLine("INICIO");
				bool esAutoReferenciadaFk=GetEsAutoReferenciadaTablaC(tableSchemaFk);								
				
				strNombreCompletoClaseRelacionadaFromColumn=GetNombreCompletoClaseRelacionadaFromColumn(column);
				
				if(esAutoReferenciadaFk && !strNombreCompletoClaseRelacionadaFromColumn.Equals(TablaBase.Name)) {
					strBusquedaFKComment="\r\n\r\n\t\t\t\t\t";
								
					sVariablesArray+="\r\n\r\n\t\t\t\tpublic void abrirFrameTree"+strNombreCompletoClaseRelacionadaFromColumn+"(String sTipoProceso) { //throws Exception";
					sVariablesArray+="\r\n\t\t\t\t\ttry {";
					sVariablesArray+="\r\n\t\t\t\t\t\t//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false";
					sVariablesArray+="\r\n\t\t\t\t\t\t//this.jDesktopPane.add(jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+");";
							
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClaseC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,true,false,false,false,true);";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.setJInternalFrameParent(this);";
			
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setsTipoProceso(sTipoProceso);";
							
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\tif(sTipoProceso.equals(\"BUSQUEDA_FK\")) {";
					sVariablesArray+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".sTipoBusqueda=\""+strNombreCompletoClaseRelacionadaFromColumn+"\";";
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.getTodos"+GetNombreClaseC(tableSchemaFk.ToString())+"Arbol();";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".set"+GetNombreClaseC(tableSchemaFk.ToString())+"s("+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"sArbol);";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".CargarTree"+GetNombreClaseC(tableSchemaFk.ToString())+"();";
							
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setVisible(true);";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setSelected(true);";
					
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\t//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO";
					sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame.jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".jInternalFrameParent=this;";
					
					sVariablesArray+="\r\n\r\n\t\t\t\t\t\tif(!Constantes.CON_VARIAS_VENTANAS) {";
					sVariablesArray+="\r\n\t\t\t\t\t\t\tMainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,"+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame);";
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t\t\tthis.jDesktopPane.add("+GetNombreClaseObjetoC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame);";
			
					sVariablesArray+="\r\n\r\n\t\t\t\t\t} catch (Exception e) {";
					sVariablesArray+="\r\n\t\t\t\t\t\te.getStackTrace();";
					sVariablesArray+="\r\n\t\t\t\t\t\t//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);";
					sVariablesArray+="\r\n\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t}";
					
					sVariablesArray+="\r\n\r\n\t\t\t\tpublic void cerrarFrameTree"+strNombreCompletoClaseRelacionadaFromColumn+"("+GetNombreClaseC(tableSchemaFk.ToString())+"BeanSwingJInternalFrame jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+") throws Exception {";
					sVariablesArray+="\r\n\t\t\t\t\ttry {";
					sVariablesArray+="\r\n\t\t\t\t\t\t//jDesktopPane.add(jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+");";
							
					sVariablesArray+="\r\n\t\t\t\t\t\tjInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setVisible(false);";
					sVariablesArray+="\r\n\t\t\t\t\t\tjInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".setSelected(false);";
							
					sVariablesArray+="\r\n\t\t\t\t\t\t//jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+".dispose();";
					sVariablesArray+="\r\n\t\t\t\t\t\t//jInternalFrameTree"+GetNombreClaseC(tableSchemaFk.ToString())+"=null;";
							
					sVariablesArray+="\r\n\t\t\t\t\t} catch (final java.beans.PropertyVetoException e) {";
					sVariablesArray+="\r\n\t\t\t\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t}";
				}
				
				/*				
				if(EsSwing)
				{
					strCargarDependencia="";
					
					
					//sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey==null||this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey.size()<=0)) {";
					
					sVariablesArray+="\r\n\t\t\t\tthis."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower() +"sForeignKey=new ArrayList();";
				}
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//NUNCA COMENTAR LLAMADA CARGARCOMBOS
				
				strBusquedaFKComment="\r\n\t\t\t\t\t";
							
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey==null||this."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"sForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
				}
				
				sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"s"+strForeignKey+"Lista();";
				
				if(EsSwing)
				{
					sVariablesArray+="\r\n\t\t\t\t}\r\n";
				}									
		}
	}
			
	return sVariablesArray;
}

public  String CallFuncionesArrayParametros()
{
	String sVariablesArray="";
	
	String strBusquedaFKComment="";strBusquedaFKComment+="";
	String strCargarDependencia="";
	
	String strComentarioParaEjb="";
	strComentarioParaEjb+="";
			
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strComentarioNoLoadFk="";strComentarioNoLoadFk+="";
	String strVerificarDeshabilitarFk="";strVerificarDeshabilitarFk+="";
	
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			String sNombrePakage="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					//sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+"=new "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					
					sVariablesArray+="\r\n\t\t\t\tif("+strCargarDependencia+"(this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Parametro==null||this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Parametro.getId()<=0)) {";
				
				
					sVariablesArray+="\r\n\t\t\t\t\tthis.arrDatoGeneral= new  ArrayList<DatoGeneral>();";
					sVariablesArray+="\r\n\r\n\t\t\t\t\tarrColumnasGlobales="+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.getArrayColumnasGlobales"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"(this.arrDatoGeneral);";		
					
					sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales);";
					
					
					sVariablesArray+="\r\n\t\t\t\t\tfinalQueryGlobal+="+GetNombreClaseC(tableSchemaEncontrada.ToString())+"ConstantesFunciones.SFINALQUERY;";
			
					//CARGAR COMBO PARAMETRO
					sVariablesArray+="\r\n\r\n\t\t\t\t\ttry {\r\n";
					sVariablesArray+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"=new "+ sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();\r\n\r\n";
					
					/*
					if(column.AllowDBNull) {
						sVariablesArray+="\t\t\t"+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Nulo = new "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();\r\n\r\n";
					}
					*/
					//sVariablesArray+="\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Nulo.set"+strField_+"sCodigo(Constantes.SCAMPONONE);";
				
					sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+/*GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic "*/"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic=new "+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic();\r\n\r\n";
					
					String strQueryStringValoresLista="sFinalQuery";strQueryStringValoresLista+="";
					/*
					if(VerificarColumnaCatalogoGeneralC(column)) {
						sVariablesArray+="\t\t\t"+"String sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"=\"\";\r\n";
						sVariablesArray+="\t\t\t"+"sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"="+GetNombreClase(tableSchema.ToString())+"ConstantesFunciones.getQueryStringValoresLista"+GetNombreClase(tableSchema.ToString())+"("+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.S"+column.Name.ToUpper()+"CODIGO);\r\n\r\n";
						
						strQueryStringValoresLista="sQueryStringValoresLista"+GetNombreClase(tableSchema.ToString());
					}
					*/
					
					/*
					if(!EsSwing) {
						sVariablesArray+="\t\t\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
					} else {
						sVariablesArray+="\t\t\t\t\t\t"+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
					}
					
					sVariablesArray+="\t\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
					sVariablesArray+="\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
					sVariablesArray+="\t\t\t\t\t\t}";
					*/
					
					//if busqueda session
					//sVariablesArray+="\r\n\r\n\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {\r\n";
					
					/*
					sVariablesArray+="\t\t\t\t//ARCHITECTURE";
					sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strComentarioParaEjb+strVerificarDeshabilitarFk+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Locic.getTodos"+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination());\r\n";
					sVariablesArray+="\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Locic.get"+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					sVariablesArray+="\r\n\t\t\t\t}";
					sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Implementable.getTodos"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
					sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
					sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioNoLoadFk+strVerificarDeshabilitarFk+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"ImplementableHome.getTodos"+GetNombreClaseC(tableSchemaEncontrada.ToString())+"sWithConnection("+strQueryStringValoresLista+",new Pagination(),datosCliente);";
					sVariablesArray+="\r\n\t\t\t\t}\r\n\r\n";
					*/
					
					/*
					if(column.AllowDBNull) {
						sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Nulo;\r\n";
					}
					*/
					
					//sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";		
					
					/*
					if(!blnVerificarDeshabilitarFk) {
						sVariablesArray+="\r\n\t\t\t\t//SE VA A DESHABILITAR EL FK PARA BUSCAR";
						sVariablesArray+="\r\n\r\n\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(false);";		
						sVariablesArray+="\r\n\t\t\t\tthis.setPermisosMantenimientoUsuario"+GetNombreClase(TablaBase.ToString())+"(false);";	
					}
					*/
					
					//if busqueda session
					//sVariablesArray+="\r\n\t\t\t} else {\r\n";
					//sVariablesArray+="\t\t\t\tthis.setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(true);\r\n";//DESHABILITA BUSQUEDAS SIN FK ACTUAL
					
					sVariablesArray+="\r\n\t\t\t\t\t\t//ARCHITECTURE\r\n";
					sVariablesArray+="\r\n\t\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
					sVariablesArray+="\r\n\t\t\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Logic.getEntityWithConnection(finalQueryGlobal);\r\n";
					sVariablesArray+="\t\t\t\t\t\t\t"+strComentarioParaEjb+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"=this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +"Logic.get"+ GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					sVariablesArray+=" else if(Constantes.ISUSAEJBREMOTE) {";
					if(ConSessionBeans || ConRMI){
					sVariablesArray+="\r\n\t\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Implementable.getEntity(finalQueryGlobal,this.datosCliente);";
					}
					sVariablesArray+="\r\n\t\t\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
					if(ConSessionBeans || ConRMI){
					sVariablesArray+="\r\n\t\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +""+strParametro+"="+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"ImplementableHome.getEntity(finalQueryGlobal,this.datosCliente);";
					}
					sVariablesArray+="\r\n\t\t\t\t\t\t}";
					sVariablesArray+="\r\n\t\t\t\t\t\t//ARCHITECTURE";
					
					//end else
					//sVariablesArray+="\r\n\t\t\t}";
					
					
					sVariablesArray+="\r\n\t\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t\t\tcatch(Exception e)\r\n";
					sVariablesArray+="\t\t\t\t\t{\r\n";
					sVariablesArray+="\t\t\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t\t\t}\r\n";
				
					//FIN CARGAR PARAMETRO
				
					//sVariablesArray+=strBusquedaFKComment+"this.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(finalQueryGlobal);";
					
					if(EsSwing) {
						sVariablesArray+="\r\n\t\t\t\t}\r\n";
					}
					
				}
			}
			
	return sVariablesArray;
}

public  String DefinirVariablesArrayForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
			sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseC(tableSchemaForeignKey.ToString())+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> get"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";
	
			sVariablesArray+="\tpublic void set"+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+"> "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";									
		}
	}
			
	return sVariablesArray;
}

public  String DefinirVariablesArrayParametros()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
				
					sVariablesArray+="\r\n\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
					
					sVariablesArray+="\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" get"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"() ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\treturn "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+";\r\n";
					sVariablesArray+="\t}\r\n\r\n";
		
					sVariablesArray+="\tpublic void set"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"("+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+" = "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n";
					sVariablesArray+="\t}\r\n";
				}
			}
			
	/*
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
				
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
			}	
		}
	*/
			
	return sVariablesArray;
}

public  String DefinirVariablesLogicForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(column),column)) {
				continue;
			}
						
			tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
			//if(TablaBase.Name.Equals(tableSchema.Name)) {
			if(GetNombreCompletoClaseRelacionadaFromColumn(column).Equals(TablaBase.Name)) {
				continue;
			}
			
			sVariablesArray+="\r\n\t"+sEjbComment+"public "+GetNombreClaseC(tableSchema.ToString())+"Logic "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Logic;";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
			
			/*
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";

			sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";
			*/
		}	
	}
	return sVariablesArray;
}

public  String DefinirVariablesLogicParametros()
{
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	String sVariablesArray="";
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";
			String sNombrePakage="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					sVariablesArray+="\r\n\t"+sEjbComment+"public "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic;";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";

				}
			}
			
	return sVariablesArray;
}

public  String DefinirVariablesLogicInicializarForeignKeys()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
			if(TablaBase.Name.Equals(tableSchema.Name)) {
				continue;
			}
			
			sVariablesArray+="\r\n\t\t\t"+sEjbComment+"this."+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"Logic=new "+GetNombreClaseC(tableSchema.ToString())+"Logic();";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
			
			/*
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";

			sVariablesArray+="\tpublic void set"+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";
			*/
		}	
	}
	return sVariablesArray;
}

public  String DefinirVariablesLogicInicializarParametros()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	String sEjbComment="";
	
	if(ConEjb){
		sEjbComment="//";
	}
	
	TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					sVariablesArray+="\r\n\t\t\t"+sEjbComment+"this."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+"Logic=new "+GetNombreClaseC(tableSchemaEncontrada.ToString())+"Logic();";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
					
					//sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+"=new "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					
					
				}
			}
			
	return sVariablesArray;
}

public  String DefinirVariablesArrayForeignKeysInicializar()
{
	String sVariablesArray="";
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {	
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;";
				/*
				sVariablesArray+="\tpublic "+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"() ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n\r\n";
	
				sVariablesArray+="\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"s"+strForeignKey+"("+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
				sVariablesArray+="\t}\r\n";
				*/
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			//tableSchema=GetNombreTablaRelacionadaFromColumn(column);
			sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">"+strTypeNewCollectionEnd+" ;";
												
		}
	}
	
	return sVariablesArray;
}

public  String DefinirVariablesArrayParametrosInicializar()
{
	String sVariablesArray="";
		TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";sModuloParametro+="";
			String sNombrePakage="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sNombrePakage=GetPackageTableFromProperties(tableSchemaEncontrada);
					
					sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+"=new "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+"();";
					
					/*
					sVariablesArray+="\r\n\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n\r\n";//"=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+" ;\r\n\r\n";
					
					sVariablesArray+="\tpublic "+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" get"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"() ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\treturn "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+";\r\n";
					sVariablesArray+="\t}\r\n\r\n";
		
					sVariablesArray+="\tpublic void set"+ GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+"("+sNombrePakage+GetNombreClaseC(tableSchemaEncontrada.ToString())+" "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+") ";
					sVariablesArray+="{\r\n";
					sVariablesArray+="\t\tthis."+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString()) +strParametro+" = "+GetNombreClaseObjetoC(tableSchemaEncontrada.ToString())+strParametro+";\r\n";
					sVariablesArray+="\t}\r\n";
					*/
				}
			}
	
	return sVariablesArray;
}

public  String DefinirFuncionesGuardarForeignKeys()
{
	String sVariablesArray="";
	String sVariablesArrays="";
	String sNombrePakage="";sNombrePakage+="";
	TableSchema tableSchema=null;
	
	
	if(!blnNoStandardTableFromProperties) {
		/*	
		foreach(ColumnSchema column in TablaBase.Columns) {
			if(column.IsForeignKeyMember) {
			}	
		}
		*/
	} else {
		//ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
		ArrayList arrayListForeignKeys =new ArrayList();
		ArrayList arrayListPK =new ArrayList();
		ArrayList arrayListFK =new ArrayList();
		ArrayList arrayListPKFK =new ArrayList();
		
		String strPK="";
		String strFK="";
		String strPKFK="";
		
		foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {		
			//sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
			arrayListPK =new ArrayList();
			arrayListFK =new ArrayList();
			arrayListPKFK =new ArrayList();
			
			if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
				arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
				
				
				sVariablesArray="\r\n\tpublic void guardar"+ GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Para"+ GetNombreClaseC(TablaBase.ToString())+strForeignKey+"("+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+" "+GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+") throws Exception ";
				sVariablesArray+="{\r\n";
				//sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
				
				foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.PrimaryKeyMemberColumns) {
					strPK=GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"."+GetParameterClaseMethodC(memberColumnSchema.Column,true,false,false,"");
					arrayListPK.Add(strPK);
				}
				
				foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.ForeignKeyMemberColumns) {
					strFK=GetSetPartParameterClaseMethodC(memberColumnSchema.Column,"this."+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString()),true);
					arrayListFK.Add(strFK);
				}
				
				for (int i = 0; i < arrayListPK.Count; i++){
					strPKFK="\r\n\t\t"+((String)arrayListFK[i])+((String)arrayListPK[i])+");";
					arrayListPKFK.Add(strPKFK);
				}				
				
				foreach(String strPKFKArray in arrayListPKFK) {
					sVariablesArray+=strPKFKArray;					
				}
				
				sVariablesArray+="\r\n\t}\r\n\r\n";	
				
				//System.Windows.Forms.MessageBox.Show(sVariablesArray);
				
				sVariablesArrays+=sVariablesArray;
			}
			
			
		}
	}
			
	return sVariablesArrays;
}

public  String DefinirVariablesActualForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	TableSchema tableSchemaFk;
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			tableSchemaFk=GetTableSchemaFromColumnForeignKey(column);
			
			if(!blnExiste) {
				blnExiste=true;
			}
			
			//SI ES AUTOREFERENCIADA, YA EXISTE VARIABLE NO TOMAR EN CUENTA
			//if(!tableSchemaFk.Name.Equals(TablaBase.Name)) {
			if(!GetNombreCompletoClaseRelacionadaFromColumn(column).Equals(TablaBase.Name)) {
				sVariablesArray+="\r\n\tpublic Long "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=0L;";
				sVariablesArray+="\r\n\r\n\tpublic Long get"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual() {";
				sVariablesArray+="\r\n\t\treturn "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual;";
				sVariablesArray+="\r\n\t}";
			
				sVariablesArray+="\r\n\r\n\tpublic void set"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual(Long "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual) {";
				sVariablesArray+="\r\n\t\tthis."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual= "+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual;";
				sVariablesArray+="\r\n\t}";
			}
		}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public  String DefinirVariablesActualInicializarForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			
			sVariablesArray+="\r\n\t\t\tthis."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual=0L;";
		
		}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t\t\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}

public  String DefinirFuncionesSeleccionarActualForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	String strEjbComment="";
	
	if(ConEjb){
		strEjbComment="//";
	}
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			if(!blnExiste) {
				blnExiste=true;
			}
			/*
			sVariablesArray+="\r\n\tpublic Long "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual=0L;";
			sVariablesArray+="\r\n\r\n\tpublic Long get"+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual() {";
			sVariablesArray+="\r\n\t\treturn "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual;";
			sVariablesArray+="\r\n\t}";
		
			sVariablesArray+="\r\n\r\n\tpublic void set"+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual(Long "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual) {";
			sVariablesArray+="\r\n\t\tthis."+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual= "+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual;";
			sVariablesArray+="\r\n\t}";
			*/
			
			sVariablesArray+="\r\n\tpublic void seleccionar"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual() throws Exception {";
			sVariablesArray+="\r\n\t\ttry	{";
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux=new "+GetNombreClaseRelacionadaFromColumn(column)+"();";
					
			//sVariablesArray+="\r\n\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity("+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual);";
			
			sVariablesArray+="\r\n\r\n\t\t\tif(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual != null && this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual>0) {";
			
			sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
			sVariablesArray+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sVariablesArray+="\r\n\t\t\t\t\t"+strEjbComment+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Logic.getEntityWithConnection(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t\t\t"+strEjbComment+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"();";			
			sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			if(ConSessionBeans || ConRMI){
			sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual,this.datosCliente);";
			}
			sVariablesArray+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			if(ConSessionBeans || ConRMI){
			sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getEntity(this."+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual,this.datosCliente);";
			}
			sVariablesArray+="\r\n\t\t\t\t}";
			sVariablesArray+="\r\n\t\t\t\t//ARCHITECTURE";
			
			
			sVariablesArray+="\r\n\r\n\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+";";
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey.add("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"Aux);";
			sVariablesArray+="\r\n\t\t\t}";
			
			sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
			if(!EsSwing) {
				sVariablesArray+="\r\n\t\t\tFuncionesFaces.manageException(this, e,logger);";
			} else {
				sVariablesArray+="\r\n\t\t\tFuncionesSwing.manageException(this, e,logger);";
			}
			sVariablesArray+="\r\n\t\t}";
			sVariablesArray+="\r\n\t}";
			}	
	}
	
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	
	return sVariablesArray;
}


public  String UsarFuncionesSeleccionarActualComoAuxiliarForeignKeysConBusqueda()
{
	String sVariablesArray="";
	bool blnExiste=false;	
	
	String strEjbComment="";
	strEjbComment+="";
	
	if(ConEjb){
		strEjbComment="//";
	}
	
	string strPrefijoTabla=GetPrefijoTablaC();
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember&&GetBusquedaForeignKeyColumnFromPropertiesC(column)) {
			/*
			if(!blnExiste) {
				blnExiste=true;
			}
			*/
			string strPrefijoTipo = GetPrefijoTipoC(column);
			string strNombre = GetNombreColumnaClaseC(column);
			
			sVariablesArray+="\r\n\r\n\t\t\t"+strId+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual="+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strPrefijoTabla+strPrefijoTipo+strNombre+"();";
			sVariablesArray+="\r\n\t\t\tthis.seleccionar"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Actual();";
			
			/*
			sVariablesArray+="\r\n\tpublic void seleccionar"+GetNombreClaseRelacionadaFromColumn(column)+"Actual() throws Exception {";
			sVariablesArray+="\r\n\t\ttry	{";
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux=new "+GetNombreClaseRelacionadaFromColumn(column)+"();";
					
			sVariablesArray+="\r\n\r\n\t\t\t//ARCHITECTURE";
			sVariablesArray+="\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sVariablesArray+="\r\n\t\t\t\t"+strEjbComment+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Logic.getEntity("+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t\t"+strEjbComment+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Logic.get"+GetNombreClaseRelacionadaFromColumn(column)+"();";			
			sVariablesArray+="\r\n\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Implementable.getEntity("+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux= "+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"ImplementableHome.getEntity("+strId+GetNombreClaseRelacionadaFromColumn(column)+"Actual);";
			sVariablesArray+="\r\n\t\t\t}";
			sVariablesArray+="\r\n\t\t\t//ARCHITECTURE";
				
			sVariablesArray+="\r\n\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey=new "+strTypeNewCollection+"<"+GetNombreClaseRelacionadaFromColumn(column)+">"+strTypeNewCollectionEnd+";";
			sVariablesArray+="\r\n\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey.add("+GetNombreClaseRelacionadaFromColumn(column).ToLower()+"Aux);";
				
			sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
			if(!EsSwing) {
				sVariablesArray+="\r\n\t\t\tFuncionesFaces.manageException(this, e,logger);";
			} else {
				sVariablesArray+="\r\n\t\t\tFuncionesSwing.manageException(this, e,logger);";
			}
			sVariablesArray+="\r\n\t\t}";
			sVariablesArray+="\r\n\t}";
				
			*/
		}
	}
	
	/*
	if(blnExiste) {
		sVariablesArray="\r\n\t//BUSQUEDA INTERNA FK"+sVariablesArray;
	}
	*/
	
	return sVariablesArray;
}
	
/*
public void cargarCombosFramePerfilstrForeignKey()throws Exception
	{
		try
		{
			
			JComboBoxBinding jComboBoxBindingPerfil;

			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.perfilstrForeignKey, this.jComboBoxIdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();
			
			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this.perfilstrForeignKey, this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();

		}
		catch(Exception e)
		{
			throw e;
		}
	}
*/

	public String GetSetActionIndicesVariablesTablasClases(ColumnSchema columnForeignKey) {
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sNombrePakage="";
			TableSchema tableSchema=null;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {	
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							;
						} else {
							;
						}
					}	
					
					int count=1;
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {						
						if(columnForeignKey.Name!=memberColumnSchema.Name) {
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {							
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							tableSchema=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							//sControlesPanelesBusquedas+="\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema))+"DefaultListCellRenderer());\r\n\r\n";
			
							sControlesPanelesBusquedas+="\r\n\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".addActionListener (new ActionListener () {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"("+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+",\""+indexSchema.Name+"\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t}\r\n";
							sControlesPanelesBusquedas+="\t\t\t});\r\n";
					
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//sInitFuncion+=";\r\n";	
							}
						} else {
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
					
					

					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
	}
		
public String GetIndicesVariablesTablasClases(ColumnSchema columnForeignKey) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sNombrePakage="";
			TableSchema tableSchema=null;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{	
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						
						
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						if(columnForeignKey.Name!=memberColumnSchema.Name)
						{
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							tableSchema=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
							sControlesPanelesBusquedas+="\r\n\t\t\t\tif(sFormularioTipoBusqueda.equals(\""+indexSchema.Name+"\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+">(this."+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema)).ToLower()+"sForeignKey), this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+",\""+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+"\");\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t} else {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".removeAllItems();\r\n\r\n";
						
							sControlesPanelesBusquedas+="\t\t\t\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(memberColumnSchema)+" "+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema).ToLower()+":this."+ GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema).ToLower()+"sForeignKey) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".addItem("+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema).ToLower()+");\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\t}\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t}\r\n\r\n";
							
							if(ConSwingComboListCellRendererClase) {
								sControlesPanelesBusquedas+="\t\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema))+"DefaultListCellRenderer());\r\n\r\n";
							}
							
							sControlesPanelesBusquedas+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+".bind();\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t}\r\n";
							sControlesPanelesBusquedas+="\r\n\t\t\t\t}";
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								//sInitFuncion+=";\r\n";	
							}
						}
						else
						{
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
					
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
																																						
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
		}

	public String GetSetSelectedItemIndicesVariablesTablasClases(ColumnSchema columnForeignKey) {
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sNombrePakage="";
			TableSchema tableSchema=null;
			bool blnExisteBusquedaFkVariableGlobal=false;

			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {	
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
						continue;
					}
					
					if(indexSchema.IsUnique) {
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					} else {
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							;
						} else {
							;
						}
					}	
					
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {						
						if(columnForeignKey.Name!=memberColumnSchema.Name) {
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {							
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}

							tableSchema=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							sNombrePakage=GetPackageTableFromProperties(tableSchema);
			
							sControlesPanelesBusquedas+="\t\t\t\t\tif(!conSelectedIndex) {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setSelectedItem("+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema))+");\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t} else {\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t\tthis."+GetNombreControlVariablesSwingInternoC(memberColumnSchema,indexSchema.Name,"",memberColumnSchema.IsForeignKeyMember)+".setSelectedIndex(iIndexSelected);\r\n";
							sControlesPanelesBusquedas+="\t\t\t\t\t}\r\n";
							
							if(!indexSchema.MemberColumns.Count.Equals(count)) {
								//sInitFuncion+=";\r\n";	
							}
						} else {
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
		}
		
		
public  String GetCargarCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{							
				sVariablesArray+="\t\t\tthis.cargarCombosFrame"+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey(\"Todos\");\r\n";
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\t\t\tthis.cargarCombosFrame"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"sForeignKey(\"Todos\");\r\n";									
		}
	}
	
	return sVariablesArray;
}

public  String GetInitActionsFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					//Trace.WriteLine(column.Name);
					
					sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+",\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t});\r\n";
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addActionListener (new ActionListener () {\r\n";
						sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
						sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)/*GetNombreClaseC(tableSchema.ToString())*/+"("+"jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
						sVariablesArray+="\t\t\t\t}\r\n";
						sVariablesArray+="\t\t\t});\r\n";
					}
					
					sVariablesArray+=GetSetActionIndicesVariablesTablasClases(column);
			
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String GetAddItemDefectoFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	bool esPrimero=true;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);								
				
				if(esPrimero){
					if(!EsSwing) {
						sVariablesArray+="\r\n\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=("+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+")FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.SSESSIONNAME);\r\n\r\n";
					} else {
						//sVariablesArray+="\t\t\t"+/*GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+*/"this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n\r\n";
					}
					
					sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"==null) {\r\n";
					sVariablesArray+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"=new "+GetNombreClaseC(TablaBase.ToString())+strPrefijoJSFSessionFaces+"();\r\n";
					sVariablesArray+="\t\t\t}";
				}
				
				
				//if busqueda session
				sVariablesArray+="\r\n\r\n\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"()) {";
				
				
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseC(tableSchema.ToString())+" "+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"=new "+GetNombreClaseC(tableSchema.ToString())+"();";				
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.set"+GetNombreClaseC(tableSchema.ToString())+"Descripcion("+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",Constantes.SMENSAJE_ESCOJA_OPCION);";
				sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+".set"+strIdGetSet+"(null);";//"(-1L);";
				
				sVariablesArray+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.ExisteEnLista(this."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey,"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",true)) {";
				sVariablesArray+="\r\n\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"sForeignKey.add(0,"+GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+");";
				sVariablesArray+="\r\n\t\t\t\t}";
				
				sVariablesArray+="\r\n\t\t\t}";
				/*
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					
					sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t});\r\n";
				}
				*/
				
				if(esPrimero){
					esPrimero=false;
				}
			}	
		}
	} else {
		
	}
	return sVariablesArray;
}

public  String GetSetItemDefectoFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);								
				
				sVariablesArray+="\r\n\t\t\tif(this.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".getItemCount()>0) {";
				sVariablesArray+="\r\n\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(0);";
				sVariablesArray+="\r\n\r\n\t\t\t}";
				
				/*
				sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchema.ToString())+" "+GetNombreClaseObjetoC(tableSchema.ToString())+"=new "+GetNombreClaseC(tableSchema.ToString())+"();";				
				sVariablesArray+="\r\n\t\t\t"+GetNombreClaseC(tableSchema.ToString())+"ConstantesFunciones.set"+GetNombreClaseC(tableSchema.ToString())+"Descripcion("+GetNombreClaseObjetoC(tableSchema.ToString())+",Constantes.SMENSAJE_ESCOJA_OPCION);";
				sVariablesArray+="\r\n\t\t\t"+GetNombreClaseObjetoC(tableSchema.ToString())+".set"+strIdGetSet+"(null);";//"(-1L);";
				
				sVariablesArray+="\r\n\r\n\t\t\tthis."+GetNombreClaseObjetoC(tableSchema.ToString())+"sForeignKey.add(0,"+GetNombreClaseObjetoC(tableSchema.ToString())+");\r\n";
				*/
				
				/*
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					
					sVariablesArray+="\r\n\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreClaseC(tableSchema.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t}\r\n";
					sVariablesArray+="\t\t\t});\r\n";
				}
				*/
			}	
		}
	} else {
		
	}
	return sVariablesArray;
}

public  String GetCallInitActionsFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	String sComboGenericoParametro="";
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				sComboGenericoParametro="";
				
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				if(EsSwing) {
					sComboGenericoParametro="JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+",";
				}
				
				sVariablesArray+="\r\n\r\n";
				if(GetConEventChangeColumnFromPropertiesC(column)) {					
					//Trace.WriteLine(column.Name);
					
					sVariablesArray+="\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+/*GetNombreClaseC(tableSchema.ToString())*/GetNombreCompletoClaseRelacionadaFromColumn(column)+"("+sComboGenericoParametro+"String sFormularioTipoBusqueda) throws Exception {\r\n";
					//sVariablesArray+="\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"();";
					sVariablesArray+=""+GetCallRecargarActionsFrameColumnsVariablestrForeignKeys(column);
					
					
					sVariablesArray+="\r\n\t}";
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String GetRecargarActionsFrameColumnsVariablestrForeignKeys2()
{
	String sVariablesArray="";
		
		
	
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	TableSchema tableSchemaEncontrada=null;
	String strPhpPunto="";
							
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {	
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"(JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+",String sFormularioTipoBusqueda) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
					
					String strDepend=GetConEventDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++){//i+=2) {
								j=i+1;
								//Trace.WriteLine(i);
								//Trace.WriteLine(j);
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								
								//strDependSql=arrDepend[j];	
																
								tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																

								sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchema.ToString())+");\r\n";
								
								//if(!EsParaBusqueda) {
									sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
								
								/*} else {
									strControl+="\t\t\tif($"+strDepend+"!=null && $"+strDepend+"!='') {\r\n";
									strControl+="\t\t\t\t$sFinalQuery"+strPhpPunto+"=' "+strWhereAnd+" "+strDependSql+"='.$"+strDepend+";\r\n";
								}							
								*/
								
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
							}
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";		
					sVariablesArray+="\r\n\t\t\tthis.setActual"+GetNombreClaseC(tableSchemaEncontrada.ToString())+/*GetNombreCompletoClaseRelacionadaFromColumn(column)*/ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					sVariablesArray+="\r\n\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String GetCallRecargarActionsFrameColumnsVariablestrForeignKeys(ColumnSchema columnEvent)
{
	String sVariablesArray="";
	bool existe=false;	
				
	String sNombrePakage="";
	TableSchema tableSchema=null;
	TableSchema tableSchemaEvent=null;
	TableSchema tableSchemaEncontrada=null;
	String strPhpPunto="";
	String sComboGenericoParametro="";
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				sComboGenericoParametro="";								
				
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				tableSchemaEvent=GetNombreTablaRelacionadaFromColumn(columnEvent);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
								
				
				if(EsSwing) {
					sComboGenericoParametro="jComboBoxGenerico"+GetNombreClaseC(tableSchemaEvent.ToString())+",";
				}
				
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {
					existe=false;
					
					sVariablesArray+="";//"\r\n\r\n";
					/*
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"() throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					*/
					String strDepend=GetConEventDependColumnFromPropertiesC(column);
					String strDependSql="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								//strDependSql=arrDepend[j];	
								
								if(strDependSql.Equals(GetNombreColumnFromPropertiesInterno(columnEvent,true))) {
									//sVariablesArray+="\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";					
									sVariablesArray+="\r\n\t\tthis.recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sComboGenericoParametro+"sFormularioTipoBusqueda,\""+GetNombreCompletoClaseRelacionadaFromColumn(columnEvent)+"\");";
									break;
								}
								/*								
								tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																

									sVariablesArray+="\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
								
								
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
								*/
							}
							
							
					/*		
					sVariablesArray+="\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					sVariablesArray+="\r\n\t\t\tthis.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"();";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";
					*/

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}


public  String GetRecargarActionsFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
	String sNombrePakage="";
	TableSchema tableSchemaOrigen=null;
	TableSchema tableSchemaEncontrada=null;
	ColumnSchema columnSchemaEncontrada=null;
	String strPhpPunto="";
	
	String sCommentWeb="";
	String sParametroComboGenerico="";
	
	if(!EsSwing) {
		sCommentWeb="//";
	}
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				sParametroComboGenerico="";
				
				tableSchemaOrigen=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchemaOrigen);
								
				if(EsSwing) {
					sParametroComboGenerico="JComboBox<?> jComboBoxGenerico"+GetNombreClaseC(tableSchemaOrigen.ToString())+",";
				}
				
				if(!GetConEventDependColumnFromPropertiesC(column).Equals("")) {	
					sVariablesArray+="\r\n\r\n";
					
					sVariablesArray+="\r\n\r\n\tpublic void recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreColumnFromPropertiesInterno(column,true)+"("+sParametroComboGenerico+"String sFormularioTipoBusqueda,String sTipoComboOrigen) throws Exception {"; 
					sVariablesArray+="\r\n\t\ttry {";
					sVariablesArray+="\r\n\r\n\t\t\tString sFinalQuery"+strPhpPunto+"=\"\";";
					//sVariablesArray+="\r\n\t\t\tthis.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n";
					
					String strDepend=GetConEventDependColumnFromPropertiesC(column);
					String strDependSql="";
					String strNombreClaseClave="";
					
					string[] arrDepend=strDepend.Split(',');
							bool blnExiste=false;
							String strWhereAnd=" WHERE ";
							
							//Trace.WriteLine(arrDepend.Length);
							for (int i = 0,j=0; i < arrDepend.Length; i++) {//i+=2) {
								j=i+1;
								//Trace.WriteLine(i);
								//Trace.WriteLine(j);
								
								//strDepend=strDepend.Split(',')[i];
								//strDependSql=strDepend.Split(',')[j];							
								
								strDepend=arrDepend[i];
								strDependSql=arrDepend[i];	
								
								//strDependSql=arrDepend[j];	
																
								//Trace.WriteLine(strDepend.Replace(strId+"_","")+"-->"+GetNombreCompletoClaseRelacionadaFromColumn(column));
								//PORSI_GetNombreCompletoClaseRelacionadaFromColumn(column) ESTO PARA PRODUCTO (Linea,LineaGrupo,LineaCategoria,LineaMarca)
								
								columnSchemaEncontrada=GetColumnaFromNombreC(strDepend,TablaBase);
								
								//ANTES
								//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																								
								tableSchemaEncontrada=GetTableSchemaFromColumnForeignKey(columnSchemaEncontrada);
								
								
								//strNombreClaseClave=GetNombreClaseC(tableSchemaEncontrada.ToString());
								strNombreClaseClave=GetNombreCompletoClaseRelacionadaFromColumn(column);
								
								if(!GetNombreClaseC(tableSchemaEncontrada.ToString()).Equals(GetNombreCompletoClaseRelacionadaFromColumn(column))) {
									//tableSchemaEncontrada=GetTablaFromNombreC(strDepend.Replace(strId+"_",""),TablaBase);																
								
									strDependSql=strId+"_"+GetNombreTableFromProperties(tableSchemaEncontrada);
								}
								
								sVariablesArray+="\r\n\r\n\t\t\tif(sTipoComboOrigen.equals(\""+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+"\")){";
								sVariablesArray+="\r\n\t\t\t\t"+sCommentWeb+"this.setActualParaGuardar"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchemaEncontrada)+ "ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+",jComboBoxGenerico"+GetNombreClaseC(tableSchemaOrigen.ToString())+");";
								sVariablesArray+="\r\n\t\t\t}";
								
								//if(!EsParaBusqueda) {
									sVariablesArray+="\r\n\r\n\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=null && this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"()!=0L) {\r\n";
									sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=\"+this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"();\r\n";
								
								/*} else {
									strControl+="\t\t\tif($"+strDepend+"!=null && $"+strDepend+"!='') {\r\n";
									strControl+="\t\t\t\t$sFinalQuery"+strPhpPunto+"=' "+strWhereAnd+" "+strDependSql+"='.$"+strDepend+";\r\n";
								}							
								*/
								
								sVariablesArray+="\t\t\t} else {\r\n";
								sVariablesArray+="\t\t\t\tsFinalQuery"+strPhpPunto+"+=\" "+strWhereAnd+" "+strDependSql+"=-1\";\r\n";
								sVariablesArray+="\t\t\t}\r\n\r\n";
								
								if(!blnExiste) {
									blnExiste=true;
									strWhereAnd=" AND ";
									//strPhpPunto=".";
								}
							}
					//PORSI_GetNombreCompletoClaseRelacionadaFromColumn(column) ESTO PARA PRODUCTO (Linea,LineaGrupo,LineaCategoria,LineaMarca)
					
					sVariablesArray+="\r\n\r\n\t\t\t//BUCLE RECURSIVO";
					sVariablesArray+="\r\n\t\t\tthis.setActual"+strNombreClaseClave+"ForeignKey(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strDepend+"(),true,sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t\tthis.cargarCombos"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"Lista(sFinalQuery);";
					sVariablesArray+="\r\n\t\t\t"+sCommentWeb+"this.cargarCombosFrame"+GetNombreCompletoClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"(sFormularioTipoBusqueda);";
					
					sVariablesArray+="\r\n\r\n\t\t} catch(Exception e) {";
					sVariablesArray+="\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);";
					sVariablesArray+="\r\n\t\t}";
					sVariablesArray+="\r\n\t}";

					
					//Trace.WriteLine(column.Name);
					/*
					sVariablesArray+="\r\n\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\ttry {recargarForm"+GetNombreClaseC(TablaBase.ToString())+"();} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t}\r\n";
					sVariablesArray+="\t\t});\r\n";
					*/
				}
				
				/*
				sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
				*/
			}	
		}
	} else {
		/*
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
		*/
	}
	return sVariablesArray;
}

public  String SetSelectedItemCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\t\tpublic void setSelectedItemCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKey("+GetNombreClaseC(tableSchema.ToString())+" "+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+",int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tif(conFormulario) {\r\n";					
						sVariablesArray+="\t\t\t\t\tif(!conSelectedIndex) {\r\n";
						sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".setSelectedItem("+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+");\r\n";						
						sVariablesArray+="\t\t\t\t\t} else {\r\n";
						sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".setSelectedIndex(iIndexSelected);\r\n";
						sVariablesArray+="\t\t\t\t\t}\r\n";
						sVariablesArray+="\t\t\t\t}\r\n\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tif(conBusqueda) {\r\n";					
						sVariablesArray+=GetSetSelectedItemIndicesVariablesTablasClases(column);
						sVariablesArray+="\t\t\t\t}\r\n";						
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						if(ConSwingComboListCellRendererClase) {
							sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						}
						
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
	}
	return sVariablesArray;
}

public  String CargarCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	
	String sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\r\n\t\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })";
				sVariablesArray+="\r\n\t\tpublic void cargarCombosFrame"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"sForeignKey(String sFormularioTipoBusqueda)throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
					
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"=null;\r\n\r\n";			
						sVariablesArray+="\t\t\t\tif(sFormularioTipoBusqueda.equals(\"Formulario\") || sFormularioTipoBusqueda.equals(\"Todos\")){\r\n\r\n";
						
						sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
						sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+",\"jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n";					
						sVariablesArray+="\t\t\t\t\t} else {\r\n";
						sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".removeAllItems();\r\n\r\n";
						
						sVariablesArray+="\t\t\t\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+":this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey) {\r\n";
						sVariablesArray+="\t\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".addItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+");\r\n";
						sVariablesArray+="\t\t\t\t\t\t}\r\n";
						sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
						
						if(ConSwingComboListCellRendererClase) {
							sVariablesArray+="\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";					
						}
						
						
						sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
						sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n";
						sVariablesArray+="\t\t\t\t\t}\r\n";
						
						if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
							/*
							sVariablesArray+="\r\n\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\");\r\n";//strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)					
							sVariablesArray+="\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n";//strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)					
							sVariablesArray+="\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n";							
							*/
							//SE REPITE ANTERIOR SOLO CAMBIA SUFIJO ParaTabla
							sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey), this.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla,\"jComboBox"+GetNombreColumnaClaseC(column)+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla\");\r\n";					
							sVariablesArray+="\t\t\t\t\t} else {\r\n";
							sVariablesArray+="\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.removeAllItems();\r\n\r\n";
							sVariablesArray+="\t\t\t\t\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+":this."+ GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey) {\r\n";
							sVariablesArray+="\t\t\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.addItem("+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+");\r\n";
							sVariablesArray+="\t\t\t\t\t\t}\r\n";
							sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
							
							if(ConSwingComboListCellRendererClase) {
								sVariablesArray+="\t\t\t\t\tthis.jComboBox"+GetNombreColumnaClaseC(column)/*strIdGetSet+ GetNombreCompletoClaseRelacionadaFromColumn(column)*/+""+GetNombreClaseC(TablaBase.ToString())+"ParaTabla.setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n\r\n";					
							}
							
							sVariablesArray+="\t\t\t\t\tif(!"+GetNombreClaseC(TablaBase.ToString())+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
							sVariablesArray+="\t\t\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"ParaTabla.bind();\r\n";
							sVariablesArray+="\t\t\t\t\t}\r\n";
						}
						
						sVariablesArray+="\t\t\t\t}\r\n";
						
						
						
						sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\r\n\t\t\t} ";
					sVariablesArray+=" catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
						
		sVariablesArray+="\t\tpublic void cargarCombosFrame"+GetNombreClaseC(tableSchemaForeignKey.ToString())+ "sForeignKey()throws Exception ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\ttry ";
					sVariablesArray+="{\r\n\r\n";
						
						sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
			
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">(this."+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
						
						if(ConSwingComboListCellRendererClase) {
							sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
						}
						
						
						sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();\r\n\r\n";
						
						//sVariablesArray+=GetIndicesVariablesTablasClases(column);
			
					sVariablesArray+="\t\t\t} ";
					sVariablesArray+="catch(Exception e) ";
					sVariablesArray+="{\r\n";
						sVariablesArray+="\t\t\t\tthrow e;\r\n";
					sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
	}
	return sVariablesArray;
}

public  String DefinirClassDefaultListCellRendererColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
	String 	sNombrePakage="";
	TableSchema tableSchema=null;
	
	if(!blnNoStandardTableFromProperties) {
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{	
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
				
				sVariablesArray+="\t\tclass "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer  extends DefaultListCellRenderer {";
				sVariablesArray+="\r\n\t\t\tprivate static final long serialVersionUID = 1L;";
				
				sVariablesArray+="\r\n\r\n\t\t\t@SuppressWarnings(\"rawtypes\")";
				sVariablesArray+="\r\n\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus) ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
						
				sVariablesArray+="\t\t\t\tif(value instanceof "+ GetNombreClaseRelacionadaFromColumn(column)+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\t\t"+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"=("+ sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+")value;\r\n";
				sVariablesArray+="\t\t\t\t\tthis.setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"));\r\n";
				sVariablesArray+="\t\t\t\t}\r\n\r\n";
						
				sVariablesArray+="\t\t\t\treturn this;\r\n";
				sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
																	
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
				sVariablesArray+="\t\tclass "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer  extends DefaultListCellRenderer ";
				sVariablesArray+="{\r\n";
							
				sVariablesArray+="\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus) ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
						
				sVariablesArray+="\t\t\t\tif(value instanceof "+GetNombreClaseC(tableSchemaForeignKey.ToString())+") ";
				sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\t\t\t"+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+" "+ GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"=("+ sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+")value;\r\n";
				sVariablesArray+="\t\t\t\t\tthis.setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion("+ GetNombreClaseObjetoC(tableSchemaForeignKey.ToString())+"));\r\n";
				sVariablesArray+="\t\t\t\t}\r\n\r\n";
						
				sVariablesArray+="\t\t\t\treturn this;\r\n";
				sVariablesArray+="\t\t\t}\r\n";
				sVariablesArray+="\t\t}\r\n";
		}
	}
	return sVariablesArray;
}

public  String ReDefinirColumnsTableVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	//sVariablesArray+="\r\n\t\tTableColumn tableColumn;\r\n\r\n";
	sVariablesArray+="\r\n\r\n";
			
	String sTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			sTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
			
			sVariablesArray+="\t\ttableColumn= this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumn(\""+sTitulo+"\");\r\n";
			sVariablesArray+="\t\ttableColumn.setCellRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n";
			sVariablesArray+="\t\ttableColumn.setCellEditor(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n\r\n";

		}	
	}
	return sVariablesArray;
}


	
public  String ReDefinirTableCellColumnsTableVariablestrForeignKeys()
{
	String sVariablesArray="";
			
	String sTitulo="";
		sTitulo+="";
	String strComentarioParaEjb="";
	
	if(ConEjb){
		strComentarioParaEjb="//";
	}
	
	String strFuncionBusquedaEjbInit="\r\n\t\t\t\t//ARCHITECTURE";
			strFuncionBusquedaEjbInit+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
	String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
		   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
	
	TableSchema tableSchema=null;
	String sNombrePakage="";
	String sCommentCombo="";
	String strSufijoAutoReferenciada="";
	
	if(!blnNoStandardTableFromProperties) {				
		foreach(ColumnSchema column in TablaBase.Columns)
		{
			if(column.IsForeignKeyMember)
			{
				strSufijoAutoReferenciada="";
				sCommentCombo="";
				
				tableSchema=GetNombreTablaRelacionadaFromColumn(column);
				sNombrePakage=GetPackageTableFromProperties(tableSchema);
					
				//YA TIENE
				/*
				if(TablaBase.Name.Equals(tableSchema.Name)) {
					strSufijoAutoReferenciada=strAutoRef;
				}
				*/
	
				sVariablesArray+="\r\n\t\tclass "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+strSufijoAutoReferenciada+"TableCell extends DefaultCellEditor implements TableCellRenderer {\r\n";//extends AbsactCellEditor ,  ,TableCellEditor
				//sVariablesArray+="\t\t{\r\n\r\n";
				sVariablesArray+="\t\t\tprivate static final long serialVersionUID = 1L;\r\n\r\n";
				sVariablesArray+="\t\t\tprotected JLabel jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JLabelMe();\r\n";
								
				sVariablesArray+="\t\t\t@SuppressWarnings(\"rawtypes\")\r\n";
				sVariablesArray+="\t\t\tprotected JComboBox jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JComboBoxMe();\r\n";
				
				sVariablesArray+="\t\t\tprotected Object valor=new Object();\r\n";
				sVariablesArray+="\t\t\tprotected List<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey=new ArrayList<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n";
				sVariablesArray+="\t\t\tprotected Border borderResaltar=null;\r\n\r\n";
				
				sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell() {\r\n";
				sVariablesArray+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(JCheckBox checkBox) {\r\n";
				sVariablesArray+="\t\t\t\tsuper(checkBox);\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\t@SuppressWarnings(\"rawtypes\")\r\n";
				sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(JComboBox jcComboBox) {\r\n";
				sVariablesArray+="\t\t\t\tsuper(jcComboBox);\r\n";
				sVariablesArray+="\t\t\t\tthis.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=jcComboBox;\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
								
				sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(List<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey) {\r\n";
				sVariablesArray+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
				sVariablesArray+="\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey;\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tpublic "+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell(List<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey,Border borderResaltar) {\r\n";
				sVariablesArray+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
				sVariablesArray+="\t\t\t\tthis."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey="+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey;\r\n";
				sVariablesArray+="\t\t\t\tthis.borderResaltar=borderResaltar;\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
		
				sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {\r\n";
				sVariablesArray+="\t\t\ttry{\r\n";
				
				//DESCOMENTAR PARA DEEPLOAD
				//sVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
				//sVariablesArray+="\t\t\t\tclasses.add(new Classe("+ GetNombreClaseRelacionadaFromColumn(column)+".class));\r\n\r\n";
				
				sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";  
				
				sVariablesArray+=strFuncionBusquedaEjbInit;
				sVariablesArray+="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];";
				sVariablesArray+=strFuncionBusquedaEjbMiddle;
				sVariablesArray+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];";
				sVariablesArray+=strFuncionBusquedaEjbEnd;
			
				/*
				sVariablesArray+=strFuncionBusquedaEjbInit;
				
				sVariablesArray+="\r\n\t\t\t\t\ttry {\r\n";
					
				
				sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getNewConnexionToDeep();\r\n";
				sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
				sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.commitNewConnexionToDeep();\r\n";
				sVariablesArray+="\t\t\t\t\t} ";
				sVariablesArray+="catch(Exception e) {\r\n";
				//sVariablesArray+="\r\n";
				sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.rollbackNewConnexionToDeep();\r\n";
				sVariablesArray+="\t\t\t\t\t} ";
				sVariablesArray+="finally {";
				sVariablesArray+="\r\n";
				sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.closeNewConnexionToDeep();\r\n";
				sVariablesArray+="\t\t\t\t\t}\r\n";
				
				sVariablesArray+=strFuncionBusquedaEjbMiddle;	
				if(ConSessionBeans || ConRMI){
				sVariablesArray+="\r\n\t\t\t\t\t"+ strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.deepLoadWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes,\"\", datosCliente);\r\n";			
				}				
				
				sVariablesArray+=strFuncionBusquedaEjbEnd;
				*/
						
				sVariablesArray+="\r\n\r\n\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JLabelMe();\r\n\r\n";
					//valor=value;
				//sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"()));\r\n\r\n";
				
				sVariablesArray+="\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged()) {\r\n";
				sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetPrefijoRelacionC()+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"_descripcion((getActual"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyDescripcion((Long)value)));\r\n";		
				sVariablesArray+="\t\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseObjetoC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"_descripcion());\r\n\r\n";
				
				sVariablesArray+="\t\t\t\tif(this.borderResaltar!=null) {\r\n";
				sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setBorder(this.borderResaltar);\r\n";
				sVariablesArray+="\t\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setOpaque(true);\r\n";
	    		sVariablesArray+="\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());\r\n\r\n";
		
				sVariablesArray+="\t\t\t\tif(isSelected) {\r\n";
				sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setForeground(FuncionesSwing.getColorSelectedForeground());\r\n";
				sVariablesArray+="\t\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\t} catch(Exception e) {\r\n";
				sVariablesArray+="\t\t\t;\r\n\t\t\t}\r\n\r\n";
				sVariablesArray+="\t\t\treturn jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
				sVariablesArray+="\r\n\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\r\n\t\t\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\r\n";
				sVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int row,int column) {\r\n";
				//sVariablesArray+="\t\t\t{\r\n";
				
				if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
					sCommentCombo="//";					
				}
				
				sVariablesArray+="\t\t\t\t"+sCommentCombo+"this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JComboBoxMe();\r\n\r\n";
				
				sVariablesArray+="\t\t\t\ttry{\r\n";
				
				sVariablesArray+="\t\t\t\t\tint intSelectedRow = row;\r\n";  
				
				sVariablesArray+=strFuncionBusquedaEjbInit;
				sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];";
				sVariablesArray+=strFuncionBusquedaEjbMiddle;
				sVariablesArray+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];";
				sVariablesArray+=strFuncionBusquedaEjbEnd;
				
					
				sVariablesArray+="\r\n\t\t\t\t\t"+sCommentCombo+"JComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"=null;\r\n\r\n";
	
				sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseRelacionadaFromColumn(column)+">(this."+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"sForeignKey), this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+");\r\n\r\n";
				
				if(ConSwingComboListCellRendererClase) {
					sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".setRenderer(new "+ GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"DefaultListCellRenderer());\r\n";
				}
				
	
				sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
					
				if(GetConEventChangeColumnFromPropertiesC(column)) {
					sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".addActionListener (new ActionListener () {\r\n";
					sVariablesArray+="\t\t\t\t\t\t"+sCommentCombo+"public void actionPerformed(ActionEvent e) {\r\n";
					sVariablesArray+="\t\t\t\t\t\t\t"+sCommentCombo+"try {recargarForm"+GetNombreClaseC(TablaBase.ToString())+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+",\"Formulario\");} catch (Exception e1) { e1.printStackTrace();}\r\n";
					sVariablesArray+="\t\t\t\t\t\t"+sCommentCombo+"}\r\n";
					sVariablesArray+="\t\t\t\t\t"+sCommentCombo+"});\r\n\r\n";
					
				}
					
				sVariablesArray+="\t\t\t\t\t//this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".setSelectedItem("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+ GetNombreClaseRelacionadaFromColumn(column)+"());\r\n\r\n";
				
				sVariablesArray+="\t\t\t\t\t//setActual"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKey((Long)value,false,\"Formulario\");\r\n\r\n";
				
				sVariablesArray+="\t\t\t\t\tsetActual"+ GetNombreCompletoClaseRelacionadaFromColumn(column)+"ForeignKeyGenerico((Long)value,this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+");\r\n\r\n";
				
				sVariablesArray+="\t\t\t\t\t//NO_FUNCIONA_"+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column)).ToLower()+"_descripcion(getActual"+GetNombreClaseC("dbo."+GetNombreCompletoClaseRelacionadaFromColumn(column))+"ForeignKeyDescripcion((Long)value));\r\n\r\n";
				
				sVariablesArray+="\t\t\t\t\tvalor=value;\r\n\r\n";
				
				sVariablesArray+="\t\t\t\t} catch(Exception e) {\r\n";
				sVariablesArray+="\t\t\t\t;\r\n\t\t\t\t}\r\n\r\n";
				
				
				sVariablesArray+="\t\t\t\treturn this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				sVariablesArray+="\t\t\tpublic Object getCellEditorValue() {\r\n";
				//sVariablesArray+="\t\t\t{\r\n";
				sVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseRelacionadaFromColumn(column)+")this.jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".getSelectedItem()).get"+strIdGetSet+"();\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				
				/*
				sVariablesArray+="\t\t\tpublic void addCellEditorListener(CellEditorListener arg0) {\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
		
				sVariablesArray+="\t\t\tpublic void cancelCellEditing() {\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
		
				sVariablesArray+="\t\t\tpublic boolean isCellEditable(EventObject arg0) {\r\n";
				sVariablesArray+="\t\t\t\treturn true;\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
		
				sVariablesArray+="\t\t\tpublic void removeCellEditorListener(CellEditorListener arg0) {\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
		
				sVariablesArray+="\t\t\tpublic boolean shouldSelectCell(EventObject arg0) {\r\n";
				sVariablesArray+="\t\t\t\treturn false;\r\n";
				sVariablesArray+="\t\t\t}\r\n\r\n";
				*/
				
				sVariablesArray+="\t\t\tpublic boolean stopCellEditing() {\r\n";
				sVariablesArray+="\t\t\t\tfireEditingStopped();\r\n\r\n";
				sVariablesArray+="\t\t\t\treturn true;\r\n";
				sVariablesArray+="\t\t\t}\r\n";	
				
				sVariablesArray+="\t\t}\r\n";								
			}	
		}
	} else {
		ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
								
		foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
			sVariablesArray+="\r\n\t\tclass "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"TableCell extends DefaultCellEditor implements TableCellRenderer\r\n";//extends AbsactCellEditor  , ,TableCellEditor
			sVariablesArray+="\t\t{\r\n";
			sVariablesArray+="\t\t\tJLabel jLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\tJComboBox jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\tObject valor;\r\n\r\n";
				
			sVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
		
			sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
			sVariablesArray+="\t\t\t{try{\r\n";
			sVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
			sVariablesArray+="\t\t\t\tclasses.add(new Classe("+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".class));\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";  
				
			sVariablesArray+=strFuncionBusquedaEjbInit;
			sVariablesArray+="\r\n\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[table.convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sVariablesArray+=strFuncionBusquedaEjbMiddle;
			sVariablesArray+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" =("+GetNombreClaseC(TablaBase.ToString())+") "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[table.convertRowIndexToModel(intSelectedRow)];\r\n\r\n";
			sVariablesArray+=strFuncionBusquedaEjbEnd;
			
			sVariablesArray+=strFuncionBusquedaEjbInit;
				
			sVariablesArray+="\r\n\t\t\t\t\ttry\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
				
			
			sVariablesArray+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.commitNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n";
			sVariablesArray+="\t\t\t\t\tcatch(Exception e)\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.rollbackNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
			sVariablesArray+="\t\t\t\t\tfinally\r\n";
			sVariablesArray+="\t\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.closeNewConnexionToDeep();\r\n";
			sVariablesArray+="\t\t\t\t\t}\r\n\r\n";
				
			sVariablesArray+=strFuncionBusquedaEjbMiddle;
			if(ConSessionBeans || ConRMI){
			sVariablesArray+="\r\n\t\t\t\t\t"+strCommentReporte+ GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.deepLoadWithConnection("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes,\"\", datosCliente);\r\n";			
			}
			//sVariablesArray+="\t\t\t\t\t";
			sVariablesArray+=strFuncionBusquedaEjbEnd;
						
			sVariablesArray+="\r\n\t\t\tjLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"=new JLabelMe();\r\n\r\n";
				//valor=value;
			sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".setText("+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"()));\r\n";
						
					
			sVariablesArray+="\t\t\t}catch(Exception e){;}\r\n\r\n";
			sVariablesArray+="\t\t\t\treturn jLabel"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n}";
				
				
			sVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"=new JComboBoxMe();\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n\r\n";
	
			sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<"+sNombrePakage+GetNombreClaseC(tableSchemaForeignKey.ToString())+">("+ GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower()+"sForeignKey), jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+");\r\n\r\n";
			
			if(ConSwingComboListCellRendererClase) {
				sVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".setRenderer(new "+ GetNombreClaseC(tableSchemaForeignKey.ToString())+"DefaultListCellRenderer());\r\n\r\n";
			}
				
			sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".bind();	\r\n\r\n";
					
			sVariablesArray+="\t\t\t\tvalor=value;\r\n";
			sVariablesArray+="\t\t\t\treturn jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+";\r\n";
			sVariablesArray+="\t\t\t}\r\n\r\n";
				
			sVariablesArray+="\t\t\tpublic Object getCellEditorValue()\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseC(tableSchemaForeignKey.ToString())+")jComboBox"+ GetNombreClaseC(tableSchemaForeignKey.ToString())+".getSelectedItem()).get"+strIdGetSet+"();\r\n";
			sVariablesArray+="\t\t\t}\r\n";
				
			sVariablesArray+="\t\t\tpublic void addCellEditorListener(CellEditorListener arg0) {\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic void cancelCellEditing() {\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic boolean isCellEditable(EventObject arg0) {\r\n";
			sVariablesArray+="\t\treturn true;\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic void removeCellEditorListener(CellEditorListener arg0) {\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic boolean shouldSelectCell(EventObject arg0) {\r\n";
			sVariablesArray+="\t\treturn false;\r\n";
			sVariablesArray+="\t\t}\r\n";
		
			sVariablesArray+="\t\t\tpublic boolean stopCellEditing() {\r\n";
			sVariablesArray+="\t\treturn false;\r\n";
			sVariablesArray+="\t\t}\r\n";	
				
			sVariablesArray+="\t\t}\r\n";		
		}
	}
			
	return sVariablesArray;
}

public String GetBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						
											
						sTablaClaseRelacionada+="\r\n\t\t\telse if(this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"())";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
								
						sTablaClaseRelacionada+="\r\n\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"Actual().equals(0L))";
						sTablaClaseRelacionada+="\r\n\t\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.sAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"\";";						
						sTablaClaseRelacionada+="\r\n\t\t\t\t}";
									
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreCompletoClaseRelacionadaFromColumn(columnSchema)+"(false);";
						
						sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iNumeroPaginacionPagina=0;";
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iInicioPaginacion=0;";
						//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.iFinPaginacion=10;";
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
										
						//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
						
						sTablaClaseRelacionada+="\r\n\t\t\t}";
							
						
				
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					sTablaClaseRelacionada+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"())";
					sTablaClaseRelacionada+="\r\n\t\t\t{";
								
					sTablaClaseRelacionada+="\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Actual().equals(0L))";
					sTablaClaseRelacionada+="\r\n\t\t\t\t{";
					sTablaClaseRelacionada+="\r\n\t\t\t\t\tthis.sAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreClaseC(tableSchemaForeignKey.ToString())+"\";";						
					sTablaClaseRelacionada+="\r\n\t\t\t\t}";
									
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setisBusquedaDesdeForeignKeySesion"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(false);";
						
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iNumeroPaginacionPagina=0;";
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tthis.iInicioPaginacion=0;";
					//sTablaClaseRelacionada+="\r\n\t\t\t\tthis.iFinPaginacion=10;";
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
					
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
										
					//sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
						
					sTablaClaseRelacionada+="\r\n\t\t\t}";							
				}
			}
				
			return sTablaClaseRelacionada; 
		}
		
	public String GetXmlBusquedasIndicesTablas()  {
			bool blnEsIndiceFkUnoAUno=false;
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			
			String sIfFuncion=String.Empty;
			sIfFuncion="\r\n\telse if(sAccionBusqueda==\"{0}\")\r\n{";
			
			String sFuncionBusqueda="";
			String sFuncionBusqueda2="";
			
			String strFuncionBusquedaEjbInit0="\r\n\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit0+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
			String strFuncionBusquedaEjbRemote="";
			String strFuncionBusquedaEjbHome="";
			String strFuncionBusquedaEjb="";
			
			
			String sDefinicionVariables="";
			String sUsoVariables="";
			
			String sXmlFuncion=String.Empty;
			
			
			String sFuncionLogic="";
				 sFuncionLogic+="";
			String strComentarioParaEjb="";
			String strComentarioBloqueInicioParaEjb="";
				strComentarioBloqueInicioParaEjb+="";
			String strComentarioBloqueFinParaEjb="";
				strComentarioBloqueFinParaEjb+="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
				strComentarioBloqueInicioParaEjb="/*";
				strComentarioBloqueFinParaEjb="*/";
			}
			
			
			sXmlFuncion+="\r\n\r\n\t\t\t\tBoolean isNoExiste=false;";		
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sXmlFuncion+="\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/"isNoExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0;";
			sXmlFuncion+="\r\n\t\t\t\t}";	
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\tisNoExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+"s==null|| "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.size()==0;";
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			
			
			sXmlFuncion+="\r\n\r\n\t\tif(this.isTipoArchivoReporte&&sTipoArchivoReporte!=\"\"&&sTipoArchivoReporte!=null)\r\n\t\t{";
			
			
			sXmlFuncion+="\r\n\t\t\tif(isMostrarTodosResultadosReporte)\r\n\t\t\t{";
			sXmlFuncion+="\r\n\t\t\t\tthis.pagination.setiFirstResult(-1);";
			sXmlFuncion+="\r\n\t\t\t\tthis.pagination.setiMaxResults(-1);";	
			sXmlFuncion+="\r\n\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+";";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"sAux.addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s());";						
			sXmlFuncion+="\r\n\t\t\t\t}";	
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+";";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux.addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
		
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			sXmlFuncion+="\r\n\t\t\t\t\t}";			
			
			String sParametrosReporte="";
			
			if(blnEsReporte){
				sParametrosReporte=",this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual";
			}
			
			String strResultados1="";
			String strResultados2="";
			
			///if(!ConEjb){
				strResultados1=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()";
			//} else {
				strResultados2=GetNombreClaseObjetoC(TablaBase.ToString())+"s";
			//}
			
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";			
			sXmlFuncion+="\r\n\t\t\t\t\t"+strComentarioParaEjb+"generarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+strResultados1;
			
			if(ConSessionBeans || ConRMI){
				sXmlFuncion+=","+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable,"+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome";
			}
			
			sXmlFuncion+=");";
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\tgenerarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+strResultados2;
			
			if(ConSessionBeans || ConRMI){
				sXmlFuncion+=","+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable,"+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome";
			}
			
			sXmlFuncion+=");";			
			sXmlFuncion+="\r\n\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t//ARCHITECTURE";
			
			sXmlFuncion+="\r\n\r\n\t\t\t\t\tif(isMostrarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			sXmlFuncion+="\r\n\t\t\t\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
			sXmlFuncion+="\r\n\t\t\t\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);";	
			sXmlFuncion+="\r\n\r\n\t\t\t\t\t\t//ARCHITECTURE";
			sXmlFuncion+="\r\n\t\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";			
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.set"+GetNombreClaseC(TablaBase.ToString())+"s(new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+");";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux);";
			sXmlFuncion+="\r\n\t\t\t\t\t\t}";				
			sXmlFuncion+=" else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClase(TablaBase.ToString())+">"+strTypeNewCollectionEnd+";";
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.addAll("+GetNombreClaseObjetoC(TablaBase.ToString())+"sAux);";
			sXmlFuncion+="\r\n\t\t\t\t\t\t}";
			sXmlFuncion+="\r\n\t\t\t\t\t\t//ARCHITECTURE";
			
			sXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t}";	
			
			//sXmlFuncion+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
			//sXmlFuncion+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
			
			String sXmlFuncionObjeto=String.Empty;
			
			sXmlFuncionObjeto+="\r\n\r\n\t\t\t\tBoolean isExiste=false;";
			
			sXmlFuncionObjeto+="\r\n\t\t\t\t//ARCHITECTURE";
			sXmlFuncionObjeto+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			sXmlFuncionObjeto+="\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/"isExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0;";
			sXmlFuncionObjeto+="\r\n\t\t\t\t}";	
			sXmlFuncionObjeto+=" else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {";
			sXmlFuncionObjeto+="\r\n\t\t\t\t\tisExiste="+GetNombreClaseObjetoC(TablaBase.ToString())+"!=null|| "+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"()!=0;";
			sXmlFuncionObjeto+="\r\n\t\t\t\t}";
			sXmlFuncionObjeto+="\r\n\t\t\t\t//ARCHITECTURE";
			
					
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			
			
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
			
						
			//sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
			//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			//sXmlFuncionObjeto+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
			//sXmlFuncionObjeto+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
				
			if(!ConEjb){
				//sXmlFuncionObjeto+="\r\n\t\t\t}";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey) {
					blnEsIndiceFkUnoAUno=false;
					
					//if(EsSwing) {
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)){
							continue;
						}
					//}
					
					sFuncionBusqueda2="\r\n\t\t\t\t\t"+strComentarioParaEjb+"this.sDetalleReporte="+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique) {
						//SOLO BUSQUEDAS PROPIAMENTE DICHAS
						continue;
						/*
						sFuncionBusqueda="\r\n\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(";
						strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
						strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
						
						sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
						*/
					} else {
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
							
							if(indexSchema.Name.Contains(strFK)) {
								if(!TieneColumnaFkIndiceFkC(indexSchema)) {
									continue;
								}
							}
							
							/*if(indexSchema.Name.Contains("FK")) {
								blnEsIndiceFkUnoAUno=true;
							}
							*/
							
							sFuncionBusqueda="\r\n\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,pagination"+sParametrosReporte+",";
							if(ConSessionBeans || ConRMI){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,pagination,datosCliente"+sParametrosReporte+",";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,pagination,datosCliente"+sParametrosReporte+",";
							}
							
							sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";							
						} else {
							sFuncionBusqueda="\r\n\r\n\t\t\t\t\t"+strComentarioParaEjb+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							if(ConSessionBeans || ConRMI){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+/*strCommentReporte+*/GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							}	
							sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";	
						}
					}
					
					int count=1;
					sDefinicionVariables="";
					sUsoVariables="";							
					//sFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{								
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {								
									//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									//sDefinicionVariables+="\r\n\r\n\t\t\t\tif(httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									//sDefinicionVariables+="\r\n\t\t\t\t{";
									//sDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";										
									//sDefinicionVariables+="\r\n\t\t\t\t}";
										
									
									if(indexSchema.Name.Contains(strFK+"_")) {
										if(!blnNoStandardTableFromProperties && memberColumnSchema.Column.IsPrimaryKeyMember && memberColumnSchema.Column.Name.Equals(strId) && memberColumnSchema.Column.IsForeignKeyMember) {
											blnEsIndiceFkUnoAUno=true;
										}
										
										if(!EsSwing) {
											if(!blnNoStandardTableFromProperties) {	
												
												sDefinicionVariables+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual()>0)";
												sDefinicionVariables+="\r\n\t\t\t\t{";
												sDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".getl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual();";
												sDefinicionVariables+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".setl"+strId+GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+"Actual(-1L);";
												
												sDefinicionVariables+="\r\n\t\t\t\t}";
												
											} else {
												
												String strNombreClaseRelacionada=indexSchema.Name.Replace(strFK+"_Id","");
												/*
												string strPrefijoTipo =  GetPrefijoTipoC(memberColumnSchema.Column);
												string strNombre = GetNombreColumnaClaseC(memberColumnSchema.Column);
												string strValor=GetDefaultValueColumna(memberColumnSchema.Column);
												*/
												
												sDefinicionVariables+="\r\n\r\n\t\t\t\tthis.setVariablesFk"+strNombreClaseRelacionada+/*GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+*/"ParaBuscar"+GetNombreClaseC(TablaBase.ToString())+"s("+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+");";
												
												/*
												sDefinicionVariables+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual().equals("+strValor+")) {";
												sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+strPrefijoTipo+strNombre+strFK+"_Id"+strNombreClaseRelacionada+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual();";
												sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual("+strValor+");";
												sDefinicionVariables+="\r\n\r\n\t\t\t\t}";
												*/
											}
										}
									}
									
									sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									
									if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
										sUsoVariables+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name; 
									}
						
									if(!indexSchema.MemberColumns.Count.Equals(count)) {
										sUsoVariables+=",";	
									}
								} else {
									if(!indexSchema.Name.Contains("BusquedaRango")) {
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									
									} else {
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name; 									
										
										sUsoVariables+=",";	
										
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name; 									
									}																	
								}
								
								count++;
							}
							
							sFuncionBusqueda2+=sUsoVariables+");\r\n";
							sFuncionBusqueda+=sUsoVariables+");";
					
					//Ejbs
					if(ConSessionBeans || ConRMI){
						strFuncionBusquedaEjbRemote+=sUsoVariables+");\r\n";
						strFuncionBusquedaEjbRemote+="\t\t\t\t\tthis.setEstadosIniciales"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
						strFuncionBusquedaEjbHome+=sUsoVariables+");\r\n";
						strFuncionBusquedaEjbHome+="\t\t\t\t\tthis.setEstadosIniciales"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
					}
					
					String strAuxDescomentar="";
					
					if(strComentarioParaEjb!="") {
						strAuxDescomentar=sFuncionBusqueda2.Replace(strComentarioParaEjb,"");
					} else {
						strAuxDescomentar=sFuncionBusqueda2;
					}						 
					
					strFuncionBusquedaEjb="\r\n\t\t\t\t"+ strFuncionBusquedaEjbInit0+sFuncionBusqueda+strFuncionBusquedaEjbInit+strFuncionBusquedaEjbRemote+strAuxDescomentar+"\r\n\t\t\t\t"+strFuncionBusquedaEjbMiddle+strFuncionBusquedaEjbHome+strAuxDescomentar+"\r\n\t\t\t\t"+strFuncionBusquedaEjbEnd;
											
					String strFuncionBusquedaConEjb="";
						   strFuncionBusquedaConEjb=strFuncionBusquedaEjb;
												
					if(indexSchema.IsUnique) {
							sInitFuncion+=sIfFuncion+sDefinicionVariables+/*sFuncionBusqueda+*/sFuncionBusqueda2+strFuncionBusquedaEjb+sXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					} else {
							
							sInitFuncion+=sIfFuncion+sDefinicionVariables+/*sFuncionBusqueda+*/sFuncionBusqueda2+strFuncionBusquedaEjb;
							sInitFuncion+=sXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",/*sFuncionBusqueda*/strFuncionBusquedaConEjb.Replace("finalQueryPaginacion","\"\"").Replace("\r\n\r\n","\r\n\t\t"));
							
							if(blnEsIndiceFkUnoAUno) {								
								sInitFuncion+="\r\n\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
								sInitFuncion+="\r\n\t\t\t\t\tBoolean isTieneDatos"+GetNombreClaseC(TablaBase.ToString())+"=true;";
								sInitFuncion+="\r\n\t\t\t\t\t"+strComentarioParaEjb+"isTieneDatos"+GetNombreClaseC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()!=null && "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()>0;";
								sInitFuncion+="\r\n\r\n\t\t\t\t\t"+"if(isTieneDatos"+GetNombreClaseC(TablaBase.ToString())+") {";
								
								if(!EsSwing) {
									sInitFuncion+="\r\n\t\t\t\t\t\tthis.isPermisoNuevo"+GetNombreClaseC(TablaBase.ToString())+"=false;";
								}
								
								sInitFuncion+="\r\n\t\t\t\t\t}";
								sInitFuncion+="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {";
								sInitFuncion+="\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"s!=null && "+GetNombreClaseObjetoC(TablaBase.ToString())+"s.size()>0) {";
								
								if(!EsSwing) {
									sInitFuncion+="\r\n\t\t\t\t\t\tthis.isPermisoNuevo"+GetNombreClaseC(TablaBase.ToString())+"=false;";
								}
								
								sInitFuncion+="\r\n\t\t\t\t\t}";
								sInitFuncion+="\r\n\t\t\t\t}";
							}
							
							sInitFuncion+="\r\n\r\n\t\t\t}";																																		
					}
				} else {
					continue;	
				}
			}
			
		return  sInitFuncion;
	}
		
	public  String GetSetNoStandardParametrosIndiceFk()
	{
		//sDefinicionVariables+="\r\n\r\n\t\t\t\tthis.setVariablesFk"+strNombreClaseRelacionada+/*GetNombreCompletoClaseRelacionadaFromColumn(memberColumnSchema.Column)+*/"ParaBuscar"+GetNombreClaseC(TablaBase.ToString())+"s();";
												
		String sVariablesArray="";
		String sVariablesArrays="";
		String sNombrePakage="";
		TableSchema tableSchema=null;
		
		
		if(blnNoStandardTableFromProperties) {
			
			//ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			ArrayList arrayListForeignKeys =new ArrayList();
			ArrayList arrayListPK =new ArrayList();
			ArrayList arrayListFK =new ArrayList();
			ArrayList arrayListPKFK =new ArrayList();
			
			String strPK="";
			String strFK="";
			String strPKFK="";
			string strPrefijoTipo ="";
			string strNombre ="";
			string strValor="";
			
			String strFK0="";
			String strFK1="";
					
			foreach(TableKeySchema tableKeySchema in TablaBase.ForeignKeys) {		
				//sNombrePakage=GetPackageTableFromProperties(tableSchemaForeignKey);
				arrayListPK =new ArrayList();
				arrayListFK =new ArrayList();
				arrayListPKFK =new ArrayList();
				
				if(!ExisteTablaEnListaC(tableKeySchema.PrimaryKeyTable,arrayListForeignKeys)) {
					arrayListForeignKeys.Add(tableKeySchema.PrimaryKeyTable);
					
					
					sVariablesArray="\r\n\tpublic void setVariablesFk"+ GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"ParaBuscar"+ GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+"s("+GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+" "+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+") throws Exception ";
					sVariablesArray+="{\r\n";
					//sVariablesArray+="\t\treturn "+GetNombreClaseC(tableSchemaForeignKey.ToString()).ToLower() +"s"+strForeignKey+";\r\n";
					
					foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.PrimaryKeyMemberColumns) {
						strPrefijoTipo =  GetPrefijoTipoC(memberColumnSchema.Column);
						strNombre = GetNombreColumnaClaseC(memberColumnSchema.Column);
						strValor=GetDefaultValueColumna(memberColumnSchema.Column);
						//strPK=GetNombreClaseObjetoC(tableKeySchema.PrimaryKeyTable.ToString())+"."+GetParameterClaseMethodC(memberColumnSchema.Column,true,false,false,"");
						strPK="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Actual().equals("+strValor+")) {";
						strPK+="\r\n\r\n\t\t\t\t\t"+/*strPrefijoTipo+strNombre+strFK+"_Id"+GetNombreClaseC(tableKeySchema.ForeignKeyTable.ToString())+*/"REEMPLACE="+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Actual();";
						strPK+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString())+"Actual("+strValor+");";
						strPK+="\r\n\r\n\t\t\t\t}";
						
						arrayListPK.Add(strPK);
					}
					
					foreach(MemberColumnSchema memberColumnSchema in tableKeySchema.ForeignKeyMemberColumns) {
						strPrefijoTipo =  GetPrefijoTipoC(memberColumnSchema.Column);
						strNombre = GetNombreColumnaClaseC(memberColumnSchema.Column);
						strValor=GetDefaultValueColumna(memberColumnSchema.Column);
						
						//strFK=GetSetPartParameterClaseMethodC(memberColumnSchema.Column,"this."+GetNombreClaseObjetoC(tableKeySchema.ForeignKeyTable.ToString()),true);
						strFK="this."+strPrefijoTipo+strNombre+"FK_Id"+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString());//+"|"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+GetNombreClaseC(tableKeySchema.PrimaryKeyTable.ToString());
						arrayListFK.Add(strFK);
					}
					
					
					for (int i = 0; i < arrayListPK.Count; i++){
						strPKFK=/*((String)arrayListFK[i])+*/((String)arrayListPK[i])+"";
						
						strFK0=((String)arrayListFK[i]);
						strPKFK=strPKFK.Replace("REEMPLACE",strFK0);
						
						//strFK0=((String)arrayListFK[i]).Split('|')[0];
						//strFK1=((String)arrayListFK[i]).Split('|')[1];
						
						//strPKFK=strPKFK.Replace("REEMPLACE2",strFK0);						
						//strPKFK=strPKFK.Replace("REEMPLACE1",strFK1);
						
						arrayListPKFK.Add(strPKFK);
					}				
					
					foreach(String strPKFKArray in arrayListPKFK) {
						sVariablesArray+=strPKFKArray;					
					}
					
					sVariablesArray+="\r\n\t}\r\n\r\n";	
					
					/*
					sDefinicionVariables+="\r\n\r\n\t\t\t\tif(!"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual().equals("+strValor+")) {";
					sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+strPrefijoTipo+strNombre+strFK+"_Id"+strNombreClaseRelacionada+"="+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".get"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual();";
					sDefinicionVariables+="\r\n\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+strPrefijoJSFSessionFaces+".set"+GetNombreCompletoColumnaClaseC(memberColumnSchema.Column)+strNombreClaseRelacionada+"Actual("+strValor+");";
					sDefinicionVariables+="\r\n\r\n\t\t\t\t}";
					*/
					
					sVariablesArrays+=sVariablesArray;
				}
				
				
			}
		}
				
		return sVariablesArrays;
	}

		
		public String GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			
			String sIfFuncion=String.Empty;
			sIfFuncion="\r\n\telse if(sAccionBusqueda==\"{0}\")\r\n{";
			
			String sFuncionBusqueda="";
			
			String sDefinicionVariables="";
			String sUsoVariables="";
			
			String sXmlFuncion=String.Empty;
			
			String sParametroPadre="";
			
			if(!EsSwing)
			{
				sParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong(httpServletRequest.getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";
			}
			else
			{
				sParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=1L;";
			}
											
											
			String sFuncionTodos=String.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					sFuncionTodos="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					sFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+sParametroPadre+"\r\n\t\t\t\t";					
					sFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					//sFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					sFuncionTodos+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					sFuncionTodos+="\r\n\t\t\t\t{";
					//sFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					sFuncionTodos+="\r\n\t\t\t\t}";
					
					//sFuncionTodos+="\r\n\r\n\t\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sFuncionTodos+="\r\n\t\t\t\thttpServletResponse.getWriter().write(xml);";
					sFuncionTodos+="\r\n\t\t\t}";
					
					
					
					//sXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
					
					//sXmlFuncion+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sXmlFuncion+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
					
					String sXmlFuncionObjeto=String.Empty;
					
					sXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					
					//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					sXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					sXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
					
					
					
					//sXmlFuncionObjeto+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sXmlFuncionObjeto+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryGlobal+finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							sIfFuncion+=sParametroPadre;
							
							int count=1;
							sDefinicionVariables="";
							sUsoVariables="";							
							//sFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{	
											if(!EsSwing)
											{
												sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
											}
											else
											{
												sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
											}
											
											
											sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												sUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												sUsoVariables+=",";	
												
												
												
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
												
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									sFuncionBusqueda+=sUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
					}
					
					sInitFuncion=sFuncionTodos+sInitFuncion;
				}
			}
			
			return  sInitFuncion;
		}
		
public String GetVariablesTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			String strEjbComentario="";
				strEjbComentario+="";
			String strEjbComentarioInicio="";
			String strEjbComentarioFin="";
			
			if(ConEjb){
				strEjbComentario="//";
				strEjbComentarioInicio="/*";
				strEjbComentarioFin="*/";
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
			
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//Trace.WriteLine(collectionInfo.SecondaryTableSchema.ToString());
					
					sTablaClaseRelacionada+="\r\n\r\n\t"+strEjbComentarioInicio+"public "+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+"Logic "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic=null;\r\n\r\n";
					
					if(!TablaBase.Name.Equals(collectionInfo.SecondaryTableSchema.Name)) {
						sTablaClaseRelacionada+="\tpublic "+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+"Logic get"+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic() "; 
						sTablaClaseRelacionada+="{\r\n";		
						sTablaClaseRelacionada+="\t\treturn "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic;\r\n";
						sTablaClaseRelacionada+="\t}\r\n\r\n";
					
						sTablaClaseRelacionada+="\tpublic void set"+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic("+GetNombreClaseC(collectionInfo.SecondaryTableSchema.ToString())+"Logic "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic) "; 
						sTablaClaseRelacionada+="{\r\n";
						sTablaClaseRelacionada+="\t\tthis."+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic = "+GetNombreClaseObjetoC(collectionInfo.SecondaryTableSchema.ToString())+strNombreAdicional+"Logic;\r\n";
						sTablaClaseRelacionada+="\t}\r\n"+strEjbComentarioFin;
					}
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

	public String GetEjbTablasClasesRelacionadas() 
		{
			String strTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			String strEjbComentario="";
				strEjbComentario+="";
			
			if(ConEjb){
				strEjbComentario="//";
			}
			
			bool blnExiste=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					if(TablaBase.Name!=collectionInfo.SecondaryTable)
					{
						blnExiste=true;
						break;
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Implementable;";
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"ImplementableHome;";

						/*
						strTablaClaseRelacionada+="\r\n\r\n\t\t "+strEjbComentario+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;";
						//strTablaClaseRelacionada+="\r\n\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable+";");
						strTablaClaseRelacionada+="\r\n\t\t "+strTypeCollection+"<"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s=new "+strTypeNewCollection+"<"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+">"+strTypeNewCollectionEnd+";";
						*/
					}
				}
			}
			
			if(blnExiste) {
				strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Implementable;";
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetEjbTablasClasesRelacionadasForeignKeys() 
		{
			String strTablaClaseRelacionada="";
			bool blnExiste=false;
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema column in TablaBase.Columns)
				{
					if(column.IsForeignKeyMember)
					{
						blnExiste=true;
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
						//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseRelacionadaFromColumn(column)+"ImplementableHome;";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					blnExiste=true;
					//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Implementable;";
					//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+GetNombreClaseC(tableSchemaForeignKey.ToString())+"ImplementableHome;";							
				}
			}
			
			if(blnExiste) {
				strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+Module+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetEjbTablasClasesRelacionadasParametros() 
		{
			String strTablaClaseRelacionada="";
			
			TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
											
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sModuloParametro=GetModuloPaqueteJavaFromTableFromPropertiesC(tableSchemaEncontrada);
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetTablasClasesRelacionadasParametros() 
		{
			String strTablaClaseRelacionada="";
			
			TableSchema tableSchemaEncontrada=null;
			String sClasesParametros=String.Empty;
			String[] sClases;
			String sModuloParametro="";
			
			sClasesParametros=GetNombresClasesParametroFromTableFromPropertiesC(TablaBase);
			
			//Trace.WriteLine(sClasesParametros);
			
			sClases=sClasesParametros.Split(',');
					
			String strEjbComentario="";
			
			if(ConEjb){
				strEjbComentario="//";
			}
			
			foreach(String sClase in sClases){						
				tableSchemaEncontrada=GetTablaFromNombreC(sClase,TablaBase,true);																
				
				if(!tableSchemaEncontrada.Name.Equals(TablaBase.Name)) {
					sModuloParametro=GetModuloPaqueteJavaFromTableFromPropertiesC(tableSchemaEncontrada);
					//strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageService+"."+strEjb+"."+strEjbInterface+"."+"*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageBusiness+"."+strPackageEntities+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageUtils+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\nimport "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
					strTablaClaseRelacionada+="\r\n"+strEjbComentario+"import "+Empresa+"."+Package+"."+sModuloParametro+"."+strPackageBusiness+"."+strPackageLogic+".*;";//GetNombreClaseRelacionadaFromColumn(column)+"Implementable;";
				}
			}
			
			return strTablaClaseRelacionada; 
		}
		
		public String GetVariablesTablasInicializarClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase,false);
			
			String strEjbComentario="";
			String strNombreAdicional="";
			
			if(ConEjb){
				strEjbComentario="//";
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+="\r\n\t\t\t"+strEjbComentario+"this."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String sTablaClaseRelacionada=String.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					sTablaClaseRelacionada+="\r\n\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String sFuncion=String.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			sFuncion+="\r\n\r\n\tpublic String toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()throws Exception";
			sFuncion+="\r\n\t{";
			sFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			sFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			sFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			sFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			sFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			sFuncion+="\r\n\t\ttry"; 
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			sFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			sFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			sFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\\r\n\");";
			sFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\\r\n\");";	    
				
			sFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			sFuncion+="\r\n\t\t\t\t{";
			
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.deepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					sFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				sFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					sFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			sFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\\r\n\");";			
			sFuncion+="\r\n\t\t\t\t}\r\n";
					
			sFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\\r\n\");";
					
			sFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			sFuncion+="\r\n\t\t}"; 
			sFuncion+="\r\n\t\tcatch(Exception e)"; 
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();";
			sFuncion+="\r\n\t\t\tthrow e;";
			sFuncion+="\r\n\t\t}";
			sFuncion+="\r\n\t\tfinally";
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			sFuncion+="\r\n\t\t}";
				
			sFuncion+="\r\n\t\t\treturn Funciones.ValidarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getSTableName());";
				
			sFuncion+="\r\n\t}";
		}
	}
	
	return sFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">();" ;																
																																																		
				}													
			}
								
			return sInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					sInitFuncion+="\r\n\t"+"ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					sInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
																																								
					sInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					sInitFuncion+="\r\n\t{";	
					sInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					sInitFuncion+="\r\n\t}";	
					
					sInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					sInitFuncion+="\r\n\t{";	
					sInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					sInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return sInitFuncion; 
		}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			String sParametroCompuesto="";
			String sParametroCompuesto2="";
			String sParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
							//sParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							//sParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							//sParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							//sParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							//sParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";

							sInitFuncion+="\r\n\tpublic  String  get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws SQLException,Exception"; 
							sInitFuncion+="\r\n\t{\r\n\t\tString sMensaje=\"\";\r\n\t\t";
							sInitFuncion+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							sInitFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+");";
						
							//sInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							//sInitFuncion+=sParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//sInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);\r\n\t\t\t";
							//sInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntities" +strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							sInitFuncion+="\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException e)\r\n\t\t{\r\n\t\t\t";//connexion.getConnection().commit();//connexion.getConnection().rollback();
							
							sInitFuncion+="\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t";	//connexion.getConnection().rollback();	//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();
							sInitFuncion+="\r\n\r\n\t\treturn sMensaje;\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{		
						if(!indexSchema.IsPrimaryKey)
						{					
							sParametersFuncion="";
							sParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								sInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
								sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									sInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";									
									sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									sInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
									sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto;
									//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
									
									//sBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto2;
									sBodyFuncion+=sParametroCompuestoFinal2;
											
								}
								else
								{
									//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto;
									
									//sBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									sBodyFuncion+="\r\n\r\n\t\t\t"+sParametroCompuesto2;
									sBodyFuncion+=sParametroCompuestoFinal2;
								}
								
								//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
							
							}	
							int count=1;	
							sParametersFuncion="";
							sParametersNameFuncion="";	
							sParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											sParametersFuncion+=",";
											sParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											sParametersFuncion+=",";
											sParametersNameFuncion+=",";	
											
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
						}
					}
				}													
			}
								
			return sInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			String sTablaClaseRelacionadaNombre="";
				sTablaClaseRelacionadaNombre+="";
			String sTablaClaseRelacionada3="";
			
			String sFuncionInit="\r\n\tpublic String Save"+GetNombreClase(TablaBase.ToString())+"Relaciones(Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC,"+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString());
			String sFuncionMiddle=")throws SQLException,Exception\r\n\t{\r\n\t\tString sMensaje=\"\";\r\n";//Mensaje.getMensajeGeneralDeepSave(\"\")
			sFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\t";//this.getNewConnexionToDeep();
			
			sFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"Relaciones(idUsuario,sUsuarioPC,sNamePC,sIPPC,"+" "+GetNombreClaseObjetoC(TablaBase.ToString());
			
			String sFuncionEnd="\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\r\n\treturn sMensaje;\r\n\r\n\t}";
			
			//connexion.getConnection().commit();
			//connexion.getConnection().rollback();
			//connexion.getConnection().rollback();
			//finally\r\n\t\t{\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String sTablaClaseRelacionada2="";
			//sTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()"+")";
			//sTablaClaseRelacionada2+="\r\n\t\t\t{";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+sTablaClaseRelacionada3+");";
			//sTablaClaseRelacionada2+="\r\n\t\t\t}";
			//sTablaClaseRelacionada2+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted())";
			//sTablaClaseRelacionada2+="\r\n\t\t\t{";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+sTablaClaseRelacionada3+");";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			//sTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			sTablaClaseRelacionada=sFuncionInit+sTablaClaseRelacionada+sFuncionMiddle+sTablaClaseRelacionada3+");"+sTablaClaseRelacionada2+sFuncionEnd;
			return sTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String sTablaClaseRelacionada="";
			String sTablaClaseRelacionadaNombre="";
			String sFuncionInit="\r\n\tpublic void Save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC";
			String sFuncionMiddle=")throws Exception\r\n\t{\r\n";
			sFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";
			
			sFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC";
			
			String sFuncionEnd="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					sTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
					sTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String sTablaClaseRelacionada2="";
			//sTablaClaseRelacionada2+="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();";
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null)\r\n\t\t\t{";										
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					sTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s())\r\n\t\t\t{";					
					//sTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+strField_+""+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//sTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
				}
			}
			
			sTablaClaseRelacionada=sFuncionInit+sTablaClaseRelacionada+sFuncionMiddle+sTablaClaseRelacionadaNombre+");"+sTablaClaseRelacionada2+sFuncionEnd;
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;							
			String sInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ sTablaClaseRelacionadaSave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;						
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor;
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ sTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;							
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ sTablaClaseRelacionadaSave+sTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;	
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			String sTablaClaseRelacionadaLogic=String.Empty;
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();	
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ sTablaClaseRelacionadaSave+sTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;							
			String sInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ sTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;							
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor;
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ sTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;	
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ sTablaClaseRelacionadaReturn+sTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;		
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ sTablaClaseRelacionadaReturn+sTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			ArrayList arrayListRelaciones=new ArrayList();
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema columnSchema in TablaBase.Columns)
				{
					if(columnSchema.IsForeignKeyMember)
					{
						if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)))) {
							continue;
						} else {
							arrayListRelaciones.Add(GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema)));
						}
						
						sTablaClaseRelacionada+="\r\n\t\tclasses.add(new Classe("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class));";
					
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,GetNombreClaseC(tableSchemaForeignKey.ToString()))) {
						continue;
					} else {
						arrayListRelaciones.Add(GetNombreClaseC(tableSchemaForeignKey.ToString()));
					}
						
						sTablaClaseRelacionada+="\r\n\t\tclasses.add(new Classe("+GetNombreClaseC(tableSchemaForeignKey.ToString())+ ".class));";
												
				}
			}
			
			return sTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String sInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String sTablaClaseRelacionada2=String.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String sInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String sInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String sInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String sInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			
			String sFuncionInclude=String.Empty;
			String sFuncionExclude=String.Empty;
			
            sTablaClaseRelacionada2="\r\nelse\r\n{"+sInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			sFuncionInclude="";
			sFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\t\t}";
			
			
			}
			
				sFuncionInclude=sInitInclude+sInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ sFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ sFuncionExclude+ "\r\n\t}\r\n}";
			
			sTablaClaseRelacionada2=sTablaClaseRelacionada2+"\t}\r\n"+sFuncionInclude+sFuncionExclude;
			
			// parte del no if deep
			
			
			String sInitIfFuncion=String.Empty;
			String sIfFuncion=String.Empty;
			String sInitElseFuncion=String.Empty;
			String sElseFuncion=String.Empty;
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion=" get"+GetPrefijoRelacionC();
			
			sInitIfFuncion=sInit+"\r\nif(!deep)\r\n{\r\n";
			sInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				sInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//sInitFuncion=sInitFuncion;
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//sInitFuncion=sInitFuncion;
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			sFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String sTablaClaseRelacionada0=String.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            sTablaClaseRelacionada0=sInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			sFuncionInclude="";
			sFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{";
						sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada0+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\r\n\t\t}";
				
			}
			
			sFuncionInclude=sInitInclude+sInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+sFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+sFuncionExclude+"\r\n\t}\r\n}";
	
			
			sIfFuncion=sInitIfFuncion+sTablaClaseRelacionada0+"\t}\r\n"+sFuncionInclude+sFuncionExclude;//+"\r\n}\r\n"+sInitElseFuncion+sTablaClaseRelacionada0+sTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+sTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return sIfFuncion+sTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String sTablaClaseRelacionada2=String.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String sInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n\r\n";
			String sInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String sInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String sInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			String sFuncionInclude=String.Empty;
			String sFuncionExclude=String.Empty;
			
			sFuncionInclude="";
			sFuncionExclude="";
			
            sTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+sInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String sInitFuncion=" get"+GetPrefijoRelacionC();
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaAux=String.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				sInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";						
					sTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";
					sFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";
					sFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;		
					sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;	
					sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					sFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;	
					sFuncionExclude+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
					sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//sFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\t\t}";
				
			}
			
				sFuncionInclude=sInitInclude+sInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ sFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				sFuncionExclude=sInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ sFuncionExclude+ "\r\n\t}\r\n}";
				
			
			sTablaClaseRelacionada2=sTablaClaseRelacionada2+"\t}\r\n"+sFuncionInclude+sFuncionExclude;
			
			
			//Parte del no if del deep
			
			String sInitIfFuncion=String.Empty;
			String sIfFuncion=String.Empty;
			String sInitElseFuncion=String.Empty;
			String sElseFuncion=String.Empty;
			
			sFuncion=String.Empty;
			
			sTablaClaseRelacionada=String.Empty;
			sInitFuncion=" get"+GetPrefijoRelacionC();
			
			sInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			sInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			sFuncion=sInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			sFuncionInclude="";
			sFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+sInitFor +sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				sInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			sFuncion+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
			sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			sFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			sFuncionInclude=sInitInclude+sInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +sFuncionInclude+ "\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+sFuncionExclude+ "\r\n\t}\r\n}";
			
			sIfFuncion=sInitIfFuncion+sFuncion+"\t}\r\n"+sFuncionInclude+sFuncionExclude; //+sInitElseFuncion+sFuncion+sTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+sTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return sIfFuncion+sTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String sParaBusquedaString=""; 
			String sParaBusquedaCompuesto=""; 
			
			if(esCompuesto)
			{
				sParaBusquedaCompuesto="Constantes.getSSchema()+\".\"+"+GetNombreClase(column.Table.ToString())+".getSTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				if(!esUnico)	
				{
				sParaBusquedaString="+\"%\"";
				}
			}
			
			String sParameterSelection=String.Empty;
			sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+sParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			sParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			sParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return sParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String sIndexName) 
		{
			String sParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				sParaBusquedaString="+\"%\"";
			}
			
			String sParameterSelection=String.Empty;
			
			if(!sIndexName.Contains("BusquedaRango"))
			{
				sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(sIndexName.Contains("BusquedaMayorIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMayor"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMenorIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMenor"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				sParameterSelection+="ParameterTypeOperator.NONE);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(sIndexName.Contains("BusquedaRangoIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				sParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				sParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(sIndexName.Contains("BusquedaRangoIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				sParameterSelection+="ParameterTypeOperator.NONE);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return sParameterSelection;
		}

		public String GetIndicesTablasFacesClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						
						
						sBodyFuncion+="\r\n\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
						sBodyFuncion+="\r\n\r\n\t\t\tthis.iNumeroPaginacionPagina=0;";
						//sBodyFuncion+="\r\n\r\n\t\t\tthis.iInicioPaginacion=0;";
						//sBodyFuncion+="\r\n\t\t\tthis.iFinPaginacion=this.iNumeroPaginacion;";
						sBodyFuncion+="\r\n\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
						//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							sBodyFuncion+="\r\n\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
							sBodyFuncion+="\r\n\r\n\t\t\tthis.iNumeroPaginacionPagina=0;";
							//sBodyFuncion+="\r\n\r\n\t\t\tthis.iInicioPaginacion=0;";
							//sBodyFuncion+="\r\n\t\t\tthis.iFinPaginacion=this.iNumeroPaginacion;";
							sBodyFuncion+="\r\n\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
							//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(sFinalQuery,";
						}
						else
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							
							sBodyFuncion+="\r\n\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
							sBodyFuncion+="\r\n\r\n\t\t\tthis.iNumeroPaginacionPagina=0;";
							//sBodyFuncion+="\r\n\r\n\t\t\tthis.iInicioPaginacion=0;";
							//sBodyFuncion+="\r\n\t\t\tthis.iFinPaginacion=this.iNumeroPaginacion;";
							sBodyFuncion+="\r\n\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
							//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tFunciones"+getFrameworkDomain()+".manageException(this, e,logger);\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					/*
					int count=1;	
					sParametersFuncion="";
					sParametersNameFuncion="";	
					sParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
									
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					*/
					sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
		public String GetIndicesVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			String sValor="";
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
				sDefault="\"false\"";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="false";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\tpublic "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
		public String GetIndicesInicializarVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				 sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
				sDefault="\"true\"";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="true";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\t\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
		public String GetIndicesGetSetVariablesVisibilidadTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
				sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
			}
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes) {
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					
					
					if(indexSchema.IsUnique) {
					
					} else {
						
						sInitFuncion+="\r\n\tpublic "+sTipo+" get"+sPrefijo+"Visibilidad"+indexSchema.Name+"() {";
						sInitFuncion+="\r\n\t\treturn this."+sPrefijo+"Visibilidad"+indexSchema.Name+";";
						sInitFuncion+="\r\n\t}";
						
						sInitFuncion+="\r\n\r\n\tpublic void set"+sPrefijo+"Visibilidad"+indexSchema.Name+"("+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+") {";
						sInitFuncion+="\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sPrefijo+"Visibilidad"+indexSchema.Name+";";
						sInitFuncion+="\r\n\t}\r\n";
						
					
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
						
						} else {
						}
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						} else {
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
					}	
					
					//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
			return sInitFuncion; 
		}
		
		public String GetFuncionesIndicesFKVisibilidadTablasClases() {
			//System.Windows.Forms.MessageBox.Show(TablaBase.Database.Description);
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
				sBodyFuncion+="";
			String sEndBodyFuncion="";
				sEndBodyFuncion+="";
			String sEndFuncion="";
				sEndFuncion+="";
			String sParametersFuncion="";
				sParametersFuncion+="";
			String sParametersNameFuncion="";
			sParametersNameFuncion+="";
			String sParameterSelection=String.Empty;
			
			String sTipo=String.Empty;
			String sPrefijo=String.Empty;
			String sDefault=String.Empty;
			String sDefaultTrue=String.Empty;
			String sDefaultFalse=String.Empty;
			
			if(!EsSwing){
				sTipo="String";
				sPrefijo="s";
				sDefault="\"false\"";
				sDefaultTrue="\"true\"";
				sDefaultFalse="\"false\"";
			} else {
				sTipo="Boolean";
				sPrefijo="is";
				sDefault="false";
				sDefaultTrue="true";
				sDefaultFalse="false";
			}
			
			bool blnTieneForeignMember=false;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			String sToString="";
			
			if(!EsSwing) {
				sToString=".toString()";	
			}
			
			if(!blnNoStandardTableFromProperties) {	
				foreach(ColumnSchema column in TablaBase.Columns) {
					if(column.IsForeignKeyMember) {
						blnExisteBusquedaFkVariableGlobal=false;
						
						sInitFuncion+="\r\n\r\n\tpublic void setVisibilidadBusquedasPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"(Boolean isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"){";
						
						if(EsSwing){							
							sInitFuncion+="\r\n\t\tBoolean isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Negation=!isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+";";
						
							foreach(IndexSchema indexSchema in TablaBase.Indexes) {
								blnTieneForeignMember=false;
								blnExisteBusquedaFkVariableGlobal=false;
								
								if(!indexSchema.IsPrimaryKey) {
									if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {									
										continue;
									}
									
									sParametersFuncion="";
									sParametersNameFuncion="";
																	
									if(indexSchema.IsUnique) {
									
									} else {																				
										foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{
											if(memberColumnSchema.Column.Name.Equals(column.Name)) {
												blnTieneForeignMember=true;
											}
										}
																				
										//sInitFuncion+="\r\n\tpublic "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
									
										if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {											
											if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])
												|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])) {
												blnExisteBusquedaFkVariableGlobal=true;													
											}
										} else {
											
										}
																				
										if(blnExisteBusquedaFkVariableGlobal) {
											//Trace.WriteLine(indexSchema.Name);
											continue;	
										}
						
										if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
											//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
											//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
										} else {
											//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
										}
																														
										if(blnTieneForeignMember) {
											sInitFuncion+="\r\n\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+sToString+";";
										} else {
											sInitFuncion+="\r\n\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreCompletoClaseRelacionadaFromColumn(column)+"Negation"+sToString+";";
										}
										
										sInitFuncion+="\r\n\t\tif(!this."+sPrefijo+"Visibilidad"+indexSchema.Name+") {this.jTabbedPaneBusquedas"+GetNombreClaseC(TablaBase.ToString())+".remove(jPanel"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+");}";
									}	
									
									//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
								}
							}
						
						}
						sInitFuncion+="\r\n\t}";
					}
				}
			} else {
				ArrayList arrayListForeignKeys =GetArrayListForeignKeys(TablaBase);
			
				foreach(TableSchema tableSchemaForeignKey in arrayListForeignKeys) {
					sInitFuncion+="\r\n\tpublic void setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(Boolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"){";
					sInitFuncion+="\r\n\t\tBoolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation=!isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						
					//foreach(ColumnSchema column in TablaBase.Columns)
					//{
					//if(column.IsForeignKeyMember) {
						//sInitFuncion+="\r\n\tpublic void setVisibilidadBusquedasPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"(Boolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"){";
						//sInitFuncion+="\r\n\t\tBoolean isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation=!isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+";";
						
						foreach(IndexSchema indexSchema in TablaBase.Indexes) {
							if(!indexSchema.IsPrimaryKey)
							{
								sParametersFuncion="";
								sParametersNameFuncion="";
							
								
								if(indexSchema.IsUnique) {
								
								} else {
									blnTieneForeignMember=false;
									
									
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)	{
										if(GetNombreClaseC(GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column).ToString()).Equals(GetNombreClaseC(tableSchemaForeignKey.ToString()))) {
											blnTieneForeignMember=true;
										}
									}
									
									
									//sInitFuncion+="\r\n\tpublic "+sTipo+" "+sPrefijo+"Visibilidad"+indexSchema.Name+"="+sDefault+";";
								
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
									
									} else {
									}
									
									if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))	{
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
										//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
									} else {
										//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									}
									
									
									
									if(blnTieneForeignMember) {
										sInitFuncion+="\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+sToString+";";
									} else {
										sInitFuncion+="\r\n\t\tthis."+sPrefijo+"Visibilidad"+indexSchema.Name+"=isPara"+GetNombreClaseC(tableSchemaForeignKey.ToString())+"Negation"+sToString+";";
									}
									
								}	
								
								//sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
							}
						}
						
						sInitFuncion+="\r\n\t}";
					//}
				//}							
				}
			}
			
			return sInitFuncion; 
		}
		
public String GetIndicesTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
											
			String strFuncionBusquedaEjbInit0="\r\n\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit0+="\r\n\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t//ARCHITECTURE";
			String strFuncionBusquedaNoEjbLogic="";			
			String strFuncionBusquedaEjbRemote="";
			String strFuncionBusquedaEjbHome="";
			String strFuncionBusquedaEjb="";			
			
			String strComentarioParaEjb="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
			}
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						sBodyFuncion+="\r\n\t\t\tthis.pagination=new Pagination();";
						sBodyFuncion+="\r\n\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
						sBodyFuncion+="\r\n\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);\r\n";
						
						strFuncionBusquedaNoEjbLogic="\r\n\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						
						if(ConSessionBeans || ConRMI){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"WithConnection(datosCliente,";
						}
						
						//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
							
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();	
							sBodyFuncion+="\r\n\t\t\tthis.pagination=new Pagination();";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);\r\n";
							strFuncionBusquedaNoEjbLogic="\r\n\t\t\t\t\t"+strComentarioParaEjb+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(sFinalQuery,this.pagination,";
							
							if(ConSessionBeans|| ConRMI){
								strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"sFinalQuery,pagination,datosCliente,";
								strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"sFinalQuery,pagination,datosCliente,";						
							}
						}
						else
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							sBodyFuncion+="\r\n\t\t\tthis.pagination=new Pagination();";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiFirstResult(this.iNumeroPaginacionPagina);";
							sBodyFuncion+="\r\n\t\t\tthis.pagination.setiMaxResults(this.iNumeroPaginacion);\r\n";
							strFuncionBusquedaNoEjbLogic="\r\n\t\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						
							if(ConSessionBeans|| ConRMI){
							strFuncionBusquedaEjbRemote="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";
							strFuncionBusquedaEjbHome="\r\n\t\t\t\t\t"+strCommentReporte+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"WithConnection(";						
							}
						}
						
						//sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					int count=1;	
					sParametersFuncion="";
					sParametersNameFuncion="";	
					sParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
								//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									sParametersFuncion+=","+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
								}
							
								sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								//BUSQUEDA NORMAL PERO CON COLUMNA EN RANGO
								if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
									sParametersNameFuncion+=","+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal; 
								}
								
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
									
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					//EJB
					if(ConSessionBeans|| ConRMI){
					strFuncionBusquedaEjbRemote+=sParametersNameFuncion+");";
					strFuncionBusquedaEjbHome+=sParametersNameFuncion+");";
					}
					
					strFuncionBusquedaEjb="\r\n\t\t\t\t"+ strFuncionBusquedaEjbInit+strFuncionBusquedaEjbRemote+"\r\n\t\t\t\t"+strFuncionBusquedaEjbMiddle+strFuncionBusquedaEjbHome+"\r\n\t\t\t\t"+strFuncionBusquedaEjbEnd;
					
						
					//String strFuncionBusquedaConEjb="";
					//	   strFuncionBusquedaConEjb=sFuncionBusqueda+strFuncionBusquedaEjb;
						
						
					sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+strFuncionBusquedaEjbInit0+strFuncionBusquedaNoEjbLogic+sParametersNameFuncion+");"+strFuncionBusquedaEjb+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String sEndFuncion="\r\n}\r\ncatch(Exception e)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					sTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					sTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			sFuncion+=sInitFuncion+	sTablaClaseRelacionada+sEndFuncion+"\r\n\r\n";
			}
								
			return sFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					sTablaClaseRelacionada+=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public  String GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String sSetEntity=String.Empty;
	

	sSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	sSetEntity+="\t\t\t\tauditoria.set"+strField_+"sCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	sSetEntity+="\t\t\t\tauditoria.set"+strField_+"sValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	sSetEntity+="\t\t\t\tauditoria.set"+strField_+"sValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	
	sSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegisarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),"+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ","+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );";
	sSetEntity+="\r\n\t\t\t}";
	
	return sSetEntity;
}

public static String GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String sSetEntity=String.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return sSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return sSetEntity;
		}
	}
	//usuario.setClave(sClave);
	String sEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String sEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String sEntityFinal=");";
   sSetEntity=sEntityInit+sEntityMiddle+sEntityFinal;
	
	return sSetEntity;
}

public String GetParametroFuncionNuevoClase(ColumnSchema column)
{		String sParamtro=String.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return sParamtro;
		}
		sParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return sParamtro;
}

public String GetParametroUsoFuncionNuevoClase(ColumnSchema column)
{		String sParamtro=String.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return sParamtro;
		}
		sParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return sParamtro;
}

public String GetParametroFuncionActualizarClase(ColumnSchema column)
{		String sParamtro=String.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return sParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		sParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		sParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return sParamtro;
}

public String GetParametroUsoFuncionActualizarClase(ColumnSchema column)
{		String sParamtro=String.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return sParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		sParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		sParamtro=strId;			
		}
		return sParamtro;
}

public String GetNombreClase(String sTablaBase)
{
		return GetNombreClaseC(sTablaBase);
}

public String GetNombreClaseObjeto(String sTablaBase)
{
		return GetNombreClaseObjetoC(sTablaBase);
}

public String GetClassesSetAddTablasRelacionadas() 
{
			String sTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+="\r\n\t\t\tclasses.add(new Classe("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class));";									
				}				
			}
			
			return sTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetDelete() 
{
			String sTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						sTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsDeleted(true);";
						sTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						sTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsDeleted(true);";
						sTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return sTablaClaseRelacionada; 
}

public String GetIndicesVariablesTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			String sValor=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					if(EsSwing) {
						//NO IMPORTA QUE ESCRIBA VARIABLE QUE NO SEAN TOMADAS EN CUENTA EN INDICES
						//PARA USUARIOINSERT Y UPDATE ES NECESARIO
						if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
						{
							//continue;
						}
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sValor=GetDefaultValueColumna(memberColumnSchema.Column);
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sValor+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
							
							
							
							if(GetConRangoBusquedasColumnFromPropertiesC(memberColumnSchema.Column)||GetConRangoBusquedasIndicesColumnFromPropertiesC(memberColumnSchema.Column,indexSchema)) {
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n\r\n"; 
							
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+strSufijoRangoFinal+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							}
							
							
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+=";\r\n";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							}
							else
							{
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								break;
							}
						}
						count++;
					}
					//sInitFuncion+=")throws Exception;";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetSetVariablesTablaToBean(ColumnSchema column) {
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	String strReturn="";
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)) {
		strReturn=String.Empty;
		
	} else if(column.Name.Equals(strId)) {
		strReturn="this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strIdGetSet+"());";
		
	} else if(column.Name.Equals(strVersionRow)) {
		strReturn="this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strVersionRowGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	
	} else {
		strReturn="this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strField_+""+sPrefijo+ sColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";
		
		if(column.IsForeignKeyMember) {
			strReturn+="\r\n\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+GetNombreColumnaClaseFkDescripcionC(column)+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreColumnaClaseFkDescripcionC(column)+"());";
		}
	}
	
	return strReturn;
}		

public String GetSetVariableToVariableLocal(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strIdGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strVersionRowGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strField_+""+sPrefijo+ sColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";
}	

public String GetSetVariablesBeanToTable(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		//if(!blnEsTablaUnoAUnoFk) {
			return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strIdGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
		//} else {
			//return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strIdGetSet+"(l"+strIdGetSet+strFK+"_"+strIdGetSet+strNombreTablaUnoAUnoPk+");//PARA RELACION UNO A UNO";
		//}
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strVersionRowGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	
	String strReturn="";
	
	
	
	if(column.IsForeignKeyMember && column.AllowDBNull) {
		strReturn="\r\n\t\t\t\tif(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()>0L) {";
		strReturn+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";		
		strReturn+="\r\n\t\t\t\t} else {";
		strReturn+="\r\n\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(null);";
		strReturn+="\r\n\t\t\t\t}";
	} else {
		strReturn=GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";	
	}
	
	return  strReturn;
}	



public String EliminarArchivoGetVariablesBean(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strId)|| column.Name.Equals(strVersionRow))
	{
			return String.Empty;
	}
	
	String strReturn="";
	
	if(!EsSwing) {
		strReturn="Funciones.eliminarArchivo(servletContext.getRealPath(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()));";
	} else {
		strReturn="//Funciones.eliminarArchivo(servletContext.getRealPath(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"()));";
	}
	
	return strReturn;
	//return  GetNombreClaseObjetoC(TablaBase.ToString())+"Aux.set"+strField_+""+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strField_+""+sPrefijo+ sColumna+"());";
}

public String SetVariablesTablaToCancelar(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String sValor="";
	
	switch(column.Name)
	{
		case strIsActive:
		sValor="";
		break;
		
		case strIsExpired:
		sValor="";
		break;
		
		case strVersionRow:
		sValor="";
		break;
		
		default:
		sValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+sValor+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "";//"this.set"+strVersionRowGetSet+"(\"\");";
	}
	return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strField_+""+sPrefijo+ sColumna +"("+sValor+");";
}
/*
	public Long id;
	public Boolean isActive;
	public Boolean isExpired;
	public Timestamp versionRow;
	public boolean isNew;
	public boolean isChanged;
	public boolean isDeleted;
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% } %>
	
	public Long getId() 
	{
		return id;
	}

	public void setId(Long id) 
	{
		this.id = id;
	}

	public Boolean getIsActive() 
	{
		return isActive;
	}

	public void setIsActive(Boolean isActive) 
	{
		this.isActive = isActive;
	}

	public Boolean getIsExpired() 
	{
		return isExpired;
	}

	public void setIsExpired(Boolean isExpired) 
	{
		this.isExpired = isExpired;
	}

	public Timestamp getVersionRow() 
	{
		return versionRow;
	}

	public void setVersionRow(Timestamp versionRow) 
	{
		this.versionRow = versionRow;
	}

	public boolean getIsNew() 
	{
		return isNew;
	}

	public void setIsNew(boolean isNew) 
	{
		this.isNew = isNew;
	}

	public boolean getIsChanged() 
	{
		return isChanged;
	}

	public void setIsChanged(boolean isChanged) 
	{
		this.isChanged = isChanged;
	}

	public boolean getIsDeleted() 
	{
		return isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) 
	{
		this.isDeleted = isDeleted;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseSetMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	
	
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
			<% } %>
*/

public String GetParameterBindingClase(ColumnSchema column)
{
	String sBindingColumnTable="";
	
	if(GetEsReporteParametroFromPropertiesC(column) || !GetShowTableColumnFromPropertiesC(column) 
		|| column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return "";
	}
		
	String sPrefijo=String.Empty;
	String sPrefijoTabla=GetPrefijoTablaC().ToLower();
	String sPrefijoTipo =GetPrefijoTipoC(column);

	sPrefijo=sPrefijoTabla+sPrefijoTipo;
	
	String sNombre = GetNombreColumnaClaseC(column);
	sPrefijo+=sNombre;
	
	String sTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
		
	String param =  GetTipoColumnaClaseC(column);
	
	//return param+" "+sPrefijo+";";
	
	String sTabColumnaOculta=String.Empty;
	String sIfColumnaOculta=String.Empty;
	String sIfColumnaOcultaFin=String.Empty;
	String strSufijoListenerTotalizar="";
	
	if(column.Name!=strId)
	{
		if(!column.IsForeignKeyMember) {
			sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"),\""+sPrefijo+"\");\r\n";
			
			if(ValidacionCampoTotalizarC(column)) {
				strSufijoListenerTotalizar="Valor";
			}
			
			//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(true);\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";			
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".addBindingListener(new BindingListener"+GetNombreClaseC(TablaBase.ToString())+"Tabla());\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".addPropertyChangeListener(new Property"+strSufijoListenerTotalizar+"ChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());\r\n";
			
			if(EsDateColumn(column)) {
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new DateRenderer());\r\n";
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditor(new DateEditorRenderer());\r\n";
				//sBindingColumnTable+="\t\t//columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setConverter(new DateConverterFromDate<Date,String>());\r\n";//".setConverter(new DateConverter<String,Date>());\r\n";
			
			} else if(EsBitColumn(column)) {
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new BooleanRenderer());\r\n";
				sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditor(new BooleanEditorRenderer());\r\n";
				//sBindingColumnTable+="\t\t//columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setConverter(new DateConverterFromDate<Date,String>());\r\n";//".setConverter(new DateConverter<String,Date>());\r\n";
			}
		} else {
			//PRIMERA VERSION DE FOREIGN KEY DONDE CODIGO ES IGUAL AL IF ANTERIOR
			/*
			sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
			
			//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(false);\r\n";
			sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
			*/
			String sParametro="";
			
			//ES LA COLUMNA DESCRIPCION DEL FOREIGN KEY POR ESO EL TIPO ES STRING
			if(EsColumnaVariableGlobalDataBaseFromPropertiesC(column) 
				|| EsColumnaVariableModuloGlobalC(column)
				|| GetNoInsertEditColumnFromPropertiesC(column)) {
				sTabColumnaOculta="\t";
				sIfColumnaOculta="\r\n\t"+sTabColumnaOculta+"if(Constantes.ISDEVELOPING) {\r\n";
				sIfColumnaOcultaFin="\t"+sTabColumnaOculta+"}";	
			}			
				sBindingColumnTable+=sIfColumnaOculta;
				
				//COMENTAR Y DESCOMENTAR PARA HABILITAR O NO TieneColumnaComboTablaNormalC(column)
				if(!(ConSwingCombosTabla && TieneColumnaComboTablaNormalC(column))) {
					sBindingColumnTable+="\r\n\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+strDescripcion+"}\"),\""+GetPrefijoRelacionC().ToLower()+GetNombreClaseObjetoC("dbo."+GetNombreClaseRelacionadaFromColumn(column))+strDescripcion+"\");\r\n";
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(false);\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass(String.class);\r\n";			
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addBindingListener(new BindingListener"+GetNombreClaseC(TablaBase.ToString())+"Tabla());\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addPropertyChangeListener(new PropertyChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());\r\n";
				
				} else {
					sBindingColumnTable+="\r\n\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+GetNombreCompletoColumnaClaseC(column)+"}\"),\""+GetNombreCompletoColumnaClaseC(column)+"\");\r\n";
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(true);\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass(Long.class);\r\n";			
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addBindingListener(new BindingListener"+GetNombreClaseC(TablaBase.ToString())+"Tabla());\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".addPropertyChangeListener(new PropertyChangeListener"+GetNombreClaseC(TablaBase.ToString())+"());\r\n";	
					
					
					
					
					
					if(!TieneColumnaComboTablaNormalC(column) && blnConSwingCombosDinamicosTabla) {
						sParametro="this.jComboBox"+GetNombreCompletoColumnaClaseC(column)+GetNombreClaseC(TablaBase.ToString())+"ParaTabla";	
					} else {
						sParametro="this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey";
					}					
					
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell("+sParametro+"));\r\n";
					sBindingColumnTable+="\t\t"+sTabColumnaOculta+"columnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditor(new "+GetNombreCompletoClaseRelacionadaFromColumn(column)+"TableCell("+sParametro+"));\r\n";//this."+GetNombreCompletoClaseRelacionadaFromColumn(column).ToLower()+"sForeignKey
					
				}
				
				sBindingColumnTable+=sIfColumnaOcultaFin;
		}
	}
	else
	{
		//OJO:ID DEBE SER EDITABLE SINO NO PERMITE CLICK BOTON
		sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+strId+"}\"),\""+strId+"\");\r\n";
		
		//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(ELProperty.create(\"${"+strId+"}\"));\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strIdGetSet.ToUpper()+"\");\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setEditable(true);\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	
	return sBindingColumnTable;
}

public String GetIndicesActionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			bool blnExisteBusquedaFkVariableGlobal=false;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					blnExisteBusquedaFkVariableGlobal=false;
					
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							if(indexSchema.Name.Contains("FK")){
								if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])
									|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,indexSchema.MemberColumns[0])) {
									blnExisteBusquedaFkVariableGlobal=true;
								}
							}
							
							if(blnExisteBusquedaFkVariableGlobal) {
								continue;	
							}
							//sPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButtonMe();\r\n";
 							
							sActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener\r\n";
							sActionsButtons+="\t\t(\r\n";
							sActionsButtons+="\t\t\tnew java.awt.event.ActionListener() \r\n";
							sActionsButtons+="\t\t\t{\r\n";
							sActionsButtons+="\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) \r\n";
							sActionsButtons+="\t\t\t\t{\r\n";
							sActionsButtons+="\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							sActionsButtons+="\t\t\t\t}\r\n";
							sActionsButtons+="\t\t\t}\r\n";
							sActionsButtons+="\t\t);\r\n";
		
						}
						else
						{
						;
						}
					}	
					
					

					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}		
	
		public String GetIndicesFunctionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							
							
						
							sActionsButtons+="\r\n\tpublic void jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt) \r\n";
							sActionsButtons+="\t{\r\n";
							sActionsButtons+="\t\ttry\r\n";
							sActionsButtons+="\t\t{\r\n";
							//sActionsButtons+="\t\t\tthis.iNumeroPaginacion=0;\r\n";
							
							//if(!blnEsReporte) {
								sActionsButtons+="\t\t\tthis.iNumeroPaginacionPagina=0;\r\n";
								sActionsButtons+="\t\t\tthis.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"(false,false);\r\n\r\n";
								sActionsButtons+="\t\t\tthis.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"();\r\n\r\n";
								sActionsButtons+="\t\t\tthis.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"(false);\r\n\r\n";
								sActionsButtons+="\t\t\t//if("+GetNombreClase(TablaBase.ToString())+strPrefijoBeanSwing+"JInternalFrame.ISBINDING_MANUAL) {\r\n";
								sActionsButtons+="\t\t\t//this.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"(false,false);\r\n";
								sActionsButtons+="\t\t\t//}\r\n";
							//}
							
							sActionsButtons+="\t\t}\r\n";
							sActionsButtons+="\t\tcatch(Exception e)\r\n";
							sActionsButtons+="\t\t{\r\n";
							sActionsButtons+="\t\t\t;\r\n";
							sActionsButtons+="\t\t}\r\n";
							sActionsButtons+="\t}\r\n";
							
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}		
		
public String GetIndicesInicializacionBindingsVariablesTablasClasesC(TableSchema TablaBase) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sFinalFuncion="";
			
			sFinalFuncion="\r\n\t\tthis.bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
			sFinalFuncion+="\r\n\t\t//this.binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
			String sControlBinding=String.Empty;
			String sPropertyControlBinding=String.Empty;			
			bool blnExisteBusquedaFkVariableGlobal=false;

			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{	
					blnExisteBusquedaFkVariableGlobal=false;
				
					if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name))
					{
						continue;
					}
					
					if(indexSchema.IsUnique)
					{
						continue;
					}
					else
					{
						
						


						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
								|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
								blnExisteBusquedaFkVariableGlobal=true;
								break;
							}
							
							if(memberColumnSchema.Column.IsForeignKeyMember) {
								sPropertyControlBinding="selectedItem.id";
							} else {
								if(EsDateColumn(memberColumnSchema.Column) || EsDateTimeColumn(memberColumnSchema.Column) || EsTimeColumn(memberColumnSchema.Column)){
									sPropertyControlBinding="date";
									
								} else if(memberColumnSchema.Column.DataType==DbType.Boolean) {
									sPropertyControlBinding="selected";
								
								} else {
									sPropertyControlBinding="text";
								}
							}
							//sControlesPanelesBusquedas+="\t"+GetInicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
							sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
							sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
							sControlesPanelesBusquedas+="\t\t{\r\n";
							sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
							sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
							sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+", ELProperty.create(\"${"+sPropertyControlBinding+"}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
								
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								;
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								if(memberColumnSchema.Column.IsForeignKeyMember) {
								sPropertyControlBinding="selectedItem.id";
								} else {
									sPropertyControlBinding="text";
								}
								
								sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+", ELProperty.create(\"${"+sPropertyControlBinding+"}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
						
								
							}
							else
							{
								sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+", ELProperty.create(\"${text}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n";
						
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"Final",memberColumnSchema.Column.IsForeignKeyMember)+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= Bindings.createAutoBinding(UpdateStrategy.READ_WRITE,this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", ELProperty.create(\"${text}\"),this,ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n";
						
								
								break;
							}
						}
						
						sControlesPanelesBusquedas+=GetConverterBindingVariablesSwingInternoC(memberColumnSchema.Column);
						
						count++;
						
						sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
						sInitFuncion+=sControlBinding;
					}
					
					if(blnExisteBusquedaFkVariableGlobal) {
						continue;	
					}
																																						
				}
			}
			
			
			return sInitFuncion; 
		}

public String GetIndicesInicializacionBindingsVariablesManualTablasClasesC(TableSchema TablaBase) {
	String sFuncion=String.Empty;
	String sTablaClaseRelacionada=String.Empty;
	String sInitFuncion="\r\n";
		
	String sPanelesBusquedas=String.Empty;
	String sControlesPanelesBusquedas=String.Empty;
			
	String sFinalFuncion="";
			
	sFinalFuncion="";//"\r\n\t\tthis.bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
	//sFinalFuncion+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
	String sControlBinding=String.Empty;
	String sPropertyControlBinding=String.Empty;
	String sPropertyControlBindingInit=String.Empty;
	TableSchema tableRelacionada=null;
	ColumnSchema columnSchema=null;
	string strPrefijoTabla="";
	string strPrefijoTipo ="";
	string strNombre = "";
	bool blnExisteBusquedaFkVariableGlobal=false;
	String strCommentParse="";
	
	foreach(IndexSchema indexSchema in TablaBase.Indexes) {
		if(!indexSchema.IsPrimaryKey) {			
			blnExisteBusquedaFkVariableGlobal=false;

			if(!VerificarIndiceBusquedaTablaC(TablaBase,indexSchema.Name)) {
				continue;
			}
					
			if(indexSchema.IsUnique) {
				continue;
			} else {
				if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK")) {
					;
				} else {
					;
				}
			}	
			
			int count=1;	
			sControlesPanelesBusquedas="";
			
			//Trace.WriteLine(indexSchema.Name);
			
			foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns) {
				strCommentParse="";
				
				if(memberColumnSchema.Column.Name.Equals(strId) || memberColumnSchema.Column.Name.Equals(strVersionRow)) {
					strCommentParse="//";
				}
				
				if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual"))) {
					if(EsIndiceFKColumnaVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)
						|| EsIndiceFKColumnaModuloVariableGlobalDataBaseFromPropertiesC(indexSchema,memberColumnSchema.Column)) {
						blnExisteBusquedaFkVariableGlobal=true;
						break;
					}
							
					if(memberColumnSchema.Column.IsForeignKeyMember) {
						if(!blnNoStandardTableFromProperties) {	
							tableRelacionada=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
							sPropertyControlBinding=").getId";
						} else {
							tableRelacionada=GetTableSchemaFromColumnForeignKey(memberColumnSchema.Column);
							columnSchema=GetColumnSchemaFromColumnForeignKey(tableRelacionada,TablaBase,memberColumnSchema.Column);
									
							strPrefijoTabla=GetPrefijoTablaC();
							strPrefijoTipo = GetPrefijoTipoC(columnSchema);
							strNombre = GetNombreColumnaClaseC(columnSchema);

							sPropertyControlBinding=").get"+strPrefijoTabla+strPrefijoTipo+strNombre;
						}
								
						sPropertyControlBindingInit="(("+GetNombreClaseC(tableRelacionada.ToString())+")";
								
					} else {
						sPropertyControlBindingInit="";
														
						if(!EsDateTimeColumn(memberColumnSchema.Column) && !EsDateColumn(memberColumnSchema.Column) && !EsTimeColumn(memberColumnSchema.Column)) {
							if(!EsBitColumn(memberColumnSchema.Column)) {
								sPropertyControlBinding=".getText";
							} else {
								sPropertyControlBinding=".isSelected";
							}
						} else {
							sPropertyControlBinding=".getDate().getTime";
						}
					}
					
					//sControlesPanelesBusquedas+="\t"+GetInicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
					//sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
					//sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
					//sControlesPanelesBusquedas+="\t\t{\r\n";
					//sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
					//sControlesPanelesBusquedas+="\t\t}\r\n\r\n";			GetTipoColumnaParse(memberColumnSchema.Column,"")		
							
					//SOLO CAMBIA O SE QUITA sPropertyControlBindingInit
							
					if(!memberColumnSchema.Column.IsForeignKeyMember) {
						if(!EsDateTimeColumn(memberColumnSchema.Column) && !EsDateColumn(memberColumnSchema.Column) && !EsTimeColumn(memberColumnSchema.Column)) {
							if(!EsBitColumn(memberColumnSchema.Column)) {
								sControlesPanelesBusquedas+="\t\t"+strCommentParse+"this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"()")+";\r\n";								
							} else {
								sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"()"+";\r\n";
							}
						} else {
							String sNewType="";
									
							if(EsDateColumn(memberColumnSchema.Column)) {
								sNewType="new Date(";
							} else if(EsDateTimeColumn(memberColumnSchema.Column)) {
								sNewType="new Timestamp(";
							} else if(EsTimeColumn(memberColumnSchema.Column)) {
								sNewType="new Time(";
							}
									
							sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sNewType+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+sPropertyControlBinding+"())"+";\r\n";
						}
					} else {
						sControlesPanelesBusquedas+="\t\tif(this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+".getSelectedItem()!=null){this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sPropertyControlBindingInit+"this."+GetNombreControlVariablesSwingInternoC(memberColumnSchema.Column,indexSchema.Name,"",memberColumnSchema.Column.IsForeignKeyMember)+".getSelectedItem()"+sPropertyControlBinding+"();}\r\n";							
					}
					
					//GetTipoColumnaParse(memberColumnSchema.Column,"");
							
					if(!indexSchema.MemberColumns.Count.Equals(count)) {
						;
					}
					
				} else {
					if(!indexSchema.Name.Contains("BusquedaRango")) {
						if(memberColumnSchema.Column.IsForeignKeyMember) {
							if(!blnNoStandardTableFromProperties) {	
								tableRelacionada=GetNombreTablaRelacionadaFromColumn(memberColumnSchema.Column);
								sPropertyControlBinding=".getSelectedItem()).getId";
							} else {
								tableRelacionada=GetTableSchemaFromColumnForeignKey(memberColumnSchema.Column);
								columnSchema=GetColumnSchemaFromColumnForeignKey(tableRelacionada,TablaBase,memberColumnSchema.Column);
										
								strPrefijoTabla=GetPrefijoTablaC();
								strPrefijoTipo = GetPrefijoTipoC(columnSchema);
								strNombre = GetNombreColumnaClaseC(columnSchema);

								sPropertyControlBinding=".getSelectedItem()).get"+strPrefijoTabla+strPrefijoTipo+strNombre;
							}
									
							sPropertyControlBindingInit="(("+GetNombreClaseC(tableRelacionada.ToString())+")";
									
						} else {
							sPropertyControlBindingInit="";
							sPropertyControlBinding=".getText";
						}
						
						/*
						sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
						sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
						sControlesPanelesBusquedas+="\t\t{\r\n";
						sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
						sControlesPanelesBusquedas+="\t\t}\r\n\r\n";
						*/
						//ANTERIOR
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						
						//SOLO CAMBIA O SE QUITA sPropertyControlBindingInit
							
						if(!memberColumnSchema.Column.IsForeignKeyMember) {
							sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"()")+";\r\n";
						} else {
							sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sPropertyControlBindingInit+"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						}
					} else {
						/*
						sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
						sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
						sControlesPanelesBusquedas+="\t\t{\r\n";
						sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
						sControlesPanelesBusquedas+="\t\t}\r\n\r\n";		
						*/
						//ANTERIOR
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+sPropertyControlBindingInit+"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						
						sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"()")+";\r\n";
								
						//sInitFuncion+=",";
						/*
						sControlesPanelesBusquedas+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n\r\n";				
						sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
						sControlesPanelesBusquedas+="\t\t{\r\n";
						sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
						sControlesPanelesBusquedas+="\t\t}\r\n\r\n";	
						*/
						//ANTERIOR
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"();\r\n";
						
						//TALVEZ
						//sControlesPanelesBusquedas+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"="+GetTipoColumnaParse(memberColumnSchema.Column,"this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+sPropertyControlBinding+"()")+";\r\n";
								
						break;
					}
				}
				
				count++;
						
				//sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
				//sInitFuncion+=sControlBinding;
			}	
			
			sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
			sInitFuncion+=sControlBinding;
				
			if(blnExisteBusquedaFkVariableGlobal) {
				continue;	
			}
		}
	}
						
	return sInitFuncion; 
}

public String GetNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table,bool esConMenu,bool esConManejarMenu,bool esConSwitchManejarMenu) 
		{
			return GetNavegacionColumnsTablaTablasClasesRelacionadasC(table,esConMenu,esConManejarMenu,esConSwitchManejarMenu);
			/*
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table,false);
			
			
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			TableSchema tablaRelacionadaObjetivo;
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)
					|| !GetPermitePorOcultoClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					
					if(!esConMenu && !esConManejarMenu) {
						sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
					
					} else if(esConMenu){
						sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadasMenuItem(tablaRelacionadaObjetivo);						
					
					} else if(esConManejarMenu){
						sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadasMenuItemActionPerformed(tablaRelacionadaObjetivo);						
					}
				}
				
					
				
			}
									
			return sTablaClaseRelacionada; 
			*/
		}
/*
public String GetNavegacionColumnTablaTablasClasesRelacionadasMenuItemActionPerformed(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\t\t\t\telse if(sActionCommand.equals(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\")) {";
	sColumna+="\r\n\t\t\t\tint row=jTableDatos"+GetNombreClase(TablaBase.ToString())+".getSelectedRow();";
	sColumna+="\r\n\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(actionEvent,row,true,false);";
	sColumna+="\r\n\t\t\t\t}";
	
	return sColumna;
}
public String GetNavegacionColumnTablaTablasClasesRelacionadasMenuItem(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && !"+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.ISGUARDARREL) {";

	sColumna+="\r\n\t\t\t\tjmenuItem = new JMenuItem(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");";
    sColumna+="\r\n\t\t\t\t//jmenuItem.setMnemonic(KeyEvent.VK_S);";
    sColumna+="\r\n\t\t\t\t//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));";
    sColumna+="\r\n\t\t\t\tjmenuItem.setActionCommand(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");";
		
	sColumna+="\r\n\r\n\t\t\t\tjmenuItem.addActionListener (";
	sColumna+="\r\n\t\t\t\t\tnew java.awt.event.ActionListener() {";
	sColumna+="\r\n\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {";
	sColumna+="\r\n\t\t\t\t\t\t\tjmenuItemActionPerformed(evt);";
	sColumna+="\r\n\t\t\t\t\t\t}";
	sColumna+="\r\n\t\t\t\t\t}";
	sColumna+="\r\n\t\t\t\t);";
	
	sColumna+="\r\n\r\n\t\t\t\tthis.jmenuDetalleContinente.add(jmenuItem);";
	
	sColumna+="\r\n\t\t\t}";//IF
	
	return sColumna;
}

public String GetNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && !"+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.ISGUARDARREL) {";

	sColumna+="\r\n\t\t\t\ttableColumn= new TableColumn();\r\n";
	sColumna+="\t\t\t\ttableColumn.setIdentifier(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	sColumna+="\t\t\t\ttableColumn.setHeaderValue(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	sColumna+="\t\t\t\ttableColumn.setCellRenderer(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n";
	sColumna+="\t\t\t\ttableColumn.setCellEditor(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n\r\n";

	sColumna+="\t\t\t\ttableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);\r\n"; 	 
	sColumna+="\t\t\t\ttableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);\r\n"; 	 
	sColumna+="\t\t\t\ttableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);\r\n\r\n"; 
					
	sColumna+="\t\t\t\tthis.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;\r\n\r\n";
				
	sColumna+="\t\t\t\tthis.jTableDatos"+GetNombreClase(TablaBase.ToString())+".addColumn(tableColumn);\r\n";
	
	sColumna+="\r\n\t\t\t}";//IF
	
	return sColumna;
}
*/

public String GetSetVariablesTabsNavegacionTablasClasesRelacionadas(TableSchema table) {
	String sTablaClaseRelacionada=String.Empty;
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
	TableSchema tablaRelacionadaObjetivo;
	ArrayList tablasRelacionadasEncontradas=new ArrayList();
	bool encontrado=false;
	String sClasesNoRelacionadas=String.Empty;
	String[] sClases;
	bool blClaseNo=false;
			
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {				
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
			tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
		} else {
			tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
		}
								
		if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
			continue;
		}
				
		encontrado=false;
				
		foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
			if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)){
				encontrado=true;
			}
		}
								
		if(!encontrado) {
			tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
			sTablaClaseRelacionada+=GetSetVariablesTabsNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
		}	
	}
	//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
	return sTablaClaseRelacionada; 
}

public String GetSetVariablesTabsNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) {
	String sColumna="";
	String sComment="";
	
	if(ConEjb){
		sComment="//";
	}
	
	sColumna+="\r\n\r\n\t\tif(!this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame!=null) {";
	sColumna+="\r\n\t\t\tthis.jTabbedPaneRelaciones"+GetNombreClaseC(TablaBase.ToString())+".remove(this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.getContentPane());";
	sColumna+="\r\n\t\t}";
	/*
	sColumna+="\r\n\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
		
	sColumna+="\r\n\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";	
	sColumna+="\r\n\t\t\t"+sComment+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";	
	sColumna+="\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t} else if(Constantes.ISUSAEJBHOME) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionableHome.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t}\r\n";
	
	sColumna+="\r\n\t\t"+strGlobalSeguridadCommentNo+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n\r\n";				
	*/
	
	return sColumna;
}

public String GetSetVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}

		
public String GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	String sComment="";
	
	if(ConEjb){
		sComment="//";
	}
	
	sColumna+="\r\n\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
		
	sColumna+="\r\n\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";	
	sColumna+="\r\n\t\t\t"+sComment+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";	
	sColumna+="\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t} else if(Constantes.ISUSAEJBHOME) {";
	sColumna+="\r\n\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionableHome.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";			
	sColumna+="\t\t}\r\n";
	
	sColumna+="\r\n\t\t"+strGlobalSeguridadCommentNo+"this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n\r\n";				
	
	return sColumna;
}

public String GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) {
		String sTablaClaseRelacionada=String.Empty;
		System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
		TableSchema tablaRelacionadaObjetivo;
		ArrayList tablasRelacionadasEncontradas=new ArrayList();
		bool encontrado=false;
		String sClasesNoRelacionadas=String.Empty;
		String[] sClases;
		bool blClaseNo=false;
			
		foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {				
			
			if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else {
				tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
			}
								
			if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
				continue;
			}
												
			encontrado=false;
				
			foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
				if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)) {
						encontrado=true;
				}
			}
								
			if(!encontrado) {
				tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
				//sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				sTablaClaseRelacionada+="\r\n\t\tarrPaginas.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION);";
			}													
		}
		//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
		return sTablaClaseRelacionada; 
}

public String GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(TableSchema table) {
	return 	GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(table,false);
}

public String GetSetVariablesArrayPaginasNavegacionColumnsTablaTablasClasesRelacionadas2Version(TableSchema table,bool conParametro) {
		String sTablaClaseRelacionada=String.Empty;
		System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
		TableSchema tablaRelacionadaObjetivo;
		ArrayList tablasRelacionadasEncontradas=new ArrayList();
		bool encontrado=false;
		String sClasesNoRelacionadas=String.Empty;
		String[] sClases;
		bool blClaseNo=false;
			
		foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {						
			if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {					
				tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
			} else {
				tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
			}
								
			if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
				continue;
			}
												
			encontrado=false;
				
			foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
				if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)) {
						encontrado=true;
				}
			}
								
			if(!encontrado) {
				tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
				//sTablaClaseRelacionada+=GetSetVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				//sTablaClaseRelacionada+="\r\n\t\tarrPaginas.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION);";
				
				if(!conParametro) {
					sTablaClaseRelacionada+="\r\n\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=false;\r\n";
					sTablaClaseRelacionada+="\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=this.verificarGetPermisosUsuario"+GetNombreClase(TablaBase.ToString())+"ClaseRelacionada(arrPaginasFinal,"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";
				} else {
					sTablaClaseRelacionada+="\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"=conPermiso;";
				}
			}													
		}
		//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
		return sTablaClaseRelacionada; 
}

public String GetDefinitionVariablesResaltarNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table,bool esFuncionResaltarLote,bool esConBorder) {
	String sTablaClaseRelacionada=String.Empty;
	String sTablaClaseRelacionada2=String.Empty;
	String sTablaClaseRelacionada3=String.Empty;
	System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
	TableSchema tablaRelacionadaObjetivo;
	ArrayList tablasRelacionadasEncontradas=new ArrayList();
	bool encontrado=false;
	String sClasesNoRelacionadas=String.Empty;
	String[] sClases;
	bool blClaseNo=false;
			
	if(esFuncionResaltarLote){	
		sTablaClaseRelacionada+="\r\n\t\tif(deepLoadType.equals(DeepLoadType.INCLUDE) || deepLoadType.equals(DeepLoadType.NONE)) {";
		if(!esConBorder){
			sTablaClaseRelacionada+="\r\n\t\t\tesInicial=false;";
			sTablaClaseRelacionada+="\r\n\t\t\tesAsigna=true;";
		} else {
			sTablaClaseRelacionada+="\r\n\t\t\tesInicial=null;";
			sTablaClaseRelacionada+="\r\n\t\t\tesAsigna=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
		}
		sTablaClaseRelacionada+="\r\n\t\t} else if(deepLoadType.equals(DeepLoadType.EXCLUDE)) {";
		if(!esConBorder){
			sTablaClaseRelacionada+="\r\n\t\t\tesInicial=true;";
			sTablaClaseRelacionada+="\r\n\t\t\tesAsigna=false;";
		} else {
			sTablaClaseRelacionada+="\r\n\t\t\tesInicial=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
			sTablaClaseRelacionada+="\r\n\t\t\tesAsigna=null;";
		}
		sTablaClaseRelacionada+="\r\n\t\t}\r\n";
		
		//sTablaClaseRelacionada+="\r\n\r\n\t\tfor(Classe clase:clases) {";
	}
	
	foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values) {				
		if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne) {
			tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
		} else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany) {			
			tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
		} else {
			tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
		}
								
		if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo)) {
			continue;
		}								
				
		encontrado=false;
				
		foreach(TableSchema tableSchema in tablasRelacionadasEncontradas) {										
			if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name)) {
				encontrado=true;
			}
		}								
		
		if(!encontrado) {
			tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
			
			if(!esFuncionResaltarLote) {
				sTablaClaseRelacionada+=GetDefinitionVariablesResaltarNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
			
			} else if(esFuncionResaltarLote){
				sTablaClaseRelacionada2+=GetSetVariablesResaltarLoteNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo,false,false,esConBorder);				
				sTablaClaseRelacionada3+=GetSetVariablesResaltarLoteNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo,true,true,esConBorder);				
			}
		}											
	}
	//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
			
	if(esFuncionResaltarLote){
		sTablaClaseRelacionada=sTablaClaseRelacionada +sTablaClaseRelacionada2;
		
		sTablaClaseRelacionada+="\r\n\r\n\t\tfor(Classe clase:clases) {";
		sTablaClaseRelacionada+=sTablaClaseRelacionada3	;	
		sTablaClaseRelacionada+="\r\n\t\t}";
		
		
		
		//AGREGAR INCLUDE
		//sTablaClaseRelacionada="\r\n\t\tif(deepLoadType.equals(DeepLoadType.INCLUDE) || deepLoadType.equals(DeepLoadType.NONE)) {";					
		//sTablaClaseRelacionada=sTablaClaseRelacionada+"\r\n\t\t}";
	}
	
	return sTablaClaseRelacionada; 
}

public String GetSetVariablesResaltarLoteNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada,bool esParaForIf,bool esTrue,bool esConBorder) {
	String sColumna="";
	String sTrueFalse="true";
	String sTabs="\t\t";
	String sTipo="Visibilidad";
	
	if(!esTrue) {
		sTrueFalse="esInicial";
	} else {
		sTrueFalse="esAsigna";
	}
	
	if(!esConBorder) {
		sTipo="Visibilidad";
	} else {
		sTipo="Border";
	}
	
		if(esParaForIf) {
			sColumna+="\r\n\r\n\t\t\tif(clase.clas.equals("+GetNombreClaseC(tablaRelacionada.ToString())+".class)) {";
		
		} else {
			sTabs="";
		}
		//EL BORDE RESALTADO NO DEPENDE DE LA VISIBILIDAD
		/*
		if(EsSwing) {
			sColumna+="\r\n\t\t\t\tthis.setBorderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"();";
		}
		*/
		
		sColumna+="\r\n\t\t"+sTabs+"this.set"+sTipo+"Resaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"("+sTrueFalse+");";
		
		if(esParaForIf) {
			sColumna+="\r\n\t\t\t\tcontinue;";		
			sColumna+="\r\n\t\t\t}";
		}
	
			
	return sColumna;
}

public String GetDefinitionVariablesResaltarNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) {
	String sColumna="";
	
	if(EsSwing) {
		sColumna+="\r\n\r\n\tpublic Border borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"=null;\r\n";
		sColumna+="\r\n\tpublic Border getBorderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
		sColumna+="\r\n\t\treturn this.borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+";";
		sColumna+="\r\n\t}\r\n";
	
		sColumna+="\r\n\tpublic void setBorderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"(Border borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+") {";
		sColumna+="\r\n\t\tif(borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"!=null) {";
		sColumna+="\r\n\t\t\tthis.borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"= borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+";";
		sColumna+="\r\n\t\t}";
		sColumna+="\r\n\t}\r\n";
		
		sColumna+="\r\n\tpublic void setBorderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
		sColumna+="\r\n\t\tBorder borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
		sColumna+="\r\n\r\n\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+");";
		sColumna+="\r\n\t\tthis.borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"= borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+";";
		sColumna+="\r\n\t}\r\n";
	}
	
	sColumna+="\r\n\r\n\r\n\tpublic Boolean visibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n";
	sColumna+="\r\n\tpublic Boolean getVisibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
	sColumna+="\r\n\t\treturn this.visibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";

	sColumna+="\r\n\tpublic void setVisibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"(Boolean visibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+") {";
	sColumna+="\r\n\t\tthis.visibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"= visibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";
	
	//ESTA VISIBLE POR DEFECTO
	/*
	sColumna+="\r\n\tpublic void setVisibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
	sColumna+="\r\n\t\tBorder borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"=Funciones2.getBorderResaltar(this.getParametroGeneralUsuario(),\"COLUMNA\");";
	//sColumna+="\r\n\r\n\t\tthis.jTtoolBar"+GetNombreClaseC(TablaBase.ToString())+".setBorder(borderResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+");";
	sColumna+="\r\n\t\tthis.visibilidadResaltar"+GetNombreClaseC(tablaRelacionada.ToString())+"= false;";
	sColumna+="\r\n\t}\r\n";
	*/
	
	return sColumna;
}

public String GetDefinitionVariablesNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetDefinitionVariablesNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetDefinitionVariablesNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\tpublic Boolean isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
	sColumna+="\r\n\tpublic Boolean getIsTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"() {";
	sColumna+="\r\n\t\treturn isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";

	sColumna+="\r\n\tpublic void setIsTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"(Boolean isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+") {";
	sColumna+="\r\n\t\tthis.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"= isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+";";
	sColumna+="\r\n\t}\r\n";
	
	return sColumna;
}

public String GetNavegacionColumnsTableCellTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(TieneFkMultiple(collectionInfo)) {
					continue;	
				}
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				if(!GetPermiteClaseRelacionadaC(table,tablaRelacionadaObjetivo))
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetNavegacionColumnTableCellTablasClasesRelacionadas(table,tablaRelacionadaObjetivo,collectionInfo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetNavegacionColumnTableCellTablasClasesRelacionadas(TableSchema  table,TableSchema tablaRelacionada,CollectionInfo collectionInfo) 
{
	String sNombrePakage=GetPackageTableFromProperties(tablaRelacionada);
	
	String sColumna="";
	
	String strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
		
	String strSufijoAutoReferenciada="";
	
	if(table.Name.Equals(tablaRelacionada.Name)) {
		strSufijoAutoReferenciada=strAutoRef;
	}
	
	sColumna+="\r\n\r\n\t\tclass "+GetNombreClase(tablaRelacionada.ToString())+strSufijoAutoReferenciada+"TableCell extends DefaultCellEditor implements TableCellRenderer {\r\n";//extends AbsactCellEditor , ,TableCellEditor
		//sColumna+="\t\t{\r\n";
		sColumna+="\t\t\tprivate static final long serialVersionUID = 1L;\r\n\r\n";
		sColumna+="\t\t\tprivate Border borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+"=null;\r\n\r\n";
		
		sColumna+="\t\t\tpublic "+GetNombreClase(tablaRelacionada.ToString())+strSufijoAutoReferenciada+"TableCell(Border borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+") {\r\n";
		sColumna+="\t\t\t\tsuper(new JCheckBoxMe());\r\n";
		sColumna+="\t\t\t\tthis.borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+"=borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";
				
		sColumna+="\t\t\tpublic "+GetNombreClase(tablaRelacionada.ToString())+strSufijoAutoReferenciada+"TableCell(JCheckBox checkBox) {\r\n";
		sColumna+="\t\t\t\tsuper(checkBox);\r\n";
		sColumna+="\t\t\t}\r\n\r\n";
				
		sColumna+="\t\t\tJButton jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\tObject valor;\r\n\r\n";

		
		sColumna+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {\r\n";
		//sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+" =new JButtonMe((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setToolTipText((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			sColumna+="\t\t\t\tif(this.borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+"!=null) {\r\n";
			sColumna+="\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setBorder(this.borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+");\r\n";
			sColumna+="\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setOpaque(true);\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());\r\n\r\n";

			sColumna+="\t\t\t\tif(isSelected) {\r\n";
			sColumna+="\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setForeground(FuncionesSwing.getColorSelectedForeground());\r\n";
			sColumna+="\t\t\t\t}\r\n\r\n";
				
			sColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";

		sColumna+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,final int row,int column) {\r\n";
		//sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"=new JButtonMe((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setToolTipText((row+1)+\"-"+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			sColumna+="\t\t\t\tif(this.borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+"!=null) {\r\n";
			sColumna+="\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".setBorder(this.borderResaltar"+GetNombreClase(tablaRelacionada.ToString())+");\r\n";
			sColumna+="\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".addActionListener(\r\n";
	        //sColumna+="\t\t\t\t(\r\n";
		          sColumna+="\t\t\t\t\tnew java.awt.event.ActionListener() {\r\n";
		          //sColumna+="\t\t\t\t\t{\r\n";
		              sColumna+="\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\r\n";
		              //sColumna+="\t\t\t\t\t\t{\r\n";
		            	  sColumna+="\t\t\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(evt,row,true,false);\r\n";
		              sColumna+="\t\t\t\t\t\t}\r\n";
		          sColumna+="\t\t\t\t\t}\r\n";
	        sColumna+="\t\t\t\t);\r\n\r\n";

			sColumna+="\t\t\t\tvalor=value;\r\n\r\n";
			sColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";

		sColumna+="\t\t\tpublic Object getCellEditorValue() {\r\n";
		//sColumna+="\t\t{\r\n";
			sColumna+="\t\t\t\treturn valor;\r\n";
		sColumna+="\t\t\t}\r\n\r\n";
		
		/*
		sColumna+="\t\t\tpublic void addCellEditorListener(CellEditorListener arg0) {\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic void cancelCellEditing() {\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic boolean isCellEditable(EventObject arg0) {\r\n";
			sColumna+="\t\t\t\treturn true;\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic void removeCellEditorListener(CellEditorListener arg0) {\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	
			sColumna+="\t\t\tpublic boolean shouldSelectCell(EventObject arg0) {\r\n";
			sColumna+="\t\t\t\treturn false;\r\n";
			sColumna+="\t\t\t}\r\n\r\n";
	*/
			sColumna+="\t\t\tpublic boolean stopCellEditing() {\r\n";
			sColumna+="\t\t\t\tfireEditingStopped();\r\n\r\n";
			sColumna+="\t\t\t\treturn true;\r\n";
			sColumna+="\t\t\t}\r\n";	
			
	sColumna+="\t\t}\r\n\r\n";
	
	sColumna+="\t\tpublic void jButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado)\r\n";
	sColumna+="\t\t{\r\n";   
		sColumna+="\t\t\ttry\r\n";
		sColumna+="\t\t\t{\r\n";
			
			sColumna+="\t\t\t\tint intSelectedRow =rowIndex;";// this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
			
			String strComentarioParaEjb="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
			}
			
			String strFuncionBusquedaEjbInit="\r\n\t\t\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit+="\r\n\t\t\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t\t\t//ARCHITECTURE";
				
			sColumna+="\r\n\r\n\t\t\t\tif(intSelectedRow!=-1) {";
			sColumna+=strFuncionBusquedaEjbInit;
			sColumna+="\r\n\t\t\t\t\t\t"+ strComentarioParaEjb+"this."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];";
			sColumna+=strFuncionBusquedaEjbMiddle;
			sColumna+="\r\n\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = ("+strPackageJava+GetNombreClaseC(TablaBase.ToString())+")this."+GetNombreClaseObjetoC(TablaBase.ToString())+"s.toArray()[this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow)];";
			sColumna+=strFuncionBusquedaEjbEnd;
			sColumna+="\r\n\t\t\t\t} else {";
			sColumna+="\r\n\t\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = new "+GetNombreClaseC(TablaBase.ToString())+"();";
			sColumna+="\r\n\t\t\t\t}";
			//YA DEFINIDOS PERO APARTE AL INICIAR
			//sColumna+="\r\n\t\t\t\tBoolean isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=false;\r\n";
			//sColumna+="\r\n\t\t\t\t"+GetExtra2ServletComment(TablaBase)+strGlobalSeguridadComment+"isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=sistemaAdditionable.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, "+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.SNOMBREOPCION);\r\n";
			//sColumna+="\r\n\t\t\t\t"+strGlobalSeguridadCommentNo+"isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+"=true;\r\n\r\n";
			
			sColumna+="\r\n\r\n\t\t\t\tif(this.isTienePermisos"+GetNombreClaseC(tablaRelacionada.ToString())+" && this.permiteMantenimiento(this."+GetNombreClaseObjetoC(TablaBase.ToString())+")) {\r\n";
			
			sColumna+="\t\t\t\t\t"+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=null;\r\n\r\n";//new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario);\r\n\r\n";
			
			sColumna+="\t\t\t\t\tif(conInicializar) {\r\n";
			
			sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFramePopup=new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,false,false,true,false);\r\n";
			
			
			sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFramePopup.setJInternalFrameParent(this);\r\n\r\n";
			
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFramePopup;\r\n";
			sColumna+="\t\t\t\t\t} else {\r\n";
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=this."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame;\r\n";
			sColumna+="\t\t\t\t\t}\r\n";
			
			sColumna+="\r\n\t\t\t\t\t"+strTypeCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeNewCollection+"<"+strPackageJava+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
			sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n\r\n";
			
			sColumna+="\t\t\t\t\tif(!esRelacionado) {\r\n";
			sColumna+="\t\t\t\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);\r\n";
	        sColumna+="\t\t\t\t\t\t//"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);\r\n";
			sColumna+="\t\t\t\t\t}\r\n\r\n";
			
			//CARGAR JINTERNALFRAME
			sColumna+="\t\t\t\t\tthis.cargar"+GetNombreClaseC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame("+GetNombreClaseObjetoC(TablaBase.ToString())+"s,this."+GetNombreClaseObjetoC(TablaBase.ToString())+","+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame,/*conInicializar,*/"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".getConGuardarRelaciones(),"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".getEsGuardarRelacionado());\r\n\r\n\r\n";			
			
			/*
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseObjetoC(TablaBase.ToString())+strNombreAdicional.ToLower()+"sForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";			
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombos"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisibilidadBusquedasPara"+GetNombreClase(TablaBase.ToString())+"(true);\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombosFrame"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			*/
			
			//Trace.WriteLine("here");
			if(!GetEsAuxiliarFromPropertiesC(TablaBase) && !blnNoStandardTableFromProperties){
				if(TieneIndiceClaseRelacionadaForeignKeyC(tablaRelacionada,TablaBase)) {
					//sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetParameterClaseDeepRelacionadoC(collectionInfo)/*strIdGetSet+GetNombreClaseC(TablaBase.ToString())*/+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strNombreAdicional+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
				}
			} else if(blnNoStandardTableFromProperties) {
				TableKeySchema tableKeySchema=collectionInfo.TableKey;	
				
				//Trace.WriteLine("PK:"+tableKeySchema.PrimaryKeyTable.Name);
				//Trace.WriteLine("FK:"+tableKeySchema.ForeignKeyTable.Name);
				
				MemberColumnSchema memberColumnSchemaPK=null;
				MemberColumnSchema memberColumnSchemaFK=null;
				string strPrefijoTipo = "";
				string strNombre = "";
				
				if(!tableKeySchema.PrimaryKeyMemberColumns.Count.Equals(tableKeySchema.ForeignKeyMemberColumns.Count)) {
					System.Windows.Forms.MessageBox.Show("NO TIENE EL MISMO NUMERO DE COLUMNAS PK Y FK NO ESTANDARD");	
				}
				
				for (int i = 0; i < tableKeySchema.PrimaryKeyMemberColumns.Count; i++){
					memberColumnSchemaPK=tableKeySchema.PrimaryKeyMemberColumns[i];
					memberColumnSchemaFK=tableKeySchema.ForeignKeyMemberColumns[i];
					
					strPrefijoTipo = GetPrefijoTipoC(memberColumnSchemaFK.Column);
					strNombre = GetNombreColumnaClaseC(memberColumnSchemaFK.Column);	
	
					//sColumna+="\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+strPrefijoTipo+strNombre+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+GetParameterClaseMethodC(memberColumnSchemaPK.Column,true,false,false,"")+");\r\n";
				}
			}
			
			/*
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.procesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setsAccionBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";			
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.inicializarActualizarBindingTabla"+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
			sColumna+="\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.getjButtonRecargarInformacion"+GetNombreClaseC(tablaRelacionada.ToString())+"().setVisible(false);\r\n\r\n";
			*/
			
			sColumna+="\t\t\t\t\tif(!esRelacionado) {\r\n";
			//sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setConGuardarRelaciones(false);\r\n";
	        //sColumna+="\t\t\t\t\t\tthis."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame."+GetNombreClaseObjetoC(tablaRelacionada.ToString())+strPrefijoJSFSessionFaces+".setEsGuardarRelacionado(false);\r\n\r\n";
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.actualizarEstadoPanels"+GetNombreClaseC(tablaRelacionada.ToString())+"(\"no_relacionado\");\r\n\r\n";
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.redimensionarTablaDatosConTamanio("+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.ITAMANIOFILATABLA + ("+GetNombreClaseC(tablaRelacionada.ToString())+"ConstantesFunciones.ITAMANIOFILATABLA/2));\r\n\r\n";
			
	        sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));\r\n\r\n";
	        
			
			sColumna+="\t\t\t\t\t\tif(!Constantes.CON_VARIAS_VENTANAS) {\r\n";
			sColumna+="\t\t\t\t\t\t\tMainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n";
			sColumna+="\t\t\t\t\t\t}\r\n\r\n";
			
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";	        
			sColumna+="\t\t\t\t\t\tthis.jDesktopPane.add("+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n\r\n";	        
			sColumna+="\t\t\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setSelected(true);\r\n";
			
			sColumna+="\t\t\t\t\t}\r\n";
			
			sColumna+="\r\n\t\t\t\t} else {\r\n";//if
			sColumna+="\t\t\t\t\tif(!this."+GetNombreClaseObjetoC(TablaBase.ToString())+"SessionBean.getConGuardarRelaciones()) {\r\n";
			sColumna+="\t\t\t\t\t\tJOptionPane.showMessageDialog(this,\"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE "+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+"\",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);\r\n";
			sColumna+="\t\t\t\t\t}\r\n";
			sColumna+="\t\t\t\t}\r\n";			
			
		sColumna+="\t\t\t}\r\n";
		sColumna+="\t\t\tcatch(Exception e)\r\n";
		sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tFuncionesSwing.manageException2(this, e,logger,"+GetNombreClaseC(TablaBase.ToString())+"ConstantesFunciones.CLASSNAME);;\r\n";
		sColumna+="\t\t\t}\r\n";
	sColumna+="\t\t}\r\n";
	
	
	return sColumna;
}

Stopwatch stopWatch = new Stopwatch();
	
public void IniciarTiempo() {
	IniciarTiempoC(stopWatch);
	/*
	if(IS_DEBUG) {
		stopWatch = new Stopwatch();
		stopWatch.Start();
	}
	*/
}	

public void DetenerTiempo(PaquetesGenerar paqueteGenerar,String strSubPaquete) {
	DetenerTiempoC(stopWatch,paqueteGenerar,strSubPaquete);
	
	/*
	if(IS_DEBUG) {
		stopWatch.Stop();	
		ImprimirTiempo(paqueteGenerar,strSubPaquete);
	}
	*/
}
</script>
<%//InicializarVariablesPorTabla(TablaBase);%>
<%//InicializarVariablesEmpresaC(Empresa,false);%>
<%=GetByDanLicence()%>
<%if(!EsSwing){%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%><%=GetEsPaqueteReporteC(TablaBase)%>;
<%}else{%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%>.auxiliar<%=GetEsPaqueteReporteC(TablaBase)%>;
<%}%>

<%=GetTimeTimestampImport()%>


<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Opcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilOpcion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilCampo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilAccion;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Modulo;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Accion;
<%}else{%>
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Usuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralSg;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.ParametroGeneralUsuario;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Modulo;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Opcion;
<%}%>

<%if(GetConMaximoCodigoDatabaseFromPropertiesC(TablaBase.Database)){%>
//<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.PerfilAccion;
<%if(ConSessionBeans  || ConRMI){%>
<%//=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageServiceSeguridad%>.<%=strEjbSeguridad%>.<%=strEjbInterfaceSeguridad%>.SistemaAdditionable;
<%if(ConSessionBeansHome) {%>
<%//=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageServiceSeguridad%>.<%=strEjbSeguridad%>.<%=strEjbInterfaceSeguridad%>.SistemaAdditionableHome;
<%}%>
<%}%>
<%//=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaConstantesFunciones;
import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageUtilsSeguridad%>.SistemaConstantesFuncionesAdditional;<%=GetExtra2ServletComment(TablaBase)%><%=strGlobalSeguridadComment%>
<%if(ConEjb){%>//<%}%>import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageLogicSeguridad%>.SistemaLogicAdditional;
<%}%>

<%=strCommentReporte%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageUtils%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%>ConstantesFunciones;
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClase(TablaBase.ToString())%><%=strParameter%><%=strReturnGeneral%>;
//import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClase(TablaBase.ToString())%><%=strParameterGeneral%>;
<%if(false/*!blnSinUsoDatos*/){%>//import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageReporte%>.<%=strPackageSource%>.<%=GetEsPaqueteImportReporteC(TablaBase)%><%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>;<%}%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageDataAccess%>.ConstantesSql;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneral;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.DatoGeneralMinimo;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.GeneralEntity;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Mensajes;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.MaintenanceType;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.MaintenanceType;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.FuncionesReporte;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.DatosCliente;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.Pagination;

<%if(EsSwing){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TablaGeneralTotalModel;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateConverter;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateConverterFromDate;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.DateEditorRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.BooleanRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.BooleanEditorRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TextFieldRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.*;
//import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.TextFieldEditorRenderer;
import <%=Empresa%>.<%= strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.HeaderRenderer;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.JInternalFrameBase;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.FuncionesSwing;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageDesktop%>.<%=strPackageSwing%>.MainJFrame;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageResources%>.<%=strPackageImagenes%>.AuxiliarImagenes;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageResources%>.<%=strPackageReportes%><%=GetEsPaqueteReporteC(TablaBase)%>.AuxiliarReportes;
<%} else {%>
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageJSF%>.<%=strPackageWeb%>.<%=strPrefijoJSFFaces%>Base;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageJSF%>.<%=strPackageWeb%>.FuncionesFaces;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%>.FuncionesBeanFace;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%>.UsuarioSessionBeanFace;

<%if(TienePathImagenDocumento()){%>
import java.io.FileOutputStream;
//import org.richfaces.event.UploadEvent;
//import org.richfaces.model.UploadItem;

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Archivos;
<%}%>
<%}%>

<%if(blnEsReporte) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%>.*;
<%}%>

import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackageUtils%><%=GetEsPaqueteReporteC(TablaBase)%>.*;
<%if(ConEjb){%>//<%}%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageLogic%>.*;
<%if(ConEjb){%>//<%}%><%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageLogic+".*;",ConEjb)%>

<%if(ConSessionBeans|| ConRMI){%>
<%if(!blnEsReporte){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>;
<%if(ConSessionBeansHome) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home;
<%}%>

<%if(blnConMaxCodigo) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>;
<%if(ConSessionBeansHome) { %>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=GetEsTablaAuxiliarReporteC(TablaBase)%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,true)%>Home;
<%}%>
<%}%>
<%} else {%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=TablaBase.Owner%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>;
<%if(ConSessionBeansHome) {%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageService%>.<%=strEjb%>.<%=strEjbInterface%>.<%=TablaBase.Owner%><%=GetEsImplementableAdditionableFromReporteC(TablaBase,false)%>Home;
<%}%>
<%} %>
<%}%>
//EJB
<%if(ConSessionBeans || ConRMI){%>
<%=GetEjbTablasClasesRelacionadas()%> 
<%=GetEjbTablasClasesRelacionadasForeignKeys()%>
<%}%>

//PARAMETROS
<%=GetTablasClasesRelacionadasParametros()%>

//EJB PARAMETROS
<%if(ConSessionBeans || ConRMI){%>
<%=GetEjbTablasClasesRelacionadasParametros()%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageService+"."+strEjb+"."+strEjbInterface+".*;")%>
<%}%>

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.*;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.*;
<%=GetPackageClasesTableFromPropertiesC()%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;<%=GetEsImportPaqueteReporteParaEsReporteC(TablaBase,"import "+Empresa+"."+ Package+"."+Module+strPackageBusiness+"."+strPackageEntities)%>
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.ConexionBeanFace;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Mensajes;

<%if(EsSwing){%>
<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageSwing+"."+strPackageJInternalFrames+".*;")%>
<%}%>

<%=strPackageEntitiesExtra%>
<%=strPackageUtilsExtra%>
<%=strPackageWebSessionExtra%>
<%=strPackageEjbInterfaceExtra%>

import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

<%if(ConPersistenciaAnotaciones) {%>
//import org.hibernate.collection.PersistentBag;
<%}%>

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Reporte;

<%if(!EsSwing){%>

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.context.ExternalContext;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletContext;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.bean.ManagedProperty;
import javax.annotation.PostConstruct;
//import javax.faces.bean.RequestScoped;

import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%><%=GetEsPaqueteReporteC(TablaBase)%>.*;

<% } else { %>

//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%>.*;
<% if(blnEsReporte){%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageSessionBean%>.<%=GetEsPaqueteImportReporteC(TablaBase)%>*;
<%}%>

<% if(!ParaFocusTraversal) {%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackagePresentation%>.<%= strPackageSwing%>.<%= strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClaseC(TablaBase.ToString())%><%=strPrefijoSwingInternalFrame%>;
<% } else {%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackagePresentation%>.<%= strPackageSwing%>.<%= strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>;
<%}%>

<% if(!ConSwingFocusTraversalPolicy) {%>
import <%=Empresa%>.<%= Package%>.<%= Module%><%= strPackagePresentation%>.<%= strPackageSwing%>.<%= strPackageJInternalFrames%><%=GetEsPaqueteReporteC(TablaBase)%>.<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%><%=strPrefijoSwingInternalFrame%>;
<%}%>

import java.util.EventObject;
import java.util.EventListener;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

<%}%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageBusiness+"."+strPackageEntities+/*GetEsPaqueteReporteC(TablaBase)+*/".*;")%>

<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackageUtils+".*;")%>

<%if(!GeneracionPorModuloUnico){%>
<%=GetEsquemasImportClasesRelacionadas("import "+Empresa+"."+Package,strPackagePresentation+"."+strPackageWeb+"."+strPackageJSF+"."+strPackageSessionBean+".*;")%>
<%}%>

<%if(ContieneImagenesC(TablaBase)){%>
	<%//=GetFuncionesImagenesC(TablaBase)%>
<%}%>

<%if(ParaAbstractTableModel) {%>
@SuppressWarnings("unused")

<%if(ConSwingFocusTraversalPolicy) {%>
public class <%=GetNombreClaseC(TablaBase.ToString())%>Model extends AbstractTableModel {		 
<%} else {%>
public class <%=GetNombreClaseC(TablaBase.ToString())%>Model extends FocusTraversalPolicy implements TableModel, Serializable<%if(blnTieneCampoTotalizar && !ConSwingPropertyValorChangeListener) {%>,PropertyChangeListener <%}%> {	
<%}%>
		private static final long serialVersionUID = 1L;
		
		public JInternalFrameBase jInternalFrameBase;
		
	    private String[] columnNames = {<%=GetColumnsNameTableModel()%>
										};
	   
	    public List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
	  	 
	    //NO SE UTILIZA
	    public <%=GetNombreClaseC(TablaBase.ToString())%>Model(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,JInternalFrameBase jInternalFrameBase) {
	    	this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s;
			this.jInternalFrameBase=jInternalFrameBase;
	    }
	    
	    public <%=GetNombreClaseC(TablaBase.ToString())%>Model(JInternalFrameBase jInternalFrameBase) {
	    	this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
			this.jInternalFrameBase=jInternalFrameBase;
	    }	    	    
	    
	    @Override
	    public String getColumnName(int columnIndex) {
	    	return columnNames[columnIndex];	    	
	    }
	 
	    @Override
	    public int getRowCount() {
	        return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.size();
	    }
	 
	    @Override
	    public int getColumnCount() {	    	
	        return this.columnNames.length;
	    }
	 
	    @Override
	    public Object getValueAt(int rowIndex, int columnIndex) {
	        switch (columnIndex) {
				case 0: return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.get(rowIndex).getIsSelected();
	            <%=GetColumnsGetFuncionTableModel()%>	            
	            default: return null;
	        }
	    }
	 
	    @Override
	    public Class<?> getColumnClass(int columnIndex) {
	    	switch (columnIndex) {
				case 0: return Boolean.class;
	            <%=GetColumnsTipoTableModel()%>	            
	            default: return String.class;
	        }	    		        
	    }
	 
	    @Override
	    public boolean isCellEditable(int rowIndex, int columnIndex) {
	    	switch (columnIndex) {
				case 0: return true;
            	<%=GetColumnsEsEditableTableModel()%>	            
	            default: return true;
	        }	
	    }
	 
	    @Override
	    public void setValueAt(Object value, int rowIndex, int columnIndex) {
	    	<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%> = this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s.get(rowIndex);
	    	Boolean esCampoValor=false;
			String sTipo="";
			
			<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame <%=GetNombreClaseObjetoC(TablaBase.ToString())%>BeanSwingJInternalFrame=(<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame)this.jInternalFrameBase; 
			
	        switch (columnIndex) {
				case 0: try {<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.setIsSelected((Boolean) value);} catch (Exception e) {e.printStackTrace();} break;
	            <%=GetColumnsSetFuncionTableModel()%>
	        }
	        
	        fireTableCellUpdated(rowIndex, columnIndex);
			
			if(esCampoValor) {
				jInternalFrameBase.procesoActualizarFilaTotales(esCampoValor,sTipo);
			}
	    }
		
		
		<%if(blnTieneCampoTotalizar && !ConSwingPropertyValorChangeListener) {%>
		//PARTE PARA EL PROPERTYVALORCHANGELISTENER
		//public JInternalFrameBase jInternalFrameBase;
		/*
		public <%=GetNombreClaseC(TablaBase.ToString())%>Model(JInternalFrameBase jInternalFrameBase) {
			this.jInternalFrameBase=jInternalFrameBase;
		}
		*/
		
		@Override
		public void propertyChange(PropertyChangeEvent evt) {
			try {
				this.jInternalFrameBase.procesoActualizarFilaTotales();
					
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		//PARTE PARA EL PROPERTYVALORCHANGELISTENER FIN
		<%}%>
		
			
		<%if(!ConSwingFocusTraversalPolicy) {%>
		/*FUNCIONES PARA FOCUS TRAVERSAL POLICY*/
		
		private Component componentTab=new JTextField();
		private <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame=null;
		
		public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>Model(<%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame) {
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame=<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame;
		}
		
		public Component getComponentAfter(Container focusCycleRoot, Component component) {
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
				return componentTab;
			}
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
				return componentTab;
			}
			
			<%if(!blnEsProceso) {%>
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,false)%>;
				return componentTab;
			}				
			
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,true)%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			<%}%>
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			
			<%if(!blnEsProceso) {%>
			<%=GetSetTabElementosSwingTablaClase(TablaBase,false)%>
			<%}%>
			
			return componentTab;
		}
		
		public Component getComponentBefore(Container focusCycleRoot, Component component) {
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
				return componentTab;
			}
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
				
				return componentTab;
			}
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
			
			<%if(!blnEsProceso) {%>
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,false)%>)) {
				<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
				<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
				
				return componentTab;
			}
			
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,true)%>;
				return componentTab;
			}
			<%}%>
			
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			
			if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
				componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
				return componentTab;
			}
			
			<%if(!blnEsProceso) {%>
			<%=GetSetTabElementosSwingTablaClase(TablaBase,true)%>
			<%}%>
			
			return componentTab;
		}
		
		public Component getDefaultComponent(Container focusCycleRoot) {
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
			
			return componentTab;		
		}
		
		public Component getFirstComponent(Container focusCycleRoot) {
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
			
			return componentTab;		
		}
		
		public Component getLastComponent(Container focusCycleRoot) {
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
			
			return componentTab;		
		}
		
		public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame get<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame() {
			return this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame;
		}
		
		public void set<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame) {
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame=<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame;
		}
		
		public Component getComponentTab() {
			return this.componentTab;
		}
		
		public void setComponentTab(Component componentTab) {
			this.componentTab=componentTab;
		}
		/*FUNCIONES PARA FOCUS TRAVERSAL POLICY FIN*/
		
		
		/*FUNCIONES PARA AbstractTableModel*/
		/*
		Notas:
		* Si Cambia version se copia variables y metodos que no son sobreescritos en esta clase.(Usa Jdk 8)
		* Se copia del Jdk javax.swing.table.AbstractTableModel
		* Los argumentos usados es de tipo Interface TableModel no de Clase AbstractTableModel
		* Si se cambia y/o actualiza jdj, toca actualizar el código nuevamente
		*/
		
		protected EventListenerList listenerList = new EventListenerList();

		public int findColumn(String columnName) {
			for (int i = 0; i < getColumnCount(); i++) {
				if (columnName.equals(getColumnName(i))) {
					return i;
				}
			}
			return -1;
		}
		
		public void addTableModelListener(TableModelListener l) {
        	listenerList.add(TableModelListener.class, l);
    	}
		
		public void removeTableModelListener(TableModelListener l) {
        	listenerList.remove(TableModelListener.class, l);
    	}
		
		public TableModelListener[] getTableModelListeners() {
			return listenerList.getListeners(TableModelListener.class);
		}
		
		public void fireTableDataChanged() {
			fireTableChanged(new TableModelEvent(this));
		}
		
		public void fireTableStructureChanged() {
        	fireTableChanged(new TableModelEvent(this, TableModelEvent.HEADER_ROW));
    	}
		
		public void fireTableRowsInserted(int firstRow, int lastRow) {
			fireTableChanged(new TableModelEvent(this, firstRow, lastRow,
								TableModelEvent.ALL_COLUMNS, TableModelEvent.INSERT));
		}
	
		public void fireTableRowsUpdated(int firstRow, int lastRow) {
			fireTableChanged(new TableModelEvent(this, firstRow, lastRow,
								TableModelEvent.ALL_COLUMNS, TableModelEvent.UPDATE));
		}
		
		public void fireTableRowsDeleted(int firstRow, int lastRow) {
			fireTableChanged(new TableModelEvent(this, firstRow, lastRow,
								TableModelEvent.ALL_COLUMNS, TableModelEvent.DELETE));
		}
	
		public void fireTableCellUpdated(int row, int column) {
			fireTableChanged(new TableModelEvent(this, row, row, column));
		}
		
		public void fireTableChanged(TableModelEvent e) {
			// Guaranteed to return a non-null array
			Object[] listeners = listenerList.getListenerList();
			// Process the listeners last to first, notifying
			// those that are interested in this event
			for (int i = listeners.length-2; i>=0; i-=2) {
				if (listeners[i]==TableModelListener.class) {
					((TableModelListener)listeners[i+1]).tableChanged(e);
				}
			}
		}
		
		public <T extends EventListener> T[] getListeners(Class<T> listenerType) {
			return listenerList.getListeners(listenerType);
		}
		/*FUNCIONES PARA AbstractTableModel FIN*/
	<% } %>
}
<% } else if(ParaBindingListener) {%>
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>BindingListener implements BindingListener {
	@SuppressWarnings("rawtypes")
	@Override
	public void bindingBecameBound(org.jdesktop.beansbinding.Binding binding) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void bindingBecameUnbound(org.jdesktop.beansbinding.Binding binding) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void syncFailed(org.jdesktop.beansbinding.Binding binding,SyncFailure failure) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void synced(org.jdesktop.beansbinding.Binding binding) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void sourceChanged(org.jdesktop.beansbinding.Binding binding,PropertyStateEvent event) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void targetChanged(org.jdesktop.beansbinding.Binding binding,PropertyStateEvent event) {
	}	   
}
<% } else if(ParaBindingListenerTabla) {%>
//NO FUNCIONA EN TABLA CUANDO CAMPOS SON EDITABLES
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>BindingListenerTabla implements BindingListener {
	@SuppressWarnings("rawtypes")
	@Override
	public void bindingBecameBound(org.jdesktop.beansbinding.Binding binding) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void bindingBecameUnbound(org.jdesktop.beansbinding.Binding binding) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void syncFailed(org.jdesktop.beansbinding.Binding binding,SyncFailure failure) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void synced(org.jdesktop.beansbinding.Binding binding) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void sourceChanged(org.jdesktop.beansbinding.Binding binding,PropertyStateEvent event) {
	}
	@SuppressWarnings("rawtypes")
	@Override
	public void targetChanged(org.jdesktop.beansbinding.Binding binding,				PropertyStateEvent event) {
	}	   
}
<% } else if(ParaPropertyChangeListener) {%>
//FUNCIONA EN TABLA CUANDO CAMPOS SON EDITABLES
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>PropertyChangeListener implements PropertyChangeListener {
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
	}		
}
<% } else if(ParaPropertyValorChangeListener) {%>
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>PropertyValorChangeListener implements PropertyChangeListener {
	public JInternalFrameBase jInternalFrameBase;
	
	public <%=GetNombreClaseC(TablaBase.ToString())%>PropertyValorChangeListener(JInternalFrameBase jInternalFrameBase) {
		this.jInternalFrameBase=jInternalFrameBase;
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		try {
			this.jInternalFrameBase.procesoActualizarFilaTotales();
				
		} catch (Exception e) {
			e.printStackTrace();
		}
	}		
}
<% } else if( ParaDefaultListCellRendererFk && (blnTieneRelaciones 
																	|| GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals("NINGUNO")
																	|| GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals("NINGUNO")
																	|| GetConSwingAuxiliarTableFromPropertiesC(TablaBase))) {%>
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>DefaultListCellRenderer extends DefaultListCellRenderer {
			private static final long serialVersionUID = 1L;

			@SuppressWarnings("rawtypes")
			public Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus) {
				super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

				if(value instanceof <%=GetNombreClaseC(TablaBase.ToString())%>) {
					<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>=(<%=GetNombreClaseC(TablaBase.ToString())%>)value;
					this.setText(<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.get<%=GetNombreClaseC(TablaBase.ToString())%>Descripcion(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>));
				}

				return this;
			}

<% } else if(false/* && (ParaDefaultCellEditorRelacion && blnTieneForeignKey)*/) {%>
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>TableCell extends DefaultCellEditor implements TableCellRenderer {
//PARA CELDAS TABLA RELACIONES
			private static final long serialVersionUID = 1L;

			private Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=null;
			public JInternalFrameBase jInternalFrameBase;
			protected Boolean conEnabled=true;
			protected JButton jButton<%=GetNombreClaseC(TablaBase.ToString())%>;
			protected Object valor;

			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell(Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(new JCheckBoxMe());
				
				this.conEnabled=conEnabled;
				this.jInternalFrameBase=jInternalFrameBase;
				this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>;
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell(Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase) {
				this(borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,jInternalFrameBase,true);
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell(JCheckBox checkBox,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(checkBox);
				
				this.conEnabled=conEnabled;
				this.jInternalFrameBase=jInternalFrameBase;
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell(JCheckBox checkBox,JInternalFrameBase jInternalFrameBase) {
				this(checkBox,jInternalFrameBase,true);
			}
			
			public Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {
				jButton<%=GetNombreClaseC(TablaBase.ToString())%> =new JButtonMe((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");

				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");

				if(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>);
				}

				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setOpaque(true);
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());

				if(isSelected) {
					jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setForeground(FuncionesSwing.getColorSelectedForeground());
				}
				
				this.jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setEnabled(this.conEnabled);
				
				return jButton<%=GetNombreClaseC(TablaBase.ToString())%>;
			}

			public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,final int row,int column) {
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");

				if(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>);
				}

				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(
					new java.awt.event.ActionListener() {
						public void actionPerformed(java.awt.event.ActionEvent evt) {
							//jButton<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,row,true,false);
							jInternalFrameBase.jButtonRelacionActionPerformed("<%=GetNombreClaseC(TablaBase.ToString())%>",evt,row,true,false);
						}
					}
				);

				valor=value;

				this.jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setEnabled(this.conEnabled);
				
				return jButton<%=GetNombreClaseC(TablaBase.ToString())%>;
			}

			public Object getCellEditorValue() {
				return valor;
			}

			public boolean stopCellEditing() {
				fireEditingStopped();

				return true;
			}
			
			public Boolean getConEnabled() {
				return conEnabled;
			}
		
			public void setConEnabled(Boolean conEnabled) {
				this.conEnabled = conEnabled;
			}
}

<% } else if( (ParaDefaultCellEditorRelacion && (blnTieneForeignKey || blnTieneForeignKey))	||	(ParaDefaultCellEditorFk && (blnTieneRelaciones 
																	|| GetNombresClasesNoNavegacionFromTableFromPropertiesC(TablaBase).Equals("NINGUNO")
																	|| GetNombresClasesSiNavegacionFromTableFromPropertiesC(TablaBase).Equals("NINGUNO")
																	|| GetConSwingAuxiliarTableFromPropertiesC(TablaBase)))) {%>
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%> extends DefaultCellEditor implements TableCellRenderer {
			private static final long serialVersionUID = 1L;
			
			//PARA TABLECELL_FK
			public JInternalFrameBase jInternalFrameBase;
			protected JLabel<%=strSwtMe%> jLabel<%=GetNombreClaseC(TablaBase.ToString())%>=new JLabelMe();
			@SuppressWarnings("rawtypes")
			protected JComboBox jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>=new JComboBoxMe();
			protected Object valor=new Object();
			protected List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
			protected List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual=new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>();
			protected Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=null;
			protected Boolean conEnabled=true;
			protected Integer iTotalRow=0;
			protected Boolean conHotKeys=false;
			protected String sNombreHotKeyAbstractAction="";
			protected String sTipoBusqueda="NINGUNO";
			protected Integer rowActual=-1;
			protected ArrayList<Classe> classes;
			//PARA TABLECELL_FK_FIN
			
			//PARA TABLECELL
			public String sTipo="FK"; //"BOTON"
			protected JButton jButton<%=GetNombreClaseC(TablaBase.ToString())%>;
			//PARA TABLECELL FIN
			
			
			//PARA TABLECELL_FK
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>() {
				super(new JCheckBoxMe());				
			}

			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(new JCheckBoxMe());
				
				this.iTotalRow=0;
				this.conEnabled=conEnabled;
				this.conHotKeys=false;
				this.sNombreHotKeyAbstractAction="";
				this.sTipoBusqueda="NINGUNO";
				this.rowActual=-1;
				this.jInternalFrameBase=jInternalFrameBase;
				this.sTipo="FK";
			}

			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(JInternalFrameBase jInternalFrameBase) {
				this(jInternalFrameBase,true);
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(JCheckBox checkBox,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(checkBox);
				
				this.iTotalRow=0;
				this.conEnabled=conEnabled;
				this.conHotKeys=false;
				this.sNombreHotKeyAbstractAction="";
				this.sTipoBusqueda="NINGUNO";
				this.rowActual=-1;
				this.jInternalFrameBase=jInternalFrameBase;	
				this.sTipo="FK";
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(JCheckBox checkBox,JInternalFrameBase jInternalFrameBase) {
				this(checkBox,jInternalFrameBase,true);
			}
			
			@SuppressWarnings("rawtypes")
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(JComboBox jcComboBox,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(jcComboBox);
				
				this.iTotalRow=0;
				this.conEnabled=conEnabled;
				this.conHotKeys=false;
				this.sNombreHotKeyAbstractAction="";
				this.sTipoBusqueda="NINGUNO";
				this.rowActual=-1;
				this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>=jcComboBox;
				this.jInternalFrameBase=jInternalFrameBase;
				this.sTipo="FK";
			}
			
			@SuppressWarnings("rawtypes")
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(JComboBox jcComboBox,JInternalFrameBase jInternalFrameBase) {
				this(jcComboBox,jInternalFrameBase,true);
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(new JCheckBoxMe());
				
				this.iTotalRow=0;
				this.conEnabled=conEnabled;
				this.conHotKeys=false;
				this.sNombreHotKeyAbstractAction="";
				this.sTipoBusqueda="NINGUNO";
				this.rowActual=-1;
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey;
				this.jInternalFrameBase=jInternalFrameBase;
				this.sTipo="FK";
			}

			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,JInternalFrameBase jInternalFrameBase) {
				this(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,jInternalFrameBase,true);
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(new JCheckBoxMe());
				
				this.iTotalRow=0;
				this.conEnabled=conEnabled;
				this.conHotKeys=false;
				this.sNombreHotKeyAbstractAction="";
				this.sTipoBusqueda="NINGUNO";
				this.rowActual=-1;
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey;
				this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>;
				this.jInternalFrameBase=jInternalFrameBase;
				this.sTipo="FK";
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase,Boolean conEnabled,Integer iTotalRow) {
				super(new JCheckBoxMe());
				
				this.iTotalRow=iTotalRow;
				this.conEnabled=conEnabled;
				this.conHotKeys=false;
				this.sNombreHotKeyAbstractAction="";
				this.sTipoBusqueda="NINGUNO";
				this.rowActual=-1;
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey;
				this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>;
				this.jInternalFrameBase=jInternalFrameBase;
				this.sTipo="FK";
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,Border borderResaltar,JInternalFrameBase jInternalFrameBase) {
				this(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,borderResaltar,jInternalFrameBase,true);
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell<%=sFkTableCell%>(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey,Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase,Boolean conEnabled,Boolean conHotKeys,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
				super(new JCheckBoxMe());
				
				this.iTotalRow=0;
				this.conEnabled=conEnabled;
				this.conHotKeys=conHotKeys;
				this.sNombreHotKeyAbstractAction=sNombreHotKeyAbstractAction;
				this.sTipoBusqueda=sTipoBusqueda;
				this.rowActual=-1;
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey;
				this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>;
				this.jInternalFrameBase=jInternalFrameBase;
				this.sTipo="FK";
			}						
			//PARA TABLECELL_FK_FIN
			
			public Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {
				Component component=new JCheckBoxMe();
				
				if(sTipo=="FK") {
					component=this.getTableCellRendererComponentParaTableCellFk(table,value,isSelected,hasFocus,row,column);
					
				} else if(sTipo=="BOTON") {
					component=this.getTableCellRendererComponentParaTableCell(table,value,isSelected,hasFocus,row,column);
				}
				
				return component;
			}
			
			public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int row,int column) {
				Component component=new JCheckBoxMe();
				
				if(sTipo=="FK") {
					component=this.getTableCellEditorComponentParaTableCellFk(table,value,isSelected,row,column);
					
				} else if(sTipo=="BOTON") {
					component=this.getTableCellEditorComponentParaTableCell(table,value,isSelected,row,column);
				}
				
				return component;
			}
			
			public Component getTableCellRendererComponentParaTableCellFk(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {
				try{
					int intSelectedRow = row;
	
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						perfil =(Perfil) perfilLogic.getPerfils().toArray()[table.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						perfil =(Perfil) perfils.toArray()[table.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE
	
					jLabel<%=GetNombreClaseC(TablaBase.ToString())%>=new JLabelMe();
	
					/*
					if(perfil.getIsChanged()) {
						perfil.setsistema_descripcion((getActualSistemaForeignKeyDescripcion((Long)value)));
					}
					*/
					
					String s<%=GetNombreClaseC(TablaBase.ToString())%>Descripcion="";
	
					s<%=GetNombreClaseC(TablaBase.ToString())%>Descripcion=jInternalFrameBase.getDescripcionFk("<%=GetNombreClaseC(TablaBase.ToString())%>",table,value,intSelectedRow);
					
					jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setText(s<%=GetNombreClaseC(TablaBase.ToString())%>Descripcion);						
					
					if(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
						jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>);
					}
	
					jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setOpaque(true);
					
					<%if(!GetConColorTableFromPropertiesC(TablaBase)) {%>
					//if(row!=(this.iTotalRow-1)) {
					if((this.jInternalFrameBase.conTotales && row != table.getRowCount()-1) || !this.jInternalFrameBase.conTotales) {
						jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());					
					} else {
						jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(Funciones2.getColorFilaTablaTotales());
					}
					<%}else{%>
					//ASIGNA COLOR PARAMETRO
					//if(row!=(this.iTotalRow-1)) {
					if((this.jInternalFrameBase.conTotales && row != table.getRowCount()-1) || !this.jInternalFrameBase.conTotales) {
						Color color=jInternalFrameBase.getColorFk("<%=GetNombreClaseC(TablaBase.ToString())%>",table,value,intSelectedRow);					
						jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(color);
					} else {
						jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(Funciones2.getColorFilaTablaTotales());
					}
					//ASIGNA COLOR PARAMETRO
					<%}%>
					
	
					if(isSelected) {
						jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setForeground(FuncionesSwing.getColorSelectedForeground());
					}
	
				} catch(Exception e) {
					;
				}
	
				this.jLabel<%=GetNombreClaseC(TablaBase.ToString())%>.setEnabled(this.conEnabled);
				
				FuncionesSwing.setBoldLabel(this.jLabel<%=GetNombreClaseC(TablaBase.ToString())%>, this.jInternalFrameBase.getsTipoTamanioGeneralTabla(),true,false,this.jInternalFrameBase);
				
				return this.jLabel<%=GetNombreClaseC(TablaBase.ToString())%>;
			}						

			@SuppressWarnings({<%if(blnConBindingComplejo) {%>"rawtypes",<%}%>"unchecked" })
			public Component getTableCellEditorComponentParaTableCellFk(JTable table,Object value,boolean isSelected,int row,int column) {
				this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>=new JComboBoxMe();

				try{
					int intSelectedRow = row;

				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
						perfil =(Perfil) perfilLogic.getPerfils().toArray()[table.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE) {
						perfil =(Perfil) perfils.toArray()[table.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE
					<%if(blnConBindingComplejo) {%>
					JComboBoxBinding jComboBoxBinding<%=GetNombreClaseC(TablaBase.ToString())%>=null;

					jComboBoxBinding<%=GetNombreClaseC(TablaBase.ToString())%>= SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, new ArrayList<<%=GetNombreClaseC(TablaBase.ToString())%>>(this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey), this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>);
					<%}%>
					
					if(!<%=GetNombreClaseC(TablaBase.ToString())%>JInternalFrame.ISBINDING_MANUAL) {
						
					} else {
						this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
						
						//SIEMPRE <0 , NO USADO POR EL MOMENTO
						//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
						if(this.rowActual<0 || (this.rowActual>=0 && this.rowActual!=row)) {							
							for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey) {
								this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
							}
						} else {
							if(this.rowActual==row && row>=0) {
								for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual) {
									this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
								}
							}
						}
					}
					
					<%if(ConSwingComboListCellRendererClase) {%>
					this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.setRenderer(new <%=GetNombreClaseC(TablaBase.ToString())%>DefaultListCellRenderer());
					<%}%>
					
					<%if(blnConBindingComplejo) {%>
					jComboBoxBinding<%=GetNombreClaseC(TablaBase.ToString())%>.bind();
					<%}%>
					
					//this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.setSelectedItem(perfil.get<%=GetNombreClaseC(TablaBase.ToString())%>());

					//setActual<%=GetNombreClaseC(TablaBase.ToString())%>ForeignKey((Long)value,false,"Formulario");

					<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame.setActualComboBox<%=GetNombreClaseC(TablaBase.ToString())%>Generico((Long)value,this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>,this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey);
					
					if(this.conHotKeys) {
						<%=GetNombreClaseC(TablaBase.ToString())%>BeanSwingJInternalFrame.setHotKeysComboBox<%=GetNombreClaseC(TablaBase.ToString())%>Generico(this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>,this.jInternalFrameBase,this.sNombreHotKeyAbstractAction,this.sTipoBusqueda);
					}
					
					//NO_FUNCIONA_perfil.setsistema_descripcion(getActual<%=GetNombreClaseC(TablaBase.ToString())%>ForeignKeyDescripcion((Long)value));

					valor=value;
					
					this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.setOpaque(true);
					
					<%if(GetConColorTableFromPropertiesC(TablaBase)) {%>
					//ASIGNA COLOR PARAMETRO
					Color color=jInternalFrameBase.getColorFk("<%=GetNombreClaseC(TablaBase.ToString())%>",table,value,intSelectedRow);					
					this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(color);
					//ASIGNA COLOR PARAMETRO
					<%}%>
					
				} catch(Exception e) {
					e.printStackTrace();
				}

				this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.setEnabled(this.conEnabled);
				
				FuncionesSwing.setBoldComboBox(this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>, this.jInternalFrameBase.getsTipoTamanioGeneralTabla(),true,false,this.jInternalFrameBase);
				
				return this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>;
			}
			
			<%if(!ConTableCellRendererEditorFk) {%>
			public Component getTableCellRendererComponentParaTableCell(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column) {
				jButton<%=GetNombreClaseC(TablaBase.ToString())%> =new JButtonMe((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");

				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");

				if(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>);
				}

				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setOpaque(true);
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());

				if(isSelected) {
					jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setForeground(FuncionesSwing.getColorSelectedForeground());
				}
				
				this.jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setEnabled(this.conEnabled);
				
				return jButton<%=GetNombreClaseC(TablaBase.ToString())%>;
			}

			public Component getTableCellEditorComponentParaTableCell(JTable table,Object value,boolean isSelected,final int row,int column) {
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>=new JButtonMe((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setToolTipText((row+1)+"-<%=GetTituloNombreTableFromPropertiesC(TablaBase)%>");

				if(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>!=null) {
					jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setBorder(this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>);
				}
				
				/*
				jButton<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(
					new java.awt.event.ActionListener() {
						public void actionPerformed(java.awt.event.ActionEvent evt) {
							//jButton<%=GetNombreClaseC(TablaBase.ToString())%>ActionPerformed(evt,row,true,false);
							jInternalFrameBase.jButtonRelacionActionPerformed("<%=GetNombreClaseC(TablaBase.ToString())%>",evt,row,true,false);
						}
					}
				);
				*/
				
				this.jButton<%=GetNombreClaseC(TablaBase.ToString())%>.addActionListener(new ButtonActionListener(this.jInternalFrameBase,"TableCell","<%=GetNombreClaseC(TablaBase.ToString())%>",row));
				
				valor=value;

				this.jButton<%=GetNombreClaseC(TablaBase.ToString())%>.setEnabled(this.conEnabled);
				
				return jButton<%=GetNombreClaseC(TablaBase.ToString())%>;
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell(Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase,Boolean conEnabled) {
				super(new JCheckBoxMe());
				
				this.conEnabled=conEnabled;
				this.jInternalFrameBase=jInternalFrameBase;
				this.borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>=borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>;
				this.sTipo="BOTON";
			}
			
			public <%=GetNombreClaseC(TablaBase.ToString())%>TableCell(Border borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,JInternalFrameBase jInternalFrameBase) {
				this(borderResaltar<%=GetNombreClaseC(TablaBase.ToString())%>,jInternalFrameBase,true);
			}						
			
			<%}%>
			
			public Object getCellEditorValue() {
				Object value=new Object();
				Long idActual=0L;
				
				if(sTipo=="FK") {
					<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>=((<%=GetNombreClaseC(TablaBase.ToString())%>)this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.getSelectedItem());
					
					if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>!=null) {
						idActual=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>.getId();
					}
					
					value=idActual;
					
				} else if(sTipo=="BOTON") {
					value=valor;
				}
				
				return value;
			}

			public boolean stopCellEditing() {
				fireEditingStopped();

				return true;
			}
			
			public Integer getRowActual() {
				return this.rowActual;
			}
		
			public void setRowActual(Integer rowActual) {
				this.rowActual = rowActual;
			}
			
			public Boolean getConEnabled() {
				return this.conEnabled;
			}
		
			public void setConEnabled(Boolean conEnabled) {
				this.conEnabled = conEnabled;
			}
			
			public Boolean getConHotKeys() {
				return this.conHotKeys;
			}
		
			public void setConHotKeys(Boolean conHotKeys) {
				this.conHotKeys = conHotKeys;
			}
			
			@SuppressWarnings("rawtypes")
			public JComboBox getjComboBox<%=GetNombreClaseC(TablaBase.ToString())%>() {
				return this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>;
			}
		
			@SuppressWarnings("rawtypes")
			public void setjComboBox<%=GetNombreClaseC(TablaBase.ToString())%>(JComboBox jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>) {
				this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%> = jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>;
			}
			
			public List<<%=GetNombreClaseC(TablaBase.ToString())%>> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey() {
				return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey;
			}
		
			public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey;
			}
			
			public List<<%=GetNombreClaseC(TablaBase.ToString())%>> get<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual() {
				return this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual;
			}
		
			public void set<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual(List<<%=GetNombreClaseC(TablaBase.ToString())%>> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual) {
				this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual = <%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual;
			}
			
			@SuppressWarnings("unchecked")
			public void Recargar<%=GetNombreClaseC(TablaBase.ToString())%>sForeignKey() {			
				this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.removeAllItems();
				
				//SIEMPRE <0 , NO USADO POR EL MOMENTO
				//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
				if(this.rowActual<0) {													
					for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKey) {
						this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					}
				} else {
					for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>sForeignKeyActual) {
						this.jComboBox<%=GetNombreClaseC(TablaBase.ToString())%>.addItem(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>);
					}
				}
			}
		}
<% } else if(ParaFocusTraversal) {%>
@SuppressWarnings("unused")
public class <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>FocusTraversalPolicy extends FocusTraversalPolicy {
	private Component componentTab=new JTextField();
	private <%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame=null;
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%>FocusTraversalPolicy(<%=GetNombreClase(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame) {
		this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame=<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame;
	}
	
    public Component getComponentAfter(Container focusCycleRoot, Component component) {
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
        componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			return componentTab;
		}
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			return componentTab;
		}
		
		<%if(!blnEsProceso) {%>
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,false)%>;
			return componentTab;
		}				
		
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,true)%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		<%}%>
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		
		<%if(!blnEsProceso) {%>
		<%=GetSetTabElementosSwingTablaClase(TablaBase,false)%>
		<%}%>
		
        return componentTab;
    }
      
    public Component getComponentBefore(Container focusCycleRoot, Component component) {
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			return componentTab;
		}
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>())) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonEliminarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			
			return componentTab;
		}
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
		<%if(!blnEsProceso) {%>
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,false)%>)) {
			<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
			<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
			
			return componentTab;
		}
		
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.<%=GetTabElementoInicioFinSwingTablaClase(TablaBase,true)%>;
			return componentTab;
		}
		<%}%>
		
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jComboBoxTiposAccionesFormulario<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonEliminar<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		
		if(component!=null && component.equals(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonCancelar<%=GetNombreClaseC(TablaBase.ToString())%>)) {
			componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.jButtonActualizar<%=GetNombreClaseC(TablaBase.ToString())%>;
			return componentTab;
		}
		
		<%if(!blnEsProceso) {%>
		<%=GetSetTabElementosSwingTablaClase(TablaBase,true)%>
		<%}%>
		
        return componentTab;
    }
      
    public Component getDefaultComponent(Container focusCycleRoot) {
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
        return componentTab;		
    }
      
    public Component getFirstComponent(Container focusCycleRoot) {
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonActualizarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
        <%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
		return componentTab;		
    }
      
    public Component getLastComponent(Container focusCycleRoot) {
		<%=strCommentMinCodigoWebIni%><%=sCoWebExpIni%>
		componentTab=this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame.getjButtonCancelarToolBar<%=GetNombreClaseC(TablaBase.ToString())%>();
		<%=strCommentMinCodigoWebFin%><%=sCoWebExpFin%>
		
        return componentTab;		
    }
	
	public <%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame get<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame() {
        return this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame;
    }
	
	public void set<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame(<%=GetNombreClaseC(TablaBase.ToString())%><%=strSufijoVersion%><%=strFormDetalle%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame) {
        this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame=<%=GetNombreClaseObjeto(TablaBase.ToString())%>JInternalFrame;
    }
	
	public Component getComponentTab() {
        return this.componentTab;
    }
	
	public void setComponentTab(Component componentTab) {
        this.componentTab=componentTab;
    }
}
<% } %>
<script runat="template">
//EN
//public void constructor<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>(Boolean cargarCombosDependencia,Boolean cargarTodosDatos,Boolean conGuardarRelaciones,Boolean blncargarCombostrForeignKey) throws Exception
/*
	public void cargarCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			Modulo  moduloActualAux=new Modulo();
			
			if(<%=GetNombreClase(TablaBase.ToString())%>JInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(false);
			} else {
			<%=CallFuncionesArrayForeignKeys()%>	
			}
		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>Listas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			Modulo  moduloActualAux=new Modulo();
			
			<%if(blnTieneForeignKey) {%>
			
			<%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=new <%=GetNombreClaseC(TablaBase.ToString())%><%=strForeignKey%>();
						
			<%=CallFuncionesArrayForeignKeysLote()%>
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(<%=VariablesStringForeignKeysLote(false)%>);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%if(ConSessionBeans){%>
				<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(this.datosCliente,<%=VariablesStringForeignKeysLote(false)%>);
				<%}%>
			} else if(Constantes.ISUSAEJBHOME) {
				<%if(ConSessionBeans){%>
				<%=strCommentProceso%><%=GetNombreClaseObjetoC(TablaBase.ToString())%><%=strForeignKey%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.cargarCombosLote<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>WithConnection(this.datosCliente,<%=VariablesStringForeignKeysLote(false)%>);
				<%}%>
			}			
			//ARCHITECTURE
			
			<%=SetGetVariablesForeignKeys()%>
			
			<%}%>
			
		} catch(Exception e) {
			throw e;
		}		
	}
	*/
//EN
//public void cargarCombosFrame<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
/*
	public void addItemDefectoCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try {
			<%=GetAddItemDefectoFrameColumnsVariablestrForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {
		try {
			<%=GetInitActionsFrameColumnsVariablestrForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setVariablesGlobalesCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			<%=GetCallFuncionesSetActualComboForeignKeys(true)%>
			
			<%=GetCallFuncionesSetActualFechas(true)%>
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesAuxiliaresCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboGlobalAuxiliarForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboDefaultForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombos<%=strForeignKey%><%=GetNombreClaseC(TablaBase.ToString())%>()throws Exception {	
		try {
			<%=GetCallFuncionesSetActualComboParametroForeignKeys()%>
		} catch(Exception e) {
			throw e;
		}
	}
	
	*/
	
//EN public void jButton<%=strIdGetSet%>ActionPerformed(java.awt.event.ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
/*
	public void CopyTableToTableTotal() {
		TableModel model0 = jTableDatosTipoEmpresa.getModel();
		final DefaultTableModel model = new DefaultTableModel(1, 0);
		
		for (int column = 0; column < model0.getColumnCount(); column++) {
			model.addColumn(model0.getColumnName(column));	          
	    }
			
		
	    for (int column = 0; column < model.getColumnCount(); column++) {
	         for (int row = 0; row < model.getRowCount(); row++) {
	        	 model.setValueAt(model0.getValueAt(row, column), row, column);
	            break;
	         }
	        break;
	    }
	   
	    jTableDatosTipoEmpresa2.setModel(model);
		
	}
	*/
	
	/*
	//BYDAN_CLASS
	class <%=strIdGetSet%>TableCell extends DefaultCellEditor implements TableCellRenderer {
		private static final long serialVersionUID = 1L;
		
		JButton jButton<%=strIdGetSet%>;
		Object valor;
		<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame=null;
		String sLabelButton="";
		String sToolTipButton="";
		Boolean esRelaciones=false;
		Boolean esEliminar=false;
		
		public <%=strIdGetSet%>TableCell() {
			super(new JCheckBoxMe());	
		}
		
		public <%=strIdGetSet%>TableCell(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame,Boolean esRelaciones,Boolean esEliminar) {
			super(new JCheckBoxMe());
			
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame=<%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame;
			this.esRelaciones=esRelaciones;
			this.esEliminar=esEliminar;
			
			if(!this.esEliminar) {
				if(!this.esRelaciones) {
					if(!this.<%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame.esParaBusquedaForeignKey) {
						this.sLabelButton="<%=strEditar%>";
					} else {
						this.sLabelButton="<%=strSeleccion%>";
					}
				} else {
					this.sLabelButton="<%=strEditarRelaciones%>";
				}
				
				this.sToolTipButton=this.sLabelButton;
				
			} else {
				this.sLabelButton="<%=strEl%>";
				this.sToolTipButton="<%=strEliminar%>";
			}
		}
		
		public Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,final int row,final int column) {
			this.jButton<%=strIdGetSet%> =new JButtonMe(this.sLabelButton+"-"+(row+1));
			this.jButton<%=strIdGetSet%>.setToolTipText(this.sToolTipButton+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO+"-"+(row+1));
			
			final Boolean esRelaciones=this.esRelaciones;
			final Boolean esEliminar=this.esEliminar;
			
			this.jButton<%=strIdGetSet%>.addActionListener (
				new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton<%=strIdGetSet%>ActionPerformed(evt,row,esRelaciones,esEliminar);
					}
				}
			);
			
			if(this.esEliminar) {
				FuncionesSwing.addImagenButtonGeneral(this.jButtonId,"eliminar_button",this.sLabelButton);
			} else {
				FuncionesSwing.addImagenButtonGeneral(this.jButtonId,"seleccionar_button",this.sLabelButton);
			}
			
			this.jButton<%=strIdGetSet%>.setOpaque(true);
			this.jButton<%=strIdGetSet%>.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());
			
			if(isSelected) {
				this.jButton<%=strIdGetSet%>.setForeground(FuncionesSwing.getColorSelectedForeground());
			}
			
			return jButton<%=strIdGetSet%>;
		}

		public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,final int row,int column) {
			jButton<%=strIdGetSet%>=new JButtonMe(this.sLabelButton+"-"+(row+1));
			jButton<%=strIdGetSet%>.setToolTipText(this.sToolTipButton+" "+<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.SCLASSWEBTITULO+"-"+(row+1));
			
			final Boolean esRelaciones=this.esRelaciones;
			final Boolean esEliminar=this.esEliminar;
			
			jButton<%=strIdGetSet%>.addActionListener (
				new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jButton<%=strIdGetSet%>ActionPerformed(evt,row,esRelaciones,esEliminar);
					}
				}
			);
			
			if(this.esEliminar) {
				FuncionesSwing.addImagenButtonGeneral(this.jButtonId,"eliminar_button",this.sLabelButton);
			} else {
				FuncionesSwing.addImagenButtonGeneral(this.jButtonId,"seleccionar_button",this.sLabelButton);
			}
			
			valor=value;
			
			return jButton<%=strIdGetSet%>;
		}

		public Object getCellEditorValue() {
			return valor;
		}				
		
		public boolean stopCellEditing() {
			fireEditingStopped();
			
			return true;
		}
	}
	*/
	/*
	<%if(false) {//blnConSeleccionar%>
	class <%=strIdGetSet%>SeleccionarTableCell implements TableCellRenderer,TableCellEditor {
		public JCheckBox jCheckBox<%=strIdGetSet%>;
		public Object valor;
		public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame=null;
		public String sLabelButton;
		public <%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjeto(TablaBase.ToString())%>;
		
		public <%=strIdGetSet%>SeleccionarTableCell(<%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame <%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame) {
			this.<%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame=<%=GetNombreClaseObjeto(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame;			
			this.sLabelButton="Sel";						
		}
		
		public Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,final int rowIndex,final int colIndex) {
			jCheckBox<%=strIdGetSet%> =new JCheckBoxMe();

			try {
				this.<%=GetNombreClaseObjeto(TablaBase.ToString())%> =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>BeanSwingJInternalFrame.get<%=GetNombreClase(TablaBase.ToString())%>Logic().get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>BeanSwingJInternalFrame.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(rowIndex)];
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>!=null && this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>.getIsSelected()) {
				jCheckBox<%=strIdGetSet%>.setSelected(true);
			} else {
				jCheckBox<%=strIdGetSet%>.setSelected(false);
			}
			
			jCheckBox<%=strIdGetSet%>.addActionListener (
				new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jCheckBox<%=strIdGetSet%>SelActionPerformed(evt,rowIndex);
					}
				}
			);
			
			this.jCheckBox<%=strIdGetSet%>.setOpaque(true);
	    	this.jCheckBox<%=strIdGetSet%>.setBackground(rowIndex % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2());
		
			return jCheckBox<%=strIdGetSet%>;
		}

		@SuppressWarnings({ "rawtypes", "unchecked" })
		public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,final int rowIndex,int colIndex) {
			jCheckBox<%=strIdGetSet%>=new JCheckBoxMe();

			try {
				this.<%=GetNombreClaseObjeto(TablaBase.ToString())%> =(<%=GetNombreClase(TablaBase.ToString())%>) this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>BeanSwingJInternalFrame.get<%=GetNombreClase(TablaBase.ToString())%>Logic().get<%=GetNombreClase(TablaBase.ToString())%>s().toArray()[this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>BeanSwingJInternalFrame.jTableDatos<%=GetNombreClase(TablaBase.ToString())%>.convertRowIndexToModel(rowIndex)];
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>!=null && this.<%=GetNombreClaseObjeto(TablaBase.ToString())%>.getIsSelected()) {
				jCheckBox<%=strIdGetSet%>.setSelected(true);
			} else {
				jCheckBox<%=strIdGetSet%>.setSelected(false);
			}
			
			jCheckBox<%=strIdGetSet%>.addActionListener (
				new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jCheckBox<%=strIdGetSet%>SelActionPerformed(evt,rowIndex);
					}
				}
			);

			valor=value;
			
			return jCheckBox<%=strIdGetSet%>;
		}

		public Object getCellEditorValue() {
			return valor;
		}
		
		public void addCellEditorListener(CellEditorListener arg0) {
		
		}
		
		public void cancelCellEditing() {
		
		}
		
		public boolean isCellEditable(EventObject arg0) {
			return true;
		}
		public void removeCellEditorListener(CellEditorListener arg0) {
		
		}
		public boolean shouldSelectCell(EventObject arg0) {
			return false;
		}
		
		public boolean stopCellEditing() {
			return true;
		}
	}
	<%}%>
	*/

//EN public void jCheckBoxSeleccionarActual<%=GetNombreClaseC(TablaBase.ToString())%>ItemListener(<%if(EsSwing){%>ItemEvent evt,<%}%>Long idActual) throws Exception {    		
	//DENTRO DE FUNCION
	/*
			<%if(EsSwing){%>
			this.inicializarActualizarBinding<%=GetNombreClaseC(TablaBase.ToString())%>(false,false);
			<%}%>
			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			existe=true;
				
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
				<%if(ConEjb){%>//<%}%>	if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(idActual)) {
				<%if(ConEjb){%>//<%}%>		//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(this.isSeleccionarTodos);
				<%if(ConEjb){%>//<%}%>		break;
				<%if(ConEjb){%>//<%}%>	}	
				<%if(ConEjb){%>//<%}%>}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
					if(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.getId().equals(idActual)) {
						//<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux.setIsSelected(this.isSeleccionarTodos);
						break;
					}
				}
			}
			
			//TALVEZ A FUTURO PERMITIR CON OTRAS COLUMNAS
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%>for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:this.<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.get<%=GetNombreClaseC(TablaBase.ToString())%>s()) {
				<%//=GetColumnsSeleccionarTodos()%>
				<%if(ConEjb){%>//<%}%>}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(<%=GetNombreClaseC(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>Aux:<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s) {
					<%//=GetColumnsSeleccionarTodos()%>
				}
			}
			
							
			if(existe) {
				<%if(EsSwing){%>
				this.inicializarActualizarBindingTabla<%=GetNombreClaseC(TablaBase.ToString())%>(false);
				<%} else {%>
				//BINDING YA REALIZADO
				<%}%>
			} else {
				<%if(EsSwing){%>
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				<%} else {%>
				throw new Exception("NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA");
				<%}%>
			}	
			*/
</script>