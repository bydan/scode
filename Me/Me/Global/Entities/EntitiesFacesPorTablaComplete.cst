<%@ Template Language="C#" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" ResponseEncoding="UTF-8"%>    	
<%@ CodeTemplate Src="..\CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Property Name="NombreProgramador" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="Package" Type="System.String" Default="Indefinido" Category="Options" Description="Nombre de la Entidad" %>
<%@ Property Name="PackageSeguridad" Type="System.String" Default="Seguridad" Category="General" Description="Nombre del Programdor" %>
<%@ Property Name="SchemaAuditoria" Type="System.String" Default="Auditoria" Category="Options" Description="Nombre del Programdor" %>
<%@ Property Name="TablaBase" Type="SchemaExplorer.TableSchema" EXCLUDED="true"	Category="Context"%>
<%@ Property Name="Empresa" Type="System.String" Default="Byron Chavez" Category="Options" Description="Nombre de la Empresa" %>
<%@ Property Name="TablasBaseCompuestoJunction" Type="SchemaExplorer.TableSchemaCollection" Category="Context"%>
<%@ Property Name="TablasBaseCompuestoDetalle" Type="SchemaExplorer.TableSchemaCollection" 	Category="Context"%>
<%@ Property Name="Schema" Type="System.String" Default="Tame" Category="Options" Description="Schema" %>
<%@ Property Name="EsSwing" Type="System.Boolean" Default="false" Category="Options" Description="Inndica si es Swing"  %>
<%@ Property Name="ConEjb" Type="System.Boolean" Default="false" Category="Options" Description="json or xml" %>
<%@ Property Name="TiposGeneracion" Type="System.String" Default=" " Category="Options" Description="Nombre de la Entidad" %>

<script runat="template">

public  String DefinirFuncionesListItemsArrayForeignKeys()
{
	String sVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			
			sVariablesArray+="\r\n\tpublic List<SelectItem> get"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"ListSelectItem() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tList<SelectItem> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList=new ArrayList<SelectItem>();\r\n\r\n";
			sVariablesArray+="\t\tSelectItem item;\r\n\r\n";
		
			sVariablesArray+="\t\tfor("+GetNombreClaseRelacionadaFromColumn(column)+" "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +":this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\t\titem=new SelectItem();\r\n";
			sVariablesArray+="\t\t\titem.setLabel("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +GetDescripcionComboColumnFromProperties(GetNombreTablaRelacionadaFromColumn(column))+");\r\n";
			sVariablesArray+="\t\t\titem.setValue("+GetNombreClaseRelacionadaFromColumn(column).ToLower() +".getId());\r\n";
				
			sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList.add(item);\r\n";
			sVariablesArray+="\t\t}\r\n\r\n";
		
			sVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"sList;\r\n";
			sVariablesArray+="\t}\r\n\r\n";

			
		}	
	}
	return sVariablesArray;
}

public  String FuncionestrForeignKeys()
{
	String sVariablesArray="";
	
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			sVariablesArray+="\r\n\tpublic void cargarCombos"+GetNombreClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"()throws Exception\r\n";
			sVariablesArray+="\t{\r\n";
			sVariablesArray+="\t\ttry\r\n\t\t{\r\n";
			sVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"=new "+strTypeNewCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+">();\r\n\r\n";
			sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column)+"Logic "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic=new "+ GetNombreClaseRelacionadaFromColumn(column)+"Logic();\r\n\r\n";
			sVariablesArray+="\t\t\t"+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.getTodos"+ GetNombreClaseRelacionadaFromColumn(column)+"s(\"\",new Pagination());\r\n\r\n";
			sVariablesArray+="\t\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+"="+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"Locic.get"+ GetNombreClaseRelacionadaFromColumn(column)+"s();\r\n\r\n";
			sVariablesArray+="\t\t}\r\n";
			sVariablesArray+="\t\tcatch(Exception e)\r\n";
			sVariablesArray+="\t\t{\r\n";
			sVariablesArray+="\t\t\tthrow e;\r\n";
			sVariablesArray+="\t\t}\r\n";
			sVariablesArray+="\t}\r\n";
		}	
	}
	return sVariablesArray;
}


public  String ConsuctorVariablesArrayForeignKeys()
{
	String sVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			if(EsSwing)
			{
				sVariablesArray+="\r\n\t\t\t\tif(this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"strForeignKey==null||this."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"strForeignKey.size()<=0)\r\n\t\t\t\t{\r\n";
			}
			
			sVariablesArray+="\t\t\t\t\tthis.cargarCombos"+GetNombreClaseRelacionadaFromColumn(column) +"s"+strForeignKey+"();\r\n";
			
			if(EsSwing)
			{
				sVariablesArray+="\t\t\t\t}\r\n";
			}
		}	
	}
	return sVariablesArray;
}

public  String DefinirVariablesArrayForeignKeys()
{
	String sVariablesArray="";
	
	
	
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			sVariablesArray+="\r\n\tprivate "+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n\r\n";
			
			sVariablesArray+="\tpublic "+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> get"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"() ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\treturn "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n\r\n";

			sVariablesArray+="\tpublic void set"+ GetNombreClaseRelacionadaFromColumn(column)+"s"+strForeignKey+"("+strTypeCollection+"<"+ GetNombreClaseRelacionadaFromColumn(column)+"> "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\tthis."+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+" = "+GetNombreClaseRelacionadaFromColumn(column).ToLower() +"s"+strForeignKey+";\r\n";
			sVariablesArray+="\t}\r\n";
		}	
	}
	return sVariablesArray;
}
/*
public void cargarCombosFramePerfilstrForeignKey()throws Exception
	{
		try
		{
			
			JComboBoxBinding jComboBoxBindingPerfil;

			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.perfilstrForeignKey, this.jComboBoxIdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();
			
			jComboBoxBindingPerfil= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this.perfilstrForeignKey, this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario);
			
			this.jComboBoxIdPerfilFK_IdPerfilPerfilUsuario.setRenderer(new PerfilDefaultListCellRenderer());
			
			jComboBoxBindingPerfil.bind();

		}
		catch(Exception e)
		{
			throw e;
		}
	}
*/

public String GetIndicesVariablesTablasClases(ColumnSchema columnForeignKey) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						
						
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						if(columnForeignKey.Name!=memberColumnSchema.Name)
						{
							continue;
						}
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							
							sControlesPanelesBusquedas+="\r\n\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this."+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema ).ToLower()+"strForeignKey, this."+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+",\""+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+"\");\r\n\r\n";
							
							
			
							sControlesPanelesBusquedas+="\t\t\t\tthis."+GetNombreControlVariablesSwingC(memberColumnSchema,indexSchema.Name,"")+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+"DefaultListCellRenderer());\r\n\r\n";
			
							sControlesPanelesBusquedas+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(memberColumnSchema )+".bind();\r\n\r\n";
			
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								//sInitFuncion+=";\r\n";	
							}
						}
						else
						{
							/*
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
								
								
							}
							else
							{
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\r\n";
								
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\t"+GetDefinicionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\r\n"; 
								
								
								break;
							}
							*/
						}
						count++;
					}
																																						
				}
			}
			
			sInitFuncion=sControlesPanelesBusquedas;	
			
			return sInitFuncion; 
		}
		
public  String GetcargarCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{							
			sVariablesArray+="\t\t\tthis.cargarCombosFrame"+ GetNombreClaseRelacionadaFromColumn(column)+"strForeignKey();\r\n";
		}	
	}
	return sVariablesArray;
}

public  String cargarCombosFrameColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{	
						
			sVariablesArray+="\t\tpublic void cargarCombosFrame"+ GetNombreClaseRelacionadaFromColumn(column)+"strForeignKey()throws Exception ";
			sVariablesArray+="{\r\n";
				sVariablesArray+="\t\t\ttry ";
				sVariablesArray+="{\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";
		
					sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this."+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"strForeignKey, this.jComboBox"+strIdGetSet+ GetNombreClaseRelacionadaFromColumn(column)+""+GetNombreClaseC(TablaBase.ToString())+");\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tthis.jComboBox"+strIdGetSet+ GetNombreClaseRelacionadaFromColumn(column)+""+GetNombreClaseC(TablaBase.ToString())+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer());\r\n\r\n";
					
					sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();\r\n\r\n";
					
					sVariablesArray+=GetIndicesVariablesTablasClases(column);
		
				sVariablesArray+="\t\t\t} ";
				sVariablesArray+="catch(Exception e) ";
				sVariablesArray+="{\r\n";
					sVariablesArray+="\t\t\t\tthrow e;\r\n";
				sVariablesArray+="\t\t\t}\r\n";
			sVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return sVariablesArray;
}

public  String DefinirClassDefaultListCellRendererColumnsVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	sVariablesArray+="\r\n\r\n";
			
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{	
			sVariablesArray+="\t\tpublic class "+ GetNombreClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer  extends DefaultListCellRenderer ";
			sVariablesArray+="{\r\n";
						
			sVariablesArray+="\t\t\tpublic Component getListCellRendererComponent(JList list,Object value,int index,boolean isSelected,boolean cellHasFocus) ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\t\t\tsuper.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\r\n\r\n";
					
			sVariablesArray+="\t\t\t\tif(value instanceof "+ GetNombreClaseRelacionadaFromColumn(column)+") ";
			sVariablesArray+="{\r\n";
			sVariablesArray+="\t\t\t\t\t"+ GetNombreClaseRelacionadaFromColumn(column)+" "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"=("+ GetNombreClaseRelacionadaFromColumn(column)+")value;\r\n";
			sVariablesArray+="\t\t\t\t\tthis.setText("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.getRelationship_"+ GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"));\r\n";
			sVariablesArray+="\t\t\t\t}\r\n\r\n";
					
			sVariablesArray+="\t\t\t\treturn this;\r\n";
			sVariablesArray+="\t\t\t}\r\n";
			sVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return sVariablesArray;
}

public  String ReDefinirColumnsTableVariablestrForeignKeys()
{
	String sVariablesArray="";
		
		
	//sVariablesArray+="\r\n\t\tTableColumn tableColumn;\r\n\r\n";
	sVariablesArray+="\r\n\r\n";
			
	String sTitulo="";
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			sTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
			
			sVariablesArray+="\t\ttableColumn= this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getColumn(\""+sTitulo+"\");\r\n";
			sVariablesArray+="\t\ttableColumn.setCellRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n";
			sVariablesArray+="\t\ttableColumn.setCellEditor(new "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell());\r\n\r\n";

		}	
	}
	return sVariablesArray;
}


	
public  String ReDefinirTableCellColumnsTableVariablestrForeignKeys()
{
	String sVariablesArray="";
			
	String sTitulo="";
	sTitulo+="";
	foreach(ColumnSchema column in TablaBase.Columns)
	{
		if(column.IsForeignKeyMember)
		{
			sVariablesArray+="\r\n\t\tpublic class "+ GetNombreClaseRelacionadaFromColumn(column)+"TableCell extends AbsactCellEditor implements TableCellRenderer,TableCellEditor\r\n";
			sVariablesArray+="\t\t{\r\n";
			sVariablesArray+="\t\t\tJLabel jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
			sVariablesArray+="\t\t\tJComboBox jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
			sVariablesArray+="\t\t\tObject valor;\r\n\r\n";
			
			sVariablesArray+="\t\t\tArrayList<Classe> classes;\r\n\r\n";
	
			sVariablesArray+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\tclasses=new ArrayList<Classe>();\r\n";
			sVariablesArray+="\t\t\t\tclasses.add("+ GetNombreClaseRelacionadaFromColumn(column)+".class);\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tint intSelectedRow = row;\r\n";       
			sVariablesArray+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+" = "+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().get(table.convertRowIndexToModel(intSelectedRow));\r\n\r\n";
				
			sVariablesArray+="\t\t\t\ttry\r\n";
			sVariablesArray+="\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setConnexion(Connexion.getNewConnexion());\r\n";
			sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
			sVariablesArray+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.getConnexion().getConnection().commit();\r\n";
			sVariablesArray+="\t\t\t\t}\r\n";
			sVariablesArray+="\t\t\t\tcatch(Exception e)\r\n";
			sVariablesArray+="\t\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\t\t;\r\n";
			sVariablesArray+="\t\t\t\t}\r\n\r\n";
				
			sVariablesArray+="\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JLabel();\r\n\r\n";
				//valor=value;
			sVariablesArray+="\t\t\t\t\tjLabel"+ GetNombreClaseRelacionadaFromColumn(column)+".setText("+GetNombreClaseC(TablaBase.ToString())+"LogicAdditional.getRelationship_"+ GetNombreClaseRelacionadaFromColumn(column)+"Descripcion("+GetNombreClaseObjetoC(TablaBase.ToString())+".getRelationship_"+ GetNombreClaseRelacionadaFromColumn(column)+"()));\r\n";
			sVariablesArray+="\t\t\t\treturn jLabel"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
					
				
			sVariablesArray+="\t\t\t}\r\n\r\n";
			
			sVariablesArray+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+"=new JComboBox();\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tJComboBoxBinding jComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n\r\n";

			sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+"= SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, "+ GetNombreClaseRelacionadaFromColumn(column).ToLower()+"strForeignKey, jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+");\r\n\r\n";

			sVariablesArray+="\t\t\t\tjComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".setRenderer(new "+ GetNombreClaseRelacionadaFromColumn(column)+"DefaultListCellRenderer());\r\n\r\n";

			sVariablesArray+="\t\t\t\tjComboBoxBinding"+ GetNombreClaseRelacionadaFromColumn(column)+".bind();	\r\n\r\n";
				
			sVariablesArray+="\t\t\t\tvalor=value;\r\n";
			sVariablesArray+="\t\t\t\treturn jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+";\r\n";
			sVariablesArray+="\t\t\t}\r\n\r\n";
			
			sVariablesArray+="\t\t\tpublic Object getCellEditorValue()\r\n";
			sVariablesArray+="\t\t\t{\r\n";
			sVariablesArray+="\t\t\t\treturn (("+ GetNombreClaseRelacionadaFromColumn(column)+")jComboBox"+ GetNombreClaseRelacionadaFromColumn(column)+".getSelectedItem()).get"+strIdGetSet+"();\r\n";
			sVariablesArray+="\t\t\t}\r\n";
			sVariablesArray+="\t\t}\r\n";
	
		}	
	}
	return sVariablesArray;
}

public String GetBusquedaFromForeigKeysSession() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
										
					sTablaClaseRelacionada+="\r\n\t\t\telse if(httpSession.getAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\")!=null)";
					sTablaClaseRelacionada+="\r\n\t\t\t{";
							
					sTablaClaseRelacionada+="\r\n\t\t\t\tif(httpSession.getAttribute(\""+columnSchema.Name+"Actual\")!=null)";
					sTablaClaseRelacionada+="\r\n\t\t\t\t{";
					sTablaClaseRelacionada+="\r\n\t\t\t\t\tsAccionBusqueda=\""+strFK+"_"+strIdGetSet+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\";";						
					sTablaClaseRelacionada+="\r\n\t\t\t\t}";
								
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\thttpSession.removeAttribute(\"BusquedaDesdeForeignKeySesion"+GetNombreClaseRelacionadaFromColumn(columnSchema)+"\");";
					
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tsUltimaBusqueda=\"accionBusqueda=\"+sAccionBusqueda+\"()inicio=0()fin=10()tipo=SIGUIENTES\";";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\tmensaje=new Mensaje(\"Auxiliar\",\"Ultima Busqueda\",sUltimaBusqueda,MensajeGrupo.NONE);";
									
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t\treturn;";
					
					sTablaClaseRelacionada+="\r\n\t\t\t}";
						
					
			
				}
			}
			
				
			return sTablaClaseRelacionada; 
		}
		
public String GetXmlBusquedasIndicesTablas() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			
			String sIfFuncion=String.Empty;
			sIfFuncion="\r\n\telse if(sAccionBusqueda==\"{0}\")\r\n{";
			
			String sFuncionBusqueda="";
			String sFuncionBusqueda2="";
			
			String sDefinicionVariables="";
			String sUsoVariables="";
			
			String sXmlFuncion=String.Empty;
			
			
			String sFuncionLogic="";
			sFuncionLogic+="";
			
			//sXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"s();";
			
			sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
			//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";	
			sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
			
			sXmlFuncion+="\r\n\r\n\t\t\t\tif(sGenerarReporte!=\"\"&&sGenerarReporte!=null)\r\n\t\t\t\t{";
			
			
			sXmlFuncion+="\r\n\t\t\t\t\tif(isMosarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s();";						
			sXmlFuncion+="\r\n\t\t\t\t\t\t\t\txyzFuncionBusqueda";
			sXmlFuncion+="\r\n\t\t\t\t\t}";			
			
			sXmlFuncion+="\r\n\t\t\t\t\tgenerarReporte"+GetNombreClase(TablaBase.ToString())+"s(\"xyzTipoBusqueda\","+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s());";
			
			sXmlFuncion+="\r\n\r\n\t\t\t\t\tif(isMosarTodosResultadosReporte)\r\n\t\t\t\t\t{";
			sXmlFuncion+="\r\n\t\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.set"+GetNombreClaseC(TablaBase.ToString())+"s("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);";
			sXmlFuncion+="\r\n\t\t\t\t\t}\r\n\t\t\t\t}";	
			
			//sXmlFuncion+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
			//sXmlFuncion+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
			
			String sXmlFuncionObjeto=String.Empty;
			
			sXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+GetNombreClaseC(TablaBase.ToString())+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
			
			sXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
			sXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
			
						
			//sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"()==null&&xmlMensajeMantenimiento==\"\")";
			//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
		
			//sXmlFuncionObjeto+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
			//sXmlFuncionObjeto+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
				
						
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					sFuncionBusqueda2="\r\n\t\t\t\t"+GetNombreClase(TablaBase.ToString())+"ConstantesFunciones.getDetalleIndice"+indexSchema.Name+"(";
					
					if(indexSchema.IsUnique)
					{
						sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,pagination,";
						sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";
						
						}
						else
						{
						sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+indexSchema.Name+"\"))\r\n\t\t\t{";	
						}
					}
					
					int count=1;
					sDefinicionVariables="";
					sUsoVariables="";							
					//sFuncionBusqueda="";
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
								{								
									//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"=null;";
									
									//sDefinicionVariables+="\r\n\r\n\t\t\t\tif(httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")!=null)";
									//sDefinicionVariables+="\r\n\t\t\t\t{";
									//sDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";										
									//sDefinicionVariables+="\r\n\t\t\t\t}";
										
									
									if(indexSchema.Name.Contains(strFK+"_"))
									{
										if(!EsSwing)
										{
										
											sDefinicionVariables+="\r\n\r\n\t\t\t\tif(httpSession.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\")!=null)";
											sDefinicionVariables+="\r\n\t\t\t\t{";
											sDefinicionVariables+="\r\n\t\t\t\t\t"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"=("+GetTipoColumnaClaseC(memberColumnSchema.Column)+")httpSession.getAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
											sDefinicionVariables+="\r\n\t\t\t\t\thttpSession.removeAttribute(\""+memberColumnSchema.Column.Name+"Actual\");";
											
											sDefinicionVariables+="\r\n\t\t\t\t}";
										}
									}
									
									sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 
									
									if(!indexSchema.MemberColumns.Count.Equals(count))
									{
										sUsoVariables+=",";	
									}
								}
								else
								{
									if(!indexSchema.Name.Contains("BusquedaRango"))
									{
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name; 									
									}
									else
									{
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"+indexSchema.Name; 									
										
										sUsoVariables+=",";	
										
										//sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
										sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"+indexSchema.Name; 									
									}
									
								
								}
								count++;
							}
							
							sFuncionBusqueda2+=sUsoVariables+");\r\n";
							sFuncionBusqueda+=sUsoVariables+");";
							
					if(indexSchema.IsUnique)
					{
							sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sFuncionBusqueda2+sXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
					}
					else
					{
							
							sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sFuncionBusqueda2+sXmlFuncion.Replace("xyzTipoBusqueda",indexSchema.Name).Replace("xyzFuncionBusqueda",sFuncionBusqueda.Replace("finalQueryPaginacion","\"\"").Replace("\r\n\r\n","\r\n\t\t"))+"\r\n\r\n\t\t\t}";																																		
					}
				}
			}								
			return  sInitFuncion;
		}
		
		
		public String GetXmlBusquedasIndicesTablasCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			
			String sIfFuncion=String.Empty;
			sIfFuncion="\r\n\telse if(sAccionBusqueda==\"{0}\")\r\n{";
			
			String sFuncionBusqueda="";
			
			String sDefinicionVariables="";
			String sUsoVariables="";
			
			String sXmlFuncion=String.Empty;
			
			String sParametroPadre="";
			
			if(!EsSwing)
			{
				sParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=Long.parseLong(httpServletRequest.getParameter(\""+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"\"));";
			}
			else
			{
				sParametroPadre="\r\n\t\t\t\tLong big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+ "=1L;";
			}
											
											
			String sFuncionTodos=String.Empty;
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					sFuncionTodos="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Todos\"))";
					sFuncionTodos+="\r\n\t\t\t{\r\n\t\t\t\t"+sParametroPadre+"\r\n\t\t\t\t";					
					sFuncionTodos+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+");";
					//sFuncionTodos+="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
						
					sFuncionTodos+="\r\n\r\n\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().size()==0)";
					sFuncionTodos+="\r\n\t\t\t\t{";
					//sFuncionTodos+="\r\n\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");";
					sFuncionTodos+="\r\n\t\t\t\t}";
					
					//sFuncionTodos+="\r\n\r\n\t\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sFuncionTodos+="\r\n\t\t\t\thttpServletResponse.getWriter().write(xml);";
					sFuncionTodos+="\r\n\t\t\t}";
					
					
					
					//sXmlFuncion="\r\n\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s();";
					
					sXmlFuncion+="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()==null||"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s().size()==0)";
					//sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+GetNombreClaseC(TablaBase.ToString())+"\");\r\n\t\t\t\t\t}";
					sXmlFuncion+="\r\n\t\t\t\t\t{\r\n\t\t\t\t\t}";
					
					//sXmlFuncion+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sXmlFuncion+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
					
					String sXmlFuncionObjeto=String.Empty;
					
					sXmlFuncionObjeto="\r\n\r\n\t\t\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"()!=null&&"+GetNombreClaseObjetoC(TablaBase.ToString())+ "Logic.get"+GetNombreClase(TablaBase.ToString())+"().get"+strIdGetSet+"()!=0)\r\n\t\t\t\t\t{";
					
					//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml ="+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					//sXmlFuncionObjeto+="\r\n\t\t\t\t\t\txml =Mensaje.getMensajeGeneralNoExisteBusqueda(\""+ GetNombreClase(TablaBase.ToString())+ "\");\r\n\t\t\t\t\t}";
					
					sXmlFuncionObjeto+="\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{";
					sXmlFuncionObjeto+="\r\n\t\t\t\t\t}";
					
					
					
					//sXmlFuncionObjeto+="\r\n\r\n\t\t\thttpServletResponse.setContentType(\"text/xml\");";
					//sXmlFuncionObjeto+="\r\n\t\t\thttpServletResponse.getWriter().write(xml);";
						
								
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						if(!indexSchema.IsPrimaryKey)
						{
							
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								*/
							}
							else
							{
								if(indexSchema.Name.Contains("Busqueda")|indexSchema.Name.Contains("FK"))
								{
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"("+GetNombreOrderColumnFromPropertiesC(TablaBase)+"finalQueryPaginacion,big"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+",";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";
								
								}
								else
								{
								sFuncionBusqueda="\r\n\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								sIfFuncion="\r\n\t\t\telse if(sAccionBusqueda.equals(\""+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+indexSchema.Name+"\"))\r\n\t\t\t{";	
								}
							}
							
							
							sIfFuncion+=sParametroPadre;
							
							int count=1;
							sDefinicionVariables="";
							sUsoVariables="";							
							//sFuncionBusqueda="";
									foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
									{
																						
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
										{	
											if(!EsSwing)
											{
												sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
											}
											else
											{
												sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
											}
											
											
											sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											
											if(!indexSchema.MemberColumns.Count.Equals(count))
											{
												sUsoVariables+=",";	
											}
										}
										else
										{
											if(!indexSchema.Name.Contains("BusquedaRango"))
											{
												
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name)+"\")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 									
											}
											else
											{
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Inicial\"")+")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
											
												
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 									
												
												sUsoVariables+=",";	
												
												
												
												if(!EsSwing)
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetTipoColumnaParse(memberColumnSchema.Column,"httpServletRequest.getParameter(\""+GetNameControlHtmlBusqueda(memberColumnSchema.Column,indexSchema.Name).Replace(memberColumnSchema.Column.Name+indexSchema.Name+"",memberColumnSchema.Column.Name+indexSchema.Name+"Final\"")+")")+";";
												
												}
												else
												{
													sDefinicionVariables+="\r\n\t\t\t\t"+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final="+GetDefaultValueColumna(memberColumnSchema.Column)+";";
												}
												
												sUsoVariables+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 									
											}								
										}
										count++;
									}
									sFuncionBusqueda+=sUsoVariables+");";
									
							if(indexSchema.IsUnique)
							{
									sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sXmlFuncionObjeto+"\r\n\r\n\t\t\t}";																																		
							}
							else
							{
									sInitFuncion+=sIfFuncion+sDefinicionVariables+sFuncionBusqueda+sXmlFuncion+"\r\n\r\n\t\t\t}";																																		
							}
						}
					}
					
					sInitFuncion=sFuncionTodos+sInitFuncion;
				}
			}
			
			return  sInitFuncion;
		}
		
public String GetVariablesTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+="\r\n\r\n\tprivate "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=null;\r\n\r\n";
					
					sTablaClaseRelacionada+="\tpublic "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic() "; 
					sTablaClaseRelacionada+="{\r\n";		
					sTablaClaseRelacionada+="\t\treturn "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
					sTablaClaseRelacionada+="\t}\r\n\r\n";
				
					sTablaClaseRelacionada+="\tpublic void set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic) "; 
					sTablaClaseRelacionada+="{\r\n";
					sTablaClaseRelacionada+="\t\tthis."+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic = "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic;\r\n";
					sTablaClaseRelacionada+="\t}\r\n";
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
		public String GetVariablesTablasInicializarClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne||collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();\r\n\r\n";
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String GetClassClasesRelacionadasForeigKeys(TableSchema tableSchema) 
		{
			String sTablaClaseRelacionada=String.Empty;
										
										
			foreach(ColumnSchema columnSchema in tableSchema.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					sTablaClaseRelacionada+="\t\tclasses.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}
		
public String GetXmlFuncionesClasesCompuestos() 
{
	String sFuncion=String.Empty;
	
	if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
	{
				
		for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
		{
			sFuncion+="\r\n\r\n\tpublic String toXml"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()throws Exception";
			sFuncion+="\r\n\t{";
			sFuncion+="\r\n\t\tStringBuffer xml = new StringBuffer();";
			sFuncion+="\r\n\t\tArrayList<Classe> classes=new ArrayList<Classe>();\r\n";
			sFuncion+="\r\n\t\tInteger "+strId+"Temporal=-1;\r\n";
			
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"Logic();";
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic =new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"Logic();\r\n\r\n";
			
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			sFuncion+="\r\n\t\t"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+" "+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"=new "+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			sFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoJunction[i]);
			
			sFuncion+=GetClassClasesRelacionadasForeigKeys(TablasBaseCompuestoDetalle[i]);
				
			sFuncion+="\r\n\t\ttry"; 
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion=Connexion.getNewConnexion();";
			
			sFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString()) +"Logic.setConnexion(connexion);";
			sFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"Logic.setConnexion(connexion);";
			
			sFuncion+="\r\n\t\t\txml.append(\"<?xml version=\\\"1.0\\\"?>\\r\n\");";
			sFuncion+="\r\n\t\t\txml.append(\"<"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+" generated=\\\"\"+System.currentTimeMillis()+\"\\\">\\r\n\");";	    
				
			sFuncion+="\r\n\r\n\t\t\t\tfor ("+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+" "+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+":"+ GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s )"; 
			sFuncion+="\r\n\t\t\t\t{";
			
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+"();";
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+"="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+".get"+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+"();\r\n\r\n";
			
			sFuncion+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+"Logic.deepLoad("+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+", false, DeepLoadType.INCLUDE, classes);\r\n";
						
				for (int j = 0; j < TablasBaseCompuestoJunction[i].Columns.Count; j++)
				{ 
					sFuncion+=GetXmlColumnaC(TablasBaseCompuestoJunction[i].Columns[j],TablasBaseCompuestoJunction[i].ToString(),true); 	
				} 	     	
				sFuncion+="\r\n\r\n";
				for (int j = 0; j < TablasBaseCompuestoDetalle[i].Columns.Count; j++)
				{ 
					sFuncion+=GetXmlColumnaCompuestoC(TablasBaseCompuestoDetalle[i].Columns[j],TablasBaseCompuestoDetalle[i].ToString()); 	
				} 	
				
			sFuncion+="\r\n\r\n\t\t\t\t\txml.append(\"</item>\\r\n\");";			
			sFuncion+="\r\n\t\t\t\t}\r\n";
					
			sFuncion+="\r\n\t\t\txml.append(\"</"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+">\\r\n\");";
					
			sFuncion+="\r\n\t\t\tconnexion.getConnection().commit();";
			sFuncion+="\r\n\t\t}"; 
			sFuncion+="\r\n\t\tcatch(Exception e)"; 
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion.getConnection().rollback();";
			sFuncion+="\r\n\t\t\tthrow e;";
			sFuncion+="\r\n\t\t}";
			sFuncion+="\r\n\t\tfinally";
			sFuncion+="\r\n\t\t{";
			sFuncion+="\r\n\t\t\tconnexion.getConnection().close();";
			sFuncion+="\r\n\t\t}";
				
			sFuncion+="\r\n\t\t\treturn Funciones.ValidarXml(xml.toString(),"+GetNombreClaseC(TablaBase.ToString())+".getSTableName());";
				
			sFuncion+="\r\n\t}";
		}
	}
	
	return sFuncion;
}


public String GetInicializacionVariableClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
				sInitFuncion+="\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s= new ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+">();" ;																
																																																		
				}													
			}
								
			return sInitFuncion; 
		}
		
public String GetDefinicionVariableClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			
			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
					
					sInitFuncion+="\r\n\t"+"ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> ";
					sInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";																
																																								
					sInitFuncion+="\r\n\r\n\tpublic ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> get"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s()"; 
					sInitFuncion+="\r\n\t{";	
					sInitFuncion+="\r\n\t\treturn "+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					sInitFuncion+="\r\n\t}";	
					
					sInitFuncion+="\r\n\r\n\tpublic void set"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s(ArrayList<"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"> "+GetNombreClaseObjetoC(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjetoC(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s)"; 
					sInitFuncion+="\r\n\t{";	
					sInitFuncion+="\r\n\t\tthis."+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s;";
					sInitFuncion+="\r\n\t}";																																				
										
				}													
			}
								
			return sInitFuncion; 
		}
		
public String GetIndicesTablasClasesCompuestos() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			String sParametroCompuesto="";
			String sParametroCompuesto2="";
			String sParametroCompuestoFinal2="";//"\r\n\t\t\tqueryWhereSelectParameters2.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2);";

			if(TablasBaseCompuestoDetalle!=null&&TablasBaseCompuestoJunction!=null&&TablasBaseCompuestoDetalle.Count==TablasBaseCompuestoJunction.Count&&TablasBaseCompuestoJunction.Count>0)
			{
				
				for(int i=0;i<TablasBaseCompuestoJunction.Count;i++)
				{
							//sParametroCompuesto2="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2= new ParameterSelectionGeneral();";
							//sParametroCompuesto2+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"2.setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.NONE,\"\",\"\");";
					
							//sParametroCompuesto="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+"= new ParameterSelectionGeneral();";
							//sParametroCompuesto+="\r\n\t\t\tparameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+".setParameterSelectionGeneralEqual(ParameterType.LONG,"+strId+GetNombreClase(TablaBase.ToString())+".toString(),"+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+".getColumnName"+strId+GetNombreClase(TablaBase.ToString())+"(),ParameterTypeOperator.AND);";
							//sParametroCompuesto+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+strId+GetNombreClase(TablaBase.ToString())+");";

							sInitFuncion+="\r\n\tpublic  String  get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+")throws SQLException,Exception"; 
							sInitFuncion+="\r\n\t{\r\n\t\tString sMensaje=\"\";\r\n\t\t";
							sInitFuncion+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";//connexion=Connexion.getNewConnexion();	
							sInitFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"sTodos(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+");";
						
							//sInitFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";	
							//sInitFuncion+=sParametroCompuesto.Replace("ParameterTypeOperator.AND","ParameterTypeOperator.NONE");
							//sInitFuncion+="\r\n\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);\r\n\t\t\t";
							//sInitFuncion+=GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjeto(TablaBase.ToString())+"DataAccess.getEntities" +strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters);";												
							sInitFuncion+="\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(SQLException e)\r\n\t\t{\r\n\t\t\t";//connexion.getConnection().commit();//connexion.getConnection().rollback();
							
							sInitFuncion+="\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t";	//connexion.getConnection().rollback();	//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();
							sInitFuncion+="\r\n\r\n\t\treturn sMensaje;\r\n\t}\r\n";
							
					foreach(IndexSchema indexSchema in TablasBaseCompuestoDetalle[i].Indexes)
					{
						
						

						
						if(!indexSchema.IsPrimaryKey)
						{
							
						
							sParametersFuncion="";
							sParametersNameFuncion="";
						
							if(indexSchema.IsUnique)
							{
								continue;
								/*
								sInitFuncion+="\r\n\tpublic void "+"Get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+indexSchema.Name+"(";
								sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconnexion=Connexion.getNewConnexion();\r\n";
								sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
								sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
								sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}\r\n\t}\r\n";
								*/
							}
							else
							{
								
								sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
								
								if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
								{
									sInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(String sFinalQuery,Long "+strId+GetNombreClase(TablaBase.ToString())+",";									
									sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(sFinalQuery,"+strId+GetNombreClase(TablaBase.ToString())+",";
								}
								else
								{
									sInitFuncion+="\r\n\tpublic void "+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
									sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"s"+indexSchema.Name+"(";
								}
								
								
								if(indexSchema.Name.Contains("Busqueda"))
								{
									//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto;
									//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";	
									
									//sBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto2;
									sBodyFuncion+=sParametroCompuestoFinal2;
											
								}
								else
								{
									//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
									sBodyFuncion+=sParametroCompuesto;
									
									//sBodyFuncion+="\r\n\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters2=new QueryWhereSelectParameters(ParameterDbType.DB2,\"\");\r\n";		
									sBodyFuncion+="\r\n\r\n\t\t\t"+sParametroCompuesto2;
									sBodyFuncion+=sParametroCompuestoFinal2;
								}
								
								//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjeto(TablasBaseCompuestoJunction[i].ToString())+GetNombreClaseObjeto(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar.ToLower()+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities"+strClaseAuxiliar+GetNombreClase(TablasBaseCompuestoJunction[i].ToString())+GetNombreClase(TablasBaseCompuestoDetalle[i].ToString())+strClaseAuxiliar+"(connexion,queryWhereSelectParameters,queryWhereSelectParameters2);";
								//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
								sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
							
							}	
							int count=1;	
							sParametersFuncion="";
							sParametersNameFuncion="";	
							sParameterSelection="";
							
							bool esUnico=false;
							
							
							foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
							{
								
								
								
									if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
									{
										sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								
										if(indexSchema.IsUnique)
										{
											esUnico=true;
										}						
									
										if(!count.Equals(indexSchema.MemberColumns.Count))
										{
											sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,true);
										}
										else
										{
											sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,true);
										}
									
										if(!indexSchema.MemberColumns.Count.Equals(count))
										{					
											sParametersFuncion+=",";
											sParametersNameFuncion+=",";	
										}
									}
									else
									{
										if(!indexSchema.Name.Contains("BusquedaRango"))
										{
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
										}
										else
										{
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
											
											sParametersFuncion+=",";
											sParametersNameFuncion+=",";	
											
											sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
											sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									
										}
										sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
										break;
									}
									
								count++;
							}
							
							sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
						}
					}
				}													
			}
								
			return sInitFuncion; 
		}

public String GetMaintenanceTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada="";
			sTablaClaseRelacionada+="";
			String sTablaClaseRelacionadaNombre="";
			sTablaClaseRelacionadaNombre+="";
			String sTablaClaseRelacionada3="";
			
			String strComentarioParaEjb="";
			
			String strFuncionBusquedaEjbInit0="\r\n\r\n\t\t\t//ARCHITECTURE";
				   strFuncionBusquedaEjbInit0+="\r\n\t\t\tif(Constantes.ISUSAEJBLOGICLAYER) {";
			String strFuncionBusquedaEjbInit="\r\n\t\t\t} else if(Constantes.ISUSAEJBREMOTE) {";
			String strFuncionBusquedaEjbMiddle="\r\n\t\t\t} else if(Constantes.ISUSAEJBHOME) {";
			String strFuncionBusquedaEjbEnd="\r\n\t\t\t}";
				   strFuncionBusquedaEjbEnd+="\r\n\t\t\t//ARCHITECTURE";
			
			String strFuncionBusquedaEjbRemote="";
			strFuncionBusquedaEjbRemote+="";
			String strFuncionBusquedaEjbHome="";
			strFuncionBusquedaEjbHome+="";
			String strFuncionBusquedaEjb="";
			strFuncionBusquedaEjb+="";
			
			if(ConEjb){
				strComentarioParaEjb="//";
			}
			
			String sFuncionMiddle2="";
			String sFuncionInit="\r\n\tpublic String save"+GetNombreClase(TablaBase.ToString())+"Relaciones("+GetNombreClase(TablaBase.ToString()) +" "+GetNombreClaseObjetoC(TablaBase.ToString());
			String sFuncionMiddle=")throws SQLException,Exception\r\n\t{\r\n\t\tString sMensaje=\"\";\r\n";//Mensaje.getMensajeGeneralDeepSave(\"\")
			sFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n\t\t\t";//this.getNewConnexionToDeep();
			
			sFuncionMiddle+="\r\n\r\n\t\t\tdatosCliente=new DatosCliente();";
			
			sFuncionMiddle+="\r\n\t\t\tdatosCliente.setIdUsuario(lIdUsuarioSesion);";
			if(!EsSwing){
			sFuncionMiddle+="\r\n\t\t\tdatosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());";
			sFuncionMiddle+="\r\n\t\t\tdatosCliente.setsNamePC(httpServletRequest.getRemoteHost());";
			sFuncionMiddle+="\r\n\t\t\tdatosCliente.setsIPPC(httpServletRequest.getRemoteAddr());";
			}
			sFuncionMiddle+="\r\n\r\n\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.setDatosCliente(datosCliente);";
			
			sFuncionMiddle2+="\r\n\t\t\t\t"+strComentarioParaEjb+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"Relaciones("+" "+GetNombreClaseObjetoC(TablaBase.ToString());
			
			strFuncionBusquedaEjbRemote="\r\n\t\t\t\t//"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"Implementable.save"+GetNombreClase(TablaBase.ToString())+"RelacionesWithReturn("+" "+GetNombreClaseObjetoC(TablaBase.ToString())+",datosCliente";
			strFuncionBusquedaEjbHome="\r\n\t\t\t\t//"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"ImplementableHome.save"+GetNombreClase(TablaBase.ToString())+"RelacionesWithReturn("+" "+GetNombreClaseObjetoC(TablaBase.ToString())+",datosCliente";
			
			String sFuncionEnd="\r\n\r\n\t\t\t\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\r\n\treturn sMensaje;\r\n\r\n\t}";
			
			//connexion.getConnection().commit();
			//connexion.getConnection().rollback();
			//connexion.getConnection().rollback();
			//finally\r\n\t\t{\r\n\t\t\tthis.closeNewConnexionToDeep();\r\n\t\t}
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			ArrayList arrayListRelaciones=new ArrayList();
			String strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				//CON DESORDEN NO FUNCIONA
				
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
				}
			}
			
			arrayListRelaciones=new ArrayList();
			strNombreAdicional="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				
				//CON DESORDEN NO FUNCIONA
				/*
				if(ExisteTablasClasesYaRelacionadas(arrayListRelaciones,collectionInfo.SecondaryTable)) {
					//continue;
					strNombreAdicional=GetNombreAdicionalClaseRelacionadaFromRelation(collectionInfo);
				} else {
					strNombreAdicional="";
					arrayListRelaciones.Add(collectionInfo.SecondaryTable);
				}
				*/
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada3+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+strNombreAdicional+ "s";
				}
			}
			
			String sTablaClaseRelacionada2="";
			//sTablaClaseRelacionada2+="\r\n\t\t\tthis.set"+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString()) +");";
			
		
			//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tif(("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsChanged())&&!"+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted()"+")";
			//sTablaClaseRelacionada2+="\r\n\t\t\t{";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+sTablaClaseRelacionada3+");";
			//sTablaClaseRelacionada2+="\r\n\t\t\t}";
			//sTablaClaseRelacionada2+="\r\n\t\t\telse if("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsDeleted())";
			//sTablaClaseRelacionada2+="\r\n\t\t\t{";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC"+sTablaClaseRelacionada3+");";
			//sTablaClaseRelacionada2+="\r\n\t\t\t\tthis.save"+GetNombreClaseC(TablaBase.ToString())+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
			//sTablaClaseRelacionada2+="\r\n\t\t\t}";
			
			sTablaClaseRelacionada=sFuncionInit+sTablaClaseRelacionada+sFuncionMiddle+strFuncionBusquedaEjbInit0+sFuncionMiddle2+sTablaClaseRelacionada3+");"+strFuncionBusquedaEjbInit+strFuncionBusquedaEjbRemote+sTablaClaseRelacionada3+");"+strFuncionBusquedaEjbMiddle+strFuncionBusquedaEjbHome+sTablaClaseRelacionada3+");"+strFuncionBusquedaEjbEnd+sTablaClaseRelacionada2+sFuncionEnd;
			return sTablaClaseRelacionada; 
		}
		
public String GetMaintenanceTablasClasesRelacionadasDetalles() 
		{
			String sTablaClaseRelacionada="";
			String sTablaClaseRelacionadaNombre="";
			String sFuncionInit="\r\n\tpublic void Save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(Long idUsuario,String sUsuarioPC,String sNamePC,String sIPPC";
			String sFuncionMiddle=")throws Exception\r\n\t{\r\n";
			sFuncionMiddle+="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t";
			
			sFuncionMiddle+=GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.save"+GetNombreClase(TablaBase.ToString())+"RelacionesDetalles(idUsuario,sUsuarioPC,sNamePC,sIPPC";
			
			String sFuncionEnd="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
					sTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					sTablaClaseRelacionada+=","+strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
					sTablaClaseRelacionadaNombre+=","+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
			String sTablaClaseRelacionada2="";
			//sTablaClaseRelacionada2+="\r\n\t\t\tLong id"+GetNombreClaseC(TablaBase.ToString())+"Actual=this.get"+GetNombreClaseC(TablaBase.ToString())+"().get"+strIdGetSet+"();";
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+");";
					
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tif("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"()!=null)\r\n\t\t\t{";										
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"().set"+strIdGetSet+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					sTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\t"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +"Logic=new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"Logic();";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.set"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s);";
					
					//sTablaClaseRelacionada2+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+" "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.get"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable) +"s())\r\n\t\t\t{";					
					//sTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".setField_"+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"(id"+GetNombreClaseC(TablaBase.ToString())+"Actual);";
					//sTablaClaseRelacionada2+="\r\n\t\t\t}\r\n";
					
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.setConnexion(this.getConnexion());";
					//sTablaClaseRelacionada2+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"Logic.save"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"s(idUsuario,sUsuarioPC,sNamePC,sIPPC);";
				}
			}
			
			sTablaClaseRelacionada=sFuncionInit+sTablaClaseRelacionada+sFuncionMiddle+sTablaClaseRelacionadaNombre+");"+sTablaClaseRelacionada2+sFuncionEnd;
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepSaveBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;							
			String sInitFuncion="get"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ sTablaClaseRelacionadaSave+"\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepSaveBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;						
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor;
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ sTablaClaseRelacionadaSave+"\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\r\n\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;							
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{"+ sTablaClaseRelacionadaSave+sTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaSave=String.Empty;	
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			String sTablaClaseRelacionadaLogic=String.Empty;
			String sInitFuncion="get"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();	
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaSave="\r\n\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",connexion);\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{"+ sTablaClaseRelacionadaSave+sTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}	
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;							
			String sInitFuncion="set"+GetPrefijoRelacionC();
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ sTablaClaseRelacionadaReturn+"\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysDeepLoadBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;							
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor;
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ sTablaClaseRelacionadaReturn+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeep() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionada+="\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;	
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();					
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\t\t\t\t";
				
					sTablaClaseRelacionada+="\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n"+ sTablaClaseRelacionadaReturn+sTablaClaseRelacionadaLogicDeepSave+"\r\n\t\t\t}\r\n";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}
		
public String SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude() 
		{
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaReturn=String.Empty;		
			String sTablaClaseRelacionadaLogicDeepSave=String.Empty;
			String sInitFuncion="set"+GetPrefijoRelacionC();
			String sInitFuncionGet="get"+GetPrefijoRelacionC();
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					if(ExisteTablaEnTablasRelacionadasC(TablaBase,GetNombreClaseRelacionadaFromColumn(columnSchema),columnSchema))
					{
					continue;
					}
					sTablaClaseRelacionadaReturn="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion;						
					sTablaClaseRelacionadaReturn+=GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionadaLogicDeepSave="\t\t\t"+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic "+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic= new "+GetNombreClase("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic(connexion);\r\n";
					sTablaClaseRelacionadaLogicDeepSave+="\t\t\t"+GetNombreClaseObjeto("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncionGet+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ "()"+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t\r\n";
				
					sTablaClaseRelacionada+="\r\n\r\n\t\texiste=false;\r\n\r\n"+sInitFor+"\r\n\t\t\tif(clas.equals("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+".class))\r\n\t\t\t{\r\n\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n"+ sTablaClaseRelacionadaReturn+sTablaClaseRelacionadaLogicDeepSave+"\t\t}";
		
				}
			}
			
			
			return sTablaClaseRelacionada; 
		}	

public bool ExisteClasesRelacionadasForeigKeys() 
		{
			bool existe= false;
										
								
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					 existe= true;
				}
			}
								
			return existe; 
		}

public String GetClassClasesRelacionadasForeigKeys() 
		{
			String sTablaClaseRelacionada=String.Empty;
										
										
			foreach(ColumnSchema columnSchema in TablaBase.Columns)
			{
				if(columnSchema.IsForeignKeyMember)
				{
					sTablaClaseRelacionada+="classes.add("+GetNombreClaseC("dbo."+GetNombreClaseRelacionadaFromColumn(columnSchema))+ ".class);\r\n";
				
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public String GetIndicesTablasClasesDeepSave() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			
			String sInit="\r\n"+GetNombreClaseC(TablaBase.ToString())+"DataAccess.save("+GetNombreClaseObjeto(TablaBase.ToString())+", connexion);\r\n";
												
			String sTablaClaseRelacionada2=String.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String sInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n";
			String sInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String sInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String sInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			
			String sFuncionInclude=String.Empty;
			String sFuncionExclude=String.Empty;
			
            sTablaClaseRelacionada2="\r\nelse\r\n{"+sInitNone +SetClasesRelacionadasForeigKeysNoDeepSaveBeep();
			
			sFuncionInclude="";
			sFuncionExclude="";
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				existeClaseRelacionada=true;
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";					
					sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
					sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";					
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);";										
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
		
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
					//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";						
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";					
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";				
						sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
						
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";								
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n";												
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepSave("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
					}
				
				}
			
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\t\t}";
			
			
			}
			
				sFuncionInclude=sInitInclude+sInitFor+SetClasesRelacionadasForeigKeysNoDeepSaveBeepInclude()+ sFuncionInclude+ "\r\n\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude+SetClasesRelacionadasForeigKeysNoDeepSaveBeepExclude()+ sFuncionExclude+ "\r\n\t}\r\n}";
			
			sTablaClaseRelacionada2=sTablaClaseRelacionada2+"\t}\r\n"+sFuncionInclude+sFuncionExclude;
			
			// parte del no if deep
			
			
			String sInitIfFuncion=String.Empty;
			String sIfFuncion=String.Empty;
			String sInitElseFuncion=String.Empty;
			String sElseFuncion=String.Empty;
			
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion=" get"+GetPrefijoRelacionC();
			
			sInitIfFuncion=sInit+"\r\nif(!deep)\r\n{\r\n";
			sInitElseFuncion="\r\n}\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				sInitFuncion="get"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					//sInitFuncion=sInitFuncion;
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "();";
				}
				else
				{
					//sInitFuncion=sInitFuncion;
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();";
			
				}
				
			sFuncion+=GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
			}
			
			
			
			String sTablaClaseRelacionada0=String.Empty;
			System.Collections.Hashtable tablasRelacionadas0=GetTablasRelacionadas(TablaBase);
			
            sTablaClaseRelacionada0=sInitNone+ SetClasesRelacionadasForeigKeysDeepSaveBeep();
			sFuncionInclude="";
			sFuncionExclude="";
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";

				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sTablaClaseRelacionada0+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sFuncionInclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
					
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"().set"+/*GetPrefijoTablaC()+*/strIdGetSet+/*GetNombreClaseC(TablaBase.ToString())+*/"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
					sFuncionExclude+="\r\n\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),connexion);\r\n";
				}
				else
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{";
						sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";						
						sTablaClaseRelacionada0+="\r\n\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";											
						sFuncionInclude+="\r\n\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable) +".set"+GetPrefijoTablaC()+strIdRelationshipGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";																
						sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
					}
					else
					{
						//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
						sTablaClaseRelacionada0+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
						sTablaClaseRelacionada0+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t}\r\n";
					
						sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
						sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t\t}\r\n";
					
						sFuncionExclude+="\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
						sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"DataAccess.save("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",connexion);"+"\r\n\t\t\t}\r\n";
				
					}
				}
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\r\n\t\t}";
				
			}
			
			sFuncionInclude=sInitInclude+sInitFor+ SetClasesRelacionadasForeigKeysDeepSaveBeepInclude()+sFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude+ SetClasesRelacionadasForeigKeysDeepSaveBeepExclude()+sFuncionExclude+"\r\n\t}\r\n}";
	
			
			sIfFuncion=sInitIfFuncion+sTablaClaseRelacionada0+"\t}\r\n"+sFuncionInclude+sFuncionExclude;//+"\r\n}\r\n"+sInitElseFuncion+sTablaClaseRelacionada0+sTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+sTablaClaseRelacionada3+"\r\n}\r\n}\r\n}\r\n";					
		
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return sIfFuncion+sTablaClaseRelacionada2; 
		}
		
public String GetIndicesTablasClasesDeepLoad() 
		{
			bool existeClaseForeign=false;
			bool existeClaseRelacionada=false;
			
			String sTablaClaseRelacionada2=String.Empty;
			System.Collections.Hashtable tablasRelacionadas2=GetTablasRelacionadas(TablaBase);
			String sInitNone="\r\n\tif(deepLoadType.equals(DeepLoadType.NONE))\r\n\t{\r\n\r\n";
			String sInitInclude="\telse if(deepLoadType.equals(DeepLoadType.INCLUDE))\r\n\t{\r\n";
			String sInitExclude="\telse if(deepLoadType.equals(DeepLoadType.EXCLUDE))\r\n\t{\r\n";
			String sInitFor="\r\n\t\tfor(Class clas:clases)\r\n\t\t{";
			String sInitIfClass="\r\n\r\n\t\t\tif(clas.equals(";
			String sFuncionInclude=String.Empty;
			String sFuncionExclude=String.Empty;
			
			sFuncionInclude="";
			sFuncionExclude="";
			
            sTablaClaseRelacionada2="\r\nelse\r\n{\r\n"+sInitNone+ SetClasesRelacionadasForeigKeysNoDeepLoadBeep();
			
			String sInitFuncion=" get"+GetPrefijoRelacionC();
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sTablaClaseRelacionadaAux=String.Empty;
			
			existeClaseForeign=ExisteClasesRelacionadasForeigKeys(); 
			foreach(CollectionInfo collectionInfo in tablasRelacionadas2.Values)
			{
				existeClaseRelacionada=true;
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\t\texiste=false;\r\n"+sInitFor+sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				sInitFuncion="set"+GetPrefijoRelacionC();
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada2+="\t\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";						
					sTablaClaseRelacionada2+="\t\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+ "(),deep,deepLoadType,clases);\r\n";
				
					sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";
					sFuncionInclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
					sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux+"\r\n";
					sFuncionExclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\r\n\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+collectionInfo.SecondaryTable+"(),deep,deepLoadType,clases);\r\n";
					
				}
				else
				{
					//sTablaClaseRelacionada+="ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> TR_"+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";
					sTablaClaseRelacionada2+="\r\n\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;		
					sTablaClaseRelacionada2+="\r\n\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t{\r\n";
					sTablaClaseRelacionada2+="\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sTablaClaseRelacionada2+="\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t}\r\n";
				
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";		
					sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;	
					sFuncionInclude+="\r\n\t\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t\t{\r\n";
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionInclude+="\t\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t\t}\r\n";
				
					sTablaClaseRelacionadaAux=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));\r\n";					
					sFuncionExclude+="\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionadaAux;	
					sFuncionExclude+="\r\n\r\n\t\t\tfor("+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s())\r\n\t\t\t{\r\n";
					sFuncionExclude+="\t\t\t\t"+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic "+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic= new "+GetNombreClase("dbo."+collectionInfo.SecondaryTable)+"Logic(connexion);\r\n";
					sFuncionExclude+="\t\t\t\t"+GetNombreClaseObjeto("dbo."+collectionInfo.SecondaryTable)+"Logic.deepLoad("+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+",deep,deepLoadType,clases);"+"\r\n\t\t\t}\r\n";
				
				}
				
				//sFuncion+="\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
				sFuncionInclude+="\t\t\t}";
				sFuncionExclude+="\t\t}";
				
			}
			
				sFuncionInclude=sInitInclude+sInitFor+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepInclude()+ sFuncionInclude +"\r\n\t\t}\r\n\t}\r\n";
				sFuncionExclude=sInitExclude+ SetClasesRelacionadasForeigKeysNoDeepLoadBeepExclude()+ sFuncionExclude+ "\r\n\t}\r\n}";
				
			
			sTablaClaseRelacionada2=sTablaClaseRelacionada2+"\t}\r\n"+sFuncionInclude+sFuncionExclude;
			
			
			//Parte del no if del deep
			
			String sInitIfFuncion=String.Empty;
			String sIfFuncion=String.Empty;
			String sInitElseFuncion=String.Empty;
			String sElseFuncion=String.Empty;
			
			sFuncion=String.Empty;
			
			sTablaClaseRelacionada=String.Empty;
			sInitFuncion=" get"+GetPrefijoRelacionC();
			
			sInitIfFuncion="\r\nif(!deep)\r\n{\r\n";
			sInitElseFuncion="\r\nelse{\r\n";
			
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
			
			sFuncion=sInitNone+ SetClasesRelacionadasForeigKeysDeepLoadBeep();
			sFuncionInclude="";
			sFuncionExclude="";
		
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				sFuncionInclude+=sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\r\n\r\n\r\n\t\texiste=false;\r\n"+sInitFor +sInitIfClass+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+".class))\r\n\t\t\t{\r\n";
				sFuncionExclude+="\t\t\t\texiste=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif(!existe)\r\n\t\t{\r\n";
				
				sInitFuncion="set"+GetPrefijoRelacionC();
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
				}
				else
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "("+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.get"+GetPrefijoRelacionC()+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"));";
			
				}
				
			sFuncion+="\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n";
			sFuncionInclude+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n\t\t\t}\r\n";
			sFuncionExclude+= "\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"."+sInitFuncion+	sTablaClaseRelacionada+"\r\n\t\t}";
			
			}
			
			sFuncionInclude=sInitInclude+sInitFor+SetClasesRelacionadasForeigKeysDeepLoadBeepInclude() +sFuncionInclude+ "\t\t}\r\n\t}\r\n";
			sFuncionExclude=sInitExclude +SetClasesRelacionadasForeigKeysDeepLoadBeepExclude()+sFuncionExclude+ "\r\n\t}\r\n}";
			
			sIfFuncion=sInitIfFuncion+sFuncion+"\t}\r\n"+sFuncionInclude+sFuncionExclude; //+sInitElseFuncion+sFuncion+sTablaClaseRelacionada2+"\r\n}\r\nelse{\r\n"+sTablaClaseRelacionada3+"\r\n}\r\n}\r\n";					
			
			if(!existeClaseForeign&&!existeClaseRelacionada)
			{
				return "";
			}
			
			return sIfFuncion+sTablaClaseRelacionada2; 
		}
		
public String GetParameterSelection(ColumnSchema column,bool esUltimo,bool esUnico,bool esCompuesto) 
		{
			String sParaBusquedaString=""; 
			String sParaBusquedaCompuesto=""; 
			
			if(esCompuesto)
			{
				sParaBusquedaCompuesto="Constantes.getSSchema()+\".\"+"+GetNombreClase(column.Table.ToString())+".getSTableName()+\".\"+";
										  
			}
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				if(!esUnico)	
				{
				sParaBusquedaString="+\"%\"";
				}
			}
			
			String sParameterSelection=String.Empty;
			sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
			sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralEqual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+sParaBusquedaCompuesto+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
			
			if(esUltimo)
			{
			sParameterSelection+="ParameterTypeOperator.NONE);";		
			}
			else
			{
			sParameterSelection+=	"ParameterTypeOperator.AND);";	
			}
			
			sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
		
			return sParameterSelection;
		}
	
	public String GetParameterSelectionRango(ColumnSchema column,String sIndexName) 
		{
			String sParaBusquedaString=""; 
			
			if(column.DataType==DbType.DateTime ||column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
			{
				sParaBusquedaString="+\"%\"";
			}
			
			String sParameterSelection=String.Empty;
			
			if(!sIndexName.Contains("BusquedaRango"))
			{
				sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"= new ParameterSelectionGeneral();";
				
				if(sIndexName.Contains("BusquedaMayorIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMayor"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMenorIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				else if(sIndexName.Contains("BusquedaMenor"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+".setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";
				}
				
				sParameterSelection+="ParameterTypeOperator.NONE);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+");";
			}
			else
			{
				sParameterSelection="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Inicial= new ParameterSelectionGeneral();";				
				if(sIndexName.Contains("BusquedaRangoIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}
				else
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Inicial.setParameterSelectionGeneralMayor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Inicial"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";		
				}				
				sParameterSelection+=	"ParameterTypeOperator.AND);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Inicial);";
				
				sParameterSelection+="\r\n\r\n\t\t\tParameterSelectionGeneral parameterSelectionGeneral"+column.Name+"Final= new ParameterSelectionGeneral();";
				if(sIndexName.Contains("BusquedaRangoIgual"))
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenorIgual(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}
				else
				{
					sParameterSelection+="\r\n\t\t\tparameterSelectionGeneral"+column.Name+"Final.setParameterSelectionGeneralMenor(ParameterType."+GetTipoColumnaClaseEnumC(column)+","+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column)+"Final"+ GetTipoColumnaToString(column)+sParaBusquedaString +","+GetNombreClaseC(column.Table.ToString())+".getColumnName"+GetNombreCampoTablaC(column)+"(),";				
				}				
				sParameterSelection+="ParameterTypeOperator.NONE);";	
				
				sParameterSelection+="\r\n\t\t\tqueryWhereSelectParameters.addParameter(parameterSelectionGeneral"+column.Name+"Final);";
			}
			
						
			
		
			return sParameterSelection;
		}

		public String GetIndicesTablasFacesClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						
						
						sBodyFuncion+="\r\n\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
						sBodyFuncion+="\r\n\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
						//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							sBodyFuncion+="\r\n\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
							sBodyFuncion+="\r\n\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
							//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(sFinalQuery,";
						}
						else
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							
							sBodyFuncion+="\r\n\r\n\t\t\tsAccionBusqueda=\""+indexSchema.Name+"\";";
							sBodyFuncion+="\r\n\r\n\t\t\tthis.procesarBusqueda(sAccionBusqueda";
						
							//sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					/*
					int count=1;	
					sParametersFuncion="";
					sParametersNameFuncion="";	
					sParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
									
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					*/
					sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetIndicesTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="";
			String sBodyFuncion="";
			String sEndBodyFuncion="";
			String sEndFuncion="";
			String sParametersFuncion="";
			String sParametersNameFuncion="";
			String sParameterSelection=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					sParametersFuncion="";
					sParametersNameFuncion="";
				
					if(indexSchema.IsUnique)
					{
						sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
						sBodyFuncion+="\r\n\t\t\tPagination pagination=new Pagination();";
						sBodyFuncion+="\r\n\t\t\tpagination.setiFirstResult(iInicioPaginacion);";
						sBodyFuncion+="\r\n\t\t\tpagination.setiMaxResults(iFinPaginacion);\r\n";
						sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
						//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");";		
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntity(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
							
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();	
							sBodyFuncion+="\r\n\t\t\tPagination pagination=new Pagination();";
							sBodyFuncion+="\r\n\t\t\tpagination.setiFirstResult(iInicioPaginacion);";
							sBodyFuncion+="\r\n\t\t\tpagination.setiMaxResults(iFinPaginacion);\r\n";
							sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(sFinalQuery,pagination,";
						}
						else
						{
							sInitFuncion+="\r\n\tpublic void "+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
							sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";//connexion=Connexion.getNewConnexion();
							sBodyFuncion+="\r\n\t\t\tPagination pagination=new Pagination();";
							sBodyFuncion+="\r\n\t\t\tpagination.setiFirstResult(iInicioPaginacion);";
							sBodyFuncion+="\r\n\t\t\tpagination.setiMaxResults(iFinPaginacion);\r\n";
							sBodyFuncion+="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic."+"get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
						
						//sBodyFuncion="\r\n\t\ttry\r\n\t\t{\r\n\t\t\t\r\n";
						//connexion=Connexion.getNewConnexion();
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains(strFK))
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
							//sBodyFuncion+="\r\n\t\t\tqueryWhereSelectParameters.setFinalQuery(sFinalQuery);";			
						}
						else
						{
							//sBodyFuncion+="\r\n\t\t\tQueryWhereSelectParameters queryWhereSelectParameters=new QueryWhereSelectParameters(ParameterDbType.MYSQL,\"\");\r\n";		
						}
						
						//sEndBodyFuncion="\r\n\r\n\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s="+GetNombreClaseObjetoC(TablaBase.ToString())+"DataAccess.getEntities(connexion,queryWhereSelectParameters);";
						//sEndBodyFuncion+="\r\n\r\n\t\t\tconnexion.getConnection().commit();";
						sEndFuncion="\r\n\t\t}\r\n\t\tcatch(Exception e)\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n";
						//finally\r\n\t\t{\r\n\t\t\tconnexion.getConnection().close();\r\n\t\t}
					
					}	
					int count=1;	
					sParametersFuncion="";
					sParametersNameFuncion="";	
					sParameterSelection="";
					
					bool esUnico=false;
					
					
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						
							if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
							{
								sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
						
								if(indexSchema.IsUnique)
								{
									esUnico=true;
								}						
							
								if(!count.Equals(indexSchema.MemberColumns.Count))
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,false,esUnico,false);
								}
								else
								{
									sParameterSelection+=GetParameterSelection(memberColumnSchema.Column,true,esUnico,false);
								}
							
								if(!indexSchema.MemberColumns.Count.Equals(count))
								{					
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
								}
							}
							else
							{
								if(!indexSchema.Name.Contains("BusquedaRango"))
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column); 
								}
								else
								{
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Inicial"; 
									
									sParametersFuncion+=",";
									sParametersNameFuncion+=",";	
									
									sParametersFuncion+=GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
									sParametersNameFuncion+=GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+"Final"; 
							
								}
								sParameterSelection+=GetParameterSelectionRango(memberColumnSchema.Column,indexSchema.Name);
								break;
							}
							
						count++;
					}
					
					sInitFuncion+=sParametersFuncion+")throws Exception\r\n\t{"+sBodyFuncion+sParametersNameFuncion+");"+/*sParameterSelection+*/sEndBodyFuncion/*+sParametersNameFuncion+");"*/+sEndFuncion+"\r\n\r\n";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetFuncionesTablasClasesRelacionadas() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="public  void  get"+GetPrefijoRelacionC();
			
			String sEndFuncion="\r\n}\r\ncatch(Exception e)\r\n{\r\n;\r\n}\r\n}";
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ "()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"= new "+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"();\r\n";
					sTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
				}
				else
				{
					sTablaClaseRelacionada=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"()\r\n{\r\ntry\r\n{\r\n "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s= new "+ strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+">();\r\n";
					sTablaClaseRelacionada+=GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+"s="+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+"DataAccess.Traer"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"s(connexion,"+GetNombreClaseObjetoC("dbo."+TablaBase.Name)+");";
			
				}
				
			sFuncion+=sInitFuncion+	sTablaClaseRelacionada+sEndFuncion+"\r\n\r\n";
			}
								
			return sFuncion; 
		}
		
public String GetTablasClasesRelacionadas() 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
										 			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+=GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+";\r\n";
				}
				else
				{
					sTablaClaseRelacionada+=strTypeCollection+"<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetPrefijoRelacionC()+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s;\r\n";
				}
			}
								
			return sTablaClaseRelacionada; 
		}

public  String GetAuditoriaSetAuditorias(ColumnSchema column)
{				
	String sSetEntity=String.Empty;
	

	sSetEntity="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".getIsNew()||!"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetNombreCompletoColumnaClaseC(column)+"().equals("+ GetNombreClaseObjetoC(TablaBase.ToString()) +".get" + GetNombreClaseC(TablaBase.ToString())  +"Original().get"+ GetNombreCompletoColumnaClaseC(column) +"()))\r\n\t\t\t{\r\n";
	
	/*
	sSetEntity+="\t\t\t\tauditoria.setField_sCampo("+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"());\r\n";
	sSetEntity+="\t\t\t\tauditoria.setField_sValoranterior("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );\r\n";
	sSetEntity+="\t\t\t\tauditoria.setField_sValoractual("+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ");\r\n";
	*/
	
	sSetEntity+="\t\t\t\t"+strGlobalAuditoriaComment+"auditoriaDetalleLogicAdditional.RegisarNuevaAuditoriaDetalle(auditoriaObj.getId(),"+ GetNombreClaseC(TablaBase.ToString())+".getColumnName"+ column.Name+"(),"+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreClaseC(TablaBase.ToString()) +"Original().get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ ","+ GetNombreClaseObjetoC(TablaBase.ToString())+ ".get"+ GetNombreCompletoColumnaClaseC(column)+ "()"+ GetTipoColumnaToString(column)+ " );";
	sSetEntity+="\r\n\t\t\t}";
	
	return sSetEntity;
}

public static String GetSetEntityColumna(ColumnSchema column,String table,bool conVersionRow)
{				
	String sSetEntity=String.Empty;
	
	if(conVersionRow)
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired))
		{
			return sSetEntity;
		}
	}
	else
	{
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)||column.Name.Equals(strIsExpired)||column.Name.Equals(strVersionRow))
		{
			return sSetEntity;
		}
	}
	//usuario.setClave(sClave);
	String sEntityInit=GetNombreClaseObjetoC(table)+".set"+GetNombreCompletoColumnaClaseC(column)+"(";
	String sEntityMiddle=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
	String sEntityFinal=");";
   sSetEntity=sEntityInit+sEntityMiddle+sEntityFinal;
	
	return sSetEntity;
}

public String GetParametroFuncionNuevoClase(ColumnSchema column)
{		String sParamtro=String.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return sParamtro;
		}
		sParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return sParamtro;
}

public String GetParametroUsoFuncionNuevoClase(ColumnSchema column)
{		String sParamtro=String.Empty;	
		
		if(column.Name.Equals(strId)||column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired)|| column.Name.Equals(strVersionRow))
		{
			return sParamtro;
		}
		sParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);
		return sParamtro;
}

public String GetParametroFuncionActualizarClase(ColumnSchema column)
{		String sParamtro=String.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return sParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		sParamtro=GetTipoColumnaClaseC(column)+" "+GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		sParamtro=GetTipoColumnaClaseC(column)+" "+strId;			
		}
		return sParamtro;
}

public String GetParametroUsoFuncionActualizarClase(ColumnSchema column)
{		String sParamtro=String.Empty;	

		if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
		{
			return sParamtro;
		}
		if(!column.Name.Equals(strId))
		{
		sParamtro=GetPrefijoTipoC(column)+GetNombreColumnaClaseC(column);		
		}
		else
		{
		sParamtro=strId;			
		}
		return sParamtro;
}

public String GetNombreClase(String sTablaBase)
{
		return GetNombreClaseC(sTablaBase);
}

public String GetNombreClaseObjeto(String sTablaBase)
{
		return GetNombreClaseObjetoC(sTablaBase);
}

public String GetClassesSetAddTablasRelacionadas() 
{
			String sTablaClaseRelacionada="";	
			TableSchema tablaRelacionadaObjetivo;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					sTablaClaseRelacionada+="\r\n\t\t\tclasses.add("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+".class);";									
				}				
			}
			
			return sTablaClaseRelacionada; 
}

public String GetForTablasRelacionadasForSetDelete() 
{
			String sTablaClaseRelacionada="";	
			
			TableSchema tablaRelacionadaObjetivo=null;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);

			
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.ManyToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				else
				{
					continue;
				}

				if(!VerificarTablaRelacionFromPropertiesC(tablaRelacionadaObjetivo))
				{
					//continue;
				}
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany||collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
					{
						sTablaClaseRelacionada+="\r\n\t\t\tfor("+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+" "+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+":"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+"s())";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionadaObjetivo.ToString())+".setIsDeleted(true);";
						sTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
					else
					{
						sTablaClaseRelacionada+="\r\n\t\t\tif("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"()!=null)";
						sTablaClaseRelacionada+="\r\n\t\t\t{";
						sTablaClaseRelacionada+="\r\n\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+GetPrefijoRelacionC()+GetNombreClaseC(tablaRelacionadaObjetivo.ToString())+"().setIsDeleted(true);";
						sTablaClaseRelacionada+="\r\n\t\t\t}\r\n";
					}
				}				
			}
			
			return sTablaClaseRelacionada; 
}

public String GetIndicesVariablesTablasClases() 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+indexSchema.Name+"(";
					}
					else
					{
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(String sFinalQuery,";
						}
						else
						{
						//sInitFuncion+="\r\n\tvoid "+"Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"(";
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
							
							sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
						
							sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
							sInitFuncion+="\t{\r\n";
							sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
							sInitFuncion+="\t}\r\n\r\n";
	
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								sInitFuncion+=";\r\n";	
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+") \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+" = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+";\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							}
							else
							{
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial("+GetPrefijoTipoC(memberColumnSchema.Column)+" "+GetTipoColumnaClaseC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Inicial;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								
								//sInitFuncion+=",";
								sInitFuncion+="\tprivate "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final"+";\r\n\r\n"; 
								
								sInitFuncion+="\tpublic "+GetTipoColumnaClaseC(memberColumnSchema.Column)+" get"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final()\r\n"; 
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\treturn this."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
							
								sInitFuncion+="\tpublic void set"+GetPrefijoTipoToGetSetC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final("+GetTipoColumnaClaseC(memberColumnSchema.Column)+" "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final) \r\n";
								sInitFuncion+="\t{\r\n";
								sInitFuncion+="\t\tthis."+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final = "+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"Final;\r\n";
								sInitFuncion+="\t}\r\n\r\n";
								break;
							}
						}
						count++;
					}
					//sInitFuncion+=")throws Exception;";																																			
				}
			}
			
								
			return sInitFuncion; 
		}
		
public String GetSetVariablesTablaToBean(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strVersionRowGetSet+"("+GetNombreClaseObjeto(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".setField_"+sPrefijo+ sColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+sPrefijo+ sColumna+"());";
}		

public String GetSetVariableToVariableLocal(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strIdGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.set"+strVersionRowGetSet+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Local.setField_"+sPrefijo+ sColumna +"("+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+sPrefijo+ sColumna+"());";
}	

public String GetSetVariablesBeanToTable(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strIdGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().set"+strVersionRowGetSet+"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strVersionRowGetSet+"());";
	}
	return  GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"().setField_"+sPrefijo+ sColumna +"(this."+GetNombreClaseObjetoC(TablaBase.ToString())+".getField_"+sPrefijo+ sColumna+"());";
}	

public String SetVariablesTablaToCancelar(ColumnSchema column)
{
	String sTipo=GetTipoColumnaClaseC(column);	
	String sPrefijo=GetPrefijoTipoC(column);	
	String sColumna=GetNombreColumnaClaseC(column);	
	String sIfElse="\r\nif(httpServletRequest.getParameter(\""+GetNameControlHtml(column) +"\"+i.tToString())== null||httpServletRequest.getParameter(\""+GetNameControlHtml(column) + "\"+i.toString())==\"\")\r\n{\r\n";
	sIfElse+=sPrefijo+sColumna+"=null;\r\n}\r\nelse\r\n{\r\n";	
	
	String sValor="";
	
	switch(column.Name)
	{
		case strIsActive:
		sValor="";
		break;
		
		case strIsExpired:
		sValor="";
		break;
		
		case strVersionRow:
		sValor="";
		break;
		
		default:
		sValor=GetDefaultValueColumna(column);
		break;
	}
	
	if(column.Name.Equals(strIsActive)|| column.Name.Equals(strIsExpired))
	{
			return String.Empty;
	}
		
	if(column.Name.Equals(strId))
	{
		return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".set"+strIdGetSet+"("+sValor+");";
	}
	if(column.Name.Equals(strVersionRow))
	{
		return  "";//"this.set"+strVersionRowGetSet+"(\"\");";
	}
	return  "this."+GetNombreClaseObjetoC(TablaBase.ToString())+".setField_"+sPrefijo+ sColumna +"("+sValor+");";
}
/*
	private Long id;
	private Boolean isActive;
	private Boolean isExpired;
	private Timestamp versionRow;
	private boolean isNew;
	private boolean isChanged;
	private boolean isDeleted;
	
	<%for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
	<%= GetParameterClaseC(TablaBase.Columns[i]) %>
	<% } %>
	
	public Long getId() 
	{
		return id;
	}

	public void setId(Long id) 
	{
		this.id = id;
	}

	public Boolean getIsActive() 
	{
		return isActive;
	}

	public void setIsActive(Boolean isActive) 
	{
		this.isActive = isActive;
	}

	public Boolean getIsExpired() 
	{
		return isExpired;
	}

	public void setIsExpired(Boolean isExpired) 
	{
		this.isExpired = isExpired;
	}

	public Timestamp getVersionRow() 
	{
		return versionRow;
	}

	public void setVersionRow(Timestamp versionRow) 
	{
		this.versionRow = versionRow;
	}

	public boolean getIsNew() 
	{
		return isNew;
	}

	public void setIsNew(boolean isNew) 
	{
		this.isNew = isNew;
	}

	public boolean getIsChanged() 
	{
		return isChanged;
	}

	public void setIsChanged(boolean isChanged) 
	{
		this.isChanged = isChanged;
	}

	public boolean getIsDeleted() 
	{
		return isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) 
	{
		this.isDeleted = isDeleted;
	}
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>	
	<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
    <%= GetParameterClaseSetMethodC(TablaBase.Columns[i]) %>
	<% } %>
	
	
	
	
	<% for (int i = 0; i < TablaBase.Columns.Count; i++){ %>
			<%if(TablaBase.Columns[i].Name==strIsActive||TablaBase.Columns[i].Name==strIsExpired||TablaBase.Columns[i].Name==strId||TablaBase.Columns[i].Name==strVersionRow){continue; } %>
			<%= GetValueDefaultParameterClaseC(TablaBase.Columns[i]) %>
			<% } %>
*/

public String GetParameterBindingClase(ColumnSchema column)
{
	String sBindingColumnTable="";
	
	if(column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
		
	String sPrefijo=String.Empty;
	String sPrefijoTabla=GetPrefijoTablaC().ToLower();
	String sPrefijoTipo =GetPrefijoTipoC(column);

	sPrefijo=sPrefijoTabla+sPrefijoTipo;
	
	String sNombre = GetNombreColumnaClaseC(column);
	sPrefijo+=sNombre;
	
	String sTitulo=GetWebNombreTituloColumnFromPropertiesC(column);
		
	String param =  GetTipoColumnaClaseC(column);
	
	//return param+" "+sPrefijo+";";
	
	if(column.Name!=strId)
	{
		sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
		
		//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+sPrefijo+"}\"));\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+sTitulo+"\");\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	else
	{
		sBindingColumnTable="\r\n\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+"=jTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strId+"}\"));\r\n";
		
		//sBindingColumnTable="\r\n\t\tjTableBinding"+GetNombreClaseC(TablaBase.ToString())+".addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(\"${"+strId+"}\"));\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnName(\""+strIdGetSet+"\");\r\n";
		sBindingColumnTable+="\t\tcolumnBinding"+GetNombreClaseC(TablaBase.ToString())+".setColumnClass("+param+".class);\r\n";
	}
	
	return sBindingColumnTable;
}

public String GetIndicesActionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							//sPanelesBusquedas+="\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"= new JButton();\r\n";
 							
							sActionsButtons+="\r\n\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+".addActionListener\r\n";
							sActionsButtons+="\t\t(\r\n";
							sActionsButtons+="\t\t\tnew java.awt.event.ActionListener() \r\n";
							sActionsButtons+="\t\t\t{\r\n";
							sActionsButtons+="\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) \r\n";
							sActionsButtons+="\t\t\t\t{\r\n";
							sActionsButtons+="\t\t\t\t\tjButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(evt);\r\n";
							sActionsButtons+="\t\t\t\t}\r\n";
							sActionsButtons+="\t\t\t}\r\n";
							sActionsButtons+="\t\t);\r\n";
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}		
	
		public String GetIndicesFunctionsInicializacionButtonsTablasClasesC(TableSchema TablaBase) 
		{
			String sActionsButtons=String.Empty;
			
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							
							
						
							sActionsButtons+="\r\n\tpublic void jButton"+indexSchema.Name+GetNombreClaseC(TablaBase.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt) \r\n";
							sActionsButtons+="\t{\r\n";
							sActionsButtons+="\t\ttry\r\n";
							sActionsButtons+="\t\t{\r\n";
							sActionsButtons+="\t\t\tintInicioPaginacion=0;\r\n";
							sActionsButtons+="\t\t\tintFinPaginacion=10;\r\n";
							sActionsButtons+="\t\t\tthis.Get"+GetNombreClaseC(TablaBase.ToString())+"s"+indexSchema.Name+"();\r\n";
							sActionsButtons+="\t\t\tthis.inicializarActualizarBinding"+GetNombreClaseC(TablaBase.ToString())+"();\r\n";
							
							sActionsButtons+="\t\t}\r\n";
							sActionsButtons+="\t\tcatch(Exception e)\r\n";
							sActionsButtons+="\t\t{\r\n";
							sActionsButtons+="\t\t\t;\r\n";
							sActionsButtons+="\t\t}\r\n";
							sActionsButtons+="\t}\r\n";
							
		
						}
						else
						{
						;
						}
					}	
					
																																					
				}
			}
			
			
			return sActionsButtons; 
		}		
		
public String GetIndicesInicializacionBindingsVariablesTablasClasesC(TableSchema TablaBase) 
		{
			String sFuncion=String.Empty;
			String sTablaClaseRelacionada=String.Empty;
			String sInitFuncion="\r\n";
		
			String sPanelesBusquedas=String.Empty;
			String sControlesPanelesBusquedas=String.Empty;
			
			String sFinalFuncion="";
			
			sFinalFuncion="\r\n\t\tthis.bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.addBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";																				 
			sFinalFuncion+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+".refresh();\r\n";
			
			String sControlBinding=String.Empty;
			
			foreach(IndexSchema indexSchema in TablaBase.Indexes)
			{
				if(!indexSchema.IsPrimaryKey)
				{
					
					if(indexSchema.IsUnique)
					{
						;
					}
					else
					{
						
						


						
						if(indexSchema.Name.Contains("Busqueda")||indexSchema.Name.Contains("FK"))
						{
							;
						}
						else
						{
							;
						}
					}	
					int count=1;	
					foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
					{
						
						
						if(!(indexSchema.Name.Contains("BusquedaMayor")||indexSchema.Name.Contains("BusquedaMayorIgual")||indexSchema.Name.Contains("BusquedaMenor")||indexSchema.Name.Contains("BusquedaMenorIgual")||indexSchema.Name.Contains("BusquedaRango")||indexSchema.Name.Contains("BusquedaRangoIgual")))
						{
							//sControlesPanelesBusquedas+="\t"+GetInicializacionControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\r\n"; 
							
							sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
							sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
							sControlesPanelesBusquedas+="\t\t{\r\n";
							sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
							sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
							sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
								
							if(!indexSchema.MemberColumns.Count.Equals(count))
							{
								;
							}
						}
						else
						{
							if(!indexSchema.Name.Contains("BusquedaRango"))
							{
								sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+"\");\r\n";
						
								
							}
							else
							{
								sControlesPanelesBusquedas="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Inicial")+"\");\r\n";
						
								
								//sInitFuncion+=",";
								sControlesPanelesBusquedas+="\r\n\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+" =bindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.getBinding(\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n\r\n";				
								sControlesPanelesBusquedas+="\t\tif(this.binding"+GetNombreClaseC(TablaBase.ToString())+"!=null)\r\n";
								sControlesPanelesBusquedas+="\t\t{\r\n";
								sControlesPanelesBusquedas+="\t\t\tbindingGroup"+GetNombreClaseC(TablaBase.ToString())+"Busquedas.removeBinding(this.binding"+GetNombreClaseC(TablaBase.ToString())+");\r\n";
								sControlesPanelesBusquedas+="\t\t}\r\n\r\n";					
								sControlesPanelesBusquedas+="\t\tthis.binding"+GetNombreClaseC(TablaBase.ToString())+"= org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,this,org.jdesktop.beansbinding.ELProperty.create(\"${"+GetPrefijoTipoC(memberColumnSchema.Column)+GetNombreColumnaClaseC(memberColumnSchema.Column)+indexSchema.Name+"}\"), this."+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"")+", org.jdesktop.beansbinding.BeanProperty.create(\"text\"),\""+GetNombreControlVariablesSwingC(memberColumnSchema.Column,indexSchema.Name,"Final")+"\");\r\n";
						
								
								break;
							}
						}
						count++;
						
						sControlBinding=sControlesPanelesBusquedas+sFinalFuncion;
						sInitFuncion+=sControlBinding;
					}
																																						
				}
			}
			
			
			return sInitFuncion; 
		}

public String GetNavegacionColumnsTablaTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				sClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				sClases=sClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String sClase in sClases)
				{						
					if(sClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetNavegacionColumnTablaTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetNavegacionColumnTablaTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
	sColumna+="\r\n\r\n\t\ttableColumn= new TableColumn();\r\n";
	sColumna+="\t\ttableColumn.setHeaderValue(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n";
	sColumna+="\t\ttableColumn.setCellRenderer(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n";
	sColumna+="\t\ttableColumn.setCellEditor(new "+GetNombreClase(tablaRelacionada.ToString())+"TableCell());\r\n\r\n";

	sColumna+="\t\tthis.jTableDatos"+GetNombreClase(TablaBase.ToString())+".addColumn(tableColumn);\r\n";
	
	return sColumna;
}


public String GetNavegacionColumnsTableCellTablasClasesRelacionadas(TableSchema table) 
		{
			String sTablaClaseRelacionada=String.Empty;
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(table);
			
			TableSchema tablaRelacionadaObjetivo;
			ArrayList tablasRelacionadasEncontradas=new ArrayList();
			bool encontrado=false;
			String sClasesNoRelacionadas=String.Empty;
			String[] sClases;
			bool blClaseNo=false;
			
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}	
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					tablaRelacionadaObjetivo=collectionInfo.SecondaryTableSchema;
				}
				else
				{
					tablaRelacionadaObjetivo=collectionInfo.JunctionTableSchema;
				}
				
				
				sClasesNoRelacionadas=GetNombresClasesNoNavegacionFromTableFromPropertiesC(table);
				
				sClases=sClasesNoRelacionadas.Split(',');
				
				blClaseNo=false;
				
				foreach(String sClase in sClases)
				{						
					if(sClase.Equals(GetNombreClaseC(tablaRelacionadaObjetivo.ToString())))
					{
						blClaseNo=true;
						break;
					}
				}
					
				if(blClaseNo)
				{
					continue;
				}
				
				
				
				encontrado=false;
				
				foreach(TableSchema tableSchema in tablasRelacionadasEncontradas)
				{
					
					
					if(tableSchema.Name.Equals(tablaRelacionadaObjetivo.Name))
					{
						encontrado=true;
					}
				}
				
				
				if(!encontrado)
				{
					tablasRelacionadasEncontradas.Add(tablaRelacionadaObjetivo);
					sTablaClaseRelacionada+=GetNavegacionColumnTableCellTablasClasesRelacionadas(tablaRelacionadaObjetivo);
				}
				
					
				
			}
			//System.Windows.Forms.MessageBox.Show(sTablaClaseRelacionada);
									
			return sTablaClaseRelacionada; 
		}
		
public String GetNavegacionColumnTableCellTablasClasesRelacionadas(TableSchema tablaRelacionada) 
{
	String sColumna="";
	
		
	sColumna+="\r\n\r\n\t\tpublic class "+GetNombreClase(tablaRelacionada.ToString())+"TableCell extends AbsactCellEditor implements TableCellRenderer,TableCellEditor\r\n";
	sColumna+="\t\t{\r\n";
		sColumna+="\t\t\tJButton jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\tObject valor;\r\n\r\n\r\n";

		
		sColumna+="\t\t\tpublic Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)\r\n";
		sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+" =new JButton(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";
			
			sColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t\t}\r\n\r\n";

		sColumna+="\t\t\tpublic Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int rowIndex,int vColIndex)\r\n";
		sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"=new JButton(\""+GetTituloNombreTableFromPropertiesC(tablaRelacionada)+GetPluralTituloNombreTableFromPropertiesC(tablaRelacionada)+"\");\r\n\r\n";

			sColumna+="\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+".addActionListener\r\n";
	        sColumna+="\t\t\t\t(\r\n";
		          sColumna+="\t\t\t\t\tnew java.awt.event.ActionListener()\r\n";
		          sColumna+="\t\t\t\t\t{\r\n";
		              sColumna+="\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt)\r\n";
		              sColumna+="\t\t\t\t\t\t{\r\n";
		            	  sColumna+="\t\t\t\t\t\t\tjButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(evt);\r\n";
		              sColumna+="\t\t\t\t\t\t}\r\n";
		          sColumna+="\t\t\t\t\t}\r\n";
	        sColumna+="\t\t\t\t);\r\n\r\n";

			sColumna+="\t\t\t\tvalor=value;\r\n";
			sColumna+="\t\t\t\treturn jButton"+GetNombreClase(tablaRelacionada.ToString())+";\r\n";
		sColumna+="\t\t}\r\n\r\n";

		sColumna+="\t\tpublic Object getCellEditorValue()\r\n";
		sColumna+="\t\t{\r\n";
			sColumna+="\t\t\treturn valor;\r\n";
		sColumna+="\t\t}\r\n";
	sColumna+="\t\t}\r\n\r\n";
	
	sColumna+="\t\tprivate void jButton"+GetNombreClase(tablaRelacionada.ToString())+"ActionPerformed(java.awt.event.ActionEvent evt)\r\n";
	sColumna+="\t\t{\r\n";   
		sColumna+="\t\t\ttry\r\n";
		sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\t"+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame "+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame=new "+GetNombreClase(tablaRelacionada.ToString())+"BeanSwingJInternalFrame(false,false);\r\n\r\n";
			
			sColumna+="\t\t\t\tint intSelectedRow = this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".getSelectedRow();\r\n";	       
			sColumna+="\t\t\t\tthis."+GetNombreClaseObjetoC(TablaBase.ToString())+" = this."+GetNombreClaseObjetoC(TablaBase.ToString())+"Logic.get"+GetNombreClaseC(TablaBase.ToString())+"s().get(this.jTableDatos"+GetNombreClaseC(TablaBase.ToString())+".convertRowIndexToModel(intSelectedRow));\r\n\r\n";
				
			sColumna+="\t\t\t\t"+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+"> "+GetNombreClaseObjetoC(TablaBase.ToString())+"s=new "+strTypeCollection+"<"+GetNombreClaseC(TablaBase.ToString())+">();\r\n";
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(TablaBase.ToString())+"s.add(this."+GetNombreClaseObjetoC(TablaBase.ToString())+");\r\n\r\n";
				
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.set"+GetNombreClaseC(TablaBase.ToString())+"strForeignKey("+GetNombreClaseObjetoC(TablaBase.ToString())+"s);\r\n";
			
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombos"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.cargarCombosFrame"+strForeignKey+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";
			
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setBig"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+strFK+"_"+strIdGetSet+GetNombreClaseC(TablaBase.ToString())+"("+GetNombreClaseObjetoC(TablaBase.ToString())+".get"+strIdGetSet+"());\r\n";
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.procesarBusqueda(\""+strFK+"_"+strIdGetSet+GetNombreClase(TablaBase.ToString())+"\");\r\n";
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.inicializarActualizarBindingTabla"+GetNombreClase(tablaRelacionada.ToString())+"();\r\n";

			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setAutoscrolls(true);\r\n";
			sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setVisible(true);\r\n\r\n";
	        
			sColumna+="\t\t\t\tthis.jDesktopPane.add("+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame);\r\n\r\n";
	        
	        sColumna+="\t\t\t\t"+GetNombreClaseObjetoC(tablaRelacionada.ToString())+"BeanSwingJInternalFrame.setSelected(true);\r\n";
		sColumna+="\t\t\t}\r\n";
		sColumna+="\t\t\tcatch(Exception e)\r\n";
		sColumna+="\t\t\t{\r\n";
			sColumna+="\t\t\t\t;\r\n";
		sColumna+="\t\t\t}\r\n";
	sColumna+="\t\t}\r\n";
	
	return sColumna;
}


</script>
<%=GetByDanLicence()%>
<%if(!EsSwing){%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageWeb%>.<%=strPackageJSF%>.<%=strPackageRequestBean%>;
<%}else{%>
package <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageSwing%>.<%=strPackageJInternalFrames%>;
<%}%>

import <%=strEmpresaSeguridad%>.<%=PackageSeguridad%>.<%=strPackageBusinessSeguridad%>.<%=strPackageEntitiesSeguridad%>.Usuario;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageUtils%>.<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackagePresentation%>.<%=strPackageReporte%>.<%=strPackageSource%>.<%=GetNombreClase(TablaBase.ToString())%><%=strClaseBean%>;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Classe;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.MaintenanceType;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.MaintenanceType;
<%if(ConEjb){%>//<%}%>import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageLogic%>.*;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageLogic%>.*;
import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageUtils%>.*;
import <%=Empresa%>.<%= Package%>.<%= Module%><%=strPackageBusiness%>.<%=strPackageEntities%>.*;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.ConexionBeanFace;
//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Mensajes;

import java.lang.Long;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.sql.*;

import org.hibernate.collection.PersistentBag;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;

<%if(!EsSwing){%>

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import javax.faces.model.SelectItem;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletContext;

<%}else{%>


import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


//import <%=Empresa%>.<%=strPackageFramework%>.<%= Package%>.<%=strPackageBusiness%>.<%=strPackageEntities%>.Reporte;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;

<%}%>

<%if(ContieneImagenesC(TablaBase)){%>
	<%=GetFuncionesImagenesC(TablaBase)%>
	<%}%>


<%if(!EsSwing){%>
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>CompleteAdditional extends <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>
<%}else{%>
public class <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameCompleteAdditional extends <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrame
<%}%>
{			
	//CONTROL_INICIO	
	
	<%if(!EsSwing){%>
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoJSFFaces%>CompleteAdditional() throws Exception
	<%}else{%>
	public <%=GetNombreClase(TablaBase.ToString())%><%=strPrefijoBeanSwing%>JInternalFrameCompleteAdditional(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial) throws Exception
	<%}%>
    {
		super();
    }
	//CONTROL_FUNCION1					
	public void deepLoadWithConnection(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje)throws Exception {
		try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deepLoad(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deepLoadWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deepLoadWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
  		}
	}
	
	public void deepLoadsWithConnection(Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje)throws Exception {				
		try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deepLoadsWithConnection(deep,deepLoadType,clases,sTituloMensaje);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deepLoadsWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deepLoadsWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
  		}	
	}
	
	public void deepSaveWithConnectionWithReturn(<%=GetNombreClase(TablaBase.ToString())%> <%=GetNombreClaseObjetoC(TablaBase.ToString())%>,Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje)throws Exception {		
		try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deepSave(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deepSaveWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deepSaveWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
  		}	
	}
	
	public void deepSavesWithConnectionWithReturn(Boolean deep,DeepLoadType deepLoadType,ArrayList<Classe> clases,String sTituloMensaje)throws Exception {		
		try	{		
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deepSavesWithConnection(deep,deepLoadType,clases,sTituloMensaje);	
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deepSavesWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deepSavesWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,deep,deepLoadType,clases,sTituloMensaje,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
  		}	
	}
	
	public  void  getTodos<%=GetNombreClase(TablaBase.ToString())%>s(String sFinalQuery,Integer iInicioPaginacion,Integer iFinPaginacion)throws Exception {		
		try {
			Pagination pagination=new Pagination();
			pagination.setiFirstResult(iInicioPaginacion);
			pagination.setiMaxResults(iFinPaginacion);
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getTodos<%=GetNombreClase(TablaBase.ToString())%>s(sFinalQuery,pagination);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(sFinalQuery,pagination,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getTodos<%=GetNombreClase(TablaBase.ToString())%>sWithConnection(sFinalQuery,pagination,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}				
	}
	
	public  void getEntities(QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {			  		  
        try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getEntities(queryWhereSelectParameters);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getEntities(queryWhereSelectParameters,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getEntities(queryWhereSelectParameters,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}						
    }
	
	public  void getEntities(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {	
        try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntities(sQuerySelect,queryWhereSelectParameters);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getEntitiesWithQuerySelect(sQuerySelect,queryWhereSelectParameters,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getEntitiesWithQuerySelect(sQuerySelect,queryWhereSelectParameters,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}	
    }
	
	public  void getEntitiesWithQuerySelect(String sQuerySelect,QueryWhereSelectParameters queryWhereSelectParameters)throws Exception {	
	    try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.getEntitiesSimpleQueryBuild(sQuerySelect,queryWhereSelectParameters);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getEntitiesWithQuerySelect(sQuerySelect,queryWhereSelectParameters,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getEntitiesWithQuerySelect(sQuerySelect,queryWhereSelectParameters,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}		
    }
	
	public  void getEntity(Long id) throws Exception {  		  
        try {
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjeto(TablaBase.ToString())%>Logic.getEntity(id);
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.getEntity(id);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.getEntity(id);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}       
    }
	
	public void save<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn()throws Exception {		
	    try {	
			datosCliente=new DatosCliente();
			
			datosCliente.setIdUsuario(lIdUsuarioSesion);
			<%if(!EsSwing){%>
			datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());
			datosCliente.setsNamePC(httpServletRequest.getRemoteHost());
			datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());
			<%}%>
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);			
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>WithConnection();			
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClase(TablaBase.ToString())%>WithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
			}	
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	} 		
	}
		
	public void save<%=GetNombreClase(TablaBase.ToString())%>sWithConnection()throws Exception {				
	    try {	
			datosCliente=new DatosCliente();
			
			datosCliente.setIdUsuario(lIdUsuarioSesion);
			<%if(!EsSwing){%>
			datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());
			datosCliente.setsNamePC(httpServletRequest.getRemoteHost());
			datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());
			<%}%>
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);			
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.save<%=GetNombreClaseC(TablaBase.ToString())%>sWithConnection();			
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.save<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s=<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.save<%=GetNombreClase(TablaBase.ToString())%>sWithConnectionWithReturn(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}		
	}
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionDeletesCascade,TiposGeneracion)) {%>
	public void deleteCascadeWithConnection() throws Exception	{	
	    try {	    	
			datosCliente=new DatosCliente();
			
			datosCliente.setIdUsuario(lIdUsuarioSesion);
			<%if(!EsSwing){%>
			datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());
			datosCliente.setsNamePC(httpServletRequest.getRemoteHost());
			datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());
			<%}%>
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);			
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deleteCascade()  ;
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deleteCascadeWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deleteCascadeWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}				
	}
	
	public void deletesCascade() throws Exception {		
	    try {
			datosCliente=new DatosCliente();
			
			datosCliente.setIdUsuario(lIdUsuarioSesion);
			<%if(!EsSwing){%>
			datosCliente.setsUsuarioPC(httpServletRequest.getRemoteUser());
			datosCliente.setsNamePC(httpServletRequest.getRemoteHost());
			datosCliente.setsIPPC(httpServletRequest.getRemoteAddr());
			<%}%>
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.setDatosCliente(datosCliente);			
				<%if(ConEjb){%>//<%}%><%=GetNombreClaseObjetoC(TablaBase.ToString())%>Logic.deletesCascade() ;			
			} else if(Constantes.ISUSAEJBREMOTE) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>Implementable.deletesCascadeWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
			} else if(Constantes.ISUSAEJBHOME) {
				<%=GetNombreClaseObjetoC(TablaBase.ToString())%>ImplementableHome.deletesCascadeWithConnection(<%=GetNombreClaseObjetoC(TablaBase.ToString())%>s,datosCliente);
			}
			//ARCHITECTURE
		} catch(Exception e) {
			throw e;
      	}				
	}
	<%}%>
	
	<%if(GenerarTipoGeneracionC(strTipoGeneracionMantenimientoClasesRelacionadas,TiposGeneracion)) {%>
	<%=GetMaintenanceTablasClasesRelacionadas() %>
	
	<%//GetMaintenanceTablasClasesRelacionadasDetalles() %>
	
	<%}%>
	
	//CONTROL_FUNCION2
}
