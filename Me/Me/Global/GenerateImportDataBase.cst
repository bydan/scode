<%@ Template Language="C#" Debug="true" TargetLanguage="C#" Description="Template de la capa de Acceso a Datos" %>    	
<%@ CodeTemplate Src="CommonCode\CommonCode.cs" Inherits="Me.CommonCode" Language="C#" TargetLanguage="C#" Description="A base class for the entities." ResponseEncoding="UTF-8" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import NameSpace="System.IO" %>

<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Category="1. General" Description="Database to get the extended properties from." %>
<%@ Register Name="ValidationTemplate" Template="Auxiliar/ValidationPorTabla.cst" %>


<script runat="template">

public bool GetExistTablasClasesRelacionadasForWebCombo(TableSchema TablaBase) 
		{
			bool blnExist=false;
			
			System.Collections.Hashtable tablasRelacionadas=GetTablasRelacionadas(TablaBase);
						
			foreach(CollectionInfo collectionInfo in tablasRelacionadas.Values)
			{
				if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToOne)
				{
					;//strTablaClaseRelacionada+=","+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+ " "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable);
				}
				else if(collectionInfo.CollectionRelationshipType==RelationshipType.OneToMany)
				{
					
					blnExist=true;
					break;
					;//strTablaClaseRelacionada+=",ArrayList<"+GetNombreClaseC("dbo."+collectionInfo.SecondaryTable)+"> "+GetNombreClaseObjetoC("dbo."+collectionInfo.SecondaryTable)+ "s";
				}
			}
			
	return blnExist;		
}

public string GetValidationTagColumn(TableSchema table,out bool blnValidacionTag)
{		
	string strValidation ="<td>\r\n"; 
	ColumnSchema columnSchemaPK=null;
	bool blnExisteValidacion=false;
	
	bool blnTieneRelacionesForWebCombo=GetExistTablasClasesRelacionadasForWebCombo(table);
	bool blnTieneWebCombo=false;
	
	foreach(ColumnSchema columnSchema in table.Columns)
	{
		blnExisteValidacion=false;
		
		if(!GetExistTagColumnaFromColumnPropiertiesC(columnSchema,strNOMBRE))
		{
			blnExisteValidacion=true;
			strValidation +="Columna:"+columnSchema.Name+",Falta Tag "+strNOMBRE+"</br>\r\n";
		}
		
		if(!GetExistTagColumnaFromColumnPropiertiesC(columnSchema,strWEBTITULO))
		{
			if(columnSchema.Name==strIsActive||columnSchema.Name==strIsExpired||columnSchema.Name==strId||columnSchema.Name==strVersionRow)
			{
				continue; 
			}
			
			blnExisteValidacion=true;
			strValidation +="Columna:"+columnSchema.Name+",Falta Tag "+strWEBTITULO+"</br>\r\n";
		}
		
		if(columnSchema.DataType==DbType.AnsiStringFixedLength||columnSchema.DataType==DbType.StringFixedLength||columnSchema.DataType==DbType.String||columnSchema.DataType==DbType.AnsiString)
		{
			if(columnSchema.Size>50)
			{
				if(!GetExistTagColumnaFromColumnPropiertiesC(columnSchema,strWEBFILAS))
				{
					blnExisteValidacion=true;
					strValidation +="Columna:"+columnSchema.Name+",Falta Tag "+strWEBFILAS+"</br>\r\n";
				}
			}
			
		}
		
		if(blnTieneRelacionesForWebCombo)
		{
			if(GetExistTagColumnaFromColumnPropiertiesC(columnSchema,strWEBCOMBO))
			{
				blnTieneWebCombo=true;
				//System.Windows.Forms.MessageBox.Show(columnSchema.Name+" "+ blnTieneRelacionesForWebCombo.ToString());
				//blnExisteValidacion=true;
				//strValidation +="Columna:"+columnSchema.Name+",Falta Tag "+strWEBCOMBO+"</br>\r\n";
			}
		}
		
		if(blnExisteValidacion)
		{
			strValidation +="<hr>";
		}
	}
	
	foreach(ColumnSchema columnPK in table.Columns)
	{
		
		if(columnPK.Name==strId)
		{
			if(GetExistTagColumnaFromColumnPropiertiesC(columnPK,strWEBCOMBO))
			{
				blnTieneWebCombo=true;
			}
			
			break;
		}
	}
	
	if(blnTieneRelacionesForWebCombo&&!blnTieneWebCombo)
	{
		strValidation+="TABLA:"+table.Name+",Falta Tag "+strWEBCOMBO+"</br>\r\n<hr>\r\n" ;
	}
	
	strValidation +=".</td>\r\n"; 
	
	blnValidacionTag=false;
	
	if(strValidation.Length>12)
	{
		 blnValidacionTag=true;
	}
	
	return strValidation;
}


public string GetValidationTagTable(TableSchema table,out bool blnValidacionTag)
{		
	string strValidation ="<td>\r\n"; 
	ColumnSchema columnSchemaPK=null;
	
	if(!GetExistTagTableFromPropertiesC(table,strNOMBRE))
	{
		strValidation +="Falta Tag "+strNOMBRE+"</br>\r\n";
	}
	
	if(!GetExistTagTableFromPropertiesC(table,strWEBTITULO))
	{
		strValidation +="Falta Tag "+strWEBTITULO+"</br>\r\n";
	}
	
	if(!GetExistTagTableFromPropertiesC(table,strWEBPLURAL))
	{
		strValidation +="Falta Tag "+strWEBPLURAL+"</br>\r\n";
	}
	
	/*
	if(GetExistTagTableFromPropertiesC(table,strCONAUD))
	{
		strValidation +="Falta Tag "+strCONAUD+"</br>\r\n";
	}
	
	
	if(GetExistTagTableFromPropertiesC(table,strESMENU))
	{
		strValidation +="Falta Tag "+strESMENU+"</br>\r\n";
	}
	*/
	
	strValidation +=".</td>\r\n"; 
	
	 blnValidacionTag=false;
	
	if(strValidation.Length>12)
	{
		 blnValidacionTag=true;
	}
	
	return strValidation;
}

public string GetValidationIndexes(TableSchema table,out bool blnValidacionIndexes)
{		
	string strValidation ="<td>\r\n"; 
	ColumnSchema columnSchemaPK=null;
	bool blnValidarIndexPK=false;
	
	bool blnTieneFK=false;
	bool blnValidarIndexFK=false;
	bool blnValidarEsPrimerColumnaIndexFK=false;
	int intContadorFK=0;
	int intContadorIndexFK=0;
	
	foreach(ColumnSchema  columnSchema in table.Columns)
	{
		if(columnSchema.IsForeignKeyMember)
		{
			if(!blnTieneFK)
			{
				blnTieneFK=true;
			}
			
			intContadorFK++;
		}
	}
	
	foreach(IndexSchema indexSchema in table.Indexes)
	{
		if(indexSchema.IsUnique)
		{
			foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
			{
				if(memberColumnSchema.Column.IsPrimaryKeyMember)
				{
					blnValidarIndexPK=true;
				}
			}
		}
		else
		{
			
			if(!indexSchema.Name.Contains("Busqueda"))
			{
				blnValidarEsPrimerColumnaIndexFK=false;
				blnValidarIndexFK=false;
				
				foreach(MemberColumnSchema memberColumnSchema in indexSchema.MemberColumns)
				{
					if(memberColumnSchema.Column.IsForeignKeyMember)
					{
						
						
						if(!blnValidarEsPrimerColumnaIndexFK)
						{
							blnValidarEsPrimerColumnaIndexFK=true;
							blnValidarIndexFK=true;
						}
						else
						{
							blnValidarIndexFK=false;
							break;
						}
					}
				}
				
				if(blnTieneFK)
				{
					if(blnValidarIndexFK)
					{
						intContadorIndexFK++;
						
						
						if(!indexSchema.Name.Contains(strFK+"_"))
						{
							strValidation +="Falta prefijo FK_ en nombre indice "+indexSchema.Name+"</br>\r\n";
						}
					}
				}
			}
		}
	}
	
	if(intContadorFK!=intContadorIndexFK)
	{
		strValidation +="Falta Indices FK, columns FK="+intContadorFK+",indicesFK"+intContadorIndexFK+"</br>\r\n";
	}
	
	if(!blnValidarIndexPK)
	{
		
		strValidation +="Falta PK Index </br>\r\n";
		
		
	}
	
	strValidation +=".</td>\r\n"; 
	
	blnValidacionIndexes=false;
	
	if(strValidation.Length>12)
	{
		blnValidacionIndexes=true;
	}
	
	return strValidation;
}

public string GetValidationPK(TableSchema table,out bool blnValidacionPK)
{		
	string strValidation ="<td>\r\n"; 
	ColumnSchema columnSchemaPK=null;
	
	foreach(ColumnSchema columnSchema in table.Columns)
	{
		if(columnSchema.IsPrimaryKeyMember)
		{
			columnSchemaPK=columnSchema;
			break;
		}
	}
	
	if(columnSchemaPK!=null)
	{
		if(!columnSchemaPK.Name.Equals(strId))
		{
			strValidation +="Error en nombre ("+strId+")</br>\r\n";
		}
		
		if(!columnSchemaPK.IsUnique)
		{
			strValidation +="No es unico </br>\r\n";
		}
		
		if(columnSchemaPK.AllowDBNull)
		{
			strValidation +="Permite nulos </br>\r\n";
		}
		
		if(columnSchemaPK.DataType!=DbType.Int64)
		{
			strValidation +="No bigint </br>\r\n";
		}
		
		
		foreach(ExtendedProperty extendedProperty in columnSchemaPK.ExtendedProperties)
		{
			if(extendedProperty.Name.Equals("CS_IsIdentity"))
			{
				if(extendedProperty.Value.Equals(false))
				{
					strValidation +="No es identity </br>\r\n";
				}
			}
		}
	}
	else
	{
		strValidation +="No Existe</br>\r\n";
	}
	
	strValidation +=".</td>\r\n"; 
	
	blnValidacionPK=false;
	
	if(strValidation.Length>12)
	{
		blnValidacionPK=true;
	}
	
	return strValidation;
}

public string GetValidationBasicColumns(TableSchema table,out bool blnValidacionBasicColumns)
{		
	string strValidation ="<td>\r\n"; 
	bool blnExisteIsActive=false;
	bool blnExisteIsExpired=false;
	bool blnExisteVersionRow=false;
	
	foreach(ColumnSchema columnSchema in table.Columns)
	{
		if(columnSchema.Name.Equals(strIsActive))
		{
			blnExisteIsActive=true;
			
			if(columnSchema.AllowDBNull)
			{
				strValidation +="IsActive Permite nulos </br>\r\n";
			}
			
			if(columnSchema.DataType!=DbType.Boolean)
			{
				strValidation +="IsActive No es bit </br>\r\n";
			}
		}
		else if(columnSchema.Name.Equals(strIsExpired))
		{
			
			blnExisteIsExpired=true;
			
			if(columnSchema.AllowDBNull)
			{
				strValidation +="IsExpired Permite nulos </br>\r\n";
			}
			
			if(columnSchema.DataType!=DbType.Boolean)
			{
				
				strValidation +="IsExpired No es bit </br>\r\n";
			}
			
		}
		else if(columnSchema.Name.Equals(strVersionRow))
		{
			blnExisteVersionRow=true;
			if(columnSchema.AllowDBNull)
			{
				strValidation +="VersionRow Permite nulos </br>\r\n";
			}
			
			if(columnSchema.NativeType!="timestamp")
			{
				strValidation +="VersionRow No es timestamp </br>\r\n";
			}
			
		}
	}
	
	if(!blnExisteIsActive)
	{
		strValidation +="No existe isActive </br>\r\n";
	}
	
	if(!blnExisteIsExpired)
	{
		strValidation +="No existe isExpired </br>\r\n";
	}
	
	if(!blnExisteVersionRow)
	{
		strValidation +="No existe versionRow </br>\r\n";
	}
	
	strValidation +=".</td>\r\n"; 
	
	blnValidacionBasicColumns=false;
	
	if(strValidation.Length>12)
	{
		blnValidacionBasicColumns=true;
	}
	
	return strValidation;
}

public string GetValidationFK(TableSchema table,out bool blnValidacionFK)
{		
	string strValidation ="<td>\r\n"; 
	ColumnSchema columnSchemaFK=null;
	
	foreach(ColumnSchema columnSchema in table.Columns)
	{
		if(columnSchema.IsForeignKeyMember)
		{
			columnSchemaFK=columnSchema;
			
			
				if(!columnSchemaFK.Name.Contains(strId))
				{
					strValidation +="Error en nombre </br>\r\n";
				}	
						
				if(columnSchemaFK.DataType!=DbType.Int64)
				{
					strValidation +="No bigint </br>\r\n";
				}
				
				if(!VerificarNombreTablaRelacionada(columnSchemaFK))
				{
					strValidation +="No existe una tabla con el nombre "+columnSchemaFK.Name.Replace(strId,"");
				}
		}
	}
	
	
	
	strValidation +=".</td>\r\n"; 
	
	
	blnValidacionFK=false;
	
	if(strValidation.Length>12)
	{
		blnValidacionFK=true;
	}
	
	return strValidation;
}

public bool VerificarNombreTablaRelacionada(ColumnSchema columnSchema)
{
	bool blnVerificado=false;
	
	String strNombreClase=columnSchema.Name.Substring(2,columnSchema.Name.Length-2);
	
	foreach(TableSchema tableSchema in SourceDatabase.Tables)
	{
		if(strNombreClase.Equals(tableSchema.Name))
		{
			blnVerificado=true;
			break;
		}
	}
	
	return blnVerificado;
}

private string _outputDirectory = String.Empty;
//<%@ Property Name="EntidadesNombre" Type="System.String" Default="ParametrosCompras" Category="Options" Description="Nombre de la Entidad" %>
//<%@ Property Name="SourceTablesMaintenance" Type="SchemaExplorer.TableSchemaCollection" Category="Optional General" Optional="true" Description="Select a set of tables." %>

[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))] 
[Optional]
[Category("1. General")]
[Description("The directory to output the results to.")]
public string OutputDirectory 
{
	get
	{
		
		// default to the directory that the template is located in
		//if (_outputDirectory.Length == 0)
		//{ 
		//return this.CodeTemplateInfo.DirectoryName + "output\\DataBase\\"+SourceDatabase.Name+"\\";
		return "C:\\o\\";
		//}
		//return _outputDirectory;
	}
	set
	{
		if (!value.EndsWith("\\")) value += "\\";
		_outputDirectory = value;
	} 
}

public bool ExisteEnLista(String strTableName)
{
	bool blnExiste=false;
	
	if(strTableName.Equals("Agrupacion")||strTableName.Equals("Alumno")||strTableName.Equals("AlumnoPregunta")
	||strTableName.Equals("AlumnoRespuesta")||strTableName.Equals("AlumnoTest")||strTableName.Equals("CaracteristicaControlAjax")
	||strTableName.Equals("CatalogoArchivo")||strTableName.Equals("CatalogoArchivoPagina")||strTableName.Equals("CatalogoUrl")
	||strTableName.Equals("CatalogoUrlPagina")||strTableName.Equals("ControlAjax")||strTableName.Equals("Curso")
	||strTableName.Equals("DetalleAgrupacion")||strTableName.Equals("Imagen")||strTableName.Equals("Parrafo")
	||strTableName.Equals("Pagina")||strTableName.Equals("Pregunta")||strTableName.Equals("PreguntaPractica")
	||strTableName.Equals("Respuesta")||strTableName.Equals("RespuestaPractica")||strTableName.Equals("Test")
	||strTableName.Equals("TipoArchivo")||strTableName.Equals("TipoImagen")||strTableName.Equals("TipoParrafo")
	||strTableName.Equals("TipoTest")||strTableName.Equals("TipoTitulo")||strTableName.Equals("TipoUrl")
	||strTableName.Equals("Titulo")||strTableName.Equals("Tutor")||strTableName.Equals("Tutoria")
	||strTableName.Equals("UnidadCurricular")||strTableName.Equals("UnidadCurricularTutor")||strTableName.Equals("UnidadCurricularTutorAlumno")
	||strTableName.Equals("UnidadCurricularTutorAlumnoPagina")
	)
	{
		blnExiste=true;
	}
	
	return blnExiste;
}

public override void Render(TextWriter writer)
{
	PreserveRegionsMergeStrategy strategy = new PreserveRegionsMergeStrategy("^[ \t]*(?i:Custom)", "C#");
		
	DateTime startTime = DateTime.Now;
	
	string strDirectorioWeb=string.Empty;
	strDirectorioWeb=this.OutputDirectory;
	
	
	bool blnValidacionPK=false;
	bool blnValidacionFK=false;
    bool blnValidacionBasicColumns=false;
	bool blnValidacionIndexes=false;
	bool blnValidacionTableTag=false;
	bool blnValidacionColumnTag=false;
	
	String stringHtml=String.Empty;
	String stringHtmlTable=String.Empty;
	
	
	stringHtml+="<html>\r\n";
	stringHtml+="<head>";
	//stringHtml+="Validaciones";
	stringHtml+="</head>\r\n";
	stringHtml+="<body>\r\n";
	
	
	if (!strDirectorioWeb.EndsWith("\\")) strDirectorioWeb += "\\";
	if (!Directory.Exists(strDirectorioWeb)) Directory.CreateDirectory(strDirectorioWeb);
	

	if (!Directory.Exists(strDirectorioWeb)) Directory.CreateDirectory(strDirectorioWeb);
	
		ValidationTemplate validationTemplate = new ValidationTemplate();
	
		String xmlServlets="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
		xmlServlets+="\r\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\" id=\"WebApp_ID\" version=\"2.5\">";
		xmlServlets+="\r\n<welcome-file-list>";
  		xmlServlets+="\r\n<welcome-file>index.jsp</welcome-file>";
 	    xmlServlets+="\r\n<welcome-file>default.jsp</welcome-file>";
  		xmlServlets+="\r\n</welcome-file-list>\r\n\r\n";
		
		
		String strJavaCode1="";
		String strJavaCode2="";
		String strJavaCode3="";
		
		for (int x = 0; x < SourceDatabase.Tables.Count; x++)
		{
			if(!ExisteEnLista(SourceDatabase.Tables[x].Name))
			{
				continue;
			}
			
			stringHtmlTable="";
				
			Trace.WriteLine("Generando Java Code...."+SourceDatabase.Tables[x].Name+ " Tabla "+x.ToString()+ " de "+SourceDatabase.Tables.Count.ToString());
			
			
			strJavaCode1+="\r\narrayListFiles=new ArrayList<String>();\r\n";
			strJavaCode1+="arrayListFiles=Test.GetFileText(\"D:\\\\Me\\\\2009\\\\Proyectos\\\\Documentacion\\\\AulaVirtual\\\\Datos\\\\DatosAula\\\\"+SourceDatabase.Tables[x].Name+".txt\");\r\n";
			strJavaCode1+="Test.ChangeFiles(arrayListFiles, \""+SourceDatabase.Tables[x].Name+"\",stringBuilderData);\r\n";
		
			strJavaCode2+="\r\nelse if(strType==\""+SourceDatabase.Tables[x].Name+"\")\r\n";
			strJavaCode2+="{\r\n";
			strJavaCode2+="\tstrFileMySql=Test.ChangeFile"+SourceDatabase.Tables[x].Name+"(strFile, strType);\r\n";			
			strJavaCode2+="}";
			
			
			
			strJavaCode3+="public static String ChangeFile"+SourceDatabase.Tables[x].Name+"(String strFile,String strType)\r\n"; 
			strJavaCode3+="{\r\n";
			strJavaCode3+="\tString strFileMySql=\"\";\r\n\r\n";
				
			strJavaCode3+="\tif(strFile!=null)\r\n";
			strJavaCode3+="\t{\r\n";
			strJavaCode3+="\t\tString arrStrColumns[]={\"\",\"\"};\r\n\r\n";
					
			strJavaCode3+="\t\tarrStrColumns=strFile.split(\"\\t\");\r\n\r\n";
					
			strJavaCode3+="\t\tString strId=arrStrColumns[0];\r\n";
			
			
			/*
			strJavaCode3+="\t\tString strCodigo=arrStrColumns[1];\r\n";
			strJavaCode3+="\t\tString strNombre=arrStrColumns[2];\r\n";
			strJavaCode3+="\t\tString strDescripcion=arrStrColumns[3];\r\n\r\n";
			*/
			
			int j=0;
			
			for (int i = 0; i < SourceDatabase.Tables[x].Columns.Count; i++)
			{ 
				if(SourceDatabase.Tables[x].Columns[i].Name==strIsActive||SourceDatabase.Tables[x].Columns[i].Name==strIsExpired||SourceDatabase.Tables[x].Columns[i].Name==strId||SourceDatabase.Tables[x].Columns[i].Name==strVersionRow){continue; } 
				
				j++;
				
				strJavaCode3+=GetColumnValue(SourceDatabase.Tables[x].Columns[i],j);
			}
		
			strJavaCode3+="\r\n\t\tstrFileMySql=\"INSERT INTO aulavirtual_dbo."+SourceDatabase.Tables[x].Name.ToLower()+" VALUES(\"+strId+\",1,1,CURRENT_TIMESTAMP\"";
			
			
				
			for (int i = 0; i < SourceDatabase.Tables[x].Columns.Count; i++)
			{ 
				if(SourceDatabase.Tables[x].Columns[i].Name==strIsActive||SourceDatabase.Tables[x].Columns[i].Name==strIsExpired||SourceDatabase.Tables[x].Columns[i].Name==strId||SourceDatabase.Tables[x].Columns[i].Name==strVersionRow){continue; } 
				
				
				strJavaCode3+=GetUseColumnValue(SourceDatabase.Tables[x].Columns[i]);
			}
			
			//,'\"+strCodigo+\"','\"+strNombre+\"','\"+strDescripcion+\"');\";\r\n";
			
			strJavaCode3+="+\");\";\r\n";
			strJavaCode3+="\t}\r\n\r\n";
					
			strJavaCode3+="\treturn strFileMySql;\r\n";
			strJavaCode3+="}\r\n\r\n";
			
			if(SourceDatabase.Tables[x].Name.Contains("BIN")||SourceDatabase.Tables[x].Name.Contains("EXCEPTIONS")||SourceDatabase.Tables[x].Name.Contains("sys"))
			{
					continue;
			}
		
		
		}
	
	
	validationTemplate.html=strJavaCode1+strJavaCode2+strJavaCode3;
		
	validationTemplate.RenderToFile(strDirectorioWeb+"JavaImportacion"+SourceDatabase.Name+ ".sql", strategy);
	
	Trace.WriteLine("Tiempo de ejecusion: " + (DateTime.Now - startTime).ToString());
			
}

public string GetColumnValue(ColumnSchema column,int intRelativeContador)
{
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC().ToLower();
	string strPrefijoTipo =GetPrefijoTipoC(column);

	strPrefijo=/*strPrefijoTabla+*/strPrefijoTipo;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
		
	string param =  GetTipoColumnaClaseC(column);
	
	String strGetData="";
	
	strGetData="\t\tString "+strPrefijo+"=\"\";\r\n";	
	strGetData+="\t\ttry{"+strPrefijo+"=arrStrColumns["+intRelativeContador+"];}\r\n";
	strGetData+="\t\tcatch(Exception ex){"+strPrefijo+"=\"\";}\r\n\r\n";
	
	return strGetData;
	
	//return "\t\tString "+strPrefijo+"=arrStrColumns["+intRelativeContador+"];\r\n";
	
	//return "private "+param+" "+strPrefijo+";";
}

public string GetUseColumnValue(ColumnSchema column)
{
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC().ToLower();
	string strPrefijoTipo =GetPrefijoTipoC(column);

	strPrefijo=/*strPrefijoTabla+*/strPrefijoTipo;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
		
	string param =  GetTipoColumnaClaseC(column);
	
	//,'"+strCodigo
	
	return "+\",\""+GetPrefixUseColumnValue(column,strPrefijo);
	
	//return ",'\"+"+strPrefijo+"'+\"";
	
	//return "private "+param+" "+strPrefijo+";";
}

public string GetPrefixUseColumnValue(ColumnSchema column,String strColumn)
{
	
	if(column.Name==strId||column.Name==strIsActive||column.Name==strIsExpired||column.Name==strVersionRow)
	{
		return"";
	}
	
	string strPrefijo=String.Empty;
	string strPrefijoTabla=GetPrefijoTablaC().ToLower();
	string strPrefijoTipo =GetPrefijoTipoC(column);

	strPrefijo=/*strPrefijoTabla+*/strPrefijoTipo;
	
	string strNombre = GetNombreColumnaClaseC(column);
	strPrefijo+=strNombre;
		
	string param =  GetTipoColumnaClaseC(column);
	
	//,'"+strCodigo
	
	String strName="";
	
	if(column.DataType==DbType.AnsiString ||column.DataType==DbType.AnsiStringFixedLength ||column.DataType==DbType.String||column.DataType==DbType.StringFixedLength)
	{			
		strName="+\"'\"+"+strColumn+"+\"'\"";						
	}
	else if(column.DataType==DbType.Boolean)
	{
		strName="+"+strColumn+"";	
	}
	else if(column.DataType==DbType.Decimal||column.DataType==DbType.Double||column.DataType==DbType.Int16||column.DataType==DbType.Int32||column.DataType==DbType.Int64||column.DataType==DbType.Single||column.DataType==DbType.UInt16||column.DataType==DbType.UInt32||column.DataType==DbType.UInt64)
	{
		strName="+"+strColumn+"";			
	}
	else if(column.DataType==DbType.Date||column.DataType==DbType.DateTime)
	{
		strName="+\"'\"+"+strColumn+"+\"'\"";	
	}
			
	return strName;
	
	//return "private "+param+" "+strPrefijo+";";
}

</script>

